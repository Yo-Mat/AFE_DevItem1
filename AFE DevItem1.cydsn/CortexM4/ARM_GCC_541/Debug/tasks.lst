ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"tasks.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  24              		.type	prvTaskIsTaskSuspended, %function
  25              	prvTaskIsTaskSuspended:
  26              	.LFB672:
  27              		.file 1 "Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\10.0.1\\Source\\tasks.c"
   1:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
   2:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * FreeRTOS Kernel V10.0.1
   3:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
   5:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * subject to the following conditions:
  11:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  12:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * copies or substantial portions of the Software.
  14:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  15:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  22:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * http://www.FreeRTOS.org
  23:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * http://aws.amazon.com/freertos
  24:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  25:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * 1 tab == 4 spaces!
  26:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
  27:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  28:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Standard includes. */
  29:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include <stdlib.h>
  30:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include <string.h>
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 2


  31:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  32:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** task.h is included from an application file. */
  35:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  37:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* FreeRTOS includes. */
  38:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "FreeRTOS.h"
  39:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "task.h"
  40:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "timers.h"
  41:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "stack_macros.h"
  42:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  43:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  44:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  45:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** header files above, but not in this file, in order to generate the correct
  46:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** privileged Vs unprivileged linkage and placement. */
  47:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  48:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  49:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** functions but without including stdio.h here. */
  51:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#include <stdio.h>
  57:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  59:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	performed just because a higher priority task has been woken. */
  62:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else
  64:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
  66:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  67:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  72:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
  73:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
  76:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  78:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Sometimes the FreeRTOSConfig.h settings only allow a task to be created using
  79:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** dynamically allocated RAM, in which case when any task is deleted it is known
  80:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** that both the task's stack and TCB need to be freed.  Sometimes the
  81:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** FreeRTOSConfig.h settings only allow a task to be created using statically
  82:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** allocated RAM, in which case when any task is deleted it is known that neither
  83:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** the task's stack or TCB should be freed.  Sometimes the FreeRTOSConfig.h
  84:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** settings allow a task to be created using either statically or dynamically
  85:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** allocated RAM, in which case a member of the TCB is used to record whether the
  86:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** stack and/or TCB were allocated statically or dynamically, so when a task is
  87:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** deleted the RAM that was allocated dynamically is freed again and no attempt is
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 3


  88:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** made to free the RAM that was allocated statically.
  89:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is only true if it is possible for a
  90:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** task to be created using either statically or dynamically allocated RAM.  Note
  91:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** that if portUSING_MPU_WRAPPERS is 1 then a protected task can be created with
  92:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** a statically allocated stack and a dynamically allocated TCB.
  93:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** !!!NOTE!!! If the definition of tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is
  94:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** changed then the definition of StaticTask_t must also be updated. */
  95:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE	( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( c
  96:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  97:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  98:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  99:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
 101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** value so the high water mark can be determined.  If none of the following are
 102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
 103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
 104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
 105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else
 106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
 107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
 113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
 114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
 115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
 116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * global, rather than file scope.
 121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define static
 124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	microcontroller architecture. */
 137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	state task. */
 140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																									\
 142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																								\
 144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 4


 145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}																								\
 146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																									\
 152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																										\
 154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																								\
 157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			--uxTopPriority;																			\
 159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}																								\
 160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																										\
 161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	being used. */
 172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	architecture being used. */
 180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																								\
 188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																									\
 190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 5


 202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																									\
 203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																								\
 205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}																								\
 207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** count overflows. */
 215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {																									\
 217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	List_t *pxTemp;																					\
 218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																									\
 219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																									\
 222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xNumOfOverflows++;																				\
 226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? ( TCB_t * ) pxCurrentTCB : ( T
 249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** to its original value when it is released. */
 258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 6


 259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else
 261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * (the task's run time environment, including register values)
 268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** typedef struct tskTaskControlBlock
 270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 7


 316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		struct	_reent xNewLib_reent;
 322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* See the comments above the definition of
 330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated for
 332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint8_t ucDelayAborted;
 337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** } tskTCB;
 340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** typedef tskTCB TCB_t;
 344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** which static variables must be declared volatile. */
 347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
 351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Other file private variables. --------------------------------*/
 372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 8


 373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
 374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
 375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** accessed from a critical section. */
 391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*lint -restore */
 401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	extern void vApplicationTickHook( void );
 414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* File private functions. --------------------------------*/
 424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /**
 426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * is in any other state.
 429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 9


 430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * automatically upon the creation of the first task.
 439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * creation of the first user task.
 446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * including the stack pointed to by the TCB.
 458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * and its TCB deleted.
 472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * either the current or the overflow delayed task list.
 478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * a suspended list, etc.).
 485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 10


 487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * NORMAL APPLICATION CODE.
 488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGED_FUNCTION;
 513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * set to a value other than 1.
 524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * will exit the Blocked state.
 534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*
 540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	 * human readable tables of task information.
 542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	 */
 543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 11


 544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * dynamically to fill in the structure's members.
 550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
 553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const uint32_t ulStackDepth,
 554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									void * const pvParameters,
 555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									UBaseType_t uxPriority,
 556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TCB_t *pxNewTCB,
 558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * under the control of the scheduler.
 563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * called by the function.
 570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const uint32_t ulStackDepth,
 584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									void * const pvParameters,
 585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									UBaseType_t uxPriority,
 586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xReturn;
 591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			structure. */
 600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 12


 601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configASSERT_DEFINED */
 604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			function - use them. */
 610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 Unusual cast is ok as the structures are desig
 611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = NULL;
 627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			not static allocation is being used. */
 650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Store the stack location in the TCB. */
 653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 13


 658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->pcName,
 665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
 666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->pvParameters,
 667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->uxPriority,
 668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxCreatedTask, pxNewTCB,
 669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->xRegions );
 670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
 673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			not static allocation is being used. */
 695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxNewTCB != NULL )
 698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Store the stack location in the TCB. */
 700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this task had a statically allocated stack in case it is
 706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
 710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->pcName,
 713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
 714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->pvParameters,
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 14


 715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->xRegions );
 718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
 721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							void * const pvParameters,
 736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							UBaseType_t uxPriority,
 737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
 741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the TCB then the stack. */
 745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			allocation is being used. */
 750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxNewTCB != NULL )
 753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				be deleted later if required. */
 757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vPortFree( pxNewTCB );
 763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxNewTCB = NULL;
 764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StackType_t *pxStack;
 770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 15


 772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) 
 773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxStack != NULL )
 775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Allocate space for the TCB. */
 777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the cas
 778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxNewTCB != NULL )
 780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Store the stack location in the TCB. */
 782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
 785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					it again. */
 788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vPortFree( pxStack );
 789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
 792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB = NULL;
 794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxNewTCB != NULL )
 799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
 811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const uint32_t ulStackDepth,
 826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									void * const pvParameters,
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									UBaseType_t uxPriority,
 828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 16


 829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TCB_t *pxNewTCB,
 830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const MemoryRegion_t * const xRegions )
 831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** StackType_t *pxTopOfStack;
 833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t x;
 834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		BaseType_t xRunPrivileged;
 838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	by the port. */
 861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Also record the stack's high address, which may assist
 872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			debugging. */
 873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		performed. */
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 17


 886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Store the task name in the TCB. */
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configMAX_TASK_NAME_LEN characters just in case the memory after the
 897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		string is not accessible (extremely unlikely). */
 898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pcName[ x ] == 0x00 )
 899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			break;
 901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Ensure the name string is terminated in the case that the string length
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	was greater or equal to configMAX_TASK_NAME_LEN. */
 910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	remove the privilege bit if one is present. */
 914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
 919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Event lists are always in priority order. */
 939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 18


 943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else
 965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xRegions;
 968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
 990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
 997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 19


1000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
1001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
1002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
1003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the top of stack variable is updated. */
1004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
1005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivi
1007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
1009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
1011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( ( void * ) pxCreatedTask != NULL )
1015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
1021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
1025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
1029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	updated. */
1031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
1032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxCurrentNumberOfTasks++;
1034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB == NULL )
1035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the suspended state - make this the current task. */
1038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
1039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
1043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				initialisation required.  We will not recover if this call
1044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				fails, but we will report the failure. */
1045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvInitialiseTaskLists();
1046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
1055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			current task if it is the highest priority task to be created
1056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			so far. */
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 20


1057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
1058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
1062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxTaskNumber++;
1075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
1089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		then it should run now. */
1094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
1104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
1108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 21


1114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			being deleted. */
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Remove task from the ready list. */
1123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Is the task waiting on an event also? */
1133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			not return. */
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxTaskNumber++;
1147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task itself, as a context switch to another task is required.
1152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				check the termination list and free up any memory allocated by
1154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				after which it is not possible to yield away from this task -
1165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				required. */
1167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 22


1171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
1173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the task that has just been deleted. */
1176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
1180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been deleted. */
1185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
1191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TickType_t xTimeToWake;
1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
1214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			block. */
1217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The tick count has overflowed since this function was
1225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 23


1228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xShouldDelay = pdTRUE;
1232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				tick time is less than the wake time. */
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xShouldDelay = pdTRUE;
1246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		have put ourselves to sleep. */
1273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portYIELD_WITHIN_API();
1276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 24


1285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSuspendAll();
1297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_DELAY();
1299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A task that is removed from the event list while the
1301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is resumed.
1304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				executing task. */
1307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		have put ourselves to sleep. */
1318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portYIELD_WITHIN_API();
1321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) )
1332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eTaskState eReturn;
1336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	List_t *pxStateList;
1337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTCB );
1340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 25


1342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			eReturn = eRunning;
1345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
1349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
1353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
1355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				lists. */
1358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				eReturn = eBlocked;
1359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					list.  Is it genuinely suspended or is it block
1366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					indefinitely? */
1367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						eReturn = eSuspended;
1370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						eReturn = eBlocked;
1374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					all. */
1384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					eReturn = eDeleted;
1385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				Ready (including pending ready) state. */
1392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				eReturn = eReady;
1393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return eReturn;
1397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 26


1399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask )
1405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn;
1408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the that
1412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			called uxTaskPriorityGet() that is being queried. */
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
1419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask )
1427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
1446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task that is being queried. */
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 27


1456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
1459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Ensure the new priority is valid. */
1475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task that is being changed. */
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#else
1497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The priority change may have readied a task of higher
1505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				priority than the calling task. */
1506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The priority of a task other than the currently
1511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						running task is being raised.  Is the priority being
1512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						raised above that of the running task? */
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 28


1513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
1515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							xYieldRequired = pdTRUE;
1516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
1517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						else
1518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
1519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
1521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The priority of the running task is being raised,
1525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						but the running task must already be the highest
1526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						priority task able to run so no yield is required. */
1527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Setting the priority of the running task down means
1532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					there may now be another task of higher priority that
1533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					is ready to execute. */
1534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xYieldRequired = pdTRUE;
1535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Setting the priority of any other task down does not
1539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					require a yield as the running task must be above the
1540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					new priority of the task being modified. */
1541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				before its uxPriority member is changed so the
1545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Only change the priority being used if the task is not
1551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					currently using an inherited priority. */
1552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The base priority gets set whatever. */
1562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#else
1565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
1569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 29


1570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				being used for anything else. */
1572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				nothing more than change its priority variable. However, if
1583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				in the list appropriate to its new priority. */
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task is currently in its ready list - remove before
1588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* It is known that the task is in its ready list so
1593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						there is no need to check again and the port level
1594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						reset macro can be called directly. */
1595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				optimised task selection is not being used. */
1619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 30


1627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			being suspended. */
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			suspended list. */
1644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Is the task waiting on an event also? */
1654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					now suspended, so no notification was received. */
1671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
1672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task that is now in the Suspended state. */
1682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
1683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 31


1684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
1687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The current task has just been suspended. */
1698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
1700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				must be adjusted to point to a different task. */
1706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
1707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					be set to point to it no matter what its relative priority
1711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					is. */
1712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB = NULL;
1713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vTaskSwitchContext();
1717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
  28              		.loc 1 1732 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
1733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
1734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 32


1735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		section. */
1738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTask );
  34              		.loc 1 1740 0
  35 0000 0246     		mov	r2, r0
  36 0002 40B9     		cbnz	r0, .L2
  37              	.LBB94:
  38              	.LBB95:
  39              		.file 2 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h"
   1:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*
   2:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
   5:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * subject to the following conditions:
  11:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  12:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  15:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  22:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  25:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  */
  27:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  28:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  29:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define PORTMACRO_H
  31:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  32:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifdef __cplusplus
  33:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** extern "C" {
  34:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
  35:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  36:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * Port specific definitions.
  38:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  39:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * given hardware and compiler.
  41:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  42:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * These settings should not be altered.
  43:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  */
  45:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 33


  46:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Type definitions. */
  47:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portCHAR		char
  48:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portFLOAT		float
  49:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portDOUBLE		double
  50:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portLONG		long
  51:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSHORT		short
  52:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  55:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** typedef long BaseType_t;
  57:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  59:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #else
  63:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  66:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
  70:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  72:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Architecture specifics. */
  73:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  78:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD() 															\
  80:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {																				\
  81:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 																				\
  84:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
  89:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  90:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  96:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Critical section management. */
  97:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 34


 103:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 106:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 108:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 114:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 115:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 116:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifdef configASSERT
 117:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 118:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 119:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
 120:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 121:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 122:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portNOP()
 123:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 124:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portINLINE	__inline
 125:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 126:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 127:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 128:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
 129:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 130:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 131:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 132:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 133:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** BaseType_t xReturn;
 134:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 135:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 136:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 137:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 138:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 139:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	{
 140:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		xReturn = pdFALSE;
 141:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	}
 142:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	else
 143:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	{
 144:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		xReturn = pdTRUE;
 145:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	}
 146:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 147:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	return xReturn;
 148:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
 149:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 150:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 151:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 152:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 153:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 154:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 155:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile
  40              		.loc 2 156 0
  41              		.syntax unified
  42              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 35


  43 0004 4FF02003 			mov r3, #32												
  44 0008 83F31188 		msr basepri, r3											
  45 000c BFF36F8F 		isb														
  46 0010 BFF34F8F 		dsb														
  47              	
  48              	@ 0 "" 2
  49              	.LVL1:
  50              		.thumb
  51              		.syntax unified
  52              	.L3:
  53 0014 FEE7     		b	.L3
  54              	.L2:
  55              	.LBE95:
  56              	.LBE94:
1741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  57              		.loc 1 1743 0
  58 0016 4169     		ldr	r1, [r0, #20]
  59 0018 0A4B     		ldr	r3, .L12
  60 001a 9942     		cmp	r1, r3
  61 001c 01D1     		bne	.L7
  62 001e 0123     		movs	r3, #1
  63 0020 00E0     		b	.L4
  64              	.L7:
  65 0022 0023     		movs	r3, #0
  66              	.L4:
  67              		.loc 1 1743 0 is_stmt 0 discriminator 4
  68 0024 43B1     		cbz	r3, .L8
1744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
  69              		.loc 1 1746 0 is_stmt 1
  70 0026 926A     		ldr	r2, [r2, #40]
  71 0028 0749     		ldr	r1, .L12+4
  72 002a 8A42     		cmp	r2, r1
  73 002c 06D0     		beq	.L9
1747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
  74              		.loc 1 1750 0
  75 002e 02B1     		cbz	r2, .L6
  76 0030 0023     		movs	r3, #0
  77              	.L6:
  78              		.loc 1 1750 0 is_stmt 0 discriminator 4
  79 0032 2BB9     		cbnz	r3, .L11
1733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  80              		.loc 1 1733 0 is_stmt 1
  81 0034 0020     		movs	r0, #0
  82              	.LVL2:
  83 0036 7047     		bx	lr
  84              	.LVL3:
  85              	.L8:
  86 0038 0020     		movs	r0, #0
  87              	.LVL4:
  88 003a 7047     		bx	lr
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 36


  89              	.LVL5:
  90              	.L9:
  91 003c 0020     		movs	r0, #0
  92              	.LVL6:
  93 003e 7047     		bx	lr
  94              	.LVL7:
  95              	.L11:
1751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xReturn = pdTRUE;
  96              		.loc 1 1752 0
  97 0040 0120     		movs	r0, #1
  98              	.LVL8:
1753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
1770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
  99              		.loc 1 1770 0
 100 0042 7047     		bx	lr
 101              	.L13:
 102              		.align	2
 103              	.L12:
 104 0044 00000000 		.word	.LANCHOR0
 105 0048 14000000 		.word	.LANCHOR0+20
 106              		.cfi_endproc
 107              	.LFE672:
 108              		.size	prvTaskIsTaskSuspended, .-prvTaskIsTaskSuspended
 109              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 110              		.align	2
 111              		.thumb
 112              		.thumb_func
 113              		.type	prvResetNextTaskUnblockTime, %function
 114              	prvResetNextTaskUnblockTime:
 115              	.LFB700:
1771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 37


1781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToResume );
1783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		currently executing task. */
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
1787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
1789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					suspended because this is inside a critical section. */
1796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A higher priority task may have just been resumed. */
1800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						but will leave the lists in the correct state for the
1804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						next yield. */
1805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
1818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToResume );
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 38


1838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
1854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					suspended list to the ready list directly. */
1868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldRequired = pdTRUE;
1871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					unsuspended. */
1885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 39


1895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xYieldRequired;
1896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskStartScheduler( void )
1902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
1903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
1904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		address of the RAM then create the idle task. */
1914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												configIDLE_TASK_NAME,
1917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												ulIdleTaskStackSize,
1918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
1919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												pxIdleTaskStackBuffer,
1921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
1926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFAIL;
1930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else
1933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
1935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
1936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								configIDLE_TASK_NAME,
1937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								configMINIMAL_STACK_SIZE,
1938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								( void * ) NULL,
1939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
1941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
1943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
1945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xReturn == pdPASS )
1947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
1949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 40


1952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_TIMERS */
1956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( xReturn == pdPASS )
1958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
1960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
1961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the only macro called by the function. */
1962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
1963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			freertos_tasks_c_additions_init();
1965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
1967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
1969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
1970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
1971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
1972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		starts to run. */
1973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portDISABLE_INTERRUPTS();
1974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
1976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
1978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			structure specific to the task that will run first. */
1979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
1980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
1982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
1984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
1985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
1986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
1988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
1989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
1990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
1991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
1992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		FreeRTOSConfig.h file. */
1993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
1994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
1996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portable interface. */
1997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
1998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
2000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			function will not return. */
2001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
2005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
2008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 41


2009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		or the timer task. */
2012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) xIdleTaskHandle;
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskEndScheduler( void )
2022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portDISABLE_INTERRUPTS();
2027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
2028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vPortEndScheduler();
2029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskSuspendAll( void )
2033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required as the variable is of type
2035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	http://goo.gl/wu4acr */
2038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	++uxSchedulerSuspended;
2039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TickType_t xReturn;
2047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
2052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		running. */
2053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
2061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 42


2066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
2067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
2070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
2075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = 0;
2079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
2084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			processed. */
2085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = 0;
2086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			idle priority.  This path can only be reached if
2091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = 0;
2093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB = NULL;
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
2120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		--uxSchedulerSuspended;
2122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 43


2123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				appropriate ready list. */
2129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
2132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					task then a yield must be performed. */
2138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
2141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB != NULL )
2149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					which may have prevented the next unblock time from being
2152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					important for low power tickless implementations, where
2154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					state. */
2156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				time. */
2163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
2165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxPendedCounts > ( UBaseType_t ) 0U )
2167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						do
2169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
2170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
2172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								xYieldPending = pdTRUE;
2173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
2174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							else
2175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
2176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
2178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							--uxPendedCounts;
2179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 44


2180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						uxPendedTicks = 0;
2182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#endif
2196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
2199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
2210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xAlreadyYielded;
2212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTicks;
2218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTicks = xTickCount;
2223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xTicks;
2227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xReturn;
2233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 45


2237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
2249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = xTickCount;
2254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xReturn;
2258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t. */
2265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB;
2272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	queried. */
2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTCB );
2277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t x;
2287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	char cNextChar;
2288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 46


2294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			do
2296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
2298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Check each character in the name looking for a match or
2300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mismatch. */
2301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Characters didn't match. */
2308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
2309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else if( cNextChar == 0x00 )
2311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Both strings terminated, a match must have been
2313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						found. */
2314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxReturn = pxNextTCB;
2315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
2316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxReturn != NULL )
2324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The handle has been found. */
2326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
2327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return pxReturn;
2337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t* pxTCB;
2348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 47


2351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
2353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Search the ready lists. */
2355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			do
2356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxQueue--;
2358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB != NULL )
2361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Found the handle. */
2363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
2364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Search the delayed lists. */
2369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == NULL )
2370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == NULL )
2375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB == NULL )
2382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Search the suspended list. */
2384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
2388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB == NULL )
2392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Search the deleted list. */
2394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
2398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xTaskResumeAll();
2400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return ( TaskHandle_t ) pxTCB;
2402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 48


2408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
2414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task in the Ready state. */
2420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				do
2421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxQueue--;
2423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task in the Blocked state. */
2429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					each task in the Suspended state. */
2444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#else
2455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#endif
2457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#else
2460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						*pulTotalRunTime = 0;
2464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 49


2465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xTaskResumeAll();
2474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxTask;
2476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xIdleTaskHandle;
2489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 1. */
2498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		each stepped tick. */
2505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount += xTicksToJump;
2507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB = ( TCB_t * ) xTask;
2518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
2519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTCB );
2521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 50


2522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
2523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			it is actually in the Blocked state. */
2526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
2529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				scheduler is suspended. */
2533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is used. */
2539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskENTER_CRITICAL();
2540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskEXIT_CRITICAL();
2552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				switch if preemption is turned off. */
2558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					performed if the unblocked task has a priority that is
2562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					equal to or higher than the currently executing task. */
2563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						is unsuspended. */
2567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
2568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFAIL;
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 51


2579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xTaskResumeAll();
2582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t * pxTCB;
2592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xItemValue;
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tasks to be unblocked. */
2598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		block. */
2603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		delayed lists if it wraps to 0. */
2607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount = xConstTickCount;
2608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
2610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		look any further down the list. */
2622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			for( ;; )
2625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					to the maximum possible value so it is extremely
2630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					unlikely that the
2631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					next time through. */
2633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
2635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 52


2636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
2637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					at which the task at the head of the delayed list must
2641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					be removed from the Blocked state. */
2642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
2643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						item value is the time at which the task at the head
2649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						state -	so record the item value in
2651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xNextTaskUnblockTime. */
2652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
2654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					it from the event list. */
2665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					list. */
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					context switch if preemption is turned off. */
2680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Preemption is on, but a context switch should
2683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						only be performed if the unblocked task has a
2684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						priority that is equal to or higher than the
2685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						currently executing task. */
2686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
2688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
2690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						else
2691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
2692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 53


2693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
2694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
2721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vApplicationTickHook();
2723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
2732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		++uxPendedTicks;
2734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		scheduler is locked. */
2737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vApplicationTickHook();
2740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
2742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xYieldPending != pdFALSE )
2747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xSwitchRequired = pdTRUE;
2749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 54


2750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xSwitchRequired;
2758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *xTCB;
2766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		getting set. */
2769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask == NULL )
2770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the value can be accessed from an interrupt. */
2780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
2781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
2783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *xTCB;
2793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHookFunction_t xReturn;
2794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
2796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask == NULL )
2797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the value can be accessed from an interrupt. */
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 55


2807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
2808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xTCB->pxTaskTag;
2810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
2812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *xTCB;
2824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
2825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask == NULL )
2828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFAIL;
2843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskSwitchContext( void )
2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		switch. */
2857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdTRUE;
2858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
2860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdFALSE;
2862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
2863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 56


2864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#else
2869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Add the amount of time the task has been running to the
2873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				accumulated time so far.  The time the task started running was
2874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				stored in ulTaskSwitchedInTime.  Note that there is no overflow
2875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				protection here so count values are only valid until the timer
2876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				overflows.  The guard against negative values is to protect
2877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				against suspect run time stat counter implementations - which
2878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				are provided by the application, not the kernel. */
2879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ulTotalRunTime > ulTaskSwitchedInTime )
2880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
2884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				ulTaskSwitchedInTime = ulTotalRunTime;
2888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
2890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Check for stack overflow, if configured. */
2892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																									\
2893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const uint32_t * const pulStack = ( uint32_t * ) pxCurrentTCB->pxStack;							\
2894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const uint32_t ulCheckValue = ( uint32_t ) 0xa5a5a5a5;											\
2895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																											\
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ( pulStack[ 0 ] != ulCheckValue ) ||												\
2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 1 ] != ulCheckValue ) ||												\
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 2 ] != ulCheckValue ) ||												\
2899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 3 ] != ulCheckValue ) )												\
2900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{																								\
2901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vApplicationStackOverflowHook( ( TaskHandle_t ) pxCurrentTCB, pxCurrentTCB->pcTaskName );	\
2902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}																								\
2903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
2906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		optimised asm code. */
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK();
2908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			structure specific to this task. */
2914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 57


2921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
2924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
2926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
2927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
2929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
2930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
2931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
2932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
2941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the event groups implementation. */
2944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
2945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
2947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
2948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	task that is not in the Blocked state. */
2949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
2950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
2952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
2953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
2954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
2955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the task level). */
2956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TIMERS == 1 )
2963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
2965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxEventList );
2967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This function should not be called by application code hence the
2969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
2971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		it should be called with the scheduler suspended. */
2972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
2975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
2976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
2977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		can be used in place of vListInsert. */
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 58


2978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
2981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
2982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
2983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
2984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
2986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
2989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
2990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TIMERS */
2993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
2996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
2998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
2999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
3001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	called from a critical section within an ISR. */
3002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
3004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
3005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the delayed list, and add it to the ready list.
3006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
3008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
3009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
3010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
3012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxEventList is not empty. */
3013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
3014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
3016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
3021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
3023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pending until the scheduler is resumed. */
3026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		it should force a context switch now. */
3034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = pdTRUE;
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 59


3035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdTRUE;
3039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
3041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = pdFALSE;
3043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
3046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
3049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
3050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
3051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
3052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
3053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
3054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
3055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvResetNextTaskUnblockTime();
3056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
3058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xReturn;
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
3066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the event flags implementation. */
3069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
3070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Store the new item value in the event list. */
3072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	event flags. */
3076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_LIST_ITEM_OWNER( pxEventListItem );
3077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
3079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	lists. */
3083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
3085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		a context switch is required.  This function is called with the
3090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 60


3092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdTRUE;
3093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
3100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
3101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
3103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
3104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
3106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
3112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
3120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
3122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTicksToWait );
3123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
3125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != pdFALSE )
3132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				but has the same result. */
3135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
3137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				specified is the maximum block time then the task should block
3146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				indefinitely, and therefore never time out. */
3147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFALSE;
3148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 61


3149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The tick count is greater than the time at which
3155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			was called. */
3159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdTRUE;
3160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
3162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
3165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
3166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFALSE;
3167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			*pxTicksToWait = 0;
3171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdTRUE;
3172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
3175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xReturn;
3177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskMissedYield( void )
3181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xYieldPending = pdTRUE;
3183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn;
3191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask != NULL )
3194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = 0U;
3201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
3204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 62


3206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask != NULL )
3216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
3225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * -----------------------------------------------------------
3226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The Idle task.
3227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * ----------------------------------------------------------
3228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
3229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
3232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
3234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
3235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop warnings. */
3238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) pvParameters;
3239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	any. */
3246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTASK_CALLS_SECURE_FUNCTIONS();
3247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for( ;; )
3249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			see if any other task has become available.  If we are using
3258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			will automatically get the processor anyway. */
3260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskYIELD();
3261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 63


3263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			to run then the idle task should yield before the end of the
3269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			timeslice.
3270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			A critical region is not required here as we are just reading from
3272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskYIELD();
3278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			allows the application designer to add background functionality
3292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			without the overhead of a separate task.
3293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vApplicationIdleHook();
3296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		user defined low power mode	implementations require
3302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			test of the expected idle time is performed without the
3310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			valid. */
3312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vTaskSuspendAll();
3317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					time can be sampled again, and this time its value can
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 64


3320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					be used. */
3321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if the application does not want
3326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
3336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) xTaskResumeAll();
3341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			eReturn = eAbortSleep;
3364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			eReturn = eAbortSleep;
3369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			interrupts. */
3376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 65


3377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return eReturn;
3387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvReturn = NULL;
3413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = NULL;
3423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return pvReturn;
3426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 66


3434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the calling task. */
3439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseTaskLists( void )
3448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxPriority;
3450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	using list2. */
3474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
3475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		TCB_t *pxTCB;
3487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent vTaskSuspendAll()
3489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		being called too often in the idle task. */
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 67


3491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
3493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
3495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
3497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
3498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
3500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvDeleteTCB( pxTCB );
3502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
3528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
3538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		state is just set to whatever is passed in. */
3546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( eState != eInvalid )
3547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 68


3548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
3549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
3551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
3555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If the task is in the suspended list then there is a
3559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					chance it is actually just blocked indefinitely - so really
3560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					it should be reported as being in the Blocked state. */
3561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( eState == eSuspended )
3562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						vTaskSuspendAll();
3564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
3565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
3567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
3568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
3569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
3570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						( void ) xTaskResumeAll();
3571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#else
3590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
3594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 69


3605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTask = 0;
3610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
3614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			do
3620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
3622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxTask++;
3624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxTask;
3632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
3638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulCount = 0U;
3642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ulCount++;
3647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return ( uint16_t ) ulCount;
3652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) ) */
3655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 70


3662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t *pucEndOfStack;
3663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn;
3664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
3672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
3680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		want to allocate and clean RAM statically. */
3692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		to the task to free any memory allocated at the application level. */
3696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the stack and TCB. */
3706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTCB );
3708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated 
3710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			check what was statically allocated before trying to free the
3713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			memory. */
3714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				must be freed. */
3718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 71


3719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vPortFree( pxTCB );
3720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				only memory that must be freed. */
3725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vPortFree( pxTCB );
3726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				nothing needs to be freed. */
3731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
3732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 116              		.loc 1 3742 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
3743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB;
3744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 121              		.loc 1 3745 0
 122 0000 094B     		ldr	r3, .L19
 123 0002 9B6A     		ldr	r3, [r3, #40]
 124 0004 1B68     		ldr	r3, [r3]
 125 0006 0BB9     		cbnz	r3, .L18
 126 0008 0123     		movs	r3, #1
 127 000a 00E0     		b	.L15
 128              	.L18:
 129 000c 0023     		movs	r3, #0
 130              	.L15:
 131              		.loc 1 3745 0 is_stmt 0 discriminator 4
 132 000e 23B1     		cbz	r3, .L16
3746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		there is an item in the delayed list. */
3751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 133              		.loc 1 3751 0 is_stmt 1
 134 0010 4FF0FF32 		mov	r2, #-1
 135 0014 044B     		ldr	r3, .L19
 136 0016 DA62     		str	r2, [r3, #44]
 137 0018 7047     		bx	lr
 138              	.L16:
3752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 72


3753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
3754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from the Blocked state. */
3759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 139              		.loc 1 3759 0
 140 001a 034B     		ldr	r3, .L19
 141 001c 9A6A     		ldr	r2, [r3, #40]
 142 001e D268     		ldr	r2, [r2, #12]
 143 0020 D268     		ldr	r2, [r2, #12]
 144              	.LVL9:
3760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 145              		.loc 1 3760 0
 146 0022 5268     		ldr	r2, [r2, #4]
 147              	.LVL10:
 148 0024 DA62     		str	r2, [r3, #44]
 149 0026 7047     		bx	lr
 150              	.L20:
 151              		.align	2
 152              	.L19:
 153 0028 00000000 		.word	.LANCHOR0
 154              		.cfi_endproc
 155              	.LFE700:
 156              		.size	prvResetNextTaskUnblockTime, .-prvResetNextTaskUnblockTime
 157              		.section	.text.prvDeleteTCB,"ax",%progbits
 158              		.align	2
 159              		.thumb
 160              		.thumb_func
 161              		.type	prvDeleteTCB, %function
 162              	prvDeleteTCB:
 163              	.LFB699:
3688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 164              		.loc 1 3688 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              	.LVL11:
 169 0000 10B5     		push	{r4, lr}
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 4, -8
 172              		.cfi_offset 14, -4
 173 0002 0446     		mov	r4, r0
3706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTCB );
 174              		.loc 1 3706 0
 175 0004 006B     		ldr	r0, [r0, #48]
 176              	.LVL12:
 177 0006 FFF7FEFF 		bl	vPortFree
 178              	.LVL13:
3707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 179              		.loc 1 3707 0
 180 000a 2046     		mov	r0, r4
 181 000c FFF7FEFF 		bl	vPortFree
 182              	.LVL14:
 183 0010 10BD     		pop	{r4, pc}
 184              		.cfi_endproc
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 73


 185              	.LFE699:
 186              		.size	prvDeleteTCB, .-prvDeleteTCB
 187 0012 00BF     		.section	.text.prvInitialiseNewTask,"ax",%progbits
 188              		.align	2
 189              		.thumb
 190              		.thumb_func
 191              		.type	prvInitialiseNewTask, %function
 192              	prvInitialiseNewTask:
 193              	.LFB663:
 831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** StackType_t *pxTopOfStack;
 194              		.loc 1 831 0
 195              		.cfi_startproc
 196              		@ args = 16, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              	.LVL15:
 199 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 200              		.cfi_def_cfa_offset 32
 201              		.cfi_offset 4, -32
 202              		.cfi_offset 5, -28
 203              		.cfi_offset 6, -24
 204              		.cfi_offset 7, -20
 205              		.cfi_offset 8, -16
 206              		.cfi_offset 9, -12
 207              		.cfi_offset 10, -8
 208              		.cfi_offset 14, -4
 209 0004 8246     		mov	r10, r0
 210 0006 8946     		mov	r9, r1
 211 0008 1546     		mov	r5, r2
 212 000a 9846     		mov	r8, r3
 213 000c 089F     		ldr	r7, [sp, #32]
 214 000e 099E     		ldr	r6, [sp, #36]
 215 0010 0A9C     		ldr	r4, [sp, #40]
 853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 216              		.loc 1 853 0
 217 0012 9200     		lsls	r2, r2, #2
 218              	.LVL16:
 219 0014 A521     		movs	r1, #165
 220              	.LVL17:
 221 0016 206B     		ldr	r0, [r4, #48]
 222              	.LVL18:
 223 0018 FFF7FEFF 		bl	memset
 224              	.LVL19:
 863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 225              		.loc 1 863 0
 226 001c 236B     		ldr	r3, [r4, #48]
 227 001e 05F18042 		add	r2, r5, #1073741824
 228 0022 013A     		subs	r2, r2, #1
 229 0024 03EB8205 		add	r5, r3, r2, lsl #2
 230              	.LVL20:
 864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 231              		.loc 1 864 0
 232 0028 25F00705 		bic	r5, r5, #7
 233              	.LVL21:
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 234              		.loc 1 891 0
 235 002c 0023     		movs	r3, #0
 236 002e 08E0     		b	.L24
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 74


 237              	.LVL22:
 238              	.L26:
 893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 239              		.loc 1 893 0
 240 0030 19F80310 		ldrb	r1, [r9, r3]	@ zero_extendqisi2
 241 0034 E218     		adds	r2, r4, r3
 242 0036 82F83410 		strb	r1, [r2, #52]
 898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 243              		.loc 1 898 0
 244 003a 19F80320 		ldrb	r2, [r9, r3]	@ zero_extendqisi2
 245 003e 12B1     		cbz	r2, .L25
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 246              		.loc 1 891 0 discriminator 2
 247 0040 0133     		adds	r3, r3, #1
 248              	.LVL23:
 249              	.L24:
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 250              		.loc 1 891 0 is_stmt 0 discriminator 1
 251 0042 0F2B     		cmp	r3, #15
 252 0044 F4D9     		bls	.L26
 253              	.L25:
 910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 254              		.loc 1 910 0 is_stmt 1
 255 0046 0023     		movs	r3, #0
 256              	.LVL24:
 257 0048 84F84330 		strb	r3, [r4, #67]
 914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 258              		.loc 1 914 0
 259 004c 062F     		cmp	r7, #6
 260 004e 00D9     		bls	.L27
 916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 261              		.loc 1 916 0
 262 0050 0627     		movs	r7, #6
 263              	.L27:
 264              	.LVL25:
 923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 265              		.loc 1 923 0
 266 0052 E762     		str	r7, [r4, #44]
 931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 267              		.loc 1 931 0
 268 0054 201D     		adds	r0, r4, #4
 269 0056 FFF7FEFF 		bl	vListInitialiseItem
 270              	.LVL26:
 932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 271              		.loc 1 932 0
 272 005a 04F11800 		add	r0, r4, #24
 273 005e FFF7FEFF 		bl	vListInitialiseItem
 274              	.LVL27:
 936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 275              		.loc 1 936 0
 276 0062 2461     		str	r4, [r4, #16]
 939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 277              		.loc 1 939 0
 278 0064 C7F10703 		rsb	r3, r7, #7
 279 0068 A361     		str	r3, [r4, #24]
 940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 280              		.loc 1 940 0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 75


 281 006a 6462     		str	r4, [r4, #36]
 282              	.LVL28:
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 283              		.loc 1 973 0
 284 006c 0023     		movs	r3, #0
 285 006e 06E0     		b	.L28
 286              	.LVL29:
 287              	.L29:
 975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 288              		.loc 1 975 0 discriminator 3
 289 0070 03F11002 		add	r2, r3, #16
 290 0074 04EB8202 		add	r2, r4, r2, lsl #2
 291 0078 0021     		movs	r1, #0
 292 007a 5160     		str	r1, [r2, #4]
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 293              		.loc 1 973 0 discriminator 3
 294 007c 0133     		adds	r3, r3, #1
 295              	.LVL30:
 296              	.L28:
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 297              		.loc 1 973 0 is_stmt 0 discriminator 1
 298 007e 042B     		cmp	r3, #4
 299 0080 F6D9     		bls	.L29
 982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 300              		.loc 1 982 0 is_stmt 1
 301 0082 0023     		movs	r3, #0
 302              	.LVL31:
 303 0084 A365     		str	r3, [r4, #88]
 983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 304              		.loc 1 983 0
 305 0086 84F85C30 		strb	r3, [r4, #92]
1010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 306              		.loc 1 1010 0
 307 008a 4246     		mov	r2, r8
 308 008c 5146     		mov	r1, r10
 309 008e 2846     		mov	r0, r5
 310 0090 FFF7FEFF 		bl	pxPortInitialiseStack
 311              	.LVL32:
 312 0094 2060     		str	r0, [r4]
1014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 313              		.loc 1 1014 0
 314 0096 06B1     		cbz	r6, .L23
1018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 315              		.loc 1 1018 0
 316 0098 3460     		str	r4, [r6]
 317              	.L23:
 318 009a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 319              		.cfi_endproc
 320              	.LFE663:
 321              		.size	prvInitialiseNewTask, .-prvInitialiseNewTask
 322 009e 00BF     		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 323              		.align	2
 324              		.thumb
 325              		.thumb_func
 326              		.type	prvInitialiseTaskLists, %function
 327              	prvInitialiseTaskLists:
 328              	.LFB697:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 76


3448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxPriority;
 329              		.loc 1 3448 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333 0000 70B5     		push	{r4, r5, r6, lr}
 334              		.cfi_def_cfa_offset 16
 335              		.cfi_offset 4, -16
 336              		.cfi_offset 5, -12
 337              		.cfi_offset 6, -8
 338              		.cfi_offset 14, -4
 339              	.LVL33:
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 340              		.loc 1 3451 0
 341 0002 0024     		movs	r4, #0
 342 0004 07E0     		b	.L34
 343              	.LVL34:
 344              	.L35:
3453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 345              		.loc 1 3453 0 discriminator 3
 346 0006 04EB8402 		add	r2, r4, r4, lsl #2
 347 000a 9300     		lsls	r3, r2, #2
 348 000c 1048     		ldr	r0, .L37
 349 000e 1844     		add	r0, r0, r3
 350 0010 FFF7FEFF 		bl	vListInitialise
 351              	.LVL35:
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 352              		.loc 1 3451 0 discriminator 3
 353 0014 0134     		adds	r4, r4, #1
 354              	.LVL36:
 355              	.L34:
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 356              		.loc 1 3451 0 is_stmt 0 discriminator 1
 357 0016 062C     		cmp	r4, #6
 358 0018 F5D9     		bls	.L35
3456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 359              		.loc 1 3456 0 is_stmt 1
 360 001a 0E4C     		ldr	r4, .L37+4
 361              	.LVL37:
 362 001c 04F1BC06 		add	r6, r4, #188
 363 0020 3046     		mov	r0, r6
 364 0022 FFF7FEFF 		bl	vListInitialise
 365              	.LVL38:
3457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 366              		.loc 1 3457 0
 367 0026 04F1D005 		add	r5, r4, #208
 368 002a 2846     		mov	r0, r5
 369 002c FFF7FEFF 		bl	vListInitialise
 370              	.LVL39:
3458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 371              		.loc 1 3458 0
 372 0030 04F11400 		add	r0, r4, #20
 373 0034 FFF7FEFF 		bl	vListInitialise
 374              	.LVL40:
3462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 375              		.loc 1 3462 0
 376 0038 04F1E400 		add	r0, r4, #228
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 77


 377 003c FFF7FEFF 		bl	vListInitialise
 378              	.LVL41:
3468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 379              		.loc 1 3468 0
 380 0040 2046     		mov	r0, r4
 381 0042 FFF7FEFF 		bl	vListInitialise
 382              	.LVL42:
3474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 383              		.loc 1 3474 0
 384 0046 A662     		str	r6, [r4, #40]
3475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 385              		.loc 1 3475 0
 386 0048 C4F8F850 		str	r5, [r4, #248]
 387 004c 70BD     		pop	{r4, r5, r6, pc}
 388              	.L38:
 389 004e 00BF     		.align	2
 390              	.L37:
 391 0050 30000000 		.word	.LANCHOR0+48
 392 0054 00000000 		.word	.LANCHOR0
 393              		.cfi_endproc
 394              	.LFE697:
 395              		.size	prvInitialiseTaskLists, .-prvInitialiseTaskLists
 396              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 397              		.align	2
 398              		.thumb
 399              		.thumb_func
 400              		.type	prvAddNewTaskToReadyList, %function
 401              	prvAddNewTaskToReadyList:
 402              	.LFB664:
1028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 403              		.loc 1 1028 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              	.LVL43:
 408 0000 38B5     		push	{r3, r4, r5, lr}
 409              		.cfi_def_cfa_offset 16
 410              		.cfi_offset 3, -16
 411              		.cfi_offset 4, -12
 412              		.cfi_offset 5, -8
 413              		.cfi_offset 14, -4
 414 0002 0446     		mov	r4, r0
1031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 415              		.loc 1 1031 0
 416 0004 FFF7FEFF 		bl	vPortEnterCritical
 417              	.LVL44:
1033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 418              		.loc 1 1033 0
 419 0008 264B     		ldr	r3, .L45
 420 000a D3F8FC20 		ldr	r2, [r3, #252]
 421 000e 0132     		adds	r2, r2, #1
 422 0010 C3F8FC20 		str	r2, [r3, #252]
1034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 423              		.loc 1 1034 0
 424 0014 D3F80031 		ldr	r3, [r3, #256]
 425 0018 4BB9     		cbnz	r3, .L40
1038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 78


 426              		.loc 1 1038 0
 427 001a 224B     		ldr	r3, .L45
 428 001c C3F80041 		str	r4, [r3, #256]
1040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 429              		.loc 1 1040 0
 430 0020 D3F8FC30 		ldr	r3, [r3, #252]
 431 0024 012B     		cmp	r3, #1
 432 0026 10D1     		bne	.L41
1045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 433              		.loc 1 1045 0
 434 0028 FFF7FEFF 		bl	prvInitialiseTaskLists
 435              	.LVL45:
 436 002c 0DE0     		b	.L41
 437              	.L40:
1057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 438              		.loc 1 1057 0
 439 002e 1D4B     		ldr	r3, .L45
 440 0030 D3F80431 		ldr	r3, [r3, #260]
 441 0034 4BB9     		cbnz	r3, .L41
1059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 442              		.loc 1 1059 0
 443 0036 1B4B     		ldr	r3, .L45
 444 0038 D3F80031 		ldr	r3, [r3, #256]
 445 003c DA6A     		ldr	r2, [r3, #44]
 446 003e E36A     		ldr	r3, [r4, #44]
 447 0040 9A42     		cmp	r2, r3
 448 0042 02D8     		bhi	.L41
1061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 449              		.loc 1 1061 0
 450 0044 174B     		ldr	r3, .L45
 451 0046 C3F80041 		str	r4, [r3, #256]
 452              	.L41:
1074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 453              		.loc 1 1074 0
 454 004a 164A     		ldr	r2, .L45
 455 004c D2F80831 		ldr	r3, [r2, #264]
 456 0050 0133     		adds	r3, r3, #1
 457 0052 C2F80831 		str	r3, [r2, #264]
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 458              		.loc 1 1084 0
 459 0056 E36A     		ldr	r3, [r4, #44]
 460 0058 D2F80C21 		ldr	r2, [r2, #268]
 461 005c 9342     		cmp	r3, r2
 462 005e 02D9     		bls	.L42
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 463              		.loc 1 1084 0 is_stmt 0 discriminator 1
 464 0060 104A     		ldr	r2, .L45
 465 0062 C2F80C31 		str	r3, [r2, #268]
 466              	.L42:
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 467              		.loc 1 1084 0 discriminator 3
 468 0066 0F4D     		ldr	r5, .L45
 469 0068 05F13000 		add	r0, r5, #48
 470 006c 03EB8303 		add	r3, r3, r3, lsl #2
 471 0070 9A00     		lsls	r2, r3, #2
 472 0072 211D     		adds	r1, r4, #4
 473 0074 1044     		add	r0, r0, r2
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 79


 474 0076 FFF7FEFF 		bl	vListInsertEnd
 475              	.LVL46:
1088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 476              		.loc 1 1088 0 is_stmt 1 discriminator 3
 477 007a FFF7FEFF 		bl	vPortExitCritical
 478              	.LVL47:
1090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 479              		.loc 1 1090 0 discriminator 3
 480 007e D5F80431 		ldr	r3, [r5, #260]
 481 0082 6BB1     		cbz	r3, .L39
1094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 482              		.loc 1 1094 0
 483 0084 D5F80031 		ldr	r3, [r5, #256]
 484 0088 DA6A     		ldr	r2, [r3, #44]
 485 008a E36A     		ldr	r3, [r4, #44]
 486 008c 9A42     		cmp	r2, r3
 487 008e 07D2     		bcs	.L39
1096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 488              		.loc 1 1096 0
 489 0090 4FF08052 		mov	r2, #268435456
 490 0094 044B     		ldr	r3, .L45+4
 491 0096 1A60     		str	r2, [r3]
 492              		.syntax unified
 493              	@ 1096 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 494 0098 BFF34F8F 		dsb
 495              	@ 0 "" 2
 496              	@ 1096 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 497 009c BFF36F8F 		isb
 498              	@ 0 "" 2
 499              		.thumb
 500              		.syntax unified
 501              	.L39:
 502 00a0 38BD     		pop	{r3, r4, r5, pc}
 503              	.LVL48:
 504              	.L46:
 505 00a2 00BF     		.align	2
 506              	.L45:
 507 00a4 00000000 		.word	.LANCHOR0
 508 00a8 04ED00E0 		.word	-536810236
 509              		.cfi_endproc
 510              	.LFE664:
 511              		.size	prvAddNewTaskToReadyList, .-prvAddNewTaskToReadyList
 512              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 513              		.align	2
 514              		.thumb
 515              		.thumb_func
 516              		.type	prvCheckTasksWaitingTermination, %function
 517              	prvCheckTasksWaitingTermination:
 518              	.LFB698:
3480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 519              		.loc 1 3480 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 0
 522              		@ frame_needed = 0, uses_anonymous_args = 0
 523 0000 38B5     		push	{r3, r4, r5, lr}
 524              		.cfi_def_cfa_offset 16
 525              		.cfi_offset 3, -16
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 80


 526              		.cfi_offset 4, -12
 527              		.cfi_offset 5, -8
 528              		.cfi_offset 14, -4
 529              	.LBB96:
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 530              		.loc 1 3490 0
 531 0002 17E0     		b	.L48
 532              	.L49:
3492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 533              		.loc 1 3492 0
 534 0004 FFF7FEFF 		bl	vPortEnterCritical
 535              	.LVL49:
3494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 536              		.loc 1 3494 0
 537 0008 0D4C     		ldr	r4, .L51
 538 000a D4F8F030 		ldr	r3, [r4, #240]
 539 000e DD68     		ldr	r5, [r3, #12]
 540              	.LVL50:
3495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 541              		.loc 1 3495 0
 542 0010 281D     		adds	r0, r5, #4
 543 0012 FFF7FEFF 		bl	uxListRemove
 544              	.LVL51:
3496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 545              		.loc 1 3496 0
 546 0016 D4F8FC30 		ldr	r3, [r4, #252]
 547 001a 013B     		subs	r3, r3, #1
 548 001c C4F8FC30 		str	r3, [r4, #252]
3497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 549              		.loc 1 3497 0
 550 0020 D4F81031 		ldr	r3, [r4, #272]
 551 0024 013B     		subs	r3, r3, #1
 552 0026 C4F81031 		str	r3, [r4, #272]
3499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 553              		.loc 1 3499 0
 554 002a FFF7FEFF 		bl	vPortExitCritical
 555              	.LVL52:
3501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 556              		.loc 1 3501 0
 557 002e 2846     		mov	r0, r5
 558 0030 FFF7FEFF 		bl	prvDeleteTCB
 559              	.LVL53:
 560              	.L48:
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 561              		.loc 1 3490 0
 562 0034 024B     		ldr	r3, .L51
 563 0036 D3F81031 		ldr	r3, [r3, #272]
 564 003a 002B     		cmp	r3, #0
 565 003c E2D1     		bne	.L49
 566              	.LBE96:
3505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 567              		.loc 1 3505 0
 568 003e 38BD     		pop	{r3, r4, r5, pc}
 569              	.L52:
 570              		.align	2
 571              	.L51:
 572 0040 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 81


 573              		.cfi_endproc
 574              	.LFE698:
 575              		.size	prvCheckTasksWaitingTermination, .-prvCheckTasksWaitingTermination
 576              		.section	.text.prvIdleTask,"ax",%progbits
 577              		.align	2
 578              		.thumb
 579              		.thumb_func
 580              		.type	prvIdleTask, %function
 581              	prvIdleTask:
 582              	.LFB694:
3236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop warnings. */
 583              		.loc 1 3236 0
 584              		.cfi_startproc
 585              		@ Volatile: function does not return.
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588              	.LVL54:
 589 0000 08B5     		push	{r3, lr}
 590              		.cfi_def_cfa_offset 8
 591              		.cfi_offset 3, -8
 592              		.cfi_offset 14, -4
 593              	.LVL55:
 594              	.L54:
3252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 595              		.loc 1 3252 0
 596 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 597              	.LVL56:
3275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 598              		.loc 1 3275 0
 599 0006 064B     		ldr	r3, .L57
 600 0008 1B6B     		ldr	r3, [r3, #48]
 601 000a 012B     		cmp	r3, #1
 602 000c F9D9     		bls	.L54
3277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 603              		.loc 1 3277 0
 604 000e 4FF08052 		mov	r2, #268435456
 605 0012 044B     		ldr	r3, .L57+4
 606 0014 1A60     		str	r2, [r3]
 607              		.syntax unified
 608              	@ 3277 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 609 0016 BFF34F8F 		dsb
 610              	@ 0 "" 2
 611              	@ 3277 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 612 001a BFF36F8F 		isb
 613              	@ 0 "" 2
 614              		.thumb
 615              		.syntax unified
 616 001e F0E7     		b	.L54
 617              	.L58:
 618              		.align	2
 619              	.L57:
 620 0020 00000000 		.word	.LANCHOR0
 621 0024 04ED00E0 		.word	-536810236
 622              		.cfi_endproc
 623              	.LFE694:
 624              		.size	prvIdleTask, .-prvIdleTask
 625              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 82


 626              		.align	2
 627              		.thumb
 628              		.thumb_func
 629              		.type	prvAddCurrentTaskToDelayedList, %function
 630              	prvAddCurrentTaskToDelayedList:
 631              	.LFB710:
3761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xReturn;
3770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* A critical section is not required as this is not called from
3772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		individual execution thread. */
3774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = pxCurrentTCB;
3775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
3787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
3801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
3808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 83


3812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
3815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
3819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		needed as interrupts can no longer use mutexes? */
3820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
3826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
3829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				not being used for anything else. */
3830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
3831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
3833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
3840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				to be moved into a new list. */
3841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
3842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority );
3846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
3848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
3855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Just inherit the priority. */
3859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
3863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Inheritance occurred. */
3865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
3866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 84


3869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
3870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The base priority of the mutex holder is lower than the
3872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority of the task attempting to take the mutex, but the
3873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					current priority of the mutex holder is not lower than the
3874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority of the task attempting to take the mutex.
3875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					Therefore the mutex holder must have already inherited a
3876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority, but inheritance would have occurred if that had
3877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					not been the case. */
3878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xReturn = pdTRUE;
3879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
3895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
3900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
3907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
3908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
3909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			be the running state task. */
3910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
3911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
3913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
3915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task? */
3916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
3917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
3919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
3920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
3922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
3923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
3924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					holding task then it must be the running state task.  Remove
3925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the holding task from the ready list. */
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 85


3926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
3931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
3936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					new	ready list. */
3937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
3938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
3939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
3941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					any other purpose if this task is running, and it must be
3942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					running to give back the mutex. */
3943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
3947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					This is only actually required in the corner case whereby
3948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
3949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					in an order different to that in which they were taken.
3950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					If a context switch did not occur when the first mutex was
3951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
3952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					switch should occur when the last mutex is returned whether
3953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					a task is waiting on it or not. */
3954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xReturn = pdTRUE;
3955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
3975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
3980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 86


3983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
3984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
3988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			one mutex. */
3989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Determine the priority to which the priority of the task that
3992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
3993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			holding task's base priority and the priority of the highest
3994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			priority task that is waiting to obtain the mutex. */
3995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
3996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
3998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
4002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Does the priority need to change? */
4005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
4006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
4008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				simplification in the priority inheritance implementation.  If
4009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
4010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
4011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
4012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If a task has timed out because it already holds the
4014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
4015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					its own priority. */
4016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
4017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Disinherit the priority, remembering the previous
4019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority to facilitate determining the subject task's
4020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					state. */
4021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
4023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
4024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Only reset the event list item value if the value is not
4026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					being used for anything else. */
4027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
4028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
4030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If the running task is not the task that holds the mutex
4037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					then the task that holds the mutex could be in either the
4038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					from its current state list if it is in the Ready state as
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 87


4040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the task's priority is going to change and there is one
4041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					Ready list per priority. */
4042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
4043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						else
4049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
4054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
4077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskEnterCritical( void )
4082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portDISABLE_INTERRUPTS();
4084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
4090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
4091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
4093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
4094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			critical section. */
4095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 88


4097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portASSERT_IF_IN_ISR();
4098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskExitCritical( void )
4112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
4118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portENABLE_INTERRUPTS();
4122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	size_t x;
4147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Start by copying the entire string. */
4149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
4150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		printed out. */
4153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 89


4154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pcBuffer[ x ] = ' ';
4156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Terminate. */
4159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pcBuffer[ x ] = 0x00;
4160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Return the new end of string. */
4162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return &( pcBuffer[ x ] );
4163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	char cStatus;
4175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/*
4177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * PLEASE NOTE:
4178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * scheduler.
4182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
4185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * displays task names, states and stack usage.
4186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
4188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
4191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * snprintf() implementation!).
4194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * through a call to vTaskList().
4198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 */
4199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		function is executing. */
4206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		equate to NULL. */
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 90


4211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Generate the (binary) data. */
4216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					default:			/* Should not get here, but it is included
4239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										to prevent static checking errors. */
4240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										cStatus = 0x00;
4241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				can be printed in tabular form more easily. */
4246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Write the rest of the string. */
4249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
4251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
4265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 91


4268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
4279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/*
4281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * PLEASE NOTE:
4282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * scheduler.
4286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * in both absolute and percentage terms.
4291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * a full snprintf() implementation!).
4299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 */
4304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		function is executing. */
4310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		equate to NULL. */
4315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Generate the (binary) data. */
4320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* For percentage calculations. */
4323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ulTotalTime /= 100UL;
4324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 92


4325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Avoid divide by zero errors. */
4326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ulTotalTime > 0 )
4327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Write the task name to the string, padding with
4337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					spaces so it can be printed in tabular form more
4338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					easily. */
4339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#else
4348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							printf() library can be used. */
4351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#endif
4354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* If the percentage is zero here then the task has
4358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						consumed less than 1% of the total run time. */
4359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#else
4364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							printf() library can be used. */
4367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#endif
4370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer );
4373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 93


4382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
4395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t uxReturn;
4396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	queues and semaphores. */
4401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return uxReturn;
4404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
4405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvTaskIncrementMutexHeldCount( void )
4410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return pxCurrentTCB;
4419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
4422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulReturn;
4429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 94


4439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					section (some will yield immediately, others wait until the
4445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					critical section exits) - but it is not something that
4446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					application code should ever do. */
4447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portYIELD_WITHIN_API();
4448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ulReturn != 0UL )
4467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
4475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return ulReturn;
4487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 95


4496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
4497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				clear the value to zero. */
4506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					section (some will yield immediately, others wait until the
4518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					critical section exits) - but it is not something that
4519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					application code should ever do. */
4520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portYIELD_WITHIN_API();
4521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pulNotificationValue != NULL )
4539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Output the current notification value, which may or may not
4541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				have changed. */
4542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			unblocked because of a timeout. */
4549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A notification was not received. */
4552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFALSE;
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 96


4553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A notification was already pending or a notification was
4557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				received while the task was waiting. */
4558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
4560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			switch( eAction )
4595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetBits	:
4597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eIncrement	:
4601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithOverwrite	:
4605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 97


4610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The value could not be written to the task. */
4616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xReturn = pdFAIL;
4617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eNoAction:
4621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task is being notified without its notify value being
4622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					updated. */
4623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY();
4627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			notification then unblock it now. */
4630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task should not have been on an event list. */
4636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					because it will automatically get reset to a new value when
4645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					tickless idling is used it might be more important to enter
4647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					earliest possible time. */
4650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
4653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The notified task has a priority above the currently
4657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					executing task so a yield is required. */
4658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 98


4667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
4683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
4704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			switch( eAction )
4720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetBits	:
4722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 99


4724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eIncrement	:
4726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithOverwrite	:
4730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The value could not be written to the task. */
4741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xReturn = pdFAIL;
4742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eNoAction :
4746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task is being notified without its notify value being
4747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					updated. */
4748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			notification then unblock it now. */
4755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task should not have been on an event list. */
4758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The notified task has a priority above the currently
4775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					executing task so a yield is required. */
4776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 100


4781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter to an ISR
4784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						safe FreeRTOS function. */
4785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
4786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
4805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
4807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
4827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 101


4838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			semaphore. */
4839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
4840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
4842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			notification then unblock it now. */
4845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task should not have been on an event list. */
4848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The notified task has a priority above the currently
4865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					executing task so a yield is required. */
4866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter in an ISR
4874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						safe FreeRTOS function. */
4875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
4876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
4894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 102


4895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
4896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
4897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
4899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		its notification state cleared. */
4900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
4901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
4905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
4908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFAIL;
4912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
4924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 632              		.loc 1 4924 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 636              	.LVL57:
 637 0000 70B5     		push	{r4, r5, r6, lr}
 638              		.cfi_def_cfa_offset 16
 639              		.cfi_offset 4, -16
 640              		.cfi_offset 5, -12
 641              		.cfi_offset 6, -8
 642              		.cfi_offset 14, -4
 643 0002 0446     		mov	r4, r0
 644 0004 0E46     		mov	r6, r1
4925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTimeToWake;
4926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 645              		.loc 1 4926 0
 646 0006 174B     		ldr	r3, .L64
 647 0008 D3F81451 		ldr	r5, [r3, #276]
 648              	.LVL58:
4927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
4929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
4931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
4932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		when the task leaves the Blocked state. */
4933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
4934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 103


4935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
4936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
4938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	as the same list item is used for both lists. */
4939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 649              		.loc 1 4939 0
 650 000c D3F80001 		ldr	r0, [r3, #256]
 651              	.LVL59:
 652 0010 0430     		adds	r0, r0, #4
 653 0012 FFF7FEFF 		bl	uxListRemove
 654              	.LVL60:
4940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
4942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		check, and the port reset macro can be called directly. */
4943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
4944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
4946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
4948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
4951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 655              		.loc 1 4952 0
 656 0016 B4F1FF3F 		cmp	r4, #-1
 657 001a 07D1     		bne	.L60
 658              		.loc 1 4952 0 is_stmt 0 discriminator 1
 659 001c 36B1     		cbz	r6, .L60
4953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
4955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
4956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			indefinitely. */
4957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 660              		.loc 1 4957 0 is_stmt 1
 661 001e 1148     		ldr	r0, .L64
 662 0020 D0F80011 		ldr	r1, [r0, #256]
 663 0024 0431     		adds	r1, r1, #4
 664 0026 FFF7FEFF 		bl	vListInsertEnd
 665              	.LVL61:
 666 002a 70BD     		pop	{r4, r5, r6, pc}
 667              	.LVL62:
 668              	.L60:
4958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
4962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
4963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			kernel will manage it correctly. */
4964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 669              		.loc 1 4964 0
 670 002c 2C44     		add	r4, r4, r5
 671              	.LVL63:
4965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
4967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 672              		.loc 1 4967 0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 104


 673 002e 0D4B     		ldr	r3, .L64
 674 0030 D3F80031 		ldr	r3, [r3, #256]
 675 0034 5C60     		str	r4, [r3, #4]
4968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 676              		.loc 1 4969 0
 677 0036 A542     		cmp	r5, r4
 678 0038 08D9     		bls	.L62
4970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
4972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				list. */
4973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 679              		.loc 1 4973 0
 680 003a 0A4B     		ldr	r3, .L64
 681 003c D3F8F800 		ldr	r0, [r3, #248]
 682 0040 D3F80011 		ldr	r1, [r3, #256]
 683 0044 0431     		adds	r1, r1, #4
 684 0046 FFF7FEFF 		bl	vListInsert
 685              	.LVL64:
 686 004a 70BD     		pop	{r4, r5, r6, pc}
 687              	.LVL65:
 688              	.L62:
4974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
4978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is used. */
4979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 689              		.loc 1 4979 0
 690 004c 054D     		ldr	r5, .L64
 691              	.LVL66:
 692 004e A86A     		ldr	r0, [r5, #40]
 693 0050 D5F80011 		ldr	r1, [r5, #256]
 694 0054 0431     		adds	r1, r1, #4
 695 0056 FFF7FEFF 		bl	vListInsert
 696              	.LVL67:
4980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
4982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
4983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				needs to be updated too. */
4984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
 697              		.loc 1 4984 0
 698 005a EB6A     		ldr	r3, [r5, #44]
 699 005c 9C42     		cmp	r4, r3
 700 005e 00D2     		bcs	.L59
4985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
 701              		.loc 1 4986 0
 702 0060 EC62     		str	r4, [r5, #44]
 703              	.L59:
 704 0062 70BD     		pop	{r4, r5, r6, pc}
 705              	.LVL68:
 706              	.L65:
 707              		.align	2
 708              	.L64:
 709 0064 00000000 		.word	.LANCHOR0
 710              		.cfi_endproc
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 105


 711              	.LFE710:
 712              		.size	prvAddCurrentTaskToDelayedList, .-prvAddCurrentTaskToDelayedList
 713              		.section	.text.xTaskCreate,"ax",%progbits
 714              		.align	2
 715              		.global	xTaskCreate
 716              		.thumb
 717              		.thumb_func
 718              		.type	xTaskCreate, %function
 719              	xTaskCreate:
 720              	.LFB662:
 738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 721              		.loc 1 738 0
 722              		.cfi_startproc
 723              		@ args = 8, pretend = 0, frame = 0
 724              		@ frame_needed = 0, uses_anonymous_args = 0
 725              	.LVL69:
 726 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 727              		.cfi_def_cfa_offset 28
 728              		.cfi_offset 4, -28
 729              		.cfi_offset 5, -24
 730              		.cfi_offset 6, -20
 731              		.cfi_offset 7, -16
 732              		.cfi_offset 8, -12
 733              		.cfi_offset 9, -8
 734              		.cfi_offset 14, -4
 735 0004 85B0     		sub	sp, sp, #20
 736              		.cfi_def_cfa_offset 48
 737 0006 0646     		mov	r6, r0
 738 0008 0F46     		mov	r7, r1
 739 000a 1546     		mov	r5, r2
 740 000c 9846     		mov	r8, r3
 741              	.LBB97:
 772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 742              		.loc 1 772 0
 743 000e 9000     		lsls	r0, r2, #2
 744              	.LVL70:
 745 0010 FFF7FEFF 		bl	pvPortMalloc
 746              	.LVL71:
 774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 747              		.loc 1 774 0
 748 0014 60B1     		cbz	r0, .L70
 749 0016 8146     		mov	r9, r0
 777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 750              		.loc 1 777 0
 751 0018 6020     		movs	r0, #96
 752              	.LVL72:
 753 001a FFF7FEFF 		bl	pvPortMalloc
 754              	.LVL73:
 779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 755              		.loc 1 779 0
 756 001e 0446     		mov	r4, r0
 757 0020 10B1     		cbz	r0, .L68
 782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 758              		.loc 1 782 0
 759 0022 C0F83090 		str	r9, [r0, #48]
 760 0026 04E0     		b	.L67
 761              	.L68:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 106


 788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 762              		.loc 1 788 0
 763 0028 4846     		mov	r0, r9
 764              	.LVL74:
 765 002a FFF7FEFF 		bl	vPortFree
 766              	.LVL75:
 767 002e 00E0     		b	.L67
 768              	.LVL76:
 769              	.L70:
 793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 770              		.loc 1 793 0
 771 0030 0024     		movs	r4, #0
 772              	.LVL77:
 773              	.L67:
 774              	.LBE97:
 798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 775              		.loc 1 798 0
 776 0032 8CB1     		cbz	r4, .L71
 808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 777              		.loc 1 808 0
 778 0034 0023     		movs	r3, #0
 779 0036 0393     		str	r3, [sp, #12]
 780 0038 0294     		str	r4, [sp, #8]
 781 003a 0D9B     		ldr	r3, [sp, #52]
 782 003c 0193     		str	r3, [sp, #4]
 783 003e 0C9B     		ldr	r3, [sp, #48]
 784 0040 0093     		str	r3, [sp]
 785 0042 4346     		mov	r3, r8
 786 0044 2A46     		mov	r2, r5
 787 0046 3946     		mov	r1, r7
 788 0048 3046     		mov	r0, r6
 789 004a FFF7FEFF 		bl	prvInitialiseNewTask
 790              	.LVL78:
 809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
 791              		.loc 1 809 0
 792 004e 2046     		mov	r0, r4
 793 0050 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 794              	.LVL79:
 810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 795              		.loc 1 810 0
 796 0054 0120     		movs	r0, #1
 797 0056 01E0     		b	.L69
 798              	.LVL80:
 799              	.L71:
 814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 800              		.loc 1 814 0
 801 0058 4FF0FF30 		mov	r0, #-1
 802              	.L69:
 803              	.LVL81:
 818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 804              		.loc 1 818 0
 805 005c 05B0     		add	sp, sp, #20
 806              		.cfi_def_cfa_offset 28
 807              		@ sp needed
 808 005e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 809              		.cfi_endproc
 810              	.LFE662:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 107


 811              		.size	xTaskCreate, .-xTaskCreate
 812 0062 00BF     		.section	.text.vTaskDelete,"ax",%progbits
 813              		.align	2
 814              		.global	vTaskDelete
 815              		.thumb
 816              		.thumb_func
 817              		.type	vTaskDelete, %function
 818              	vTaskDelete:
 819              	.LFB665:
1113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 820              		.loc 1 1113 0
 821              		.cfi_startproc
 822              		@ args = 0, pretend = 0, frame = 0
 823              		@ frame_needed = 0, uses_anonymous_args = 0
 824              	.LVL82:
 825 0000 70B5     		push	{r4, r5, r6, lr}
 826              		.cfi_def_cfa_offset 16
 827              		.cfi_offset 4, -16
 828              		.cfi_offset 5, -12
 829              		.cfi_offset 6, -8
 830              		.cfi_offset 14, -4
 831 0002 0446     		mov	r4, r0
1116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 832              		.loc 1 1116 0
 833 0004 FFF7FEFF 		bl	vPortEnterCritical
 834              	.LVL83:
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 835              		.loc 1 1120 0
 836 0008 14B9     		cbnz	r4, .L74
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 837              		.loc 1 1120 0 is_stmt 0 discriminator 1
 838 000a 274B     		ldr	r3, .L82
 839 000c D3F80041 		ldr	r4, [r3, #256]
 840              	.LVL84:
 841              	.L74:
1123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 842              		.loc 1 1123 0 is_stmt 1 discriminator 4
 843 0010 261D     		adds	r6, r4, #4
 844 0012 3046     		mov	r0, r6
 845 0014 FFF7FEFF 		bl	uxListRemove
 846              	.LVL85:
1133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 847              		.loc 1 1133 0 discriminator 4
 848 0018 A36A     		ldr	r3, [r4, #40]
 849 001a 1BB1     		cbz	r3, .L75
1135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 850              		.loc 1 1135 0
 851 001c 04F11800 		add	r0, r4, #24
 852 0020 FFF7FEFF 		bl	uxListRemove
 853              	.LVL86:
 854              	.L75:
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 855              		.loc 1 1146 0
 856 0024 204B     		ldr	r3, .L82
 857 0026 D3F80821 		ldr	r2, [r3, #264]
 858 002a 0132     		adds	r2, r2, #1
 859 002c C3F80821 		str	r2, [r3, #264]
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 108


1148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 860              		.loc 1 1148 0
 861 0030 D3F80031 		ldr	r3, [r3, #256]
 862 0034 9C42     		cmp	r4, r3
 863 0036 0BD1     		bne	.L76
1155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 864              		.loc 1 1155 0
 865 0038 1B4D     		ldr	r5, .L82
 866 003a 3146     		mov	r1, r6
 867 003c 05F1E400 		add	r0, r5, #228
 868 0040 FFF7FEFF 		bl	vListInsertEnd
 869              	.LVL87:
1160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 870              		.loc 1 1160 0
 871 0044 D5F81031 		ldr	r3, [r5, #272]
 872 0048 0133     		adds	r3, r3, #1
 873 004a C5F81031 		str	r3, [r5, #272]
 874 004e 0AE0     		b	.L77
 875              	.L76:
1171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 876              		.loc 1 1171 0
 877 0050 154A     		ldr	r2, .L82
 878 0052 D2F8FC30 		ldr	r3, [r2, #252]
 879 0056 013B     		subs	r3, r3, #1
 880 0058 C2F8FC30 		str	r3, [r2, #252]
1172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 881              		.loc 1 1172 0
 882 005c 2046     		mov	r0, r4
 883 005e FFF7FEFF 		bl	prvDeleteTCB
 884              	.LVL88:
1176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 885              		.loc 1 1176 0
 886 0062 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 887              	.LVL89:
 888              	.L77:
1181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 889              		.loc 1 1181 0
 890 0066 FFF7FEFF 		bl	vPortExitCritical
 891              	.LVL90:
1185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 892              		.loc 1 1185 0
 893 006a 0F4B     		ldr	r3, .L82
 894 006c D3F80431 		ldr	r3, [r3, #260]
 895 0070 CBB1     		cbz	r3, .L73
1187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 896              		.loc 1 1187 0
 897 0072 0D4B     		ldr	r3, .L82
 898 0074 D3F80031 		ldr	r3, [r3, #256]
 899 0078 9C42     		cmp	r4, r3
 900 007a 14D1     		bne	.L73
1189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
 901              		.loc 1 1189 0
 902 007c 0A4B     		ldr	r3, .L82
 903 007e D3F81831 		ldr	r3, [r3, #280]
 904 0082 43B1     		cbz	r3, .L79
 905              	.LBB98:
 906              	.LBB99:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 109


 907              		.loc 2 156 0
 908              		.syntax unified
 909              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 910 0084 4FF02003 			mov r3, #32												
 911 0088 83F31188 		msr basepri, r3											
 912 008c BFF36F8F 		isb														
 913 0090 BFF34F8F 		dsb														
 914              	
 915              	@ 0 "" 2
 916              	.LVL91:
 917              		.thumb
 918              		.syntax unified
 919              	.L80:
 920 0094 FEE7     		b	.L80
 921              	.L79:
 922              	.LBE99:
 923              	.LBE98:
1190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 924              		.loc 1 1190 0
 925 0096 4FF08052 		mov	r2, #268435456
 926 009a 044B     		ldr	r3, .L82+4
 927 009c 1A60     		str	r2, [r3]
 928              		.syntax unified
 929              	@ 1190 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 930 009e BFF34F8F 		dsb
 931              	@ 0 "" 2
 932              	@ 1190 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 933 00a2 BFF36F8F 		isb
 934              	@ 0 "" 2
 935              		.thumb
 936              		.syntax unified
 937              	.L73:
 938 00a6 70BD     		pop	{r4, r5, r6, pc}
 939              	.LVL92:
 940              	.L83:
 941              		.align	2
 942              	.L82:
 943 00a8 00000000 		.word	.LANCHOR0
 944 00ac 04ED00E0 		.word	-536810236
 945              		.cfi_endproc
 946              	.LFE665:
 947              		.size	vTaskDelete, .-vTaskDelete
 948              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 949              		.align	2
 950              		.global	uxTaskPriorityGet
 951              		.thumb
 952              		.thumb_func
 953              		.type	uxTaskPriorityGet, %function
 954              	uxTaskPriorityGet:
 955              	.LFB668:
1405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 956              		.loc 1 1405 0
 957              		.cfi_startproc
 958              		@ args = 0, pretend = 0, frame = 0
 959              		@ frame_needed = 0, uses_anonymous_args = 0
 960              	.LVL93:
 961 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 110


 962              		.cfi_def_cfa_offset 8
 963              		.cfi_offset 4, -8
 964              		.cfi_offset 14, -4
 965 0002 0446     		mov	r4, r0
1409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 966              		.loc 1 1409 0
 967 0004 FFF7FEFF 		bl	vPortEnterCritical
 968              	.LVL94:
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 969              		.loc 1 1413 0
 970 0008 14B9     		cbnz	r4, .L85
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 971              		.loc 1 1413 0 is_stmt 0 discriminator 1
 972 000a 044B     		ldr	r3, .L87
 973 000c D3F80041 		ldr	r4, [r3, #256]
 974              	.LVL95:
 975              	.L85:
1414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 976              		.loc 1 1414 0 is_stmt 1 discriminator 4
 977 0010 E46A     		ldr	r4, [r4, #44]
 978              	.LVL96:
1416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 979              		.loc 1 1416 0 discriminator 4
 980 0012 FFF7FEFF 		bl	vPortExitCritical
 981              	.LVL97:
1419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 982              		.loc 1 1419 0 discriminator 4
 983 0016 2046     		mov	r0, r4
 984 0018 10BD     		pop	{r4, pc}
 985              	.LVL98:
 986              	.L88:
 987 001a 00BF     		.align	2
 988              	.L87:
 989 001c 00000000 		.word	.LANCHOR0
 990              		.cfi_endproc
 991              	.LFE668:
 992              		.size	uxTaskPriorityGet, .-uxTaskPriorityGet
 993              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 994              		.align	2
 995              		.global	uxTaskPriorityGetFromISR
 996              		.thumb
 997              		.thumb_func
 998              		.type	uxTaskPriorityGetFromISR, %function
 999              	uxTaskPriorityGetFromISR:
 1000              	.LFB669:
1427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 1001              		.loc 1 1427 0
 1002              		.cfi_startproc
 1003              		@ args = 0, pretend = 0, frame = 0
 1004              		@ frame_needed = 0, uses_anonymous_args = 0
 1005              	.LVL99:
 1006 0000 10B5     		push	{r4, lr}
 1007              		.cfi_def_cfa_offset 8
 1008              		.cfi_offset 4, -8
 1009              		.cfi_offset 14, -4
 1010 0002 0446     		mov	r4, r0
1447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 111


 1011              		.loc 1 1447 0
 1012 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1013              	.LVL100:
 1014              	.LBB100:
 1015              	.LBB101:
 157:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 158:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 159:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 160:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	isb														\n" \
 161:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	dsb														\n" \
 162:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 163:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	);
 164:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
 165:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 166:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 167:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 168:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 169:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 170:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 171:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile
 1016              		.loc 2 172 0
 1017              		.syntax unified
 1018              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1019 0008 EFF31183 			mrs r3, basepri											
 1020 000c 4FF02002 		mov r2, #32												
 1021 0010 82F31188 		msr basepri, r2											
 1022 0014 BFF36F8F 		isb														
 1023 0018 BFF34F8F 		dsb														
 1024              	
 1025              	@ 0 "" 2
 1026              		.thumb
 1027              		.syntax unified
 1028              	.LBE101:
 1029              	.LBE100:
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1030              		.loc 1 1453 0
 1031 001c 14B9     		cbnz	r4, .L90
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1032              		.loc 1 1453 0 is_stmt 0 discriminator 1
 1033 001e 034A     		ldr	r2, .L92
 1034 0020 D2F80041 		ldr	r4, [r2, #256]
 1035              	.LVL101:
 1036              	.L90:
1454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1037              		.loc 1 1454 0 is_stmt 1 discriminator 4
 1038 0024 E06A     		ldr	r0, [r4, #44]
 1039              	.LVL102:
 1040              	.LBB102:
 1041              	.LBB103:
 173:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 174:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 175:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 176:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 177:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	isb														\n" \
 178:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	dsb														\n" \
 179:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 112


 180:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	);
 181:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 182:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 183:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	warnings. */
 184:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 185:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
 186:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 187:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 188:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 189:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 190:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile
 1042              		.loc 2 190 0 discriminator 4
 1043              		.syntax unified
 1044              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1045 0026 83F31188 			msr basepri, r3	
 1046              	@ 0 "" 2
 1047              	.LVL103:
 1048              		.thumb
 1049              		.syntax unified
 1050              	.LBE103:
 1051              	.LBE102:
1459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1052              		.loc 1 1459 0 discriminator 4
 1053 002a 10BD     		pop	{r4, pc}
 1054              	.LVL104:
 1055              	.L93:
 1056              		.align	2
 1057              	.L92:
 1058 002c 00000000 		.word	.LANCHOR0
 1059              		.cfi_endproc
 1060              	.LFE669:
 1061              		.size	uxTaskPriorityGetFromISR, .-uxTaskPriorityGetFromISR
 1062              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1063              		.align	2
 1064              		.global	vTaskPrioritySet
 1065              		.thumb
 1066              		.thumb_func
 1067              		.type	vTaskPrioritySet, %function
 1068              	vTaskPrioritySet:
 1069              	.LFB670:
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 1070              		.loc 1 1467 0
 1071              		.cfi_startproc
 1072              		@ args = 0, pretend = 0, frame = 0
 1073              		@ frame_needed = 0, uses_anonymous_args = 0
 1074              	.LVL105:
1472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1075              		.loc 1 1472 0
 1076 0000 0629     		cmp	r1, #6
 1077 0002 08D9     		bls	.L95
 1078              	.LBB104:
 1079              	.LBB105:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1080              		.loc 2 156 0
 1081              		.syntax unified
 1082              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1083 0004 4FF02003 			mov r3, #32												
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 113


 1084 0008 83F31188 		msr basepri, r3											
 1085 000c BFF36F8F 		isb														
 1086 0010 BFF34F8F 		dsb														
 1087              	
 1088              	@ 0 "" 2
 1089              	.LVL106:
 1090              		.thumb
 1091              		.syntax unified
 1092              	.L96:
 1093 0014 FEE7     		b	.L96
 1094              	.L95:
 1095              	.LBE105:
 1096              	.LBE104:
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 1097              		.loc 1 1467 0
 1098 0016 70B5     		push	{r4, r5, r6, lr}
 1099              		.cfi_def_cfa_offset 16
 1100              		.cfi_offset 4, -16
 1101              		.cfi_offset 5, -12
 1102              		.cfi_offset 6, -8
 1103              		.cfi_offset 14, -4
 1104 0018 0446     		mov	r4, r0
 1105 001a 0D46     		mov	r5, r1
1475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1106              		.loc 1 1475 0
 1107 001c 0629     		cmp	r1, #6
 1108 001e 00D9     		bls	.L97
1477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1109              		.loc 1 1477 0
 1110 0020 0625     		movs	r5, #6
 1111              	.L97:
 1112              	.LVL107:
1484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1113              		.loc 1 1484 0
 1114 0022 FFF7FEFF 		bl	vPortEnterCritical
 1115              	.LVL108:
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1116              		.loc 1 1488 0
 1117 0026 14B9     		cbnz	r4, .L98
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1118              		.loc 1 1488 0 is_stmt 0 discriminator 1
 1119 0028 294B     		ldr	r3, .L112
 1120 002a D3F80041 		ldr	r4, [r3, #256]
 1121              	.LVL109:
 1122              	.L98:
1498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 1123              		.loc 1 1498 0 is_stmt 1 discriminator 4
 1124 002e E36A     		ldr	r3, [r4, #44]
 1125              	.LVL110:
1502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 1126              		.loc 1 1502 0 discriminator 4
 1127 0030 9D42     		cmp	r5, r3
 1128 0032 4AD0     		beq	.L99
1506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1129              		.loc 1 1506 0
 1130 0034 0CD9     		bls	.L100
1508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 114


 1131              		.loc 1 1508 0
 1132 0036 264A     		ldr	r2, .L112
 1133 0038 D2F80021 		ldr	r2, [r2, #256]
 1134 003c 9442     		cmp	r4, r2
 1135 003e 0ED0     		beq	.L107
1513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
 1136              		.loc 1 1513 0
 1137 0040 234A     		ldr	r2, .L112
 1138 0042 D2F80021 		ldr	r2, [r2, #256]
 1139 0046 D26A     		ldr	r2, [r2, #44]
 1140 0048 9542     		cmp	r5, r2
 1141 004a 0AD2     		bcs	.L108
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1142              		.loc 1 1470 0
 1143 004c 0026     		movs	r6, #0
 1144 004e 0BE0     		b	.L101
 1145              	.L100:
1529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1146              		.loc 1 1529 0
 1147 0050 1F4A     		ldr	r2, .L112
 1148 0052 D2F80021 		ldr	r2, [r2, #256]
 1149 0056 9442     		cmp	r4, r2
 1150 0058 05D0     		beq	.L109
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1151              		.loc 1 1470 0
 1152 005a 0026     		movs	r6, #0
 1153 005c 04E0     		b	.L101
 1154              	.L107:
 1155 005e 0026     		movs	r6, #0
 1156 0060 02E0     		b	.L101
 1157              	.L108:
1515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
 1158              		.loc 1 1515 0
 1159 0062 0126     		movs	r6, #1
 1160 0064 00E0     		b	.L101
 1161              	.L109:
1534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1162              		.loc 1 1534 0
 1163 0066 0126     		movs	r6, #1
 1164              	.L101:
 1165              	.LVL111:
1566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1166              		.loc 1 1566 0
 1167 0068 E562     		str	r5, [r4, #44]
1572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1168              		.loc 1 1572 0
 1169 006a A269     		ldr	r2, [r4, #24]
 1170 006c 002A     		cmp	r2, #0
 1171 006e 02DB     		blt	.L102
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1172              		.loc 1 1574 0
 1173 0070 C5F10705 		rsb	r5, r5, #7
 1174              	.LVL112:
 1175 0074 A561     		str	r5, [r4, #24]
 1176              	.L102:
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1177              		.loc 1 1585 0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 115


 1178 0076 6169     		ldr	r1, [r4, #20]
 1179 0078 03EB8303 		add	r3, r3, r3, lsl #2
 1180              	.LVL113:
 1181 007c 9A00     		lsls	r2, r3, #2
 1182 007e 154B     		ldr	r3, .L112+4
 1183 0080 1A44     		add	r2, r2, r3
 1184 0082 9142     		cmp	r1, r2
 1185 0084 01D1     		bne	.L110
 1186 0086 0123     		movs	r3, #1
 1187 0088 00E0     		b	.L103
 1188              	.L110:
 1189 008a 0023     		movs	r3, #0
 1190              	.L103:
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1191              		.loc 1 1585 0 is_stmt 0 discriminator 4
 1192 008c A3B1     		cbz	r3, .L104
1590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1193              		.loc 1 1590 0 is_stmt 1
 1194 008e 251D     		adds	r5, r4, #4
 1195 0090 2846     		mov	r0, r5
 1196 0092 FFF7FEFF 		bl	uxListRemove
 1197              	.LVL114:
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1198              		.loc 1 1601 0
 1199 0096 E36A     		ldr	r3, [r4, #44]
 1200 0098 0D4A     		ldr	r2, .L112
 1201 009a D2F80C21 		ldr	r2, [r2, #268]
 1202 009e 9342     		cmp	r3, r2
 1203 00a0 02D9     		bls	.L105
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1204              		.loc 1 1601 0 is_stmt 0 discriminator 1
 1205 00a2 0B4A     		ldr	r2, .L112
 1206 00a4 C2F80C31 		str	r3, [r2, #268]
 1207              	.L105:
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1208              		.loc 1 1601 0 discriminator 3
 1209 00a8 03EB8303 		add	r3, r3, r3, lsl #2
 1210 00ac 9A00     		lsls	r2, r3, #2
 1211 00ae 2946     		mov	r1, r5
 1212 00b0 0848     		ldr	r0, .L112+4
 1213 00b2 1044     		add	r0, r0, r2
 1214 00b4 FFF7FEFF 		bl	vListInsertEnd
 1215              	.LVL115:
 1216              	.L104:
1608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1217              		.loc 1 1608 0 is_stmt 1
 1218 00b8 3EB1     		cbz	r6, .L99
1610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1219              		.loc 1 1610 0
 1220 00ba 4FF08052 		mov	r2, #268435456
 1221 00be 064B     		ldr	r3, .L112+8
 1222 00c0 1A60     		str	r2, [r3]
 1223              		.syntax unified
 1224              	@ 1610 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1225 00c2 BFF34F8F 		dsb
 1226              	@ 0 "" 2
 1227              	@ 1610 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 116


 1228 00c6 BFF36F8F 		isb
 1229              	@ 0 "" 2
 1230              	.LVL116:
 1231              		.thumb
 1232              		.syntax unified
 1233              	.L99:
1622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1234              		.loc 1 1622 0
 1235 00ca FFF7FEFF 		bl	vPortExitCritical
 1236              	.LVL117:
 1237 00ce 70BD     		pop	{r4, r5, r6, pc}
 1238              	.LVL118:
 1239              	.L113:
 1240              		.align	2
 1241              	.L112:
 1242 00d0 00000000 		.word	.LANCHOR0
 1243 00d4 30000000 		.word	.LANCHOR0+48
 1244 00d8 04ED00E0 		.word	-536810236
 1245              		.cfi_endproc
 1246              	.LFE670:
 1247              		.size	vTaskPrioritySet, .-vTaskPrioritySet
 1248              		.section	.text.vTaskResume,"ax",%progbits
 1249              		.align	2
 1250              		.global	vTaskResume
 1251              		.thumb
 1252              		.thumb_func
 1253              		.type	vTaskResume, %function
 1254              	vTaskResume:
 1255              	.LFB673:
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1256              		.loc 1 1778 0
 1257              		.cfi_startproc
 1258              		@ args = 0, pretend = 0, frame = 0
 1259              		@ frame_needed = 0, uses_anonymous_args = 0
 1260              	.LVL119:
1782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1261              		.loc 1 1782 0
 1262 0000 40B9     		cbnz	r0, .L115
 1263              	.LBB106:
 1264              	.LBB107:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1265              		.loc 2 156 0
 1266              		.syntax unified
 1267              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1268 0002 4FF02003 			mov r3, #32												
 1269 0006 83F31188 		msr basepri, r3											
 1270 000a BFF36F8F 		isb														
 1271 000e BFF34F8F 		dsb														
 1272              	
 1273              	@ 0 "" 2
 1274              	.LVL120:
 1275              		.thumb
 1276              		.syntax unified
 1277              	.L116:
 1278 0012 FEE7     		b	.L116
 1279              	.L115:
 1280              	.LBE107:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 117


 1281              	.LBE106:
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1282              		.loc 1 1778 0
 1283 0014 70B5     		push	{r4, r5, r6, lr}
 1284              		.cfi_def_cfa_offset 16
 1285              		.cfi_offset 4, -16
 1286              		.cfi_offset 5, -12
 1287              		.cfi_offset 6, -8
 1288              		.cfi_offset 14, -4
 1289 0016 0446     		mov	r4, r0
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1290              		.loc 1 1786 0
 1291 0018 88B3     		cbz	r0, .L114
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1292              		.loc 1 1786 0 is_stmt 0 discriminator 1
 1293 001a 194B     		ldr	r3, .L121
 1294 001c D3F80031 		ldr	r3, [r3, #256]
 1295 0020 9842     		cmp	r0, r3
 1296 0022 2CD0     		beq	.L114
1788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 1297              		.loc 1 1788 0 is_stmt 1
 1298 0024 FFF7FEFF 		bl	vPortEnterCritical
 1299              	.LVL121:
1790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1300              		.loc 1 1790 0
 1301 0028 2046     		mov	r0, r4
 1302 002a FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1303              	.LVL122:
 1304 002e 20B3     		cbz	r0, .L118
1796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1305              		.loc 1 1796 0
 1306 0030 261D     		adds	r6, r4, #4
 1307 0032 3046     		mov	r0, r6
 1308 0034 FFF7FEFF 		bl	uxListRemove
 1309              	.LVL123:
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1310              		.loc 1 1797 0
 1311 0038 E36A     		ldr	r3, [r4, #44]
 1312 003a 114A     		ldr	r2, .L121
 1313 003c D2F80C21 		ldr	r2, [r2, #268]
 1314 0040 9342     		cmp	r3, r2
 1315 0042 02D9     		bls	.L119
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1316              		.loc 1 1797 0 is_stmt 0 discriminator 1
 1317 0044 0E4A     		ldr	r2, .L121
 1318 0046 C2F80C31 		str	r3, [r2, #268]
 1319              	.L119:
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1320              		.loc 1 1797 0 discriminator 3
 1321 004a 0D4D     		ldr	r5, .L121
 1322 004c 05F13000 		add	r0, r5, #48
 1323 0050 03EB8303 		add	r3, r3, r3, lsl #2
 1324 0054 9A00     		lsls	r2, r3, #2
 1325 0056 3146     		mov	r1, r6
 1326 0058 1044     		add	r0, r0, r2
 1327 005a FFF7FEFF 		bl	vListInsertEnd
 1328              	.LVL124:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 118


1800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1329              		.loc 1 1800 0 is_stmt 1 discriminator 3
 1330 005e E26A     		ldr	r2, [r4, #44]
 1331 0060 D5F80031 		ldr	r3, [r5, #256]
 1332 0064 DB6A     		ldr	r3, [r3, #44]
 1333 0066 9A42     		cmp	r2, r3
 1334 0068 07D3     		bcc	.L118
1805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1335              		.loc 1 1805 0
 1336 006a 4FF08052 		mov	r2, #268435456
 1337 006e 054B     		ldr	r3, .L121+4
 1338 0070 1A60     		str	r2, [r3]
 1339              		.syntax unified
 1340              	@ 1805 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1341 0072 BFF34F8F 		dsb
 1342              	@ 0 "" 2
 1343              	@ 1805 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1344 0076 BFF36F8F 		isb
 1345              	@ 0 "" 2
 1346              		.thumb
 1347              		.syntax unified
 1348              	.L118:
1817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1349              		.loc 1 1817 0
 1350 007a FFF7FEFF 		bl	vPortExitCritical
 1351              	.LVL125:
 1352              	.L114:
 1353 007e 70BD     		pop	{r4, r5, r6, pc}
 1354              	.LVL126:
 1355              	.L122:
 1356              		.align	2
 1357              	.L121:
 1358 0080 00000000 		.word	.LANCHOR0
 1359 0084 04ED00E0 		.word	-536810236
 1360              		.cfi_endproc
 1361              	.LFE673:
 1362              		.size	vTaskResume, .-vTaskResume
 1363              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1364              		.align	2
 1365              		.global	xTaskResumeFromISR
 1366              		.thumb
 1367              		.thumb_func
 1368              		.type	xTaskResumeFromISR, %function
 1369              	xTaskResumeFromISR:
 1370              	.LFB674:
1832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1371              		.loc 1 1832 0
 1372              		.cfi_startproc
 1373              		@ args = 0, pretend = 0, frame = 0
 1374              		@ frame_needed = 0, uses_anonymous_args = 0
 1375              	.LVL127:
 1376 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1377              		.cfi_def_cfa_offset 24
 1378              		.cfi_offset 3, -24
 1379              		.cfi_offset 4, -20
 1380              		.cfi_offset 5, -16
 1381              		.cfi_offset 6, -12
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 119


 1382              		.cfi_offset 7, -8
 1383              		.cfi_offset 14, -4
 1384              	.LVL128:
1837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1385              		.loc 1 1837 0
 1386 0002 40B9     		cbnz	r0, .L124
 1387              	.LBB108:
 1388              	.LBB109:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1389              		.loc 2 156 0
 1390              		.syntax unified
 1391              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1392 0004 4FF02003 			mov r3, #32												
 1393 0008 83F31188 		msr basepri, r3											
 1394 000c BFF36F8F 		isb														
 1395 0010 BFF34F8F 		dsb														
 1396              	
 1397              	@ 0 "" 2
 1398              	.LVL129:
 1399              		.thumb
 1400              		.syntax unified
 1401              	.L125:
 1402 0014 FEE7     		b	.L125
 1403              	.L124:
 1404 0016 0446     		mov	r4, r0
 1405              	.LBE109:
 1406              	.LBE108:
1855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1407              		.loc 1 1855 0
 1408 0018 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1409              	.LVL130:
 1410              	.LBB110:
 1411              	.LBB111:
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1412              		.loc 2 172 0
 1413              		.syntax unified
 1414              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1415 001c EFF31187 			mrs r7, basepri											
 1416 0020 4FF02003 		mov r3, #32												
 1417 0024 83F31188 		msr basepri, r3											
 1418 0028 BFF36F8F 		isb														
 1419 002c BFF34F8F 		dsb														
 1420              	
 1421              	@ 0 "" 2
 1422              		.thumb
 1423              		.syntax unified
 1424              	.LBE111:
 1425              	.LBE110:
1859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 1426              		.loc 1 1859 0
 1427 0030 2046     		mov	r0, r4
 1428 0032 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1429              	.LVL131:
 1430 0036 50B3     		cbz	r0, .L130
1864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1431              		.loc 1 1864 0
 1432 0038 174B     		ldr	r3, .L133
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 120


 1433 003a D3F81831 		ldr	r3, [r3, #280]
 1434 003e FBB9     		cbnz	r3, .L127
1868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1435              		.loc 1 1868 0
 1436 0040 E26A     		ldr	r2, [r4, #44]
 1437 0042 154B     		ldr	r3, .L133
 1438 0044 D3F80031 		ldr	r3, [r3, #256]
 1439 0048 DB6A     		ldr	r3, [r3, #44]
 1440 004a 9A42     		cmp	r2, r3
 1441 004c 01D2     		bcs	.L131
1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1442              		.loc 1 1833 0
 1443 004e 0025     		movs	r5, #0
 1444 0050 00E0     		b	.L128
 1445              	.L131:
1870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1446              		.loc 1 1870 0
 1447 0052 0125     		movs	r5, #1
 1448              	.L128:
 1449              	.LVL132:
1877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1450              		.loc 1 1877 0
 1451 0054 261D     		adds	r6, r4, #4
 1452 0056 3046     		mov	r0, r6
 1453 0058 FFF7FEFF 		bl	uxListRemove
 1454              	.LVL133:
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1455              		.loc 1 1878 0
 1456 005c E36A     		ldr	r3, [r4, #44]
 1457 005e 0E4A     		ldr	r2, .L133
 1458 0060 D2F80C21 		ldr	r2, [r2, #268]
 1459 0064 9342     		cmp	r3, r2
 1460 0066 02D9     		bls	.L129
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1461              		.loc 1 1878 0 is_stmt 0 discriminator 1
 1462 0068 0B4A     		ldr	r2, .L133
 1463 006a C2F80C31 		str	r3, [r2, #268]
 1464              	.L129:
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1465              		.loc 1 1878 0 discriminator 3
 1466 006e 03EB8303 		add	r3, r3, r3, lsl #2
 1467 0072 9A00     		lsls	r2, r3, #2
 1468 0074 3146     		mov	r1, r6
 1469 0076 0948     		ldr	r0, .L133+4
 1470 0078 1044     		add	r0, r0, r2
 1471 007a FFF7FEFF 		bl	vListInsertEnd
 1472              	.LVL134:
 1473 007e 07E0     		b	.L126
 1474              	.LVL135:
 1475              	.L127:
1885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1476              		.loc 1 1885 0 is_stmt 1
 1477 0080 04F11801 		add	r1, r4, #24
 1478 0084 0648     		ldr	r0, .L133+8
 1479 0086 FFF7FEFF 		bl	vListInsertEnd
 1480              	.LVL136:
1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 121


 1481              		.loc 1 1833 0
 1482 008a 0025     		movs	r5, #0
 1483 008c 00E0     		b	.L126
 1484              	.L130:
 1485 008e 0025     		movs	r5, #0
 1486              	.LVL137:
 1487              	.L126:
 1488              	.LBB112:
 1489              	.LBB113:
 1490              		.loc 2 190 0
 1491              		.syntax unified
 1492              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1493 0090 87F31188 			msr basepri, r7	
 1494              	@ 0 "" 2
 1495              	.LVL138:
 1496              		.thumb
 1497              		.syntax unified
 1498              	.LBE113:
 1499              	.LBE112:
1896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1500              		.loc 1 1896 0
 1501 0094 2846     		mov	r0, r5
 1502 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1503              	.LVL139:
 1504              	.L134:
 1505              		.align	2
 1506              	.L133:
 1507 0098 00000000 		.word	.LANCHOR0
 1508 009c 30000000 		.word	.LANCHOR0+48
 1509 00a0 14000000 		.word	.LANCHOR0+20
 1510              		.cfi_endproc
 1511              	.LFE674:
 1512              		.size	xTaskResumeFromISR, .-xTaskResumeFromISR
 1513              		.section	.text.vTaskStartScheduler,"ax",%progbits
 1514              		.align	2
 1515              		.global	vTaskStartScheduler
 1516              		.thumb
 1517              		.thumb_func
 1518              		.type	vTaskStartScheduler, %function
 1519              	vTaskStartScheduler:
 1520              	.LFB675:
1902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
 1521              		.loc 1 1902 0
 1522              		.cfi_startproc
 1523              		@ args = 0, pretend = 0, frame = 0
 1524              		@ frame_needed = 0, uses_anonymous_args = 0
 1525 0000 00B5     		push	{lr}
 1526              		.cfi_def_cfa_offset 4
 1527              		.cfi_offset 14, -4
 1528 0002 83B0     		sub	sp, sp, #12
 1529              		.cfi_def_cfa_offset 16
1935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								configIDLE_TASK_NAME,
 1530              		.loc 1 1935 0
 1531 0004 194B     		ldr	r3, .L141
 1532 0006 0193     		str	r3, [sp, #4]
 1533 0008 0023     		movs	r3, #0
 1534 000a 0093     		str	r3, [sp]
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 122


 1535 000c 8022     		movs	r2, #128
 1536 000e 1849     		ldr	r1, .L141+4
 1537 0010 1848     		ldr	r0, .L141+8
 1538 0012 FFF7FEFF 		bl	xTaskCreate
 1539              	.LVL140:
1946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1540              		.loc 1 1946 0
 1541 0016 0128     		cmp	r0, #1
 1542 0018 01D1     		bne	.L136
1948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1543              		.loc 1 1948 0
 1544 001a FFF7FEFF 		bl	xTimerCreateTimerTask
 1545              	.LVL141:
 1546              	.L136:
1957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 1547              		.loc 1 1957 0
 1548 001e 0128     		cmp	r0, #1
 1549 0020 14D1     		bne	.L137
 1550              	.LBB114:
 1551              	.LBB115:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1552              		.loc 2 156 0
 1553              		.syntax unified
 1554              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1555 0022 4FF02003 			mov r3, #32												
 1556 0026 83F31188 		msr basepri, r3											
 1557 002a BFF36F8F 		isb														
 1558 002e BFF34F8F 		dsb														
 1559              	
 1560              	@ 0 "" 2
 1561              		.thumb
 1562              		.syntax unified
 1563              	.LBE115:
 1564              	.LBE114:
1983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 1565              		.loc 1 1983 0
 1566 0032 114B     		ldr	r3, .L141+12
 1567 0034 4FF0FF32 		mov	r2, #-1
 1568 0038 DA62     		str	r2, [r3, #44]
1984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 1569              		.loc 1 1984 0
 1570 003a 0122     		movs	r2, #1
 1571 003c C3F80421 		str	r2, [r3, #260]
1985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1572              		.loc 1 1985 0
 1573 0040 0022     		movs	r2, #0
 1574 0042 C3F81421 		str	r2, [r3, #276]
1997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1575              		.loc 1 1997 0
 1576 0046 FFF7FEFF 		bl	xPortStartScheduler
 1577              	.LVL142:
 1578 004a 0BE0     		b	.L135
 1579              	.LVL143:
 1580              	.L137:
2012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1581              		.loc 1 2012 0
 1582 004c B0F1FF3F 		cmp	r0, #-1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 123


 1583 0050 08D1     		bne	.L135
 1584              	.LBB116:
 1585              	.LBB117:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1586              		.loc 2 156 0
 1587              		.syntax unified
 1588              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1589 0052 4FF02003 			mov r3, #32												
 1590 0056 83F31188 		msr basepri, r3											
 1591 005a BFF36F8F 		isb														
 1592 005e BFF34F8F 		dsb														
 1593              	
 1594              	@ 0 "" 2
 1595              	.LVL144:
 1596              		.thumb
 1597              		.syntax unified
 1598              	.L139:
 1599 0062 FEE7     		b	.L139
 1600              	.LVL145:
 1601              	.L135:
 1602              	.LBE117:
 1603              	.LBE116:
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1604              		.loc 1 2018 0
 1605 0064 03B0     		add	sp, sp, #12
 1606              		.cfi_def_cfa_offset 4
 1607              		@ sp needed
 1608 0066 5DF804FB 		ldr	pc, [sp], #4
 1609              	.L142:
 1610 006a 00BF     		.align	2
 1611              	.L141:
 1612 006c 1C010000 		.word	.LANCHOR0+284
 1613 0070 00000000 		.word	.LC0
 1614 0074 00000000 		.word	prvIdleTask
 1615 0078 00000000 		.word	.LANCHOR0
 1616              		.cfi_endproc
 1617              	.LFE675:
 1618              		.size	vTaskStartScheduler, .-vTaskStartScheduler
 1619              		.section	.text.vTaskEndScheduler,"ax",%progbits
 1620              		.align	2
 1621              		.global	vTaskEndScheduler
 1622              		.thumb
 1623              		.thumb_func
 1624              		.type	vTaskEndScheduler, %function
 1625              	vTaskEndScheduler:
 1626              	.LFB676:
2022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 1627              		.loc 1 2022 0
 1628              		.cfi_startproc
 1629              		@ args = 0, pretend = 0, frame = 0
 1630              		@ frame_needed = 0, uses_anonymous_args = 0
 1631 0000 08B5     		push	{r3, lr}
 1632              		.cfi_def_cfa_offset 8
 1633              		.cfi_offset 3, -8
 1634              		.cfi_offset 14, -4
 1635              	.LBB118:
 1636              	.LBB119:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 124


 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1637              		.loc 2 156 0
 1638              		.syntax unified
 1639              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1640 0002 4FF02003 			mov r3, #32												
 1641 0006 83F31188 		msr basepri, r3											
 1642 000a BFF36F8F 		isb														
 1643 000e BFF34F8F 		dsb														
 1644              	
 1645              	@ 0 "" 2
 1646              		.thumb
 1647              		.syntax unified
 1648              	.LBE119:
 1649              	.LBE118:
2027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vPortEndScheduler();
 1650              		.loc 1 2027 0
 1651 0012 0022     		movs	r2, #0
 1652 0014 024B     		ldr	r3, .L145
 1653 0016 C3F80421 		str	r2, [r3, #260]
2028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 1654              		.loc 1 2028 0
 1655 001a FFF7FEFF 		bl	vPortEndScheduler
 1656              	.LVL146:
 1657 001e 08BD     		pop	{r3, pc}
 1658              	.L146:
 1659              		.align	2
 1660              	.L145:
 1661 0020 00000000 		.word	.LANCHOR0
 1662              		.cfi_endproc
 1663              	.LFE676:
 1664              		.size	vTaskEndScheduler, .-vTaskEndScheduler
 1665              		.section	.text.vTaskSuspendAll,"ax",%progbits
 1666              		.align	2
 1667              		.global	vTaskSuspendAll
 1668              		.thumb
 1669              		.thumb_func
 1670              		.type	vTaskSuspendAll, %function
 1671              	vTaskSuspendAll:
 1672              	.LFB677:
2033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 1673              		.loc 1 2033 0
 1674              		.cfi_startproc
 1675              		@ args = 0, pretend = 0, frame = 0
 1676              		@ frame_needed = 0, uses_anonymous_args = 0
 1677              		@ link register save eliminated.
2038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 1678              		.loc 1 2038 0
 1679 0000 034A     		ldr	r2, .L148
 1680 0002 D2F81831 		ldr	r3, [r2, #280]
 1681 0006 0133     		adds	r3, r3, #1
 1682 0008 C2F81831 		str	r3, [r2, #280]
 1683 000c 7047     		bx	lr
 1684              	.L149:
 1685 000e 00BF     		.align	2
 1686              	.L148:
 1687 0010 00000000 		.word	.LANCHOR0
 1688              		.cfi_endproc
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 125


 1689              	.LFE677:
 1690              		.size	vTaskSuspendAll, .-vTaskSuspendAll
 1691              		.section	.text.xTaskGetTickCount,"ax",%progbits
 1692              		.align	2
 1693              		.global	xTaskGetTickCount
 1694              		.thumb
 1695              		.thumb_func
 1696              		.type	xTaskGetTickCount, %function
 1697              	xTaskGetTickCount:
 1698              	.LFB679:
2216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTicks;
 1699              		.loc 1 2216 0
 1700              		.cfi_startproc
 1701              		@ args = 0, pretend = 0, frame = 0
 1702              		@ frame_needed = 0, uses_anonymous_args = 0
 1703              		@ link register save eliminated.
2222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1704              		.loc 1 2222 0
 1705 0000 014B     		ldr	r3, .L151
 1706 0002 D3F81401 		ldr	r0, [r3, #276]
 1707              	.LVL147:
2227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1708              		.loc 1 2227 0
 1709 0006 7047     		bx	lr
 1710              	.L152:
 1711              		.align	2
 1712              	.L151:
 1713 0008 00000000 		.word	.LANCHOR0
 1714              		.cfi_endproc
 1715              	.LFE679:
 1716              		.size	xTaskGetTickCount, .-xTaskGetTickCount
 1717              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 1718              		.align	2
 1719              		.global	xTaskGetTickCountFromISR
 1720              		.thumb
 1721              		.thumb_func
 1722              		.type	xTaskGetTickCountFromISR, %function
 1723              	xTaskGetTickCountFromISR:
 1724              	.LFB680:
2231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xReturn;
 1725              		.loc 1 2231 0
 1726              		.cfi_startproc
 1727              		@ args = 0, pretend = 0, frame = 0
 1728              		@ frame_needed = 0, uses_anonymous_args = 0
 1729 0000 08B5     		push	{r3, lr}
 1730              		.cfi_def_cfa_offset 8
 1731              		.cfi_offset 3, -8
 1732              		.cfi_offset 14, -4
2249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1733              		.loc 1 2249 0
 1734 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1735              	.LVL148:
2253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1736              		.loc 1 2253 0
 1737 0006 024B     		ldr	r3, .L155
 1738 0008 D3F81401 		ldr	r0, [r3, #276]
 1739              	.LVL149:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 126


2258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1740              		.loc 1 2258 0
 1741 000c 08BD     		pop	{r3, pc}
 1742              	.L156:
 1743 000e 00BF     		.align	2
 1744              	.L155:
 1745 0010 00000000 		.word	.LANCHOR0
 1746              		.cfi_endproc
 1747              	.LFE680:
 1748              		.size	xTaskGetTickCountFromISR, .-xTaskGetTickCountFromISR
 1749              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 1750              		.align	2
 1751              		.global	uxTaskGetNumberOfTasks
 1752              		.thumb
 1753              		.thumb_func
 1754              		.type	uxTaskGetNumberOfTasks, %function
 1755              	uxTaskGetNumberOfTasks:
 1756              	.LFB681:
2262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 1757              		.loc 1 2262 0
 1758              		.cfi_startproc
 1759              		@ args = 0, pretend = 0, frame = 0
 1760              		@ frame_needed = 0, uses_anonymous_args = 0
 1761              		@ link register save eliminated.
2265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 1762              		.loc 1 2265 0
 1763 0000 014B     		ldr	r3, .L158
 1764 0002 D3F8FC00 		ldr	r0, [r3, #252]
2266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1765              		.loc 1 2266 0
 1766 0006 7047     		bx	lr
 1767              	.L159:
 1768              		.align	2
 1769              	.L158:
 1770 0008 00000000 		.word	.LANCHOR0
 1771              		.cfi_endproc
 1772              	.LFE681:
 1773              		.size	uxTaskGetNumberOfTasks, .-uxTaskGetNumberOfTasks
 1774              		.section	.text.pcTaskGetName,"ax",%progbits
 1775              		.align	2
 1776              		.global	pcTaskGetName
 1777              		.thumb
 1778              		.thumb_func
 1779              		.type	pcTaskGetName, %function
 1780              	pcTaskGetName:
 1781              	.LFB682:
2270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB;
 1782              		.loc 1 2270 0
 1783              		.cfi_startproc
 1784              		@ args = 0, pretend = 0, frame = 0
 1785              		@ frame_needed = 0, uses_anonymous_args = 0
 1786              		@ link register save eliminated.
 1787              	.LVL150:
2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTCB );
 1788              		.loc 1 2275 0
 1789 0000 0346     		mov	r3, r0
 1790 0002 10B9     		cbnz	r0, .L161
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 127


2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTCB );
 1791              		.loc 1 2275 0 is_stmt 0 discriminator 1
 1792 0004 074B     		ldr	r3, .L164
 1793 0006 D3F80031 		ldr	r3, [r3, #256]
 1794              	.LVL151:
 1795              	.L161:
2276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1796              		.loc 1 2276 0 is_stmt 1 discriminator 4
 1797 000a 43B9     		cbnz	r3, .L162
 1798              	.LBB120:
 1799              	.LBB121:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1800              		.loc 2 156 0
 1801              		.syntax unified
 1802              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1803 000c 4FF02003 			mov r3, #32												
 1804 0010 83F31188 		msr basepri, r3											
 1805 0014 BFF36F8F 		isb														
 1806 0018 BFF34F8F 		dsb														
 1807              	
 1808              	@ 0 "" 2
 1809              	.LVL152:
 1810              		.thumb
 1811              		.syntax unified
 1812              	.L163:
 1813 001c FEE7     		b	.L163
 1814              	.LVL153:
 1815              	.L162:
 1816              	.LBE121:
 1817              	.LBE120:
2278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1818              		.loc 1 2278 0
 1819 001e 03F13400 		add	r0, r3, #52
 1820 0022 7047     		bx	lr
 1821              	.L165:
 1822              		.align	2
 1823              	.L164:
 1824 0024 00000000 		.word	.LANCHOR0
 1825              		.cfi_endproc
 1826              	.LFE682:
 1827              		.size	pcTaskGetName, .-pcTaskGetName
 1828              		.section	.text.xTaskIncrementTick,"ax",%progbits
 1829              		.align	2
 1830              		.global	xTaskIncrementTick
 1831              		.thumb
 1832              		.thumb_func
 1833              		.type	xTaskIncrementTick, %function
 1834              	xTaskIncrementTick:
 1835              	.LFB683:
2590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t * pxTCB;
 1836              		.loc 1 2590 0
 1837              		.cfi_startproc
 1838              		@ args = 0, pretend = 0, frame = 0
 1839              		@ frame_needed = 0, uses_anonymous_args = 0
 1840 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1841              		.cfi_def_cfa_offset 24
 1842              		.cfi_offset 4, -24
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 128


 1843              		.cfi_offset 5, -20
 1844              		.cfi_offset 6, -16
 1845              		.cfi_offset 7, -12
 1846              		.cfi_offset 8, -8
 1847              		.cfi_offset 14, -4
 1848              	.LVL154:
2599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 1849              		.loc 1 2599 0
 1850 0004 3C4B     		ldr	r3, .L186
 1851 0006 D3F81831 		ldr	r3, [r3, #280]
 1852 000a 002B     		cmp	r3, #0
 1853 000c 65D1     		bne	.L167
 1854              	.LBB122:
2603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1855              		.loc 1 2603 0
 1856 000e 3A4B     		ldr	r3, .L186
 1857 0010 D3F81441 		ldr	r4, [r3, #276]
 1858 0014 0134     		adds	r4, r4, #1
 1859              	.LVL155:
2607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1860              		.loc 1 2607 0
 1861 0016 C3F81441 		str	r4, [r3, #276]
2609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1862              		.loc 1 2609 0
 1863 001a CCB9     		cbnz	r4, .L168
 1864              	.LBB123:
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1865              		.loc 1 2611 0
 1866 001c 9B6A     		ldr	r3, [r3, #40]
 1867 001e 1B68     		ldr	r3, [r3]
 1868 0020 43B1     		cbz	r3, .L169
 1869              	.LBB124:
 1870              	.LBB125:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1871              		.loc 2 156 0
 1872              		.syntax unified
 1873              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1874 0022 4FF02003 			mov r3, #32												
 1875 0026 83F31188 		msr basepri, r3											
 1876 002a BFF36F8F 		isb														
 1877 002e BFF34F8F 		dsb														
 1878              	
 1879              	@ 0 "" 2
 1880              	.LVL156:
 1881              		.thumb
 1882              		.syntax unified
 1883              	.L170:
 1884 0032 FEE7     		b	.L170
 1885              	.L169:
 1886              	.LBE125:
 1887              	.LBE124:
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1888              		.loc 1 2611 0 discriminator 2
 1889 0034 304B     		ldr	r3, .L186
 1890 0036 9A6A     		ldr	r2, [r3, #40]
 1891              	.LVL157:
 1892 0038 D3F8F810 		ldr	r1, [r3, #248]
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 129


 1893 003c 9962     		str	r1, [r3, #40]
 1894 003e C3F8F820 		str	r2, [r3, #248]
 1895 0042 D3F82021 		ldr	r2, [r3, #288]
 1896              	.LVL158:
 1897 0046 0132     		adds	r2, r2, #1
 1898 0048 C3F82021 		str	r2, [r3, #288]
 1899              	.LVL159:
 1900 004c FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1901              	.LVL160:
 1902              	.L168:
 1903              	.LBE123:
2622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1904              		.loc 1 2622 0
 1905 0050 294B     		ldr	r3, .L186
 1906 0052 DB6A     		ldr	r3, [r3, #44]
 1907 0054 9C42     		cmp	r4, r3
 1908 0056 03D2     		bcs	.L181
 1909              	.LBE122:
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1910              		.loc 1 2593 0
 1911 0058 0026     		movs	r6, #0
 1912 005a 45E0     		b	.L172
 1913              	.LVL161:
 1914              	.L183:
 1915              	.LBB126:
2688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
 1916              		.loc 1 2688 0
 1917 005c 0126     		movs	r6, #1
 1918              	.LVL162:
 1919 005e 00E0     		b	.L171
 1920              	.LVL163:
 1921              	.L181:
 1922 0060 0026     		movs	r6, #0
 1923              	.LVL164:
 1924              	.L171:
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1925              		.loc 1 2626 0
 1926 0062 254B     		ldr	r3, .L186
 1927 0064 9B6A     		ldr	r3, [r3, #40]
 1928 0066 1B68     		ldr	r3, [r3]
 1929 0068 0BB9     		cbnz	r3, .L182
 1930 006a 0123     		movs	r3, #1
 1931 006c 00E0     		b	.L173
 1932              	.L182:
 1933 006e 0023     		movs	r3, #0
 1934              	.L173:
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1935              		.loc 1 2626 0 is_stmt 0 discriminator 4
 1936 0070 23B1     		cbz	r3, .L174
2633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 1937              		.loc 1 2633 0 is_stmt 1
 1938 0072 4FF0FF32 		mov	r2, #-1
 1939 0076 204B     		ldr	r3, .L186
 1940 0078 DA62     		str	r2, [r3, #44]
2634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1941              		.loc 1 2634 0
 1942 007a 35E0     		b	.L172
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 130


 1943              	.L174:
2642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 1944              		.loc 1 2642 0
 1945 007c 1E4B     		ldr	r3, .L186
 1946 007e 9B6A     		ldr	r3, [r3, #40]
 1947 0080 DB68     		ldr	r3, [r3, #12]
 1948 0082 DD68     		ldr	r5, [r3, #12]
 1949              	.LVL165:
2643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1950              		.loc 1 2643 0
 1951 0084 6B68     		ldr	r3, [r5, #4]
 1952              	.LVL166:
2645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1953              		.loc 1 2645 0
 1954 0086 9C42     		cmp	r4, r3
 1955 0088 02D2     		bcs	.L175
2652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
 1956              		.loc 1 2652 0
 1957 008a 1B4A     		ldr	r2, .L186
 1958 008c D362     		str	r3, [r2, #44]
2653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1959              		.loc 1 2653 0
 1960 008e 2BE0     		b	.L172
 1961              	.L175:
2661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1962              		.loc 1 2661 0
 1963 0090 05F10408 		add	r8, r5, #4
 1964 0094 4046     		mov	r0, r8
 1965 0096 FFF7FEFF 		bl	uxListRemove
 1966              	.LVL167:
2665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1967              		.loc 1 2665 0
 1968 009a AB6A     		ldr	r3, [r5, #40]
 1969 009c 1BB1     		cbz	r3, .L176
2667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1970              		.loc 1 2667 0
 1971 009e 05F11800 		add	r0, r5, #24
 1972 00a2 FFF7FEFF 		bl	uxListRemove
 1973              	.LVL168:
 1974              	.L176:
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1975              		.loc 1 2676 0
 1976 00a6 EB6A     		ldr	r3, [r5, #44]
 1977 00a8 134A     		ldr	r2, .L186
 1978 00aa D2F80C21 		ldr	r2, [r2, #268]
 1979 00ae 9342     		cmp	r3, r2
 1980 00b0 02D9     		bls	.L177
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1981              		.loc 1 2676 0 is_stmt 0 discriminator 1
 1982 00b2 114A     		ldr	r2, .L186
 1983 00b4 C2F80C31 		str	r3, [r2, #268]
 1984              	.L177:
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1985              		.loc 1 2676 0 discriminator 3
 1986 00b8 0F4F     		ldr	r7, .L186
 1987 00ba 07F13000 		add	r0, r7, #48
 1988 00be 03EB8303 		add	r3, r3, r3, lsl #2
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 131


 1989 00c2 9A00     		lsls	r2, r3, #2
 1990 00c4 4146     		mov	r1, r8
 1991 00c6 1044     		add	r0, r0, r2
 1992 00c8 FFF7FEFF 		bl	vListInsertEnd
 1993              	.LVL169:
2686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
 1994              		.loc 1 2686 0 is_stmt 1 discriminator 3
 1995 00cc EA6A     		ldr	r2, [r5, #44]
 1996 00ce D7F80031 		ldr	r3, [r7, #256]
 1997 00d2 DB6A     		ldr	r3, [r3, #44]
 1998 00d4 9A42     		cmp	r2, r3
 1999 00d6 C1D2     		bcs	.L183
 2000 00d8 C3E7     		b	.L171
 2001              	.LVL170:
 2002              	.L167:
 2003              	.LBE126:
2733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2004              		.loc 1 2733 0
 2005 00da 074A     		ldr	r2, .L186
 2006 00dc D2F82431 		ldr	r3, [r2, #292]
 2007 00e0 0133     		adds	r3, r3, #1
 2008 00e2 C2F82431 		str	r3, [r2, #292]
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2009              		.loc 1 2593 0
 2010 00e6 0026     		movs	r6, #0
 2011              	.LVL171:
 2012              	.L172:
2746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2013              		.loc 1 2746 0
 2014 00e8 034B     		ldr	r3, .L186
 2015 00ea D3F82831 		ldr	r3, [r3, #296]
 2016 00ee 03B1     		cbz	r3, .L180
2748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2017              		.loc 1 2748 0
 2018 00f0 0126     		movs	r6, #1
 2019              	.LVL172:
 2020              	.L180:
2758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 2021              		.loc 1 2758 0
 2022 00f2 3046     		mov	r0, r6
 2023 00f4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2024              	.LVL173:
 2025              	.L187:
 2026              		.align	2
 2027              	.L186:
 2028 00f8 00000000 		.word	.LANCHOR0
 2029              		.cfi_endproc
 2030              	.LFE683:
 2031              		.size	xTaskIncrementTick, .-xTaskIncrementTick
 2032              		.section	.text.xTaskResumeAll,"ax",%progbits
 2033              		.align	2
 2034              		.global	xTaskResumeAll
 2035              		.thumb
 2036              		.thumb_func
 2037              		.type	xTaskResumeAll, %function
 2038              	xTaskResumeAll:
 2039              	.LFB678:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 132


2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB = NULL;
 2040              		.loc 1 2106 0
 2041              		.cfi_startproc
 2042              		@ args = 0, pretend = 0, frame = 0
 2043              		@ frame_needed = 0, uses_anonymous_args = 0
 2044              	.LVL174:
2112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2045              		.loc 1 2112 0
 2046 0000 394B     		ldr	r3, .L204
 2047 0002 D3F81831 		ldr	r3, [r3, #280]
 2048 0006 43B9     		cbnz	r3, .L189
 2049              	.LBB127:
 2050              	.LBB128:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2051              		.loc 2 156 0
 2052              		.syntax unified
 2053              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2054 0008 4FF02003 			mov r3, #32												
 2055 000c 83F31188 		msr basepri, r3											
 2056 0010 BFF36F8F 		isb														
 2057 0014 BFF34F8F 		dsb														
 2058              	
 2059              	@ 0 "" 2
 2060              	.LVL175:
 2061              		.thumb
 2062              		.syntax unified
 2063              	.L190:
 2064 0018 FEE7     		b	.L190
 2065              	.L189:
 2066              	.LBE128:
 2067              	.LBE127:
2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB = NULL;
 2068              		.loc 1 2106 0
 2069 001a 70B5     		push	{r4, r5, r6, lr}
 2070              		.cfi_def_cfa_offset 16
 2071              		.cfi_offset 4, -16
 2072              		.cfi_offset 5, -12
 2073              		.cfi_offset 6, -8
 2074              		.cfi_offset 14, -4
2119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 2075              		.loc 1 2119 0
 2076 001c FFF7FEFF 		bl	vPortEnterCritical
 2077              	.LVL176:
2121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2078              		.loc 1 2121 0
 2079 0020 314B     		ldr	r3, .L204
 2080 0022 D3F81821 		ldr	r2, [r3, #280]
 2081 0026 013A     		subs	r2, r2, #1
 2082 0028 C3F81821 		str	r2, [r3, #280]
2123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2083              		.loc 1 2123 0
 2084 002c D3F81831 		ldr	r3, [r3, #280]
 2085 0030 002B     		cmp	r3, #0
 2086 0032 52D1     		bne	.L200
2125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2087              		.loc 1 2125 0
 2088 0034 2C4B     		ldr	r3, .L204
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 133


 2089 0036 D3F8FC30 		ldr	r3, [r3, #252]
 2090 003a 3BBB     		cbnz	r3, .L201
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2091              		.loc 1 2108 0
 2092 003c 0024     		movs	r4, #0
 2093 003e 4FE0     		b	.L191
 2094              	.LVL177:
 2095              	.L195:
2131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2096              		.loc 1 2131 0
 2097 0040 294D     		ldr	r5, .L204
 2098 0042 2B6A     		ldr	r3, [r5, #32]
 2099 0044 DC68     		ldr	r4, [r3, #12]
 2100              	.LVL178:
2132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2101              		.loc 1 2132 0
 2102 0046 04F11800 		add	r0, r4, #24
 2103 004a FFF7FEFF 		bl	uxListRemove
 2104              	.LVL179:
2133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2105              		.loc 1 2133 0
 2106 004e 261D     		adds	r6, r4, #4
 2107 0050 3046     		mov	r0, r6
 2108 0052 FFF7FEFF 		bl	uxListRemove
 2109              	.LVL180:
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2110              		.loc 1 2134 0
 2111 0056 E36A     		ldr	r3, [r4, #44]
 2112 0058 D5F80C21 		ldr	r2, [r5, #268]
 2113 005c 9342     		cmp	r3, r2
 2114 005e 01D9     		bls	.L193
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2115              		.loc 1 2134 0 is_stmt 0 discriminator 1
 2116 0060 C5F80C31 		str	r3, [r5, #268]
 2117              	.L193:
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2118              		.loc 1 2134 0 discriminator 3
 2119 0064 204D     		ldr	r5, .L204
 2120 0066 05F13000 		add	r0, r5, #48
 2121 006a 03EB8303 		add	r3, r3, r3, lsl #2
 2122 006e 9A00     		lsls	r2, r3, #2
 2123 0070 3146     		mov	r1, r6
 2124 0072 1044     		add	r0, r0, r2
 2125 0074 FFF7FEFF 		bl	vListInsertEnd
 2126              	.LVL181:
2138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 2127              		.loc 1 2138 0 is_stmt 1 discriminator 3
 2128 0078 E26A     		ldr	r2, [r4, #44]
 2129 007a D5F80031 		ldr	r3, [r5, #256]
 2130 007e DB6A     		ldr	r3, [r3, #44]
 2131 0080 9A42     		cmp	r2, r3
 2132 0082 04D3     		bcc	.L192
2140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 2133              		.loc 1 2140 0
 2134 0084 0122     		movs	r2, #1
 2135 0086 C5F82821 		str	r2, [r5, #296]
 2136 008a 00E0     		b	.L192
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 134


 2137              	.LVL182:
 2138              	.L201:
 2139 008c 0024     		movs	r4, #0
 2140              	.LVL183:
 2141              	.L192:
2129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2142              		.loc 1 2129 0
 2143 008e 164B     		ldr	r3, .L204
 2144 0090 5B69     		ldr	r3, [r3, #20]
 2145 0092 002B     		cmp	r3, #0
 2146 0094 D4D1     		bne	.L195
2148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2147              		.loc 1 2148 0
 2148 0096 0CB1     		cbz	r4, .L196
2156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2149              		.loc 1 2156 0
 2150 0098 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2151              	.LVL184:
 2152              	.L196:
 2153              	.LBB129:
2164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2154              		.loc 1 2164 0
 2155 009c 124B     		ldr	r3, .L204
 2156 009e D3F82441 		ldr	r4, [r3, #292]
 2157              	.LVL185:
2166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 2158              		.loc 1 2166 0
 2159 00a2 64B1     		cbz	r4, .L197
 2160              	.L199:
2170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
 2161              		.loc 1 2170 0
 2162 00a4 FFF7FEFF 		bl	xTaskIncrementTick
 2163              	.LVL186:
 2164 00a8 18B1     		cbz	r0, .L198
2172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
 2165              		.loc 1 2172 0
 2166 00aa 0122     		movs	r2, #1
 2167 00ac 0E4B     		ldr	r3, .L204
 2168 00ae C3F82821 		str	r2, [r3, #296]
 2169              	.L198:
 2170              	.LVL187:
2179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2171              		.loc 1 2179 0
 2172 00b2 013C     		subs	r4, r4, #1
 2173              	.LVL188:
 2174 00b4 F6D1     		bne	.L199
2181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 2175              		.loc 1 2181 0
 2176 00b6 0022     		movs	r2, #0
 2177 00b8 0B4B     		ldr	r3, .L204
 2178 00ba C3F82421 		str	r2, [r3, #292]
 2179              	.L197:
 2180              	.LBE129:
2189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2181              		.loc 1 2189 0
 2182 00be 0A4B     		ldr	r3, .L204
 2183 00c0 D3F82831 		ldr	r3, [r3, #296]
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 135


 2184 00c4 5BB1     		cbz	r3, .L202
 2185              	.LVL189:
2196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2186              		.loc 1 2196 0
 2187 00c6 4FF08052 		mov	r2, #268435456
 2188 00ca 084B     		ldr	r3, .L204+4
 2189 00cc 1A60     		str	r2, [r3]
 2190              		.syntax unified
 2191              	@ 2196 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2192 00ce BFF34F8F 		dsb
 2193              	@ 0 "" 2
 2194              	@ 2196 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2195 00d2 BFF36F8F 		isb
 2196              	@ 0 "" 2
2193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 2197              		.loc 1 2193 0
 2198              		.thumb
 2199              		.syntax unified
 2200 00d6 0124     		movs	r4, #1
 2201              	.LVL190:
 2202 00d8 02E0     		b	.L191
 2203              	.LVL191:
 2204              	.L200:
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2205              		.loc 1 2108 0
 2206 00da 0024     		movs	r4, #0
 2207 00dc 00E0     		b	.L191
 2208              	.LVL192:
 2209              	.L202:
 2210 00de 0024     		movs	r4, #0
 2211              	.LVL193:
 2212              	.L191:
2209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2213              		.loc 1 2209 0
 2214 00e0 FFF7FEFF 		bl	vPortExitCritical
 2215              	.LVL194:
2212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 2216              		.loc 1 2212 0
 2217 00e4 2046     		mov	r0, r4
 2218 00e6 70BD     		pop	{r4, r5, r6, pc}
 2219              	.LVL195:
 2220              	.L205:
 2221              		.align	2
 2222              	.L204:
 2223 00e8 00000000 		.word	.LANCHOR0
 2224 00ec 04ED00E0 		.word	-536810236
 2225              		.cfi_endproc
 2226              	.LFE678:
 2227              		.size	xTaskResumeAll, .-xTaskResumeAll
 2228              		.section	.text.vTaskDelayUntil,"ax",%progbits
 2229              		.align	2
 2230              		.global	vTaskDelayUntil
 2231              		.thumb
 2232              		.thumb_func
 2233              		.type	vTaskDelayUntil, %function
 2234              	vTaskDelayUntil:
 2235              	.LFB666:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 136


1205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TickType_t xTimeToWake;
 2236              		.loc 1 1205 0
 2237              		.cfi_startproc
 2238              		@ args = 0, pretend = 0, frame = 0
 2239              		@ frame_needed = 0, uses_anonymous_args = 0
 2240              	.LVL196:
 2241 0000 38B5     		push	{r3, r4, r5, lr}
 2242              		.cfi_def_cfa_offset 16
 2243              		.cfi_offset 3, -16
 2244              		.cfi_offset 4, -12
 2245              		.cfi_offset 5, -8
 2246              		.cfi_offset 14, -4
 2247              	.LVL197:
1209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 2248              		.loc 1 1209 0
 2249 0002 40B9     		cbnz	r0, .L207
 2250              	.LBB130:
 2251              	.LBB131:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2252              		.loc 2 156 0
 2253              		.syntax unified
 2254              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2255 0004 4FF02003 			mov r3, #32												
 2256 0008 83F31188 		msr basepri, r3											
 2257 000c BFF36F8F 		isb														
 2258 0010 BFF34F8F 		dsb														
 2259              	
 2260              	@ 0 "" 2
 2261              	.LVL198:
 2262              		.thumb
 2263              		.syntax unified
 2264              	.L208:
 2265 0014 FEE7     		b	.L208
 2266              	.L207:
 2267 0016 0546     		mov	r5, r0
 2268              	.LBE131:
 2269              	.LBE130:
1210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 2270              		.loc 1 1210 0
 2271 0018 41B9     		cbnz	r1, .L209
 2272              	.LBB132:
 2273              	.LBB133:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2274              		.loc 2 156 0
 2275              		.syntax unified
 2276              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2277 001a 4FF02003 			mov r3, #32												
 2278 001e 83F31188 		msr basepri, r3											
 2279 0022 BFF36F8F 		isb														
 2280 0026 BFF34F8F 		dsb														
 2281              	
 2282              	@ 0 "" 2
 2283              	.LVL199:
 2284              		.thumb
 2285              		.syntax unified
 2286              	.L210:
 2287 002a FEE7     		b	.L210
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 137


 2288              	.L209:
 2289              	.LBE133:
 2290              	.LBE132:
1211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2291              		.loc 1 1211 0
 2292 002c 1D4B     		ldr	r3, .L222
 2293 002e D3F81831 		ldr	r3, [r3, #280]
 2294 0032 43B1     		cbz	r3, .L211
 2295              	.LBB134:
 2296              	.LBB135:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2297              		.loc 2 156 0
 2298              		.syntax unified
 2299              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2300 0034 4FF02003 			mov r3, #32												
 2301 0038 83F31188 		msr basepri, r3											
 2302 003c BFF36F8F 		isb														
 2303 0040 BFF34F8F 		dsb														
 2304              	
 2305              	@ 0 "" 2
 2306              	.LVL200:
 2307              		.thumb
 2308              		.syntax unified
 2309              	.L212:
 2310 0044 FEE7     		b	.L212
 2311              	.L211:
 2312 0046 0C46     		mov	r4, r1
 2313              	.LBE135:
 2314              	.LBE134:
1213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2315              		.loc 1 1213 0
 2316 0048 FFF7FEFF 		bl	vTaskSuspendAll
 2317              	.LVL201:
 2318              	.LBB136:
1217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2319              		.loc 1 1217 0
 2320 004c 154B     		ldr	r3, .L222
 2321 004e D3F81401 		ldr	r0, [r3, #276]
 2322              	.LVL202:
1220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2323              		.loc 1 1220 0
 2324 0052 2A68     		ldr	r2, [r5]
 2325 0054 A318     		adds	r3, r4, r2
 2326              	.LVL203:
1222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2327              		.loc 1 1222 0
 2328 0056 9042     		cmp	r0, r2
 2329 0058 05D2     		bcs	.L213
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2330              		.loc 1 1229 0
 2331 005a 9A42     		cmp	r2, r3
 2332 005c 09D9     		bls	.L217
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2333              		.loc 1 1229 0 is_stmt 0 discriminator 1
 2334 005e 9842     		cmp	r0, r3
 2335 0060 09D3     		bcc	.L218
 2336              	.LBE136:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 138


1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2337              		.loc 1 1207 0 is_stmt 1
 2338 0062 0022     		movs	r2, #0
 2339 0064 0CE0     		b	.L214
 2340              	.L213:
 2341              	.LBB137:
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2342              		.loc 1 1243 0
 2343 0066 9A42     		cmp	r2, r3
 2344 0068 07D8     		bhi	.L219
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2345              		.loc 1 1243 0 is_stmt 0 discriminator 1
 2346 006a 9842     		cmp	r0, r3
 2347 006c 07D3     		bcc	.L220
 2348              	.LBE137:
1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2349              		.loc 1 1207 0 is_stmt 1
 2350 006e 0022     		movs	r2, #0
 2351 0070 06E0     		b	.L214
 2352              	.L217:
 2353 0072 0022     		movs	r2, #0
 2354 0074 04E0     		b	.L214
 2355              	.L218:
 2356              	.LBB138:
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2357              		.loc 1 1231 0
 2358 0076 0122     		movs	r2, #1
 2359 0078 02E0     		b	.L214
 2360              	.L219:
1245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2361              		.loc 1 1245 0
 2362 007a 0122     		movs	r2, #1
 2363 007c 00E0     		b	.L214
 2364              	.L220:
 2365 007e 0122     		movs	r2, #1
 2366              	.L214:
 2367              	.LVL204:
1254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2368              		.loc 1 1254 0
 2369 0080 2B60     		str	r3, [r5]
1256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2370              		.loc 1 1256 0
 2371 0082 1AB1     		cbz	r2, .L215
1262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2372              		.loc 1 1262 0
 2373 0084 0021     		movs	r1, #0
 2374 0086 181A     		subs	r0, r3, r0
 2375              	.LVL205:
 2376 0088 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2377              	.LVL206:
 2378              	.L215:
 2379              	.LBE138:
1269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2380              		.loc 1 1269 0
 2381 008c FFF7FEFF 		bl	xTaskResumeAll
 2382              	.LVL207:
1273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 139


 2383              		.loc 1 1273 0
 2384 0090 38B9     		cbnz	r0, .L206
1275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2385              		.loc 1 1275 0
 2386 0092 4FF08052 		mov	r2, #268435456
 2387 0096 044B     		ldr	r3, .L222+4
 2388 0098 1A60     		str	r2, [r3]
 2389              		.syntax unified
 2390              	@ 1275 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2391 009a BFF34F8F 		dsb
 2392              	@ 0 "" 2
 2393              	@ 1275 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2394 009e BFF36F8F 		isb
 2395              	@ 0 "" 2
 2396              		.thumb
 2397              		.syntax unified
 2398              	.L206:
 2399 00a2 38BD     		pop	{r3, r4, r5, pc}
 2400              	.LVL208:
 2401              	.L223:
 2402              		.align	2
 2403              	.L222:
 2404 00a4 00000000 		.word	.LANCHOR0
 2405 00a8 04ED00E0 		.word	-536810236
 2406              		.cfi_endproc
 2407              	.LFE666:
 2408              		.size	vTaskDelayUntil, .-vTaskDelayUntil
 2409              		.section	.text.vTaskDelay,"ax",%progbits
 2410              		.align	2
 2411              		.global	vTaskDelay
 2412              		.thumb
 2413              		.thumb_func
 2414              		.type	vTaskDelay, %function
 2415              	vTaskDelay:
 2416              	.LFB667:
1289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2417              		.loc 1 1289 0
 2418              		.cfi_startproc
 2419              		@ args = 0, pretend = 0, frame = 0
 2420              		@ frame_needed = 0, uses_anonymous_args = 0
 2421              	.LVL209:
 2422 0000 10B5     		push	{r4, lr}
 2423              		.cfi_def_cfa_offset 8
 2424              		.cfi_offset 4, -8
 2425              		.cfi_offset 14, -4
 2426              	.LVL210:
1293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2427              		.loc 1 1293 0
 2428 0002 B0B1     		cbz	r0, .L229
 2429 0004 0446     		mov	r4, r0
1295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSuspendAll();
 2430              		.loc 1 1295 0
 2431 0006 104B     		ldr	r3, .L231
 2432 0008 D3F81831 		ldr	r3, [r3, #280]
 2433 000c 43B1     		cbz	r3, .L226
 2434              	.LBB139:
 2435              	.LBB140:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 140


 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2436              		.loc 2 156 0
 2437              		.syntax unified
 2438              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2439 000e 4FF02003 			mov r3, #32												
 2440 0012 83F31188 		msr basepri, r3											
 2441 0016 BFF36F8F 		isb														
 2442 001a BFF34F8F 		dsb														
 2443              	
 2444              	@ 0 "" 2
 2445              	.LVL211:
 2446              		.thumb
 2447              		.syntax unified
 2448              	.L227:
 2449 001e FEE7     		b	.L227
 2450              	.L226:
 2451              	.LBE140:
 2452              	.LBE139:
1296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2453              		.loc 1 1296 0
 2454 0020 FFF7FEFF 		bl	vTaskSuspendAll
 2455              	.LVL212:
1307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2456              		.loc 1 1307 0
 2457 0024 0021     		movs	r1, #0
 2458 0026 2046     		mov	r0, r4
 2459 0028 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2460              	.LVL213:
1309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2461              		.loc 1 1309 0
 2462 002c FFF7FEFF 		bl	xTaskResumeAll
 2463              	.LVL214:
 2464 0030 00E0     		b	.L225
 2465              	.LVL215:
 2466              	.L229:
1290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2467              		.loc 1 1290 0
 2468 0032 0020     		movs	r0, #0
 2469              	.LVL216:
 2470              	.L225:
1318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2471              		.loc 1 1318 0
 2472 0034 38B9     		cbnz	r0, .L224
1320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2473              		.loc 1 1320 0
 2474 0036 4FF08052 		mov	r2, #268435456
 2475 003a 044B     		ldr	r3, .L231+4
 2476 003c 1A60     		str	r2, [r3]
 2477              		.syntax unified
 2478              	@ 1320 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2479 003e BFF34F8F 		dsb
 2480              	@ 0 "" 2
 2481              	@ 1320 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2482 0042 BFF36F8F 		isb
 2483              	@ 0 "" 2
 2484              		.thumb
 2485              		.syntax unified
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 141


 2486              	.L224:
 2487 0046 10BD     		pop	{r4, pc}
 2488              	.L232:
 2489              		.align	2
 2490              	.L231:
 2491 0048 00000000 		.word	.LANCHOR0
 2492 004c 04ED00E0 		.word	-536810236
 2493              		.cfi_endproc
 2494              	.LFE667:
 2495              		.size	vTaskDelay, .-vTaskDelay
 2496              		.section	.text.vTaskSwitchContext,"ax",%progbits
 2497              		.align	2
 2498              		.global	vTaskSwitchContext
 2499              		.thumb
 2500              		.thumb_func
 2501              		.type	vTaskSwitchContext, %function
 2502              	vTaskSwitchContext:
 2503              	.LFB684:
2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2504              		.loc 1 2852 0
 2505              		.cfi_startproc
 2506              		@ args = 0, pretend = 0, frame = 0
 2507              		@ frame_needed = 0, uses_anonymous_args = 0
2853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 2508              		.loc 1 2853 0
 2509 0000 304B     		ldr	r3, .L244
 2510 0002 D3F81831 		ldr	r3, [r3, #280]
 2511 0006 23B1     		cbz	r3, .L234
2857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 2512              		.loc 1 2857 0
 2513 0008 0122     		movs	r2, #1
 2514 000a 2E4B     		ldr	r3, .L244
 2515 000c C3F82821 		str	r2, [r3, #296]
 2516 0010 7047     		bx	lr
 2517              	.L234:
2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2518              		.loc 1 2852 0
 2519 0012 10B5     		push	{r4, lr}
 2520              		.cfi_def_cfa_offset 8
 2521              		.cfi_offset 4, -8
 2522              		.cfi_offset 14, -4
2861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 2523              		.loc 1 2861 0
 2524 0014 2B4B     		ldr	r3, .L244
 2525 0016 0022     		movs	r2, #0
 2526 0018 C3F82821 		str	r2, [r3, #296]
 2527              	.LBB141:
2893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const uint32_t ulCheckValue = ( uint32_t ) 0xa5a5a5a5;											\
 2528              		.loc 1 2893 0
 2529 001c D3F80031 		ldr	r3, [r3, #256]
 2530 0020 1B6B     		ldr	r3, [r3, #48]
 2531              	.LVL217:
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 1 ] != ulCheckValue ) ||												\
 2532              		.loc 1 2896 0
 2533 0022 1A68     		ldr	r2, [r3]
 2534 0024 B2F1A53F 		cmp	r2, #-1515870811
 2535 0028 0BD1     		bne	.L236
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 142


2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 2 ] != ulCheckValue ) ||												\
 2536              		.loc 1 2897 0 discriminator 1
 2537 002a 5A68     		ldr	r2, [r3, #4]
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 1 ] != ulCheckValue ) ||												\
 2538              		.loc 1 2896 0 discriminator 1
 2539 002c B2F1A53F 		cmp	r2, #-1515870811
 2540 0030 07D1     		bne	.L236
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 3 ] != ulCheckValue ) )												\
 2541              		.loc 1 2898 0
 2542 0032 9A68     		ldr	r2, [r3, #8]
2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 2 ] != ulCheckValue ) ||												\
 2543              		.loc 1 2897 0
 2544 0034 B2F1A53F 		cmp	r2, #-1515870811
 2545 0038 03D1     		bne	.L236
2899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{																								\
 2546              		.loc 1 2899 0
 2547 003a DB68     		ldr	r3, [r3, #12]
 2548              	.LVL218:
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 3 ] != ulCheckValue ) )												\
 2549              		.loc 1 2898 0
 2550 003c B3F1A53F 		cmp	r3, #-1515870811
 2551 0040 07D0     		beq	.L237
 2552              	.L236:
2901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}																								\
 2553              		.loc 1 2901 0
 2554 0042 204B     		ldr	r3, .L244
 2555 0044 D3F80001 		ldr	r0, [r3, #256]
 2556 0048 D3F80011 		ldr	r1, [r3, #256]
 2557 004c 3431     		adds	r1, r1, #52
 2558 004e FFF7FEFF 		bl	vApplicationStackOverflowHook
 2559              	.LVL219:
 2560              	.L237:
 2561              	.LBE141:
 2562              	.LBB142:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2563              		.loc 1 2907 0
 2564 0052 1C4B     		ldr	r3, .L244
 2565 0054 D3F80C31 		ldr	r3, [r3, #268]
 2566              	.LVL220:
 2567 0058 0AE0     		b	.L238
 2568              	.L241:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2569              		.loc 1 2907 0 is_stmt 0 discriminator 5
 2570 005a 43B9     		cbnz	r3, .L239
 2571              	.LBB143:
 2572              	.LBB144:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2573              		.loc 2 156 0 is_stmt 1
 2574              		.syntax unified
 2575              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2576 005c 4FF02003 			mov r3, #32												
 2577 0060 83F31188 		msr basepri, r3											
 2578 0064 BFF36F8F 		isb														
 2579 0068 BFF34F8F 		dsb														
 2580              	
 2581              	@ 0 "" 2
 2582              	.LVL221:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 143


 2583              		.thumb
 2584              		.syntax unified
 2585              	.L240:
 2586 006c FEE7     		b	.L240
 2587              	.LVL222:
 2588              	.L239:
 2589              	.LBE144:
 2590              	.LBE143:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2591              		.loc 1 2907 0 discriminator 3
 2592 006e 013B     		subs	r3, r3, #1
 2593              	.LVL223:
 2594              	.L238:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2595              		.loc 1 2907 0 is_stmt 0 discriminator 4
 2596 0070 03EB8301 		add	r1, r3, r3, lsl #2
 2597 0074 8A00     		lsls	r2, r1, #2
 2598 0076 1349     		ldr	r1, .L244
 2599 0078 0A44     		add	r2, r2, r1
 2600 007a 126B     		ldr	r2, [r2, #48]
 2601 007c 002A     		cmp	r2, #0
 2602 007e ECD0     		beq	.L241
 2603              	.LVL224:
 2604              	.LBB145:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2605              		.loc 1 2907 0 discriminator 6
 2606 0080 0846     		mov	r0, r1
 2607 0082 9900     		lsls	r1, r3, #2
 2608 0084 CC18     		adds	r4, r1, r3
 2609 0086 A200     		lsls	r2, r4, #2
 2610 0088 0244     		add	r2, r2, r0
 2611 008a 546B     		ldr	r4, [r2, #52]
 2612 008c 6468     		ldr	r4, [r4, #4]
 2613 008e 5463     		str	r4, [r2, #52]
 2614 0090 3030     		adds	r0, r0, #48
 2615 0092 1944     		add	r1, r1, r3
 2616 0094 8A00     		lsls	r2, r1, #2
 2617 0096 0832     		adds	r2, r2, #8
 2618 0098 0244     		add	r2, r2, r0
 2619 009a 9442     		cmp	r4, r2
 2620 009c 06D1     		bne	.L242
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2621              		.loc 1 2907 0 discriminator 7
 2622 009e 6068     		ldr	r0, [r4, #4]
 2623 00a0 03EB8301 		add	r1, r3, r3, lsl #2
 2624 00a4 8A00     		lsls	r2, r1, #2
 2625 00a6 0749     		ldr	r1, .L244
 2626 00a8 0A44     		add	r2, r2, r1
 2627 00aa 5063     		str	r0, [r2, #52]
 2628              	.L242:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2629              		.loc 1 2907 0 discriminator 9
 2630 00ac 0549     		ldr	r1, .L244
 2631 00ae 03EB8300 		add	r0, r3, r3, lsl #2
 2632 00b2 8200     		lsls	r2, r0, #2
 2633 00b4 0A44     		add	r2, r2, r1
 2634 00b6 526B     		ldr	r2, [r2, #52]
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 144


 2635 00b8 D268     		ldr	r2, [r2, #12]
 2636 00ba C1F80021 		str	r2, [r1, #256]
 2637              	.LBE145:
 2638 00be C1F80C31 		str	r3, [r1, #268]
 2639 00c2 10BD     		pop	{r4, pc}
 2640              	.L245:
 2641              		.align	2
 2642              	.L244:
 2643 00c4 00000000 		.word	.LANCHOR0
 2644              	.LBE142:
 2645              		.cfi_endproc
 2646              	.LFE684:
 2647              		.size	vTaskSwitchContext, .-vTaskSwitchContext
 2648              		.section	.text.vTaskSuspend,"ax",%progbits
 2649              		.align	2
 2650              		.global	vTaskSuspend
 2651              		.thumb
 2652              		.thumb_func
 2653              		.type	vTaskSuspend, %function
 2654              	vTaskSuspend:
 2655              	.LFB671:
1631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 2656              		.loc 1 1631 0 is_stmt 1
 2657              		.cfi_startproc
 2658              		@ args = 0, pretend = 0, frame = 0
 2659              		@ frame_needed = 0, uses_anonymous_args = 0
 2660              	.LVL225:
 2661 0000 38B5     		push	{r3, r4, r5, lr}
 2662              		.cfi_def_cfa_offset 16
 2663              		.cfi_offset 3, -16
 2664              		.cfi_offset 4, -12
 2665              		.cfi_offset 5, -8
 2666              		.cfi_offset 14, -4
 2667 0002 0446     		mov	r4, r0
1634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2668              		.loc 1 1634 0
 2669 0004 FFF7FEFF 		bl	vPortEnterCritical
 2670              	.LVL226:
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2671              		.loc 1 1638 0
 2672 0008 14B9     		cbnz	r4, .L247
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2673              		.loc 1 1638 0 is_stmt 0 discriminator 1
 2674 000a 294B     		ldr	r3, .L257
 2675 000c D3F80041 		ldr	r4, [r3, #256]
 2676              	.LVL227:
 2677              	.L247:
1644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2678              		.loc 1 1644 0 is_stmt 1 discriminator 4
 2679 0010 251D     		adds	r5, r4, #4
 2680 0012 2846     		mov	r0, r5
 2681 0014 FFF7FEFF 		bl	uxListRemove
 2682              	.LVL228:
1654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2683              		.loc 1 1654 0 discriminator 4
 2684 0018 A36A     		ldr	r3, [r4, #40]
 2685 001a 1BB1     		cbz	r3, .L248
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 145


1656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2686              		.loc 1 1656 0
 2687 001c 04F11800 		add	r0, r4, #24
 2688 0020 FFF7FEFF 		bl	uxListRemove
 2689              	.LVL229:
 2690              	.L248:
1663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2691              		.loc 1 1663 0
 2692 0024 2946     		mov	r1, r5
 2693 0026 2248     		ldr	r0, .L257
 2694 0028 FFF7FEFF 		bl	vListInsertEnd
 2695              	.LVL230:
1667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2696              		.loc 1 1667 0
 2697 002c 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 2698 0030 DBB2     		uxtb	r3, r3
 2699 0032 012B     		cmp	r3, #1
 2700 0034 02D1     		bne	.L249
1671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2701              		.loc 1 1671 0
 2702 0036 0023     		movs	r3, #0
 2703 0038 84F85C30 		strb	r3, [r4, #92]
 2704              	.L249:
1676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2705              		.loc 1 1676 0
 2706 003c FFF7FEFF 		bl	vPortExitCritical
 2707              	.LVL231:
1678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2708              		.loc 1 1678 0
 2709 0040 1B4B     		ldr	r3, .L257
 2710 0042 D3F80431 		ldr	r3, [r3, #260]
 2711 0046 2BB1     		cbz	r3, .L250
1682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2712              		.loc 1 1682 0
 2713 0048 FFF7FEFF 		bl	vPortEnterCritical
 2714              	.LVL232:
1684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2715              		.loc 1 1684 0
 2716 004c FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2717              	.LVL233:
1686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2718              		.loc 1 1686 0
 2719 0050 FFF7FEFF 		bl	vPortExitCritical
 2720              	.LVL234:
 2721              	.L250:
1693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2722              		.loc 1 1693 0
 2723 0054 164B     		ldr	r3, .L257
 2724 0056 D3F80031 		ldr	r3, [r3, #256]
 2725 005a 9C42     		cmp	r4, r3
 2726 005c 26D1     		bne	.L246
1695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2727              		.loc 1 1695 0
 2728 005e 144B     		ldr	r3, .L257
 2729 0060 D3F80431 		ldr	r3, [r3, #260]
 2730 0064 ABB1     		cbz	r3, .L252
1698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 146


 2731              		.loc 1 1698 0
 2732 0066 124B     		ldr	r3, .L257
 2733 0068 D3F81831 		ldr	r3, [r3, #280]
 2734 006c 43B1     		cbz	r3, .L253
 2735              	.LBB146:
 2736              	.LBB147:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2737              		.loc 2 156 0
 2738              		.syntax unified
 2739              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2740 006e 4FF02003 			mov r3, #32												
 2741 0072 83F31188 		msr basepri, r3											
 2742 0076 BFF36F8F 		isb														
 2743 007a BFF34F8F 		dsb														
 2744              	
 2745              	@ 0 "" 2
 2746              	.LVL235:
 2747              		.thumb
 2748              		.syntax unified
 2749              	.L254:
 2750 007e FEE7     		b	.L254
 2751              	.L253:
 2752              	.LBE147:
 2753              	.LBE146:
1699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2754              		.loc 1 1699 0
 2755 0080 4FF08052 		mov	r2, #268435456
 2756 0084 0B4B     		ldr	r3, .L257+4
 2757 0086 1A60     		str	r2, [r3]
 2758              		.syntax unified
 2759              	@ 1699 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2760 0088 BFF34F8F 		dsb
 2761              	@ 0 "" 2
 2762              	@ 1699 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2763 008c BFF36F8F 		isb
 2764              	@ 0 "" 2
 2765              		.thumb
 2766              		.syntax unified
 2767 0090 38BD     		pop	{r3, r4, r5, pc}
 2768              	.LVL236:
 2769              	.L252:
1706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2770              		.loc 1 1706 0
 2771 0092 074B     		ldr	r3, .L257
 2772 0094 1A68     		ldr	r2, [r3]
 2773 0096 D3F8FC30 		ldr	r3, [r3, #252]
 2774 009a 9A42     		cmp	r2, r3
 2775 009c 04D1     		bne	.L255
1712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2776              		.loc 1 1712 0
 2777 009e 0022     		movs	r2, #0
 2778 00a0 034B     		ldr	r3, .L257
 2779 00a2 C3F80021 		str	r2, [r3, #256]
 2780 00a6 38BD     		pop	{r3, r4, r5, pc}
 2781              	.LVL237:
 2782              	.L255:
1716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 147


 2783              		.loc 1 1716 0
 2784 00a8 FFF7FEFF 		bl	vTaskSwitchContext
 2785              	.LVL238:
 2786              	.L246:
 2787 00ac 38BD     		pop	{r3, r4, r5, pc}
 2788              	.LVL239:
 2789              	.L258:
 2790 00ae 00BF     		.align	2
 2791              	.L257:
 2792 00b0 00000000 		.word	.LANCHOR0
 2793 00b4 04ED00E0 		.word	-536810236
 2794              		.cfi_endproc
 2795              	.LFE671:
 2796              		.size	vTaskSuspend, .-vTaskSuspend
 2797              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 2798              		.align	2
 2799              		.global	vTaskPlaceOnEventList
 2800              		.thumb
 2801              		.thumb_func
 2802              		.type	vTaskPlaceOnEventList, %function
 2803              	vTaskPlaceOnEventList:
 2804              	.LFB685:
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 2805              		.loc 1 2922 0
 2806              		.cfi_startproc
 2807              		@ args = 0, pretend = 0, frame = 0
 2808              		@ frame_needed = 0, uses_anonymous_args = 0
 2809              	.LVL240:
2923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2810              		.loc 1 2923 0
 2811 0000 40B9     		cbnz	r0, .L260
 2812              	.LBB148:
 2813              	.LBB149:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2814              		.loc 2 156 0
 2815              		.syntax unified
 2816              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2817 0002 4FF02003 			mov r3, #32												
 2818 0006 83F31188 		msr basepri, r3											
 2819 000a BFF36F8F 		isb														
 2820 000e BFF34F8F 		dsb														
 2821              	
 2822              	@ 0 "" 2
 2823              	.LVL241:
 2824              		.thumb
 2825              		.syntax unified
 2826              	.L261:
 2827 0012 FEE7     		b	.L261
 2828              	.L260:
 2829              	.LBE149:
 2830              	.LBE148:
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 2831              		.loc 1 2922 0
 2832 0014 10B5     		push	{r4, lr}
 2833              		.cfi_def_cfa_offset 8
 2834              		.cfi_offset 4, -8
 2835              		.cfi_offset 14, -4
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 148


 2836 0016 0C46     		mov	r4, r1
2932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2837              		.loc 1 2932 0
 2838 0018 054B     		ldr	r3, .L263
 2839 001a D3F80011 		ldr	r1, [r3, #256]
 2840              	.LVL242:
 2841 001e 1831     		adds	r1, r1, #24
 2842 0020 FFF7FEFF 		bl	vListInsert
 2843              	.LVL243:
2934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 2844              		.loc 1 2934 0
 2845 0024 0121     		movs	r1, #1
 2846 0026 2046     		mov	r0, r4
 2847 0028 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2848              	.LVL244:
 2849 002c 10BD     		pop	{r4, pc}
 2850              	.LVL245:
 2851              	.L264:
 2852 002e 00BF     		.align	2
 2853              	.L263:
 2854 0030 00000000 		.word	.LANCHOR0
 2855              		.cfi_endproc
 2856              	.LFE685:
 2857              		.size	vTaskPlaceOnEventList, .-vTaskPlaceOnEventList
 2858              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 2859              		.align	2
 2860              		.global	vTaskPlaceOnUnorderedEventList
 2861              		.thumb
 2862              		.thumb_func
 2863              		.type	vTaskPlaceOnUnorderedEventList, %function
 2864              	vTaskPlaceOnUnorderedEventList:
 2865              	.LFB686:
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 2866              		.loc 1 2939 0
 2867              		.cfi_startproc
 2868              		@ args = 0, pretend = 0, frame = 0
 2869              		@ frame_needed = 0, uses_anonymous_args = 0
 2870              	.LVL246:
2940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2871              		.loc 1 2940 0
 2872 0000 40B9     		cbnz	r0, .L266
 2873              	.LBB150:
 2874              	.LBB151:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2875              		.loc 2 156 0
 2876              		.syntax unified
 2877              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2878 0002 4FF02003 			mov r3, #32												
 2879 0006 83F31188 		msr basepri, r3											
 2880 000a BFF36F8F 		isb														
 2881 000e BFF34F8F 		dsb														
 2882              	
 2883              	@ 0 "" 2
 2884              	.LVL247:
 2885              		.thumb
 2886              		.syntax unified
 2887              	.L267:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 149


 2888 0012 FEE7     		b	.L267
 2889              	.L266:
 2890 0014 0346     		mov	r3, r0
 2891              	.LBE151:
 2892              	.LBE150:
2944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2893              		.loc 1 2944 0
 2894 0016 1048     		ldr	r0, .L271
 2895              	.LVL248:
 2896 0018 D0F81801 		ldr	r0, [r0, #280]
 2897 001c 40B9     		cbnz	r0, .L268
 2898              	.LBB152:
 2899              	.LBB153:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2900              		.loc 2 156 0
 2901              		.syntax unified
 2902              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2903 001e 4FF02003 			mov r3, #32												
 2904 0022 83F31188 		msr basepri, r3											
 2905 0026 BFF36F8F 		isb														
 2906 002a BFF34F8F 		dsb														
 2907              	
 2908              	@ 0 "" 2
 2909              	.LVL249:
 2910              		.thumb
 2911              		.syntax unified
 2912              	.L269:
 2913 002e FEE7     		b	.L269
 2914              	.LVL250:
 2915              	.L268:
 2916              	.LBE153:
 2917              	.LBE152:
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 2918              		.loc 1 2939 0
 2919 0030 10B5     		push	{r4, lr}
 2920              		.cfi_def_cfa_offset 8
 2921              		.cfi_offset 4, -8
 2922              		.cfi_offset 14, -4
 2923 0032 1846     		mov	r0, r3
 2924 0034 1446     		mov	r4, r2
 2925 0036 0B46     		mov	r3, r1
 2926              	.LVL251:
2949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2927              		.loc 1 2949 0
 2928 0038 074A     		ldr	r2, .L271
 2929              	.LVL252:
 2930 003a D2F80011 		ldr	r1, [r2, #256]
 2931              	.LVL253:
 2932 003e 43F00043 		orr	r3, r3, #-2147483648
 2933              	.LVL254:
 2934 0042 8B61     		str	r3, [r1, #24]
2956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2935              		.loc 1 2956 0
 2936 0044 D2F80011 		ldr	r1, [r2, #256]
 2937 0048 1831     		adds	r1, r1, #24
 2938 004a FFF7FEFF 		bl	vListInsertEnd
 2939              	.LVL255:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 150


2958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 2940              		.loc 1 2958 0
 2941 004e 0121     		movs	r1, #1
 2942 0050 2046     		mov	r0, r4
 2943 0052 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2944              	.LVL256:
 2945 0056 10BD     		pop	{r4, pc}
 2946              	.LVL257:
 2947              	.L272:
 2948              		.align	2
 2949              	.L271:
 2950 0058 00000000 		.word	.LANCHOR0
 2951              		.cfi_endproc
 2952              	.LFE686:
 2953              		.size	vTaskPlaceOnUnorderedEventList, .-vTaskPlaceOnUnorderedEventList
 2954              		.section	.text.vTaskPlaceOnEventListRestricted,"ax",%progbits
 2955              		.align	2
 2956              		.global	vTaskPlaceOnEventListRestricted
 2957              		.thumb
 2958              		.thumb_func
 2959              		.type	vTaskPlaceOnEventListRestricted, %function
 2960              	vTaskPlaceOnEventListRestricted:
 2961              	.LFB687:
2965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxEventList );
 2962              		.loc 1 2965 0
 2963              		.cfi_startproc
 2964              		@ args = 0, pretend = 0, frame = 0
 2965              		@ frame_needed = 0, uses_anonymous_args = 0
 2966              	.LVL258:
 2967 0000 38B5     		push	{r3, r4, r5, lr}
 2968              		.cfi_def_cfa_offset 16
 2969              		.cfi_offset 3, -16
 2970              		.cfi_offset 4, -12
 2971              		.cfi_offset 5, -8
 2972              		.cfi_offset 14, -4
2966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2973              		.loc 1 2966 0
 2974 0002 40B9     		cbnz	r0, .L274
 2975              	.LBB154:
 2976              	.LBB155:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2977              		.loc 2 156 0
 2978              		.syntax unified
 2979              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2980 0004 4FF02003 			mov r3, #32												
 2981 0008 83F31188 		msr basepri, r3											
 2982 000c BFF36F8F 		isb														
 2983 0010 BFF34F8F 		dsb														
 2984              	
 2985              	@ 0 "" 2
 2986              	.LVL259:
 2987              		.thumb
 2988              		.syntax unified
 2989              	.L275:
 2990 0014 FEE7     		b	.L275
 2991              	.L274:
 2992 0016 0C46     		mov	r4, r1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 151


 2993 0018 1546     		mov	r5, r2
 2994              	.LBE155:
 2995              	.LBE154:
2978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2996              		.loc 1 2978 0
 2997 001a 074A     		ldr	r2, .L279
 2998              	.LVL260:
 2999 001c D2F80011 		ldr	r1, [r2, #256]
 3000              	.LVL261:
 3001 0020 1831     		adds	r1, r1, #24
 3002 0022 FFF7FEFF 		bl	vListInsertEnd
 3003              	.LVL262:
2983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3004              		.loc 1 2983 0
 3005 0026 0DB1     		cbz	r5, .L276
2985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3006              		.loc 1 2985 0
 3007 0028 4FF0FF34 		mov	r4, #-1
 3008              	.LVL263:
 3009              	.L276:
2989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3010              		.loc 1 2989 0
 3011 002c 2946     		mov	r1, r5
 3012 002e 2046     		mov	r0, r4
 3013 0030 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3014              	.LVL264:
 3015 0034 38BD     		pop	{r3, r4, r5, pc}
 3016              	.LVL265:
 3017              	.L280:
 3018 0036 00BF     		.align	2
 3019              	.L279:
 3020 0038 00000000 		.word	.LANCHOR0
 3021              		.cfi_endproc
 3022              	.LFE687:
 3023              		.size	vTaskPlaceOnEventListRestricted, .-vTaskPlaceOnEventListRestricted
 3024              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 3025              		.align	2
 3026              		.global	xTaskRemoveFromEventList
 3027              		.thumb
 3028              		.thumb_func
 3029              		.type	xTaskRemoveFromEventList, %function
 3030              	xTaskRemoveFromEventList:
 3031              	.LFB688:
2996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3032              		.loc 1 2996 0
 3033              		.cfi_startproc
 3034              		@ args = 0, pretend = 0, frame = 0
 3035              		@ frame_needed = 0, uses_anonymous_args = 0
 3036              	.LVL266:
 3037 0000 38B5     		push	{r3, r4, r5, lr}
 3038              		.cfi_def_cfa_offset 16
 3039              		.cfi_offset 3, -16
 3040              		.cfi_offset 4, -12
 3041              		.cfi_offset 5, -8
 3042              		.cfi_offset 14, -4
3013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3043              		.loc 1 3013 0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 152


 3044 0002 C368     		ldr	r3, [r0, #12]
 3045 0004 DC68     		ldr	r4, [r3, #12]
 3046              	.LVL267:
3014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3047              		.loc 1 3014 0
 3048 0006 44B9     		cbnz	r4, .L282
 3049              	.LBB156:
 3050              	.LBB157:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3051              		.loc 2 156 0
 3052              		.syntax unified
 3053              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3054 0008 4FF02003 			mov r3, #32												
 3055 000c 83F31188 		msr basepri, r3											
 3056 0010 BFF36F8F 		isb														
 3057 0014 BFF34F8F 		dsb														
 3058              	
 3059              	@ 0 "" 2
 3060              	.LVL268:
 3061              		.thumb
 3062              		.syntax unified
 3063              	.L283:
 3064 0018 FEE7     		b	.L283
 3065              	.L282:
 3066              	.LBE157:
 3067              	.LBE156:
3015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3068              		.loc 1 3015 0
 3069 001a 04F11805 		add	r5, r4, #24
 3070 001e 2846     		mov	r0, r5
 3071              	.LVL269:
 3072 0020 FFF7FEFF 		bl	uxListRemove
 3073              	.LVL270:
3017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3074              		.loc 1 3017 0
 3075 0024 154B     		ldr	r3, .L290
 3076 0026 D3F81831 		ldr	r3, [r3, #280]
 3077 002a ABB9     		cbnz	r3, .L284
3019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3078              		.loc 1 3019 0
 3079 002c 251D     		adds	r5, r4, #4
 3080 002e 2846     		mov	r0, r5
 3081 0030 FFF7FEFF 		bl	uxListRemove
 3082              	.LVL271:
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3083              		.loc 1 3020 0
 3084 0034 E36A     		ldr	r3, [r4, #44]
 3085 0036 114A     		ldr	r2, .L290
 3086 0038 D2F80C21 		ldr	r2, [r2, #268]
 3087 003c 9342     		cmp	r3, r2
 3088 003e 02D9     		bls	.L285
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3089              		.loc 1 3020 0 is_stmt 0 discriminator 1
 3090 0040 0E4A     		ldr	r2, .L290
 3091 0042 C2F80C31 		str	r3, [r2, #268]
 3092              	.L285:
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 153


 3093              		.loc 1 3020 0 discriminator 3
 3094 0046 03EB8303 		add	r3, r3, r3, lsl #2
 3095 004a 9A00     		lsls	r2, r3, #2
 3096 004c 2946     		mov	r1, r5
 3097 004e 0C48     		ldr	r0, .L290+4
 3098 0050 1044     		add	r0, r0, r2
 3099 0052 FFF7FEFF 		bl	vListInsertEnd
 3100              	.LVL272:
 3101 0056 03E0     		b	.L286
 3102              	.L284:
3026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3103              		.loc 1 3026 0 is_stmt 1
 3104 0058 2946     		mov	r1, r5
 3105 005a 0A48     		ldr	r0, .L290+8
 3106 005c FFF7FEFF 		bl	vListInsertEnd
 3107              	.LVL273:
 3108              	.L286:
3029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3109              		.loc 1 3029 0
 3110 0060 E26A     		ldr	r2, [r4, #44]
 3111 0062 064B     		ldr	r3, .L290
 3112 0064 D3F80031 		ldr	r3, [r3, #256]
 3113 0068 DB6A     		ldr	r3, [r3, #44]
 3114 006a 9A42     		cmp	r2, r3
 3115 006c 04D9     		bls	.L288
 3116              	.LVL274:
3038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3117              		.loc 1 3038 0
 3118 006e 0120     		movs	r0, #1
 3119 0070 024B     		ldr	r3, .L290
 3120 0072 C3F82801 		str	r0, [r3, #296]
 3121 0076 38BD     		pop	{r3, r4, r5, pc}
 3122              	.LVL275:
 3123              	.L288:
3042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3124              		.loc 1 3042 0
 3125 0078 0020     		movs	r0, #0
 3126              	.LVL276:
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 3127              		.loc 1 3060 0
 3128 007a 38BD     		pop	{r3, r4, r5, pc}
 3129              	.LVL277:
 3130              	.L291:
 3131              		.align	2
 3132              	.L290:
 3133 007c 00000000 		.word	.LANCHOR0
 3134 0080 30000000 		.word	.LANCHOR0+48
 3135 0084 14000000 		.word	.LANCHOR0+20
 3136              		.cfi_endproc
 3137              	.LFE688:
 3138              		.size	xTaskRemoveFromEventList, .-xTaskRemoveFromEventList
 3139              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 3140              		.align	2
 3141              		.global	vTaskRemoveFromUnorderedEventList
 3142              		.thumb
 3143              		.thumb_func
 3144              		.type	vTaskRemoveFromUnorderedEventList, %function
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 154


 3145              	vTaskRemoveFromUnorderedEventList:
 3146              	.LFB689:
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3147              		.loc 1 3064 0
 3148              		.cfi_startproc
 3149              		@ args = 0, pretend = 0, frame = 0
 3150              		@ frame_needed = 0, uses_anonymous_args = 0
 3151              	.LVL278:
3069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3152              		.loc 1 3069 0
 3153 0000 1F4B     		ldr	r3, .L300
 3154 0002 D3F81831 		ldr	r3, [r3, #280]
 3155 0006 43B9     		cbnz	r3, .L293
 3156              	.LBB158:
 3157              	.LBB159:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3158              		.loc 2 156 0
 3159              		.syntax unified
 3160              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3161 0008 4FF02003 			mov r3, #32												
 3162 000c 83F31188 		msr basepri, r3											
 3163 0010 BFF36F8F 		isb														
 3164 0014 BFF34F8F 		dsb														
 3165              	
 3166              	@ 0 "" 2
 3167              	.LVL279:
 3168              		.thumb
 3169              		.syntax unified
 3170              	.L294:
 3171 0018 FEE7     		b	.L294
 3172              	.L293:
 3173              	.LBE159:
 3174              	.LBE158:
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3175              		.loc 1 3064 0
 3176 001a 70B5     		push	{r4, r5, r6, lr}
 3177              		.cfi_def_cfa_offset 16
 3178              		.cfi_offset 4, -16
 3179              		.cfi_offset 5, -12
 3180              		.cfi_offset 6, -8
 3181              		.cfi_offset 14, -4
3072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3182              		.loc 1 3072 0
 3183 001c 41F00043 		orr	r3, r1, #-2147483648
 3184 0020 0360     		str	r3, [r0]
3076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3185              		.loc 1 3076 0
 3186 0022 C468     		ldr	r4, [r0, #12]
 3187              	.LVL280:
3077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3188              		.loc 1 3077 0
 3189 0024 44B9     		cbnz	r4, .L295
 3190              	.LBB160:
 3191              	.LBB161:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3192              		.loc 2 156 0
 3193              		.syntax unified
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 155


 3194              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3195 0026 4FF02003 			mov r3, #32												
 3196 002a 83F31188 		msr basepri, r3											
 3197 002e BFF36F8F 		isb														
 3198 0032 BFF34F8F 		dsb														
 3199              	
 3200              	@ 0 "" 2
 3201              	.LVL281:
 3202              		.thumb
 3203              		.syntax unified
 3204              	.L296:
 3205 0036 FEE7     		b	.L296
 3206              	.L295:
 3207              	.LBE161:
 3208              	.LBE160:
3078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3209              		.loc 1 3078 0
 3210 0038 FFF7FEFF 		bl	uxListRemove
 3211              	.LVL282:
3083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3212              		.loc 1 3083 0
 3213 003c 261D     		adds	r6, r4, #4
 3214 003e 3046     		mov	r0, r6
 3215 0040 FFF7FEFF 		bl	uxListRemove
 3216              	.LVL283:
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3217              		.loc 1 3084 0
 3218 0044 E36A     		ldr	r3, [r4, #44]
 3219 0046 0E4A     		ldr	r2, .L300
 3220 0048 D2F80C21 		ldr	r2, [r2, #268]
 3221 004c 9342     		cmp	r3, r2
 3222 004e 02D9     		bls	.L297
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3223              		.loc 1 3084 0 is_stmt 0 discriminator 1
 3224 0050 0B4A     		ldr	r2, .L300
 3225 0052 C2F80C31 		str	r3, [r2, #268]
 3226              	.L297:
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3227              		.loc 1 3084 0 discriminator 3
 3228 0056 0A4D     		ldr	r5, .L300
 3229 0058 05F13000 		add	r0, r5, #48
 3230 005c 03EB8303 		add	r3, r3, r3, lsl #2
 3231 0060 9A00     		lsls	r2, r3, #2
 3232 0062 3146     		mov	r1, r6
 3233 0064 1044     		add	r0, r0, r2
 3234 0066 FFF7FEFF 		bl	vListInsertEnd
 3235              	.LVL284:
3086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3236              		.loc 1 3086 0 is_stmt 1 discriminator 3
 3237 006a E26A     		ldr	r2, [r4, #44]
 3238 006c D5F80031 		ldr	r3, [r5, #256]
 3239 0070 DB6A     		ldr	r3, [r3, #44]
 3240 0072 9A42     		cmp	r2, r3
 3241 0074 02D9     		bls	.L292
3092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3242              		.loc 1 3092 0
 3243 0076 0122     		movs	r2, #1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 156


 3244 0078 C5F82821 		str	r2, [r5, #296]
 3245              	.L292:
 3246 007c 70BD     		pop	{r4, r5, r6, pc}
 3247              	.LVL285:
 3248              	.L301:
 3249 007e 00BF     		.align	2
 3250              	.L300:
 3251 0080 00000000 		.word	.LANCHOR0
 3252              		.cfi_endproc
 3253              	.LFE689:
 3254              		.size	vTaskRemoveFromUnorderedEventList, .-vTaskRemoveFromUnorderedEventList
 3255              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 3256              		.align	2
 3257              		.global	vTaskSetTimeOutState
 3258              		.thumb
 3259              		.thumb_func
 3260              		.type	vTaskSetTimeOutState, %function
 3261              	vTaskSetTimeOutState:
 3262              	.LFB690:
3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
 3263              		.loc 1 3098 0
 3264              		.cfi_startproc
 3265              		@ args = 0, pretend = 0, frame = 0
 3266              		@ frame_needed = 0, uses_anonymous_args = 0
 3267              	.LVL286:
3099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
 3268              		.loc 1 3099 0
 3269 0000 40B9     		cbnz	r0, .L303
 3270              	.LBB162:
 3271              	.LBB163:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3272              		.loc 2 156 0
 3273              		.syntax unified
 3274              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3275 0002 4FF02003 			mov r3, #32												
 3276 0006 83F31188 		msr basepri, r3											
 3277 000a BFF36F8F 		isb														
 3278 000e BFF34F8F 		dsb														
 3279              	
 3280              	@ 0 "" 2
 3281              	.LVL287:
 3282              		.thumb
 3283              		.syntax unified
 3284              	.L304:
 3285 0012 FEE7     		b	.L304
 3286              	.L303:
 3287              	.LBE163:
 3288              	.LBE162:
3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
 3289              		.loc 1 3098 0
 3290 0014 10B5     		push	{r4, lr}
 3291              		.cfi_def_cfa_offset 8
 3292              		.cfi_offset 4, -8
 3293              		.cfi_offset 14, -4
 3294 0016 0446     		mov	r4, r0
3100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3295              		.loc 1 3100 0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 157


 3296 0018 FFF7FEFF 		bl	vPortEnterCritical
 3297              	.LVL288:
3102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 3298              		.loc 1 3102 0
 3299 001c 044B     		ldr	r3, .L306
 3300 001e D3F82021 		ldr	r2, [r3, #288]
 3301 0022 2260     		str	r2, [r4]
3103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3302              		.loc 1 3103 0
 3303 0024 D3F81431 		ldr	r3, [r3, #276]
 3304 0028 6360     		str	r3, [r4, #4]
3105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 3305              		.loc 1 3105 0
 3306 002a FFF7FEFF 		bl	vPortExitCritical
 3307              	.LVL289:
 3308 002e 10BD     		pop	{r4, pc}
 3309              	.LVL290:
 3310              	.L307:
 3311              		.align	2
 3312              	.L306:
 3313 0030 00000000 		.word	.LANCHOR0
 3314              		.cfi_endproc
 3315              	.LFE690:
 3316              		.size	vTaskSetTimeOutState, .-vTaskSetTimeOutState
 3317              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 3318              		.align	2
 3319              		.global	vTaskInternalSetTimeOutState
 3320              		.thumb
 3321              		.thumb_func
 3322              		.type	vTaskInternalSetTimeOutState, %function
 3323              	vTaskInternalSetTimeOutState:
 3324              	.LFB691:
3110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
 3325              		.loc 1 3110 0
 3326              		.cfi_startproc
 3327              		@ args = 0, pretend = 0, frame = 0
 3328              		@ frame_needed = 0, uses_anonymous_args = 0
 3329              		@ link register save eliminated.
 3330              	.LVL291:
3112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3331              		.loc 1 3112 0
 3332 0000 034B     		ldr	r3, .L309
 3333 0002 D3F82021 		ldr	r2, [r3, #288]
 3334 0006 0260     		str	r2, [r0]
3113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 3335              		.loc 1 3113 0
 3336 0008 D3F81431 		ldr	r3, [r3, #276]
 3337 000c 4360     		str	r3, [r0, #4]
 3338 000e 7047     		bx	lr
 3339              	.L310:
 3340              		.align	2
 3341              	.L309:
 3342 0010 00000000 		.word	.LANCHOR0
 3343              		.cfi_endproc
 3344              	.LFE691:
 3345              		.size	vTaskInternalSetTimeOutState, .-vTaskInternalSetTimeOutState
 3346              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 158


 3347              		.align	2
 3348              		.global	xTaskCheckForTimeOut
 3349              		.thumb
 3350              		.thumb_func
 3351              		.type	xTaskCheckForTimeOut, %function
 3352              	xTaskCheckForTimeOut:
 3353              	.LFB692:
3118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
 3354              		.loc 1 3118 0
 3355              		.cfi_startproc
 3356              		@ args = 0, pretend = 0, frame = 0
 3357              		@ frame_needed = 0, uses_anonymous_args = 0
 3358              	.LVL292:
 3359 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3360              		.cfi_def_cfa_offset 24
 3361              		.cfi_offset 3, -24
 3362              		.cfi_offset 4, -20
 3363              		.cfi_offset 5, -16
 3364              		.cfi_offset 6, -12
 3365              		.cfi_offset 7, -8
 3366              		.cfi_offset 14, -4
3121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3367              		.loc 1 3121 0
 3368 0002 40B9     		cbnz	r0, .L312
 3369              	.LBB164:
 3370              	.LBB165:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3371              		.loc 2 156 0
 3372              		.syntax unified
 3373              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3374 0004 4FF02003 			mov r3, #32												
 3375 0008 83F31188 		msr basepri, r3											
 3376 000c BFF36F8F 		isb														
 3377 0010 BFF34F8F 		dsb														
 3378              	
 3379              	@ 0 "" 2
 3380              	.LVL293:
 3381              		.thumb
 3382              		.syntax unified
 3383              	.L313:
 3384 0014 FEE7     		b	.L313
 3385              	.L312:
 3386 0016 0546     		mov	r5, r0
 3387              	.LBE165:
 3388              	.LBE164:
3122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3389              		.loc 1 3122 0
 3390 0018 41B9     		cbnz	r1, .L314
 3391              	.LBB166:
 3392              	.LBB167:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3393              		.loc 2 156 0
 3394              		.syntax unified
 3395              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3396 001a 4FF02003 			mov r3, #32												
 3397 001e 83F31188 		msr basepri, r3											
 3398 0022 BFF36F8F 		isb														
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 159


 3399 0026 BFF34F8F 		dsb														
 3400              	
 3401              	@ 0 "" 2
 3402              	.LVL294:
 3403              		.thumb
 3404              		.syntax unified
 3405              	.L315:
 3406 002a FEE7     		b	.L315
 3407              	.L314:
 3408 002c 0C46     		mov	r4, r1
 3409              	.LBE167:
 3410              	.LBE166:
3124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3411              		.loc 1 3124 0
 3412 002e FFF7FEFF 		bl	vPortEnterCritical
 3413              	.LVL295:
 3414              	.LBB168:
3127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 3415              		.loc 1 3127 0
 3416 0032 124B     		ldr	r3, .L322
 3417 0034 D3F81401 		ldr	r0, [r3, #276]
 3418              	.LVL296:
3128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3419              		.loc 1 3128 0
 3420 0038 6968     		ldr	r1, [r5, #4]
 3421 003a 421A     		subs	r2, r0, r1
 3422              	.LVL297:
3142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3423              		.loc 1 3142 0
 3424 003c 2368     		ldr	r3, [r4]
 3425 003e B3F1FF3F 		cmp	r3, #-1
 3426 0042 14D0     		beq	.L319
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3427              		.loc 1 3152 0
 3428 0044 2F68     		ldr	r7, [r5]
 3429 0046 0D4E     		ldr	r6, .L322
 3430 0048 D6F82061 		ldr	r6, [r6, #288]
 3431 004c B742     		cmp	r7, r6
 3432 004e 01D0     		beq	.L317
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3433              		.loc 1 3152 0 is_stmt 0 discriminator 1
 3434 0050 8842     		cmp	r0, r1
 3435 0052 0ED2     		bcs	.L320
 3436              	.L317:
3161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3437              		.loc 1 3161 0 is_stmt 1
 3438 0054 9A42     		cmp	r2, r3
 3439 0056 06D2     		bcs	.L318
3164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 3440              		.loc 1 3164 0
 3441 0058 9B1A     		subs	r3, r3, r2
 3442 005a 2360     		str	r3, [r4]
3165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFALSE;
 3443              		.loc 1 3165 0
 3444 005c 2846     		mov	r0, r5
 3445              	.LVL298:
 3446 005e FFF7FEFF 		bl	vTaskInternalSetTimeOutState
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 160


 3447              	.LVL299:
3166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3448              		.loc 1 3166 0
 3449 0062 0024     		movs	r4, #0
 3450              	.LVL300:
 3451 0064 06E0     		b	.L316
 3452              	.LVL301:
 3453              	.L318:
3170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdTRUE;
 3454              		.loc 1 3170 0
 3455 0066 0023     		movs	r3, #0
 3456 0068 2360     		str	r3, [r4]
 3457              	.LVL302:
3171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3458              		.loc 1 3171 0
 3459 006a 0124     		movs	r4, #1
 3460              	.LVL303:
 3461 006c 02E0     		b	.L316
 3462              	.LVL304:
 3463              	.L319:
3147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3464              		.loc 1 3147 0
 3465 006e 0024     		movs	r4, #0
 3466              	.LVL305:
 3467 0070 00E0     		b	.L316
 3468              	.LVL306:
 3469              	.L320:
3159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3470              		.loc 1 3159 0
 3471 0072 0124     		movs	r4, #1
 3472              	.LVL307:
 3473              	.L316:
 3474              	.LBE168:
3174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3475              		.loc 1 3174 0
 3476 0074 FFF7FEFF 		bl	vPortExitCritical
 3477              	.LVL308:
3177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 3478              		.loc 1 3177 0
 3479 0078 2046     		mov	r0, r4
 3480 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3481              	.LVL309:
 3482              	.L323:
 3483              		.align	2
 3484              	.L322:
 3485 007c 00000000 		.word	.LANCHOR0
 3486              		.cfi_endproc
 3487              	.LFE692:
 3488              		.size	xTaskCheckForTimeOut, .-xTaskCheckForTimeOut
 3489              		.section	.text.vTaskMissedYield,"ax",%progbits
 3490              		.align	2
 3491              		.global	vTaskMissedYield
 3492              		.thumb
 3493              		.thumb_func
 3494              		.type	vTaskMissedYield, %function
 3495              	vTaskMissedYield:
 3496              	.LFB693:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 161


3181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xYieldPending = pdTRUE;
 3497              		.loc 1 3181 0
 3498              		.cfi_startproc
 3499              		@ args = 0, pretend = 0, frame = 0
 3500              		@ frame_needed = 0, uses_anonymous_args = 0
 3501              		@ link register save eliminated.
3182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 3502              		.loc 1 3182 0
 3503 0000 0122     		movs	r2, #1
 3504 0002 024B     		ldr	r3, .L325
 3505 0004 C3F82821 		str	r2, [r3, #296]
 3506 0008 7047     		bx	lr
 3507              	.L326:
 3508 000a 00BF     		.align	2
 3509              	.L325:
 3510 000c 00000000 		.word	.LANCHOR0
 3511              		.cfi_endproc
 3512              	.LFE693:
 3513              		.size	vTaskMissedYield, .-vTaskMissedYield
 3514              		.section	.text.vTaskSetThreadLocalStoragePointer,"ax",%progbits
 3515              		.align	2
 3516              		.global	vTaskSetThreadLocalStoragePointer
 3517              		.thumb
 3518              		.thumb_func
 3519              		.type	vTaskSetThreadLocalStoragePointer, %function
 3520              	vTaskSetThreadLocalStoragePointer:
 3521              	.LFB695:
3395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 3522              		.loc 1 3395 0
 3523              		.cfi_startproc
 3524              		@ args = 0, pretend = 0, frame = 0
 3525              		@ frame_needed = 0, uses_anonymous_args = 0
 3526              		@ link register save eliminated.
 3527              	.LVL310:
3398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3528              		.loc 1 3398 0
 3529 0000 0429     		cmp	r1, #4
 3530 0002 07DC     		bgt	.L327
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
 3531              		.loc 1 3400 0
 3532 0004 10B9     		cbnz	r0, .L329
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
 3533              		.loc 1 3400 0 is_stmt 0 discriminator 1
 3534 0006 044B     		ldr	r3, .L330
 3535 0008 D3F80001 		ldr	r0, [r3, #256]
 3536              	.LVL311:
 3537              	.L329:
3401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3538              		.loc 1 3401 0 is_stmt 1 discriminator 4
 3539 000c 1031     		adds	r1, r1, #16
 3540              	.LVL312:
 3541 000e 00EB8101 		add	r1, r0, r1, lsl #2
 3542              	.LVL313:
 3543 0012 4A60     		str	r2, [r1, #4]
 3544              	.LVL314:
 3545              	.L327:
 3546 0014 7047     		bx	lr
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 162


 3547              	.L331:
 3548 0016 00BF     		.align	2
 3549              	.L330:
 3550 0018 00000000 		.word	.LANCHOR0
 3551              		.cfi_endproc
 3552              	.LFE695:
 3553              		.size	vTaskSetThreadLocalStoragePointer, .-vTaskSetThreadLocalStoragePointer
 3554              		.section	.text.pvTaskGetThreadLocalStoragePointer,"ax",%progbits
 3555              		.align	2
 3556              		.global	pvTaskGetThreadLocalStoragePointer
 3557              		.thumb
 3558              		.thumb_func
 3559              		.type	pvTaskGetThreadLocalStoragePointer, %function
 3560              	pvTaskGetThreadLocalStoragePointer:
 3561              	.LFB696:
3411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvReturn = NULL;
 3562              		.loc 1 3411 0
 3563              		.cfi_startproc
 3564              		@ args = 0, pretend = 0, frame = 0
 3565              		@ frame_needed = 0, uses_anonymous_args = 0
 3566              		@ link register save eliminated.
 3567              	.LVL315:
3415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3568              		.loc 1 3415 0
 3569 0000 0429     		cmp	r1, #4
 3570 0002 08DC     		bgt	.L335
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
 3571              		.loc 1 3417 0
 3572 0004 10B9     		cbnz	r0, .L334
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
 3573              		.loc 1 3417 0 is_stmt 0 discriminator 1
 3574 0006 054B     		ldr	r3, .L336
 3575 0008 D3F80001 		ldr	r0, [r3, #256]
 3576              	.LVL316:
 3577              	.L334:
3418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3578              		.loc 1 3418 0 is_stmt 1 discriminator 4
 3579 000c 1031     		adds	r1, r1, #16
 3580              	.LVL317:
 3581 000e 00EB8100 		add	r0, r0, r1, lsl #2
 3582              	.LVL318:
 3583 0012 4068     		ldr	r0, [r0, #4]
 3584              	.LVL319:
 3585 0014 7047     		bx	lr
 3586              	.LVL320:
 3587              	.L335:
3422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3588              		.loc 1 3422 0
 3589 0016 0020     		movs	r0, #0
 3590              	.LVL321:
3426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3591              		.loc 1 3426 0
 3592 0018 7047     		bx	lr
 3593              	.L337:
 3594 001a 00BF     		.align	2
 3595              	.L336:
 3596 001c 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 163


 3597              		.cfi_endproc
 3598              	.LFE696:
 3599              		.size	pvTaskGetThreadLocalStoragePointer, .-pvTaskGetThreadLocalStoragePointer
 3600              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 3601              		.align	2
 3602              		.global	xTaskGetCurrentTaskHandle
 3603              		.thumb
 3604              		.thumb_func
 3605              		.type	xTaskGetCurrentTaskHandle, %function
 3606              	xTaskGetCurrentTaskHandle:
 3607              	.LFB701:
3768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xReturn;
 3608              		.loc 1 3768 0
 3609              		.cfi_startproc
 3610              		@ args = 0, pretend = 0, frame = 0
 3611              		@ frame_needed = 0, uses_anonymous_args = 0
 3612              		@ link register save eliminated.
3774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3613              		.loc 1 3774 0
 3614 0000 014B     		ldr	r3, .L339
 3615 0002 D3F80001 		ldr	r0, [r3, #256]
 3616              	.LVL322:
3777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3617              		.loc 1 3777 0
 3618 0006 7047     		bx	lr
 3619              	.L340:
 3620              		.align	2
 3621              	.L339:
 3622 0008 00000000 		.word	.LANCHOR0
 3623              		.cfi_endproc
 3624              	.LFE701:
 3625              		.size	xTaskGetCurrentTaskHandle, .-xTaskGetCurrentTaskHandle
 3626              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 3627              		.align	2
 3628              		.global	xTaskGetSchedulerState
 3629              		.thumb
 3630              		.thumb_func
 3631              		.type	xTaskGetSchedulerState, %function
 3632              	xTaskGetSchedulerState:
 3633              	.LFB702:
3785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
 3634              		.loc 1 3785 0
 3635              		.cfi_startproc
 3636              		@ args = 0, pretend = 0, frame = 0
 3637              		@ frame_needed = 0, uses_anonymous_args = 0
 3638              		@ link register save eliminated.
3788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3639              		.loc 1 3788 0
 3640 0000 064B     		ldr	r3, .L345
 3641 0002 D3F80431 		ldr	r3, [r3, #260]
 3642 0006 2BB1     		cbz	r3, .L343
3794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3643              		.loc 1 3794 0
 3644 0008 044B     		ldr	r3, .L345
 3645 000a D3F81831 		ldr	r3, [r3, #280]
 3646 000e 1BB9     		cbnz	r3, .L344
3796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 164


 3647              		.loc 1 3796 0
 3648 0010 0220     		movs	r0, #2
 3649 0012 7047     		bx	lr
 3650              	.L343:
3790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3651              		.loc 1 3790 0
 3652 0014 0120     		movs	r0, #1
 3653 0016 7047     		bx	lr
 3654              	.L344:
3800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3655              		.loc 1 3800 0
 3656 0018 0020     		movs	r0, #0
 3657              	.LVL323:
3805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3658              		.loc 1 3805 0
 3659 001a 7047     		bx	lr
 3660              	.L346:
 3661              		.align	2
 3662              	.L345:
 3663 001c 00000000 		.word	.LANCHOR0
 3664              		.cfi_endproc
 3665              	.LFE702:
 3666              		.size	xTaskGetSchedulerState, .-xTaskGetSchedulerState
 3667              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 3668              		.align	2
 3669              		.global	uxTaskResetEventItemValue
 3670              		.thumb
 3671              		.thumb_func
 3672              		.type	uxTaskResetEventItemValue, %function
 3673              	uxTaskResetEventItemValue:
 3674              	.LFB703:
4394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t uxReturn;
 3675              		.loc 1 4394 0
 3676              		.cfi_startproc
 3677              		@ args = 0, pretend = 0, frame = 0
 3678              		@ frame_needed = 0, uses_anonymous_args = 0
 3679              		@ link register save eliminated.
4397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3680              		.loc 1 4397 0
 3681 0000 064B     		ldr	r3, .L348
 3682 0002 D3F80021 		ldr	r2, [r3, #256]
 3683 0006 9069     		ldr	r0, [r2, #24]
 3684              	.LVL324:
4401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3685              		.loc 1 4401 0
 3686 0008 D3F80021 		ldr	r2, [r3, #256]
 3687 000c D3F80031 		ldr	r3, [r3, #256]
 3688 0010 DB6A     		ldr	r3, [r3, #44]
 3689 0012 C3F10703 		rsb	r3, r3, #7
 3690 0016 9361     		str	r3, [r2, #24]
4404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 3691              		.loc 1 4404 0
 3692 0018 7047     		bx	lr
 3693              	.L349:
 3694 001a 00BF     		.align	2
 3695              	.L348:
 3696 001c 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 165


 3697              		.cfi_endproc
 3698              	.LFE703:
 3699              		.size	uxTaskResetEventItemValue, .-uxTaskResetEventItemValue
 3700              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 3701              		.align	2
 3702              		.global	ulTaskNotifyTake
 3703              		.thumb
 3704              		.thumb_func
 3705              		.type	ulTaskNotifyTake, %function
 3706              	ulTaskNotifyTake:
 3707              	.LFB704:
4427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulReturn;
 3708              		.loc 1 4427 0
 3709              		.cfi_startproc
 3710              		@ args = 0, pretend = 0, frame = 0
 3711              		@ frame_needed = 0, uses_anonymous_args = 0
 3712              	.LVL325:
 3713 0000 38B5     		push	{r3, r4, r5, lr}
 3714              		.cfi_def_cfa_offset 16
 3715              		.cfi_offset 3, -16
 3716              		.cfi_offset 4, -12
 3717              		.cfi_offset 5, -8
 3718              		.cfi_offset 14, -4
 3719 0002 0546     		mov	r5, r0
 3720 0004 0C46     		mov	r4, r1
4430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3721              		.loc 1 4430 0
 3722 0006 FFF7FEFF 		bl	vPortEnterCritical
 3723              	.LVL326:
4433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3724              		.loc 1 4433 0
 3725 000a 1B4B     		ldr	r3, .L355
 3726 000c D3F80031 		ldr	r3, [r3, #256]
 3727 0010 9B6D     		ldr	r3, [r3, #88]
 3728 0012 93B9     		cbnz	r3, .L351
4436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3729              		.loc 1 4436 0
 3730 0014 184B     		ldr	r3, .L355
 3731 0016 D3F80031 		ldr	r3, [r3, #256]
 3732 001a 0122     		movs	r2, #1
 3733 001c 83F85C20 		strb	r2, [r3, #92]
4438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 3734              		.loc 1 4438 0
 3735 0020 5CB1     		cbz	r4, .L351
4440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 3736              		.loc 1 4440 0
 3737 0022 1146     		mov	r1, r2
 3738 0024 2046     		mov	r0, r4
 3739 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3740              	.LVL327:
4447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3741              		.loc 1 4447 0
 3742 002a 4FF08052 		mov	r2, #268435456
 3743 002e 134B     		ldr	r3, .L355+4
 3744 0030 1A60     		str	r2, [r3]
 3745              		.syntax unified
 3746              	@ 4447 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 166


 3747 0032 BFF34F8F 		dsb
 3748              	@ 0 "" 2
 3749              	@ 4447 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 3750 0036 BFF36F8F 		isb
 3751              	@ 0 "" 2
 3752              		.thumb
 3753              		.syntax unified
 3754              	.L351:
4459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3755              		.loc 1 4459 0
 3756 003a FFF7FEFF 		bl	vPortExitCritical
 3757              	.LVL328:
4461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3758              		.loc 1 4461 0
 3759 003e FFF7FEFF 		bl	vPortEnterCritical
 3760              	.LVL329:
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3761              		.loc 1 4464 0
 3762 0042 0D4B     		ldr	r3, .L355
 3763 0044 D3F80031 		ldr	r3, [r3, #256]
 3764 0048 9C6D     		ldr	r4, [r3, #88]
 3765              	.LVL330:
4466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3766              		.loc 1 4466 0
 3767 004a 5CB1     		cbz	r4, .L352
4468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 3768              		.loc 1 4468 0
 3769 004c 2DB1     		cbz	r5, .L353
4470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3770              		.loc 1 4470 0
 3771 004e 0A4B     		ldr	r3, .L355
 3772 0050 D3F80031 		ldr	r3, [r3, #256]
 3773 0054 0022     		movs	r2, #0
 3774 0056 9A65     		str	r2, [r3, #88]
 3775 0058 04E0     		b	.L352
 3776              	.L353:
4474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3777              		.loc 1 4474 0
 3778 005a 074B     		ldr	r3, .L355
 3779 005c D3F80031 		ldr	r3, [r3, #256]
 3780 0060 621E     		subs	r2, r4, #1
 3781 0062 9A65     		str	r2, [r3, #88]
 3782              	.L352:
4482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3783              		.loc 1 4482 0
 3784 0064 044B     		ldr	r3, .L355
 3785 0066 D3F80031 		ldr	r3, [r3, #256]
 3786 006a 0022     		movs	r2, #0
 3787 006c 83F85C20 		strb	r2, [r3, #92]
4484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3788              		.loc 1 4484 0
 3789 0070 FFF7FEFF 		bl	vPortExitCritical
 3790              	.LVL331:
4487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3791              		.loc 1 4487 0
 3792 0074 2046     		mov	r0, r4
 3793 0076 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 167


 3794              	.LVL332:
 3795              	.L356:
 3796              		.align	2
 3797              	.L355:
 3798 0078 00000000 		.word	.LANCHOR0
 3799 007c 04ED00E0 		.word	-536810236
 3800              		.cfi_endproc
 3801              	.LFE704:
 3802              		.size	ulTaskNotifyTake, .-ulTaskNotifyTake
 3803              		.section	.text.xTaskNotifyWait,"ax",%progbits
 3804              		.align	2
 3805              		.global	xTaskNotifyWait
 3806              		.thumb
 3807              		.thumb_func
 3808              		.type	xTaskNotifyWait, %function
 3809              	xTaskNotifyWait:
 3810              	.LFB705:
4495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
 3811              		.loc 1 4495 0
 3812              		.cfi_startproc
 3813              		@ args = 0, pretend = 0, frame = 0
 3814              		@ frame_needed = 0, uses_anonymous_args = 0
 3815              	.LVL333:
 3816 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3817              		.cfi_def_cfa_offset 24
 3818              		.cfi_offset 3, -24
 3819              		.cfi_offset 4, -20
 3820              		.cfi_offset 5, -16
 3821              		.cfi_offset 6, -12
 3822              		.cfi_offset 7, -8
 3823              		.cfi_offset 14, -4
 3824 0002 0746     		mov	r7, r0
 3825 0004 0D46     		mov	r5, r1
 3826 0006 1446     		mov	r4, r2
 3827 0008 1E46     		mov	r6, r3
4498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3828              		.loc 1 4498 0
 3829 000a FFF7FEFF 		bl	vPortEnterCritical
 3830              	.LVL334:
4501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3831              		.loc 1 4501 0
 3832 000e 234B     		ldr	r3, .L363
 3833 0010 D3F80031 		ldr	r3, [r3, #256]
 3834 0014 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3835 0018 DBB2     		uxtb	r3, r3
 3836 001a 022B     		cmp	r3, #2
 3837 001c 18D0     		beq	.L358
4506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3838              		.loc 1 4506 0
 3839 001e 1F4B     		ldr	r3, .L363
 3840 0020 D3F80021 		ldr	r2, [r3, #256]
 3841 0024 906D     		ldr	r0, [r2, #88]
 3842 0026 20EA0700 		bic	r0, r0, r7
 3843 002a 9065     		str	r0, [r2, #88]
4509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3844              		.loc 1 4509 0
 3845 002c D3F80031 		ldr	r3, [r3, #256]
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 168


 3846 0030 0122     		movs	r2, #1
 3847 0032 83F85C20 		strb	r2, [r3, #92]
4511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 3848              		.loc 1 4511 0
 3849 0036 5EB1     		cbz	r6, .L358
4513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 3850              		.loc 1 4513 0
 3851 0038 1146     		mov	r1, r2
 3852 003a 3046     		mov	r0, r6
 3853 003c FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3854              	.LVL335:
4520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3855              		.loc 1 4520 0
 3856 0040 4FF08052 		mov	r2, #268435456
 3857 0044 164B     		ldr	r3, .L363+4
 3858 0046 1A60     		str	r2, [r3]
 3859              		.syntax unified
 3860              	@ 4520 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 3861 0048 BFF34F8F 		dsb
 3862              	@ 0 "" 2
 3863              	@ 4520 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 3864 004c BFF36F8F 		isb
 3865              	@ 0 "" 2
 3866              		.thumb
 3867              		.syntax unified
 3868              	.L358:
4532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3869              		.loc 1 4532 0
 3870 0050 FFF7FEFF 		bl	vPortExitCritical
 3871              	.LVL336:
4534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3872              		.loc 1 4534 0
 3873 0054 FFF7FEFF 		bl	vPortEnterCritical
 3874              	.LVL337:
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3875              		.loc 1 4538 0
 3876 0058 24B1     		cbz	r4, .L359
4542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3877              		.loc 1 4542 0
 3878 005a 104B     		ldr	r3, .L363
 3879 005c D3F80031 		ldr	r3, [r3, #256]
 3880 0060 9B6D     		ldr	r3, [r3, #88]
 3881 0062 2360     		str	r3, [r4]
 3882              	.L359:
4549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3883              		.loc 1 4549 0
 3884 0064 0D4B     		ldr	r3, .L363
 3885 0066 D3F80031 		ldr	r3, [r3, #256]
 3886 006a 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3887 006e DBB2     		uxtb	r3, r3
 3888 0070 022B     		cmp	r3, #2
 3889 0072 08D1     		bne	.L361
4558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
 3890              		.loc 1 4558 0
 3891 0074 094B     		ldr	r3, .L363
 3892 0076 D3F80021 		ldr	r2, [r3, #256]
 3893 007a 936D     		ldr	r3, [r2, #88]
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 169


 3894 007c 23EA0505 		bic	r5, r3, r5
 3895              	.LVL338:
 3896 0080 9565     		str	r5, [r2, #88]
 3897              	.LVL339:
4559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3898              		.loc 1 4559 0
 3899 0082 0124     		movs	r4, #1
 3900              	.LVL340:
 3901 0084 00E0     		b	.L360
 3902              	.LVL341:
 3903              	.L361:
4552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3904              		.loc 1 4552 0
 3905 0086 0024     		movs	r4, #0
 3906              	.LVL342:
 3907              	.L360:
4562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3908              		.loc 1 4562 0
 3909 0088 044B     		ldr	r3, .L363
 3910 008a D3F80031 		ldr	r3, [r3, #256]
 3911 008e 0022     		movs	r2, #0
 3912 0090 83F85C20 		strb	r2, [r3, #92]
4564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3913              		.loc 1 4564 0
 3914 0094 FFF7FEFF 		bl	vPortExitCritical
 3915              	.LVL343:
4567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3916              		.loc 1 4567 0
 3917 0098 2046     		mov	r0, r4
 3918 009a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3919              	.LVL344:
 3920              	.L364:
 3921              		.align	2
 3922              	.L363:
 3923 009c 00000000 		.word	.LANCHOR0
 3924 00a0 04ED00E0 		.word	-536810236
 3925              		.cfi_endproc
 3926              	.LFE705:
 3927              		.size	xTaskNotifyWait, .-xTaskNotifyWait
 3928              		.section	.text.xTaskGenericNotify,"ax",%progbits
 3929              		.align	2
 3930              		.global	xTaskGenericNotify
 3931              		.thumb
 3932              		.thumb_func
 3933              		.type	xTaskGenericNotify, %function
 3934              	xTaskGenericNotify:
 3935              	.LFB706:
4575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
 3936              		.loc 1 4575 0
 3937              		.cfi_startproc
 3938              		@ args = 0, pretend = 0, frame = 0
 3939              		@ frame_needed = 0, uses_anonymous_args = 0
 3940              	.LVL345:
 3941 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3942              		.cfi_def_cfa_offset 24
 3943              		.cfi_offset 3, -24
 3944              		.cfi_offset 4, -20
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 170


 3945              		.cfi_offset 5, -16
 3946              		.cfi_offset 6, -12
 3947              		.cfi_offset 7, -8
 3948              		.cfi_offset 14, -4
 3949              	.LVL346:
4580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 3950              		.loc 1 4580 0
 3951 0002 40B9     		cbnz	r0, .L366
 3952              	.LBB169:
 3953              	.LBB170:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3954              		.loc 2 156 0
 3955              		.syntax unified
 3956              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3957 0004 4FF02003 			mov r3, #32												
 3958 0008 83F31188 		msr basepri, r3											
 3959 000c BFF36F8F 		isb														
 3960 0010 BFF34F8F 		dsb														
 3961              	
 3962              	@ 0 "" 2
 3963              	.LVL347:
 3964              		.thumb
 3965              		.syntax unified
 3966              	.L367:
 3967 0014 FEE7     		b	.L367
 3968              	.LVL348:
 3969              	.L366:
 3970 0016 0446     		mov	r4, r0
 3971 0018 1F46     		mov	r7, r3
 3972 001a 1546     		mov	r5, r2
 3973 001c 0E46     		mov	r6, r1
 3974              	.LVL349:
 3975              	.LBE170:
 3976              	.LBE169:
4583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3977              		.loc 1 4583 0
 3978 001e FFF7FEFF 		bl	vPortEnterCritical
 3979              	.LVL350:
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3980              		.loc 1 4585 0
 3981 0022 0FB1     		cbz	r7, .L368
4587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3982              		.loc 1 4587 0
 3983 0024 A36D     		ldr	r3, [r4, #88]
 3984 0026 3B60     		str	r3, [r7]
 3985              	.L368:
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3986              		.loc 1 4590 0
 3987 0028 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 3988 002c DBB2     		uxtb	r3, r3
 3989              	.LVL351:
4592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3990              		.loc 1 4592 0
 3991 002e 0222     		movs	r2, #2
 3992 0030 84F85C20 		strb	r2, [r4, #92]
4594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3993              		.loc 1 4594 0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 171


 3994 0034 6A1E     		subs	r2, r5, #1
 3995 0036 032A     		cmp	r2, #3
 3996 0038 15D8     		bhi	.L379
 3997 003a DFE802F0 		tbb	[pc, r2]
 3998              	.L371:
 3999 003e 02       		.byte	(.L370-.L371)/2
 4000 003f 07       		.byte	(.L372-.L371)/2
 4001 0040 0C       		.byte	(.L373-.L371)/2
 4002 0041 0F       		.byte	(.L374-.L371)/2
 4003              		.p2align 1
 4004              	.L370:
4597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4005              		.loc 1 4597 0
 4006 0042 A26D     		ldr	r2, [r4, #88]
 4007 0044 1643     		orrs	r6, r6, r2
 4008              	.LVL352:
 4009 0046 A665     		str	r6, [r4, #88]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4010              		.loc 1 4577 0
 4011 0048 0125     		movs	r5, #1
4598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4012              		.loc 1 4598 0
 4013 004a 0FE0     		b	.L369
 4014              	.LVL353:
 4015              	.L372:
4601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4016              		.loc 1 4601 0
 4017 004c A26D     		ldr	r2, [r4, #88]
 4018 004e 0132     		adds	r2, r2, #1
 4019 0050 A265     		str	r2, [r4, #88]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4020              		.loc 1 4577 0
 4021 0052 0125     		movs	r5, #1
4602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4022              		.loc 1 4602 0
 4023 0054 0AE0     		b	.L369
 4024              	.L373:
4605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4025              		.loc 1 4605 0
 4026 0056 A665     		str	r6, [r4, #88]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4027              		.loc 1 4577 0
 4028 0058 0125     		movs	r5, #1
4606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4029              		.loc 1 4606 0
 4030 005a 07E0     		b	.L369
 4031              	.L374:
4609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4032              		.loc 1 4609 0
 4033 005c 022B     		cmp	r3, #2
 4034 005e 04D0     		beq	.L380
4611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4035              		.loc 1 4611 0
 4036 0060 A665     		str	r6, [r4, #88]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4037              		.loc 1 4577 0
 4038 0062 0125     		movs	r5, #1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 172


 4039 0064 02E0     		b	.L369
 4040              	.L379:
 4041 0066 0125     		movs	r5, #1
 4042 0068 00E0     		b	.L369
 4043              	.L380:
4616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4044              		.loc 1 4616 0
 4045 006a 0025     		movs	r5, #0
 4046              	.LVL354:
 4047              	.L369:
4630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4048              		.loc 1 4630 0
 4049 006c 012B     		cmp	r3, #1
 4050 006e 2ED1     		bne	.L375
4632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 4051              		.loc 1 4632 0
 4052 0070 261D     		adds	r6, r4, #4
 4053 0072 3046     		mov	r0, r6
 4054 0074 FFF7FEFF 		bl	uxListRemove
 4055              	.LVL355:
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4056              		.loc 1 4633 0
 4057 0078 E36A     		ldr	r3, [r4, #44]
 4058 007a 174A     		ldr	r2, .L382
 4059 007c D2F80C21 		ldr	r2, [r2, #268]
 4060 0080 9342     		cmp	r3, r2
 4061 0082 02D9     		bls	.L376
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4062              		.loc 1 4633 0 is_stmt 0 discriminator 1
 4063 0084 144A     		ldr	r2, .L382
 4064 0086 C2F80C31 		str	r3, [r2, #268]
 4065              	.L376:
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4066              		.loc 1 4633 0 discriminator 3
 4067 008a 03EB8303 		add	r3, r3, r3, lsl #2
 4068 008e 9A00     		lsls	r2, r3, #2
 4069 0090 3146     		mov	r1, r6
 4070 0092 1248     		ldr	r0, .L382+4
 4071 0094 1044     		add	r0, r0, r2
 4072 0096 FFF7FEFF 		bl	vListInsertEnd
 4073              	.LVL356:
4636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4074              		.loc 1 4636 0 is_stmt 1 discriminator 3
 4075 009a A36A     		ldr	r3, [r4, #40]
 4076 009c 43B1     		cbz	r3, .L377
 4077              	.LBB171:
 4078              	.LBB172:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4079              		.loc 2 156 0
 4080              		.syntax unified
 4081              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4082 009e 4FF02003 			mov r3, #32												
 4083 00a2 83F31188 		msr basepri, r3											
 4084 00a6 BFF36F8F 		isb														
 4085 00aa BFF34F8F 		dsb														
 4086              	
 4087              	@ 0 "" 2
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 173


 4088              	.LVL357:
 4089              		.thumb
 4090              		.syntax unified
 4091              	.L378:
 4092 00ae FEE7     		b	.L378
 4093              	.L377:
 4094              	.LBE172:
 4095              	.LBE171:
4654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4096              		.loc 1 4654 0
 4097 00b0 E26A     		ldr	r2, [r4, #44]
 4098 00b2 094B     		ldr	r3, .L382
 4099 00b4 D3F80031 		ldr	r3, [r3, #256]
 4100 00b8 DB6A     		ldr	r3, [r3, #44]
 4101 00ba 9A42     		cmp	r2, r3
 4102 00bc 07D9     		bls	.L375
4658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4103              		.loc 1 4658 0
 4104 00be 4FF08052 		mov	r2, #268435456
 4105 00c2 074B     		ldr	r3, .L382+8
 4106 00c4 1A60     		str	r2, [r3]
 4107              		.syntax unified
 4108              	@ 4658 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 4109 00c6 BFF34F8F 		dsb
 4110              	@ 0 "" 2
 4111              	@ 4658 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 4112 00ca BFF36F8F 		isb
 4113              	@ 0 "" 2
 4114              		.thumb
 4115              		.syntax unified
 4116              	.L375:
4670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4117              		.loc 1 4670 0
 4118 00ce FFF7FEFF 		bl	vPortExitCritical
 4119              	.LVL358:
4673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4120              		.loc 1 4673 0
 4121 00d2 2846     		mov	r0, r5
 4122 00d4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4123              	.LVL359:
 4124              	.L383:
 4125 00d6 00BF     		.align	2
 4126              	.L382:
 4127 00d8 00000000 		.word	.LANCHOR0
 4128 00dc 30000000 		.word	.LANCHOR0+48
 4129 00e0 04ED00E0 		.word	-536810236
 4130              		.cfi_endproc
 4131              	.LFE706:
 4132              		.size	xTaskGenericNotify, .-xTaskGenericNotify
 4133              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 4134              		.align	2
 4135              		.global	xTaskGenericNotifyFromISR
 4136              		.thumb
 4137              		.thumb_func
 4138              		.type	xTaskGenericNotifyFromISR, %function
 4139              	xTaskGenericNotifyFromISR:
 4140              	.LFB707:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 174


4681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
 4141              		.loc 1 4681 0
 4142              		.cfi_startproc
 4143              		@ args = 4, pretend = 0, frame = 0
 4144              		@ frame_needed = 0, uses_anonymous_args = 0
 4145              	.LVL360:
 4146 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4147              		.cfi_def_cfa_offset 32
 4148              		.cfi_offset 3, -32
 4149              		.cfi_offset 4, -28
 4150              		.cfi_offset 5, -24
 4151              		.cfi_offset 6, -20
 4152              		.cfi_offset 7, -16
 4153              		.cfi_offset 8, -12
 4154              		.cfi_offset 9, -8
 4155              		.cfi_offset 14, -4
 4156 0004 089E     		ldr	r6, [sp, #32]
 4157              	.LVL361:
4687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4158              		.loc 1 4687 0
 4159 0006 40B9     		cbnz	r0, .L385
 4160              	.LBB173:
 4161              	.LBB174:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4162              		.loc 2 156 0
 4163              		.syntax unified
 4164              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4165 0008 4FF02003 			mov r3, #32												
 4166 000c 83F31188 		msr basepri, r3											
 4167 0010 BFF36F8F 		isb														
 4168 0014 BFF34F8F 		dsb														
 4169              	
 4170              	@ 0 "" 2
 4171              	.LVL362:
 4172              		.thumb
 4173              		.syntax unified
 4174              	.L386:
 4175 0018 FEE7     		b	.L386
 4176              	.LVL363:
 4177              	.L385:
 4178 001a 0446     		mov	r4, r0
 4179 001c 9946     		mov	r9, r3
 4180 001e 1546     		mov	r5, r2
 4181 0020 8846     		mov	r8, r1
 4182              	.LBE174:
 4183              	.LBE173:
4705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4184              		.loc 1 4705 0
 4185 0022 FFF7FEFF 		bl	vPortValidateInterruptPriority
 4186              	.LVL364:
 4187              	.LBB175:
 4188              	.LBB176:
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4189              		.loc 2 172 0
 4190              		.syntax unified
 4191              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4192 0026 EFF31187 			mrs r7, basepri											
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 175


 4193 002a 4FF02003 		mov r3, #32												
 4194 002e 83F31188 		msr basepri, r3											
 4195 0032 BFF36F8F 		isb														
 4196 0036 BFF34F8F 		dsb														
 4197              	
 4198              	@ 0 "" 2
 4199              		.thumb
 4200              		.syntax unified
 4201              	.LBE176:
 4202              	.LBE175:
4711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4203              		.loc 1 4711 0
 4204 003a B9F1000F 		cmp	r9, #0
 4205 003e 02D0     		beq	.L387
4713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4206              		.loc 1 4713 0
 4207 0040 A36D     		ldr	r3, [r4, #88]
 4208 0042 C9F80030 		str	r3, [r9]
 4209              	.L387:
4716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4210              		.loc 1 4716 0
 4211 0046 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 4212 004a DBB2     		uxtb	r3, r3
 4213              	.LVL365:
4717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4214              		.loc 1 4717 0
 4215 004c 0222     		movs	r2, #2
 4216 004e 84F85C20 		strb	r2, [r4, #92]
4719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4217              		.loc 1 4719 0
 4218 0052 6A1E     		subs	r2, r5, #1
 4219 0054 032A     		cmp	r2, #3
 4220 0056 18D8     		bhi	.L401
 4221 0058 DFE802F0 		tbb	[pc, r2]
 4222              	.L390:
 4223 005c 02       		.byte	(.L389-.L390)/2
 4224 005d 08       		.byte	(.L391-.L390)/2
 4225 005e 0D       		.byte	(.L392-.L390)/2
 4226 005f 11       		.byte	(.L393-.L390)/2
 4227              		.p2align 1
 4228              	.L389:
4722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4229              		.loc 1 4722 0
 4230 0060 A26D     		ldr	r2, [r4, #88]
 4231 0062 42EA0802 		orr	r2, r2, r8
 4232 0066 A265     		str	r2, [r4, #88]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4233              		.loc 1 4684 0
 4234 0068 0125     		movs	r5, #1
4723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4235              		.loc 1 4723 0
 4236 006a 11E0     		b	.L388
 4237              	.L391:
4726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4238              		.loc 1 4726 0
 4239 006c A26D     		ldr	r2, [r4, #88]
 4240 006e 0132     		adds	r2, r2, #1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 176


 4241 0070 A265     		str	r2, [r4, #88]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4242              		.loc 1 4684 0
 4243 0072 0125     		movs	r5, #1
4727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4244              		.loc 1 4727 0
 4245 0074 0CE0     		b	.L388
 4246              	.L392:
4730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4247              		.loc 1 4730 0
 4248 0076 C4F85880 		str	r8, [r4, #88]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4249              		.loc 1 4684 0
 4250 007a 0125     		movs	r5, #1
4731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4251              		.loc 1 4731 0
 4252 007c 08E0     		b	.L388
 4253              	.L393:
4734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4254              		.loc 1 4734 0
 4255 007e 022B     		cmp	r3, #2
 4256 0080 05D0     		beq	.L402
4736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4257              		.loc 1 4736 0
 4258 0082 C4F85880 		str	r8, [r4, #88]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4259              		.loc 1 4684 0
 4260 0086 0125     		movs	r5, #1
 4261 0088 02E0     		b	.L388
 4262              	.L401:
 4263 008a 0125     		movs	r5, #1
 4264 008c 00E0     		b	.L388
 4265              	.L402:
4741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4266              		.loc 1 4741 0
 4267 008e 0025     		movs	r5, #0
 4268              	.L388:
 4269              	.LVL366:
4755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4270              		.loc 1 4755 0
 4271 0090 012B     		cmp	r3, #1
 4272 0092 39D1     		bne	.L394
4758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4273              		.loc 1 4758 0
 4274 0094 A36A     		ldr	r3, [r4, #40]
 4275              	.LVL367:
 4276 0096 43B1     		cbz	r3, .L395
 4277              	.LBB177:
 4278              	.LBB178:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4279              		.loc 2 156 0
 4280              		.syntax unified
 4281              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4282 0098 4FF02003 			mov r3, #32												
 4283 009c 83F31188 		msr basepri, r3											
 4284 00a0 BFF36F8F 		isb														
 4285 00a4 BFF34F8F 		dsb														
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 177


 4286              	
 4287              	@ 0 "" 2
 4288              	.LVL368:
 4289              		.thumb
 4290              		.syntax unified
 4291              	.L396:
 4292 00a8 FEE7     		b	.L396
 4293              	.L395:
 4294              	.LBE178:
 4295              	.LBE177:
4760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4296              		.loc 1 4760 0
 4297 00aa 1A4B     		ldr	r3, .L404
 4298 00ac D3F81831 		ldr	r3, [r3, #280]
 4299 00b0 B3B9     		cbnz	r3, .L397
4762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4300              		.loc 1 4762 0
 4301 00b2 04F10408 		add	r8, r4, #4
 4302              	.LVL369:
 4303 00b6 4046     		mov	r0, r8
 4304 00b8 FFF7FEFF 		bl	uxListRemove
 4305              	.LVL370:
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4306              		.loc 1 4763 0
 4307 00bc E36A     		ldr	r3, [r4, #44]
 4308 00be 154A     		ldr	r2, .L404
 4309 00c0 D2F80C21 		ldr	r2, [r2, #268]
 4310 00c4 9342     		cmp	r3, r2
 4311 00c6 02D9     		bls	.L398
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4312              		.loc 1 4763 0 is_stmt 0 discriminator 1
 4313 00c8 124A     		ldr	r2, .L404
 4314 00ca C2F80C31 		str	r3, [r2, #268]
 4315              	.L398:
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4316              		.loc 1 4763 0 discriminator 3
 4317 00ce 03EB8303 		add	r3, r3, r3, lsl #2
 4318 00d2 9A00     		lsls	r2, r3, #2
 4319 00d4 4146     		mov	r1, r8
 4320 00d6 1048     		ldr	r0, .L404+4
 4321 00d8 1044     		add	r0, r0, r2
 4322 00da FFF7FEFF 		bl	vListInsertEnd
 4323              	.LVL371:
 4324 00de 04E0     		b	.L399
 4325              	.LVL372:
 4326              	.L397:
4769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4327              		.loc 1 4769 0 is_stmt 1
 4328 00e0 04F11801 		add	r1, r4, #24
 4329 00e4 0D48     		ldr	r0, .L404+8
 4330 00e6 FFF7FEFF 		bl	vListInsertEnd
 4331              	.LVL373:
 4332              	.L399:
4772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4333              		.loc 1 4772 0
 4334 00ea E26A     		ldr	r2, [r4, #44]
 4335 00ec 094B     		ldr	r3, .L404
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 178


 4336 00ee D3F80031 		ldr	r3, [r3, #256]
 4337 00f2 DB6A     		ldr	r3, [r3, #44]
 4338 00f4 9A42     		cmp	r2, r3
 4339 00f6 07D9     		bls	.L394
4776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4340              		.loc 1 4776 0
 4341 00f8 16B1     		cbz	r6, .L400
4778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4342              		.loc 1 4778 0
 4343 00fa 0123     		movs	r3, #1
 4344 00fc 3360     		str	r3, [r6]
 4345 00fe 03E0     		b	.L394
 4346              	.L400:
4785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4347              		.loc 1 4785 0
 4348 0100 0122     		movs	r2, #1
 4349 0102 044B     		ldr	r3, .L404
 4350 0104 C3F82821 		str	r2, [r3, #296]
 4351              	.L394:
 4352              	.LVL374:
 4353              	.LBB179:
 4354              	.LBB180:
 4355              		.loc 2 190 0
 4356              		.syntax unified
 4357              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4358 0108 87F31188 			msr basepri, r7	
 4359              	@ 0 "" 2
 4360              	.LVL375:
 4361              		.thumb
 4362              		.syntax unified
 4363              	.LBE180:
 4364              	.LBE179:
4797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4365              		.loc 1 4797 0
 4366 010c 2846     		mov	r0, r5
 4367 010e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4368              	.LVL376:
 4369              	.L405:
 4370 0112 00BF     		.align	2
 4371              	.L404:
 4372 0114 00000000 		.word	.LANCHOR0
 4373 0118 30000000 		.word	.LANCHOR0+48
 4374 011c 14000000 		.word	.LANCHOR0+20
 4375              		.cfi_endproc
 4376              	.LFE707:
 4377              		.size	xTaskGenericNotifyFromISR, .-xTaskGenericNotifyFromISR
 4378              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 4379              		.align	2
 4380              		.global	vTaskNotifyGiveFromISR
 4381              		.thumb
 4382              		.thumb_func
 4383              		.type	vTaskNotifyGiveFromISR, %function
 4384              	vTaskNotifyGiveFromISR:
 4385              	.LFB708:
4805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
 4386              		.loc 1 4805 0
 4387              		.cfi_startproc
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 179


 4388              		@ args = 0, pretend = 0, frame = 0
 4389              		@ frame_needed = 0, uses_anonymous_args = 0
 4390              	.LVL377:
 4391 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4392              		.cfi_def_cfa_offset 24
 4393              		.cfi_offset 3, -24
 4394              		.cfi_offset 4, -20
 4395              		.cfi_offset 5, -16
 4396              		.cfi_offset 6, -12
 4397              		.cfi_offset 7, -8
 4398              		.cfi_offset 14, -4
4810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4399              		.loc 1 4810 0
 4400 0002 40B9     		cbnz	r0, .L407
 4401              	.LBB181:
 4402              	.LBB182:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4403              		.loc 2 156 0
 4404              		.syntax unified
 4405              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4406 0004 4FF02003 			mov r3, #32												
 4407 0008 83F31188 		msr basepri, r3											
 4408 000c BFF36F8F 		isb														
 4409 0010 BFF34F8F 		dsb														
 4410              	
 4411              	@ 0 "" 2
 4412              	.LVL378:
 4413              		.thumb
 4414              		.syntax unified
 4415              	.L408:
 4416 0014 FEE7     		b	.L408
 4417              	.L407:
 4418 0016 0446     		mov	r4, r0
 4419 0018 0D46     		mov	r5, r1
 4420              	.LBE182:
 4421              	.LBE181:
4828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4422              		.loc 1 4828 0
 4423 001a FFF7FEFF 		bl	vPortValidateInterruptPriority
 4424              	.LVL379:
 4425              	.LBB183:
 4426              	.LBB184:
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4427              		.loc 2 172 0
 4428              		.syntax unified
 4429              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4430 001e EFF31186 			mrs r6, basepri											
 4431 0022 4FF02003 		mov r3, #32												
 4432 0026 83F31188 		msr basepri, r3											
 4433 002a BFF36F8F 		isb														
 4434 002e BFF34F8F 		dsb														
 4435              	
 4436              	@ 0 "" 2
 4437              		.thumb
 4438              		.syntax unified
 4439              	.LBE184:
 4440              	.LBE183:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 180


4834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4441              		.loc 1 4834 0
 4442 0032 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 4443 0036 DBB2     		uxtb	r3, r3
 4444              	.LVL380:
4835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4445              		.loc 1 4835 0
 4446 0038 0222     		movs	r2, #2
 4447 003a 84F85C20 		strb	r2, [r4, #92]
4839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4448              		.loc 1 4839 0
 4449 003e A26D     		ldr	r2, [r4, #88]
 4450 0040 0132     		adds	r2, r2, #1
 4451 0042 A265     		str	r2, [r4, #88]
4845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4452              		.loc 1 4845 0
 4453 0044 012B     		cmp	r3, #1
 4454 0046 38D1     		bne	.L409
4848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4455              		.loc 1 4848 0
 4456 0048 A36A     		ldr	r3, [r4, #40]
 4457              	.LVL381:
 4458 004a 43B1     		cbz	r3, .L410
 4459              	.LBB185:
 4460              	.LBB186:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4461              		.loc 2 156 0
 4462              		.syntax unified
 4463              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4464 004c 4FF02003 			mov r3, #32												
 4465 0050 83F31188 		msr basepri, r3											
 4466 0054 BFF36F8F 		isb														
 4467 0058 BFF34F8F 		dsb														
 4468              	
 4469              	@ 0 "" 2
 4470              	.LVL382:
 4471              		.thumb
 4472              		.syntax unified
 4473              	.L411:
 4474 005c FEE7     		b	.L411
 4475              	.L410:
 4476              	.LBE186:
 4477              	.LBE185:
4850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4478              		.loc 1 4850 0
 4479 005e 184B     		ldr	r3, .L417
 4480 0060 D3F81831 		ldr	r3, [r3, #280]
 4481 0064 ABB9     		cbnz	r3, .L412
4852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4482              		.loc 1 4852 0
 4483 0066 271D     		adds	r7, r4, #4
 4484 0068 3846     		mov	r0, r7
 4485 006a FFF7FEFF 		bl	uxListRemove
 4486              	.LVL383:
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4487              		.loc 1 4853 0
 4488 006e E36A     		ldr	r3, [r4, #44]
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 181


 4489 0070 134A     		ldr	r2, .L417
 4490 0072 D2F80C21 		ldr	r2, [r2, #268]
 4491 0076 9342     		cmp	r3, r2
 4492 0078 02D9     		bls	.L413
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4493              		.loc 1 4853 0 is_stmt 0 discriminator 1
 4494 007a 114A     		ldr	r2, .L417
 4495 007c C2F80C31 		str	r3, [r2, #268]
 4496              	.L413:
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4497              		.loc 1 4853 0 discriminator 3
 4498 0080 03EB8303 		add	r3, r3, r3, lsl #2
 4499 0084 9A00     		lsls	r2, r3, #2
 4500 0086 3946     		mov	r1, r7
 4501 0088 0E48     		ldr	r0, .L417+4
 4502 008a 1044     		add	r0, r0, r2
 4503 008c FFF7FEFF 		bl	vListInsertEnd
 4504              	.LVL384:
 4505 0090 04E0     		b	.L414
 4506              	.L412:
4859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4507              		.loc 1 4859 0 is_stmt 1
 4508 0092 04F11801 		add	r1, r4, #24
 4509 0096 0C48     		ldr	r0, .L417+8
 4510 0098 FFF7FEFF 		bl	vListInsertEnd
 4511              	.LVL385:
 4512              	.L414:
4862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4513              		.loc 1 4862 0
 4514 009c E26A     		ldr	r2, [r4, #44]
 4515 009e 084B     		ldr	r3, .L417
 4516 00a0 D3F80031 		ldr	r3, [r3, #256]
 4517 00a4 DB6A     		ldr	r3, [r3, #44]
 4518 00a6 9A42     		cmp	r2, r3
 4519 00a8 07D9     		bls	.L409
4866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4520              		.loc 1 4866 0
 4521 00aa 15B1     		cbz	r5, .L415
4868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4522              		.loc 1 4868 0
 4523 00ac 0123     		movs	r3, #1
 4524 00ae 2B60     		str	r3, [r5]
 4525 00b0 03E0     		b	.L409
 4526              	.L415:
4875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4527              		.loc 1 4875 0
 4528 00b2 0122     		movs	r2, #1
 4529 00b4 024B     		ldr	r3, .L417
 4530 00b6 C3F82821 		str	r2, [r3, #296]
 4531              	.L409:
 4532              	.LVL386:
 4533              	.LBB187:
 4534              	.LBB188:
 4535              		.loc 2 190 0
 4536              		.syntax unified
 4537              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4538 00ba 86F31188 			msr basepri, r6	
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 182


 4539              	@ 0 "" 2
 4540              	.LVL387:
 4541              		.thumb
 4542              		.syntax unified
 4543 00be F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4544              	.LVL388:
 4545              	.L418:
 4546              		.align	2
 4547              	.L417:
 4548 00c0 00000000 		.word	.LANCHOR0
 4549 00c4 30000000 		.word	.LANCHOR0+48
 4550 00c8 14000000 		.word	.LANCHOR0+20
 4551              	.LBE188:
 4552              	.LBE187:
 4553              		.cfi_endproc
 4554              	.LFE708:
 4555              		.size	vTaskNotifyGiveFromISR, .-vTaskNotifyGiveFromISR
 4556              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 4557              		.align	2
 4558              		.global	xTaskNotifyStateClear
 4559              		.thumb
 4560              		.thumb_func
 4561              		.type	xTaskNotifyStateClear, %function
 4562              	xTaskNotifyStateClear:
 4563              	.LFB709:
4894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 4564              		.loc 1 4894 0
 4565              		.cfi_startproc
 4566              		@ args = 0, pretend = 0, frame = 0
 4567              		@ frame_needed = 0, uses_anonymous_args = 0
 4568              	.LVL389:
 4569 0000 10B5     		push	{r4, lr}
 4570              		.cfi_def_cfa_offset 8
 4571              		.cfi_offset 4, -8
 4572              		.cfi_offset 14, -4
4900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4573              		.loc 1 4900 0
 4574 0002 0446     		mov	r4, r0
 4575 0004 10B9     		cbnz	r0, .L420
4900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4576              		.loc 1 4900 0 is_stmt 0 discriminator 1
 4577 0006 0A4B     		ldr	r3, .L424
 4578 0008 D3F80041 		ldr	r4, [r3, #256]
 4579              	.LVL390:
 4580              	.L420:
4902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 4581              		.loc 1 4902 0 is_stmt 1 discriminator 4
 4582 000c FFF7FEFF 		bl	vPortEnterCritical
 4583              	.LVL391:
4904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4584              		.loc 1 4904 0 discriminator 4
 4585 0010 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 4586 0014 DBB2     		uxtb	r3, r3
 4587 0016 022B     		cmp	r3, #2
 4588 0018 04D1     		bne	.L422
4906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
 4589              		.loc 1 4906 0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 183


 4590 001a 0023     		movs	r3, #0
 4591 001c 84F85C30 		strb	r3, [r4, #92]
 4592              	.LVL392:
4907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4593              		.loc 1 4907 0
 4594 0020 0124     		movs	r4, #1
 4595              	.LVL393:
 4596 0022 00E0     		b	.L421
 4597              	.LVL394:
 4598              	.L422:
4911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4599              		.loc 1 4911 0
 4600 0024 0024     		movs	r4, #0
 4601              	.LVL395:
 4602              	.L421:
4914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4603              		.loc 1 4914 0
 4604 0026 FFF7FEFF 		bl	vPortExitCritical
 4605              	.LVL396:
4917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4606              		.loc 1 4917 0
 4607 002a 2046     		mov	r0, r4
 4608 002c 10BD     		pop	{r4, pc}
 4609              	.LVL397:
 4610              	.L425:
 4611 002e 00BF     		.align	2
 4612              	.L424:
 4613 0030 00000000 		.word	.LANCHOR0
 4614              		.cfi_endproc
 4615              	.LFE709:
 4616              		.size	xTaskNotifyStateClear, .-xTaskNotifyStateClear
 4617              		.global	pxCurrentTCB
 4618              		.section	.rodata.str1.4,"aMS",%progbits,1
 4619              		.align	2
 4620              	.LC0:
 4621 0000 49444C45 		.ascii	"IDLE\000"
 4621      00
 4622              		.bss
 4623              		.align	2
 4624              		.set	.LANCHOR0,. + 0
 4625              		.type	xSuspendedTaskList, %object
 4626              		.size	xSuspendedTaskList, 20
 4627              	xSuspendedTaskList:
 4628 0000 00000000 		.space	20
 4628      00000000 
 4628      00000000 
 4628      00000000 
 4628      00000000 
 4629              		.type	xPendingReadyList, %object
 4630              		.size	xPendingReadyList, 20
 4631              	xPendingReadyList:
 4632 0014 00000000 		.space	20
 4632      00000000 
 4632      00000000 
 4632      00000000 
 4632      00000000 
 4633              		.type	pxDelayedTaskList, %object
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 184


 4634              		.size	pxDelayedTaskList, 4
 4635              	pxDelayedTaskList:
 4636 0028 00000000 		.space	4
 4637              		.type	xNextTaskUnblockTime, %object
 4638              		.size	xNextTaskUnblockTime, 4
 4639              	xNextTaskUnblockTime:
 4640 002c 00000000 		.space	4
 4641              		.type	pxReadyTasksLists, %object
 4642              		.size	pxReadyTasksLists, 140
 4643              	pxReadyTasksLists:
 4644 0030 00000000 		.space	140
 4644      00000000 
 4644      00000000 
 4644      00000000 
 4644      00000000 
 4645              		.type	xDelayedTaskList1, %object
 4646              		.size	xDelayedTaskList1, 20
 4647              	xDelayedTaskList1:
 4648 00bc 00000000 		.space	20
 4648      00000000 
 4648      00000000 
 4648      00000000 
 4648      00000000 
 4649              		.type	xDelayedTaskList2, %object
 4650              		.size	xDelayedTaskList2, 20
 4651              	xDelayedTaskList2:
 4652 00d0 00000000 		.space	20
 4652      00000000 
 4652      00000000 
 4652      00000000 
 4652      00000000 
 4653              		.type	xTasksWaitingTermination, %object
 4654              		.size	xTasksWaitingTermination, 20
 4655              	xTasksWaitingTermination:
 4656 00e4 00000000 		.space	20
 4656      00000000 
 4656      00000000 
 4656      00000000 
 4656      00000000 
 4657              		.type	pxOverflowDelayedTaskList, %object
 4658              		.size	pxOverflowDelayedTaskList, 4
 4659              	pxOverflowDelayedTaskList:
 4660 00f8 00000000 		.space	4
 4661              		.type	uxCurrentNumberOfTasks, %object
 4662              		.size	uxCurrentNumberOfTasks, 4
 4663              	uxCurrentNumberOfTasks:
 4664 00fc 00000000 		.space	4
 4665              		.type	pxCurrentTCB, %object
 4666              		.size	pxCurrentTCB, 4
 4667              	pxCurrentTCB:
 4668 0100 00000000 		.space	4
 4669              		.type	xSchedulerRunning, %object
 4670              		.size	xSchedulerRunning, 4
 4671              	xSchedulerRunning:
 4672 0104 00000000 		.space	4
 4673              		.type	uxTaskNumber, %object
 4674              		.size	uxTaskNumber, 4
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 185


 4675              	uxTaskNumber:
 4676 0108 00000000 		.space	4
 4677              		.type	uxTopReadyPriority, %object
 4678              		.size	uxTopReadyPriority, 4
 4679              	uxTopReadyPriority:
 4680 010c 00000000 		.space	4
 4681              		.type	uxDeletedTasksWaitingCleanUp, %object
 4682              		.size	uxDeletedTasksWaitingCleanUp, 4
 4683              	uxDeletedTasksWaitingCleanUp:
 4684 0110 00000000 		.space	4
 4685              		.type	xTickCount, %object
 4686              		.size	xTickCount, 4
 4687              	xTickCount:
 4688 0114 00000000 		.space	4
 4689              		.type	uxSchedulerSuspended, %object
 4690              		.size	uxSchedulerSuspended, 4
 4691              	uxSchedulerSuspended:
 4692 0118 00000000 		.space	4
 4693              		.type	xIdleTaskHandle, %object
 4694              		.size	xIdleTaskHandle, 4
 4695              	xIdleTaskHandle:
 4696 011c 00000000 		.space	4
 4697              		.type	xNumOfOverflows, %object
 4698              		.size	xNumOfOverflows, 4
 4699              	xNumOfOverflows:
 4700 0120 00000000 		.space	4
 4701              		.type	uxPendedTicks, %object
 4702              		.size	uxPendedTicks, 4
 4703              	uxPendedTicks:
 4704 0124 00000000 		.space	4
 4705              		.type	xYieldPending, %object
 4706              		.size	xYieldPending, 4
 4707              	xYieldPending:
 4708 0128 00000000 		.space	4
 4709              		.text
 4710              	.Letext0:
 4711              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 4712              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 4713              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 4714              		.file 6 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 4715              		.file 7 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/rtc/cy_rtc.h"
 4716              		.file 8 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/scb/cy_scb_i2c.h"
 4717              		.file 9 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/scb/cy_scb_uart.h"
 4718              		.file 10 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/tcpwm/cy_tcpwm_pwm.h"
 4719              		.file 11 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_stack.h"
 4720              		.file 12 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_stack_host_main.h"
 4721              		.file 13 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_gap.h"
 4722              		.file 14 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/projdefs.h"
 4723              		.file 15 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/list.h"
 4724              		.file 16 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/task.h"
 4725              		.file 17 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 4726              		.file 18 "Generated_Source\\PSoC6/UART.h"
 4727              		.file 19 "Generated_Source\\PSoC6/I2C_1.h"
 4728              		.file 20 "Generated_Source\\PSoC6/I2C_2.h"
 4729              		.file 21 "Generated_Source\\PSoC6/PWM_AFE.h"
 4730              		.file 22 "Generated_Source\\PSoC6/RTC.h"
 4731              		.file 23 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/portable.h"
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 186


 4732              		.file 24 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 4733              		.file 25 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/timers.h"
 4734              		.section	.debug_info,"",%progbits
 4735              	.Ldebug_info0:
 4736 0000 1D300000 		.4byte	0x301d
 4737 0004 0400     		.2byte	0x4
 4738 0006 00000000 		.4byte	.Ldebug_abbrev0
 4739 000a 04       		.byte	0x4
 4740 000b 01       		.uleb128 0x1
 4741 000c 4C170000 		.4byte	.LASF541
 4742 0010 0C       		.byte	0xc
 4743 0011 2E000000 		.4byte	.LASF542
 4744 0015 641B0000 		.4byte	.LASF543
 4745 0019 38000000 		.4byte	.Ldebug_ranges0+0x38
 4746 001d 00000000 		.4byte	0
 4747 0021 00000000 		.4byte	.Ldebug_line0
 4748 0025 02       		.uleb128 0x2
 4749 0026 A8000000 		.4byte	.LASF4
 4750 002a 03       		.byte	0x3
 4751 002b D8       		.byte	0xd8
 4752 002c 30000000 		.4byte	0x30
 4753 0030 03       		.uleb128 0x3
 4754 0031 04       		.byte	0x4
 4755 0032 07       		.byte	0x7
 4756 0033 0E170000 		.4byte	.LASF0
 4757 0037 04       		.uleb128 0x4
 4758 0038 04       		.byte	0x4
 4759 0039 05       		.byte	0x5
 4760 003a 696E7400 		.ascii	"int\000"
 4761 003e 03       		.uleb128 0x3
 4762 003f 08       		.byte	0x8
 4763 0040 05       		.byte	0x5
 4764 0041 E9140000 		.4byte	.LASF1
 4765 0045 03       		.uleb128 0x3
 4766 0046 08       		.byte	0x8
 4767 0047 04       		.byte	0x4
 4768 0048 E51B0000 		.4byte	.LASF2
 4769 004c 03       		.uleb128 0x3
 4770 004d 01       		.byte	0x1
 4771 004e 06       		.byte	0x6
 4772 004f B6080000 		.4byte	.LASF3
 4773 0053 02       		.uleb128 0x2
 4774 0054 50050000 		.4byte	.LASF5
 4775 0058 04       		.byte	0x4
 4776 0059 1D       		.byte	0x1d
 4777 005a 5E000000 		.4byte	0x5e
 4778 005e 03       		.uleb128 0x3
 4779 005f 01       		.byte	0x1
 4780 0060 08       		.byte	0x8
 4781 0061 A6090000 		.4byte	.LASF6
 4782 0065 02       		.uleb128 0x2
 4783 0066 F1200000 		.4byte	.LASF7
 4784 006a 04       		.byte	0x4
 4785 006b 29       		.byte	0x29
 4786 006c 70000000 		.4byte	0x70
 4787 0070 03       		.uleb128 0x3
 4788 0071 02       		.byte	0x2
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 187


 4789 0072 05       		.byte	0x5
 4790 0073 06240000 		.4byte	.LASF8
 4791 0077 02       		.uleb128 0x2
 4792 0078 800C0000 		.4byte	.LASF9
 4793 007c 04       		.byte	0x4
 4794 007d 2B       		.byte	0x2b
 4795 007e 82000000 		.4byte	0x82
 4796 0082 03       		.uleb128 0x3
 4797 0083 02       		.byte	0x2
 4798 0084 07       		.byte	0x7
 4799 0085 EE270000 		.4byte	.LASF10
 4800 0089 02       		.uleb128 0x2
 4801 008a 57290000 		.4byte	.LASF11
 4802 008e 04       		.byte	0x4
 4803 008f 3F       		.byte	0x3f
 4804 0090 94000000 		.4byte	0x94
 4805 0094 03       		.uleb128 0x3
 4806 0095 04       		.byte	0x4
 4807 0096 05       		.byte	0x5
 4808 0097 85190000 		.4byte	.LASF12
 4809 009b 02       		.uleb128 0x2
 4810 009c B7140000 		.4byte	.LASF13
 4811 00a0 04       		.byte	0x4
 4812 00a1 41       		.byte	0x41
 4813 00a2 A6000000 		.4byte	0xa6
 4814 00a6 03       		.uleb128 0x3
 4815 00a7 04       		.byte	0x4
 4816 00a8 07       		.byte	0x7
 4817 00a9 4C110000 		.4byte	.LASF14
 4818 00ad 03       		.uleb128 0x3
 4819 00ae 08       		.byte	0x8
 4820 00af 07       		.byte	0x7
 4821 00b0 EB1D0000 		.4byte	.LASF15
 4822 00b4 03       		.uleb128 0x3
 4823 00b5 04       		.byte	0x4
 4824 00b6 07       		.byte	0x7
 4825 00b7 AF000000 		.4byte	.LASF16
 4826 00bb 05       		.uleb128 0x5
 4827 00bc 04       		.byte	0x4
 4828 00bd 06       		.uleb128 0x6
 4829 00be 04       		.byte	0x4
 4830 00bf C3000000 		.4byte	0xc3
 4831 00c3 03       		.uleb128 0x3
 4832 00c4 01       		.byte	0x1
 4833 00c5 08       		.byte	0x8
 4834 00c6 B10B0000 		.4byte	.LASF17
 4835 00ca 06       		.uleb128 0x6
 4836 00cb 04       		.byte	0x4
 4837 00cc D0000000 		.4byte	0xd0
 4838 00d0 07       		.uleb128 0x7
 4839 00d1 C3000000 		.4byte	0xc3
 4840 00d5 02       		.uleb128 0x2
 4841 00d6 E4080000 		.4byte	.LASF18
 4842 00da 05       		.byte	0x5
 4843 00db 18       		.byte	0x18
 4844 00dc 53000000 		.4byte	0x53
 4845 00e0 02       		.uleb128 0x2
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 188


 4846 00e1 7F240000 		.4byte	.LASF19
 4847 00e5 05       		.byte	0x5
 4848 00e6 20       		.byte	0x20
 4849 00e7 65000000 		.4byte	0x65
 4850 00eb 02       		.uleb128 0x2
 4851 00ec 3D1E0000 		.4byte	.LASF20
 4852 00f0 05       		.byte	0x5
 4853 00f1 24       		.byte	0x24
 4854 00f2 77000000 		.4byte	0x77
 4855 00f6 02       		.uleb128 0x2
 4856 00f7 82200000 		.4byte	.LASF21
 4857 00fb 05       		.byte	0x5
 4858 00fc 2C       		.byte	0x2c
 4859 00fd 89000000 		.4byte	0x89
 4860 0101 02       		.uleb128 0x2
 4861 0102 D7260000 		.4byte	.LASF22
 4862 0106 05       		.byte	0x5
 4863 0107 30       		.byte	0x30
 4864 0108 9B000000 		.4byte	0x9b
 4865 010c 08       		.uleb128 0x8
 4866 010d 01010000 		.4byte	0x101
 4867 0111 08       		.uleb128 0x8
 4868 0112 D5000000 		.4byte	0xd5
 4869 0116 09       		.uleb128 0x9
 4870 0117 B8       		.byte	0xb8
 4871 0118 06       		.byte	0x6
 4872 0119 34       		.byte	0x34
 4873 011a 27050000 		.4byte	0x527
 4874 011e 0A       		.uleb128 0xa
 4875 011f 71140000 		.4byte	.LASF23
 4876 0123 06       		.byte	0x6
 4877 0124 37       		.byte	0x37
 4878 0125 01010000 		.4byte	0x101
 4879 0129 00       		.byte	0
 4880 012a 0A       		.uleb128 0xa
 4881 012b 8D030000 		.4byte	.LASF24
 4882 012f 06       		.byte	0x6
 4883 0130 38       		.byte	0x38
 4884 0131 01010000 		.4byte	0x101
 4885 0135 04       		.byte	0x4
 4886 0136 0A       		.uleb128 0xa
 4887 0137 4D100000 		.4byte	.LASF25
 4888 013b 06       		.byte	0x6
 4889 013c 39       		.byte	0x39
 4890 013d 01010000 		.4byte	0x101
 4891 0141 08       		.byte	0x8
 4892 0142 0A       		.uleb128 0xa
 4893 0143 AB0D0000 		.4byte	.LASF26
 4894 0147 06       		.byte	0x6
 4895 0148 3A       		.byte	0x3a
 4896 0149 01010000 		.4byte	0x101
 4897 014d 0C       		.byte	0xc
 4898 014e 0A       		.uleb128 0xa
 4899 014f 7B140000 		.4byte	.LASF27
 4900 0153 06       		.byte	0x6
 4901 0154 3B       		.byte	0x3b
 4902 0155 01010000 		.4byte	0x101
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 189


 4903 0159 10       		.byte	0x10
 4904 015a 0A       		.uleb128 0xa
 4905 015b F6010000 		.4byte	.LASF28
 4906 015f 06       		.byte	0x6
 4907 0160 3C       		.byte	0x3c
 4908 0161 01010000 		.4byte	0x101
 4909 0165 14       		.byte	0x14
 4910 0166 0A       		.uleb128 0xa
 4911 0167 E4210000 		.4byte	.LASF29
 4912 016b 06       		.byte	0x6
 4913 016c 3D       		.byte	0x3d
 4914 016d 01010000 		.4byte	0x101
 4915 0171 18       		.byte	0x18
 4916 0172 0A       		.uleb128 0xa
 4917 0173 2D0B0000 		.4byte	.LASF30
 4918 0177 06       		.byte	0x6
 4919 0178 3E       		.byte	0x3e
 4920 0179 01010000 		.4byte	0x101
 4921 017d 1C       		.byte	0x1c
 4922 017e 0A       		.uleb128 0xa
 4923 017f AD270000 		.4byte	.LASF31
 4924 0183 06       		.byte	0x6
 4925 0184 3F       		.byte	0x3f
 4926 0185 01010000 		.4byte	0x101
 4927 0189 20       		.byte	0x20
 4928 018a 0A       		.uleb128 0xa
 4929 018b 9D000000 		.4byte	.LASF32
 4930 018f 06       		.byte	0x6
 4931 0190 40       		.byte	0x40
 4932 0191 01010000 		.4byte	0x101
 4933 0195 24       		.byte	0x24
 4934 0196 0A       		.uleb128 0xa
 4935 0197 31120000 		.4byte	.LASF33
 4936 019b 06       		.byte	0x6
 4937 019c 43       		.byte	0x43
 4938 019d D5000000 		.4byte	0xd5
 4939 01a1 28       		.byte	0x28
 4940 01a2 0A       		.uleb128 0xa
 4941 01a3 C0150000 		.4byte	.LASF34
 4942 01a7 06       		.byte	0x6
 4943 01a8 44       		.byte	0x44
 4944 01a9 D5000000 		.4byte	0xd5
 4945 01ad 29       		.byte	0x29
 4946 01ae 0A       		.uleb128 0xa
 4947 01af 99210000 		.4byte	.LASF35
 4948 01b3 06       		.byte	0x6
 4949 01b4 45       		.byte	0x45
 4950 01b5 D5000000 		.4byte	0xd5
 4951 01b9 2A       		.byte	0x2a
 4952 01ba 0A       		.uleb128 0xa
 4953 01bb 3B180000 		.4byte	.LASF36
 4954 01bf 06       		.byte	0x6
 4955 01c0 46       		.byte	0x46
 4956 01c1 D5000000 		.4byte	0xd5
 4957 01c5 2B       		.byte	0x2b
 4958 01c6 0A       		.uleb128 0xa
 4959 01c7 D3250000 		.4byte	.LASF37
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 190


 4960 01cb 06       		.byte	0x6
 4961 01cc 47       		.byte	0x47
 4962 01cd D5000000 		.4byte	0xd5
 4963 01d1 2C       		.byte	0x2c
 4964 01d2 0A       		.uleb128 0xa
 4965 01d3 052B0000 		.4byte	.LASF38
 4966 01d7 06       		.byte	0x6
 4967 01d8 48       		.byte	0x48
 4968 01d9 D5000000 		.4byte	0xd5
 4969 01dd 2D       		.byte	0x2d
 4970 01de 0A       		.uleb128 0xa
 4971 01df 92140000 		.4byte	.LASF39
 4972 01e3 06       		.byte	0x6
 4973 01e4 49       		.byte	0x49
 4974 01e5 D5000000 		.4byte	0xd5
 4975 01e9 2E       		.byte	0x2e
 4976 01ea 0A       		.uleb128 0xa
 4977 01eb FA230000 		.4byte	.LASF40
 4978 01ef 06       		.byte	0x6
 4979 01f0 4A       		.byte	0x4a
 4980 01f1 D5000000 		.4byte	0xd5
 4981 01f5 2F       		.byte	0x2f
 4982 01f6 0A       		.uleb128 0xa
 4983 01f7 A8230000 		.4byte	.LASF41
 4984 01fb 06       		.byte	0x6
 4985 01fc 4B       		.byte	0x4b
 4986 01fd D5000000 		.4byte	0xd5
 4987 0201 30       		.byte	0x30
 4988 0202 0A       		.uleb128 0xa
 4989 0203 E6160000 		.4byte	.LASF42
 4990 0207 06       		.byte	0x6
 4991 0208 4E       		.byte	0x4e
 4992 0209 D5000000 		.4byte	0xd5
 4993 020d 31       		.byte	0x31
 4994 020e 0A       		.uleb128 0xa
 4995 020f 47220000 		.4byte	.LASF43
 4996 0213 06       		.byte	0x6
 4997 0214 4F       		.byte	0x4f
 4998 0215 D5000000 		.4byte	0xd5
 4999 0219 32       		.byte	0x32
 5000 021a 0A       		.uleb128 0xa
 5001 021b 8A200000 		.4byte	.LASF44
 5002 021f 06       		.byte	0x6
 5003 0220 50       		.byte	0x50
 5004 0221 D5000000 		.4byte	0xd5
 5005 0225 33       		.byte	0x33
 5006 0226 0A       		.uleb128 0xa
 5007 0227 0A110000 		.4byte	.LASF45
 5008 022b 06       		.byte	0x6
 5009 022c 51       		.byte	0x51
 5010 022d D5000000 		.4byte	0xd5
 5011 0231 34       		.byte	0x34
 5012 0232 0A       		.uleb128 0xa
 5013 0233 370D0000 		.4byte	.LASF46
 5014 0237 06       		.byte	0x6
 5015 0238 52       		.byte	0x52
 5016 0239 E0000000 		.4byte	0xe0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 191


 5017 023d 36       		.byte	0x36
 5018 023e 0A       		.uleb128 0xa
 5019 023f 9E120000 		.4byte	.LASF47
 5020 0243 06       		.byte	0x6
 5021 0244 53       		.byte	0x53
 5022 0245 E0000000 		.4byte	0xe0
 5023 0249 38       		.byte	0x38
 5024 024a 0A       		.uleb128 0xa
 5025 024b 1C100000 		.4byte	.LASF48
 5026 024f 06       		.byte	0x6
 5027 0250 54       		.byte	0x54
 5028 0251 E0000000 		.4byte	0xe0
 5029 0255 3A       		.byte	0x3a
 5030 0256 0A       		.uleb128 0xa
 5031 0257 011F0000 		.4byte	.LASF49
 5032 025b 06       		.byte	0x6
 5033 025c 55       		.byte	0x55
 5034 025d D5000000 		.4byte	0xd5
 5035 0261 3C       		.byte	0x3c
 5036 0262 0A       		.uleb128 0xa
 5037 0263 A41C0000 		.4byte	.LASF50
 5038 0267 06       		.byte	0x6
 5039 0268 56       		.byte	0x56
 5040 0269 D5000000 		.4byte	0xd5
 5041 026d 3D       		.byte	0x3d
 5042 026e 0A       		.uleb128 0xa
 5043 026f AA030000 		.4byte	.LASF51
 5044 0273 06       		.byte	0x6
 5045 0274 57       		.byte	0x57
 5046 0275 D5000000 		.4byte	0xd5
 5047 0279 3E       		.byte	0x3e
 5048 027a 0A       		.uleb128 0xa
 5049 027b 4C190000 		.4byte	.LASF52
 5050 027f 06       		.byte	0x6
 5051 0280 58       		.byte	0x58
 5052 0281 D5000000 		.4byte	0xd5
 5053 0285 3F       		.byte	0x3f
 5054 0286 0A       		.uleb128 0xa
 5055 0287 64130000 		.4byte	.LASF53
 5056 028b 06       		.byte	0x6
 5057 028c 59       		.byte	0x59
 5058 028d D5000000 		.4byte	0xd5
 5059 0291 40       		.byte	0x40
 5060 0292 0A       		.uleb128 0xa
 5061 0293 D9140000 		.4byte	.LASF54
 5062 0297 06       		.byte	0x6
 5063 0298 5A       		.byte	0x5a
 5064 0299 D5000000 		.4byte	0xd5
 5065 029d 41       		.byte	0x41
 5066 029e 0A       		.uleb128 0xa
 5067 029f CF110000 		.4byte	.LASF55
 5068 02a3 06       		.byte	0x6
 5069 02a4 5B       		.byte	0x5b
 5070 02a5 D5000000 		.4byte	0xd5
 5071 02a9 42       		.byte	0x42
 5072 02aa 0A       		.uleb128 0xa
 5073 02ab 56260000 		.4byte	.LASF56
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 192


 5074 02af 06       		.byte	0x6
 5075 02b0 5C       		.byte	0x5c
 5076 02b1 D5000000 		.4byte	0xd5
 5077 02b5 43       		.byte	0x43
 5078 02b6 0A       		.uleb128 0xa
 5079 02b7 FF210000 		.4byte	.LASF57
 5080 02bb 06       		.byte	0x6
 5081 02bc 5D       		.byte	0x5d
 5082 02bd D5000000 		.4byte	0xd5
 5083 02c1 44       		.byte	0x44
 5084 02c2 0A       		.uleb128 0xa
 5085 02c3 ED210000 		.4byte	.LASF58
 5086 02c7 06       		.byte	0x6
 5087 02c8 5E       		.byte	0x5e
 5088 02c9 01010000 		.4byte	0x101
 5089 02cd 48       		.byte	0x48
 5090 02ce 0A       		.uleb128 0xa
 5091 02cf 90010000 		.4byte	.LASF59
 5092 02d3 06       		.byte	0x6
 5093 02d4 5F       		.byte	0x5f
 5094 02d5 01010000 		.4byte	0x101
 5095 02d9 4C       		.byte	0x4c
 5096 02da 0A       		.uleb128 0xa
 5097 02db 19160000 		.4byte	.LASF60
 5098 02df 06       		.byte	0x6
 5099 02e0 60       		.byte	0x60
 5100 02e1 D5000000 		.4byte	0xd5
 5101 02e5 50       		.byte	0x50
 5102 02e6 0A       		.uleb128 0xa
 5103 02e7 FC130000 		.4byte	.LASF61
 5104 02eb 06       		.byte	0x6
 5105 02ec 61       		.byte	0x61
 5106 02ed D5000000 		.4byte	0xd5
 5107 02f1 51       		.byte	0x51
 5108 02f2 0A       		.uleb128 0xa
 5109 02f3 09160000 		.4byte	.LASF62
 5110 02f7 06       		.byte	0x6
 5111 02f8 62       		.byte	0x62
 5112 02f9 D5000000 		.4byte	0xd5
 5113 02fd 52       		.byte	0x52
 5114 02fe 0A       		.uleb128 0xa
 5115 02ff 76250000 		.4byte	.LASF63
 5116 0303 06       		.byte	0x6
 5117 0304 63       		.byte	0x63
 5118 0305 D5000000 		.4byte	0xd5
 5119 0309 53       		.byte	0x53
 5120 030a 0A       		.uleb128 0xa
 5121 030b FC1A0000 		.4byte	.LASF64
 5122 030f 06       		.byte	0x6
 5123 0310 64       		.byte	0x64
 5124 0311 D5000000 		.4byte	0xd5
 5125 0315 54       		.byte	0x54
 5126 0316 0A       		.uleb128 0xa
 5127 0317 E62A0000 		.4byte	.LASF65
 5128 031b 06       		.byte	0x6
 5129 031c 65       		.byte	0x65
 5130 031d D5000000 		.4byte	0xd5
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 193


 5131 0321 55       		.byte	0x55
 5132 0322 0A       		.uleb128 0xa
 5133 0323 87240000 		.4byte	.LASF66
 5134 0327 06       		.byte	0x6
 5135 0328 66       		.byte	0x66
 5136 0329 D5000000 		.4byte	0xd5
 5137 032d 56       		.byte	0x56
 5138 032e 0A       		.uleb128 0xa
 5139 032f 7C1D0000 		.4byte	.LASF67
 5140 0333 06       		.byte	0x6
 5141 0334 67       		.byte	0x67
 5142 0335 D5000000 		.4byte	0xd5
 5143 0339 57       		.byte	0x57
 5144 033a 0A       		.uleb128 0xa
 5145 033b 2A160000 		.4byte	.LASF68
 5146 033f 06       		.byte	0x6
 5147 0340 68       		.byte	0x68
 5148 0341 D5000000 		.4byte	0xd5
 5149 0345 58       		.byte	0x58
 5150 0346 0A       		.uleb128 0xa
 5151 0347 8D0F0000 		.4byte	.LASF69
 5152 034b 06       		.byte	0x6
 5153 034c 69       		.byte	0x69
 5154 034d D5000000 		.4byte	0xd5
 5155 0351 59       		.byte	0x59
 5156 0352 0A       		.uleb128 0xa
 5157 0353 712B0000 		.4byte	.LASF70
 5158 0357 06       		.byte	0x6
 5159 0358 6E       		.byte	0x6e
 5160 0359 EB000000 		.4byte	0xeb
 5161 035d 5A       		.byte	0x5a
 5162 035e 0A       		.uleb128 0xa
 5163 035f E5120000 		.4byte	.LASF71
 5164 0363 06       		.byte	0x6
 5165 0364 6F       		.byte	0x6f
 5166 0365 EB000000 		.4byte	0xeb
 5167 0369 5C       		.byte	0x5c
 5168 036a 0A       		.uleb128 0xa
 5169 036b 9E270000 		.4byte	.LASF72
 5170 036f 06       		.byte	0x6
 5171 0370 70       		.byte	0x70
 5172 0371 D5000000 		.4byte	0xd5
 5173 0375 5E       		.byte	0x5e
 5174 0376 0A       		.uleb128 0xa
 5175 0377 D8270000 		.4byte	.LASF73
 5176 037b 06       		.byte	0x6
 5177 037c 71       		.byte	0x71
 5178 037d D5000000 		.4byte	0xd5
 5179 0381 5F       		.byte	0x5f
 5180 0382 0A       		.uleb128 0xa
 5181 0383 39040000 		.4byte	.LASF74
 5182 0387 06       		.byte	0x6
 5183 0388 72       		.byte	0x72
 5184 0389 D5000000 		.4byte	0xd5
 5185 038d 60       		.byte	0x60
 5186 038e 0A       		.uleb128 0xa
 5187 038f B41A0000 		.4byte	.LASF75
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 194


 5188 0393 06       		.byte	0x6
 5189 0394 73       		.byte	0x73
 5190 0395 01010000 		.4byte	0x101
 5191 0399 64       		.byte	0x64
 5192 039a 0A       		.uleb128 0xa
 5193 039b 47290000 		.4byte	.LASF76
 5194 039f 06       		.byte	0x6
 5195 03a0 76       		.byte	0x76
 5196 03a1 EB000000 		.4byte	0xeb
 5197 03a5 68       		.byte	0x68
 5198 03a6 0A       		.uleb128 0xa
 5199 03a7 08070000 		.4byte	.LASF77
 5200 03ab 06       		.byte	0x6
 5201 03ac 77       		.byte	0x77
 5202 03ad EB000000 		.4byte	0xeb
 5203 03b1 6A       		.byte	0x6a
 5204 03b2 0A       		.uleb128 0xa
 5205 03b3 F70D0000 		.4byte	.LASF78
 5206 03b7 06       		.byte	0x6
 5207 03b8 78       		.byte	0x78
 5208 03b9 EB000000 		.4byte	0xeb
 5209 03bd 6C       		.byte	0x6c
 5210 03be 0A       		.uleb128 0xa
 5211 03bf 3C070000 		.4byte	.LASF79
 5212 03c3 06       		.byte	0x6
 5213 03c4 79       		.byte	0x79
 5214 03c5 EB000000 		.4byte	0xeb
 5215 03c9 6E       		.byte	0x6e
 5216 03ca 0A       		.uleb128 0xa
 5217 03cb 4C210000 		.4byte	.LASF80
 5218 03cf 06       		.byte	0x6
 5219 03d0 7B       		.byte	0x7b
 5220 03d1 D5000000 		.4byte	0xd5
 5221 03d5 70       		.byte	0x70
 5222 03d6 0A       		.uleb128 0xa
 5223 03d7 B2100000 		.4byte	.LASF81
 5224 03db 06       		.byte	0x6
 5225 03dc 7C       		.byte	0x7c
 5226 03dd D5000000 		.4byte	0xd5
 5227 03e1 71       		.byte	0x71
 5228 03e2 0A       		.uleb128 0xa
 5229 03e3 E0010000 		.4byte	.LASF82
 5230 03e7 06       		.byte	0x6
 5231 03e8 7D       		.byte	0x7d
 5232 03e9 D5000000 		.4byte	0xd5
 5233 03ed 72       		.byte	0x72
 5234 03ee 0A       		.uleb128 0xa
 5235 03ef BF280000 		.4byte	.LASF83
 5236 03f3 06       		.byte	0x6
 5237 03f4 7E       		.byte	0x7e
 5238 03f5 D5000000 		.4byte	0xd5
 5239 03f9 73       		.byte	0x73
 5240 03fa 0A       		.uleb128 0xa
 5241 03fb 2A070000 		.4byte	.LASF84
 5242 03ff 06       		.byte	0x6
 5243 0400 80       		.byte	0x80
 5244 0401 EB000000 		.4byte	0xeb
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 195


 5245 0405 74       		.byte	0x74
 5246 0406 0A       		.uleb128 0xa
 5247 0407 E9130000 		.4byte	.LASF85
 5248 040b 06       		.byte	0x6
 5249 040c 81       		.byte	0x81
 5250 040d EB000000 		.4byte	0xeb
 5251 0411 76       		.byte	0x76
 5252 0412 0A       		.uleb128 0xa
 5253 0413 47160000 		.4byte	.LASF86
 5254 0417 06       		.byte	0x6
 5255 0418 82       		.byte	0x82
 5256 0419 EB000000 		.4byte	0xeb
 5257 041d 78       		.byte	0x78
 5258 041e 0A       		.uleb128 0xa
 5259 041f A4200000 		.4byte	.LASF87
 5260 0423 06       		.byte	0x6
 5261 0424 83       		.byte	0x83
 5262 0425 EB000000 		.4byte	0xeb
 5263 0429 7A       		.byte	0x7a
 5264 042a 0A       		.uleb128 0xa
 5265 042b CB180000 		.4byte	.LASF88
 5266 042f 06       		.byte	0x6
 5267 0430 86       		.byte	0x86
 5268 0431 D5000000 		.4byte	0xd5
 5269 0435 7C       		.byte	0x7c
 5270 0436 0A       		.uleb128 0xa
 5271 0437 7C030000 		.4byte	.LASF89
 5272 043b 06       		.byte	0x6
 5273 043c 87       		.byte	0x87
 5274 043d D5000000 		.4byte	0xd5
 5275 0441 7D       		.byte	0x7d
 5276 0442 0A       		.uleb128 0xa
 5277 0443 3A100000 		.4byte	.LASF90
 5278 0447 06       		.byte	0x6
 5279 0448 88       		.byte	0x88
 5280 0449 D5000000 		.4byte	0xd5
 5281 044d 7E       		.byte	0x7e
 5282 044e 0A       		.uleb128 0xa
 5283 044f AC150000 		.4byte	.LASF91
 5284 0453 06       		.byte	0x6
 5285 0454 89       		.byte	0x89
 5286 0455 D5000000 		.4byte	0xd5
 5287 0459 7F       		.byte	0x7f
 5288 045a 0A       		.uleb128 0xa
 5289 045b DF250000 		.4byte	.LASF92
 5290 045f 06       		.byte	0x6
 5291 0460 8A       		.byte	0x8a
 5292 0461 D5000000 		.4byte	0xd5
 5293 0465 80       		.byte	0x80
 5294 0466 0A       		.uleb128 0xa
 5295 0467 CE0D0000 		.4byte	.LASF93
 5296 046b 06       		.byte	0x6
 5297 046c 8D       		.byte	0x8d
 5298 046d 01010000 		.4byte	0x101
 5299 0471 84       		.byte	0x84
 5300 0472 0A       		.uleb128 0xa
 5301 0473 4B200000 		.4byte	.LASF94
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 196


 5302 0477 06       		.byte	0x6
 5303 0478 8E       		.byte	0x8e
 5304 0479 01010000 		.4byte	0x101
 5305 047d 88       		.byte	0x88
 5306 047e 0A       		.uleb128 0xa
 5307 047f B5270000 		.4byte	.LASF95
 5308 0483 06       		.byte	0x6
 5309 0484 8F       		.byte	0x8f
 5310 0485 01010000 		.4byte	0x101
 5311 0489 8C       		.byte	0x8c
 5312 048a 0A       		.uleb128 0xa
 5313 048b B3190000 		.4byte	.LASF96
 5314 048f 06       		.byte	0x6
 5315 0490 90       		.byte	0x90
 5316 0491 01010000 		.4byte	0x101
 5317 0495 90       		.byte	0x90
 5318 0496 0A       		.uleb128 0xa
 5319 0497 360F0000 		.4byte	.LASF97
 5320 049b 06       		.byte	0x6
 5321 049c 91       		.byte	0x91
 5322 049d 01010000 		.4byte	0x101
 5323 04a1 94       		.byte	0x94
 5324 04a2 0A       		.uleb128 0xa
 5325 04a3 DB0A0000 		.4byte	.LASF98
 5326 04a7 06       		.byte	0x6
 5327 04a8 92       		.byte	0x92
 5328 04a9 01010000 		.4byte	0x101
 5329 04ad 98       		.byte	0x98
 5330 04ae 0A       		.uleb128 0xa
 5331 04af 530B0000 		.4byte	.LASF99
 5332 04b3 06       		.byte	0x6
 5333 04b4 93       		.byte	0x93
 5334 04b5 01010000 		.4byte	0x101
 5335 04b9 9C       		.byte	0x9c
 5336 04ba 0A       		.uleb128 0xa
 5337 04bb 0E140000 		.4byte	.LASF100
 5338 04bf 06       		.byte	0x6
 5339 04c0 94       		.byte	0x94
 5340 04c1 01010000 		.4byte	0x101
 5341 04c5 A0       		.byte	0xa0
 5342 04c6 0A       		.uleb128 0xa
 5343 04c7 021D0000 		.4byte	.LASF101
 5344 04cb 06       		.byte	0x6
 5345 04cc 95       		.byte	0x95
 5346 04cd EB000000 		.4byte	0xeb
 5347 04d1 A4       		.byte	0xa4
 5348 04d2 0A       		.uleb128 0xa
 5349 04d3 E90E0000 		.4byte	.LASF102
 5350 04d7 06       		.byte	0x6
 5351 04d8 96       		.byte	0x96
 5352 04d9 EB000000 		.4byte	0xeb
 5353 04dd A6       		.byte	0xa6
 5354 04de 0A       		.uleb128 0xa
 5355 04df 12090000 		.4byte	.LASF103
 5356 04e3 06       		.byte	0x6
 5357 04e4 97       		.byte	0x97
 5358 04e5 EB000000 		.4byte	0xeb
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 197


 5359 04e9 A8       		.byte	0xa8
 5360 04ea 0A       		.uleb128 0xa
 5361 04eb B9200000 		.4byte	.LASF104
 5362 04ef 06       		.byte	0x6
 5363 04f0 98       		.byte	0x98
 5364 04f1 EB000000 		.4byte	0xeb
 5365 04f5 AA       		.byte	0xaa
 5366 04f6 0A       		.uleb128 0xa
 5367 04f7 E0180000 		.4byte	.LASF105
 5368 04fb 06       		.byte	0x6
 5369 04fc 99       		.byte	0x99
 5370 04fd EB000000 		.4byte	0xeb
 5371 0501 AC       		.byte	0xac
 5372 0502 0A       		.uleb128 0xa
 5373 0503 12120000 		.4byte	.LASF106
 5374 0507 06       		.byte	0x6
 5375 0508 9A       		.byte	0x9a
 5376 0509 EB000000 		.4byte	0xeb
 5377 050d AE       		.byte	0xae
 5378 050e 0A       		.uleb128 0xa
 5379 050f 04290000 		.4byte	.LASF107
 5380 0513 06       		.byte	0x6
 5381 0514 9D       		.byte	0x9d
 5382 0515 EB000000 		.4byte	0xeb
 5383 0519 B0       		.byte	0xb0
 5384 051a 0A       		.uleb128 0xa
 5385 051b 170E0000 		.4byte	.LASF108
 5386 051f 06       		.byte	0x6
 5387 0520 9E       		.byte	0x9e
 5388 0521 01010000 		.4byte	0x101
 5389 0525 B4       		.byte	0xb4
 5390 0526 00       		.byte	0
 5391 0527 02       		.uleb128 0x2
 5392 0528 70150000 		.4byte	.LASF109
 5393 052c 06       		.byte	0x6
 5394 052d 9F       		.byte	0x9f
 5395 052e 16010000 		.4byte	0x116
 5396 0532 03       		.uleb128 0x3
 5397 0533 04       		.byte	0x4
 5398 0534 04       		.byte	0x4
 5399 0535 AF160000 		.4byte	.LASF110
 5400 0539 03       		.uleb128 0x3
 5401 053a 08       		.byte	0x8
 5402 053b 04       		.byte	0x4
 5403 053c 500D0000 		.4byte	.LASF111
 5404 0540 06       		.uleb128 0x6
 5405 0541 04       		.byte	0x4
 5406 0542 01010000 		.4byte	0x101
 5407 0546 03       		.uleb128 0x3
 5408 0547 01       		.byte	0x1
 5409 0548 02       		.byte	0x2
 5410 0549 270B0000 		.4byte	.LASF112
 5411 054d 0B       		.uleb128 0xb
 5412 054e 01       		.byte	0x1
 5413 054f 5E000000 		.4byte	0x5e
 5414 0553 07       		.byte	0x7
 5415 0554 7101     		.2byte	0x171
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 198


 5416 0556 67050000 		.4byte	0x567
 5417 055a 0C       		.uleb128 0xc
 5418 055b 8C1E0000 		.4byte	.LASF113
 5419 055f 00       		.byte	0
 5420 0560 0C       		.uleb128 0xc
 5421 0561 61240000 		.4byte	.LASF114
 5422 0565 01       		.byte	0x1
 5423 0566 00       		.byte	0
 5424 0567 0D       		.uleb128 0xd
 5425 0568 98250000 		.4byte	.LASF115
 5426 056c 07       		.byte	0x7
 5427 056d 7401     		.2byte	0x174
 5428 056f 4D050000 		.4byte	0x54d
 5429 0573 0E       		.uleb128 0xe
 5430 0574 18       		.byte	0x18
 5431 0575 07       		.byte	0x7
 5432 0576 D501     		.2byte	0x1d5
 5433 0578 CB050000 		.4byte	0x5cb
 5434 057c 0F       		.uleb128 0xf
 5435 057d 83110000 		.4byte	.LASF116
 5436 0581 07       		.byte	0x7
 5437 0582 D701     		.2byte	0x1d7
 5438 0584 67050000 		.4byte	0x567
 5439 0588 00       		.byte	0
 5440 0589 0F       		.uleb128 0xf
 5441 058a 93250000 		.4byte	.LASF117
 5442 058e 07       		.byte	0x7
 5443 058f DA01     		.2byte	0x1da
 5444 0591 01010000 		.4byte	0x101
 5445 0595 04       		.byte	0x4
 5446 0596 0F       		.uleb128 0xf
 5447 0597 2A080000 		.4byte	.LASF118
 5448 059b 07       		.byte	0x7
 5449 059c DC01     		.2byte	0x1dc
 5450 059e 01010000 		.4byte	0x101
 5451 05a2 08       		.byte	0x8
 5452 05a3 0F       		.uleb128 0xf
 5453 05a4 B8250000 		.4byte	.LASF119
 5454 05a8 07       		.byte	0x7
 5455 05a9 DF01     		.2byte	0x1df
 5456 05ab 01010000 		.4byte	0x101
 5457 05af 0C       		.byte	0xc
 5458 05b0 0F       		.uleb128 0xf
 5459 05b1 79290000 		.4byte	.LASF120
 5460 05b5 07       		.byte	0x7
 5461 05b6 E301     		.2byte	0x1e3
 5462 05b8 01010000 		.4byte	0x101
 5463 05bc 10       		.byte	0x10
 5464 05bd 0F       		.uleb128 0xf
 5465 05be 41220000 		.4byte	.LASF121
 5466 05c2 07       		.byte	0x7
 5467 05c3 E701     		.2byte	0x1e7
 5468 05c5 01010000 		.4byte	0x101
 5469 05c9 14       		.byte	0x14
 5470 05ca 00       		.byte	0
 5471 05cb 0D       		.uleb128 0xd
 5472 05cc 0B0F0000 		.4byte	.LASF122
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 199


 5473 05d0 07       		.byte	0x7
 5474 05d1 E901     		.2byte	0x1e9
 5475 05d3 73050000 		.4byte	0x573
 5476 05d7 0E       		.uleb128 0xe
 5477 05d8 30       		.byte	0x30
 5478 05d9 07       		.byte	0x7
 5479 05da EC01     		.2byte	0x1ec
 5480 05dc FB050000 		.4byte	0x5fb
 5481 05e0 0F       		.uleb128 0xf
 5482 05e1 570D0000 		.4byte	.LASF123
 5483 05e5 07       		.byte	0x7
 5484 05e6 EE01     		.2byte	0x1ee
 5485 05e8 CB050000 		.4byte	0x5cb
 5486 05ec 00       		.byte	0
 5487 05ed 0F       		.uleb128 0xf
 5488 05ee 57030000 		.4byte	.LASF124
 5489 05f2 07       		.byte	0x7
 5490 05f3 EF01     		.2byte	0x1ef
 5491 05f5 CB050000 		.4byte	0x5cb
 5492 05f9 18       		.byte	0x18
 5493 05fa 00       		.byte	0
 5494 05fb 0D       		.uleb128 0xd
 5495 05fc 58250000 		.4byte	.LASF125
 5496 0600 07       		.byte	0x7
 5497 0601 F001     		.2byte	0x1f0
 5498 0603 D7050000 		.4byte	0x5d7
 5499 0607 0B       		.uleb128 0xb
 5500 0608 01       		.byte	0x1
 5501 0609 5E000000 		.4byte	0x5e
 5502 060d 08       		.byte	0x8
 5503 060e 2402     		.2byte	0x224
 5504 0610 21060000 		.4byte	0x621
 5505 0614 0C       		.uleb128 0xc
 5506 0615 5F0F0000 		.4byte	.LASF126
 5507 0619 00       		.byte	0
 5508 061a 0C       		.uleb128 0xc
 5509 061b 8F270000 		.4byte	.LASF127
 5510 061f 01       		.byte	0x1
 5511 0620 00       		.byte	0
 5512 0621 0D       		.uleb128 0xd
 5513 0622 DB110000 		.4byte	.LASF128
 5514 0626 08       		.byte	0x8
 5515 0627 2702     		.2byte	0x227
 5516 0629 07060000 		.4byte	0x607
 5517 062d 0D       		.uleb128 0xd
 5518 062e 671A0000 		.4byte	.LASF129
 5519 0632 08       		.byte	0x8
 5520 0633 3902     		.2byte	0x239
 5521 0635 39060000 		.4byte	0x639
 5522 0639 06       		.uleb128 0x6
 5523 063a 04       		.byte	0x4
 5524 063b 3F060000 		.4byte	0x63f
 5525 063f 10       		.uleb128 0x10
 5526 0640 4A060000 		.4byte	0x64a
 5527 0644 11       		.uleb128 0x11
 5528 0645 01010000 		.4byte	0x101
 5529 0649 00       		.byte	0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 200


 5530 064a 0D       		.uleb128 0xd
 5531 064b 552B0000 		.4byte	.LASF130
 5532 064f 08       		.byte	0x8
 5533 0650 4402     		.2byte	0x244
 5534 0652 56060000 		.4byte	0x656
 5535 0656 06       		.uleb128 0x6
 5536 0657 04       		.byte	0x4
 5537 0658 5C060000 		.4byte	0x65c
 5538 065c 12       		.uleb128 0x12
 5539 065d 21060000 		.4byte	0x621
 5540 0661 6B060000 		.4byte	0x66b
 5541 0665 11       		.uleb128 0x11
 5542 0666 01010000 		.4byte	0x101
 5543 066a 00       		.byte	0
 5544 066b 13       		.uleb128 0x13
 5545 066c 282A0000 		.4byte	.LASF154
 5546 0670 4C       		.byte	0x4c
 5547 0671 08       		.byte	0x8
 5548 0672 C302     		.2byte	0x2c3
 5549 0674 8A070000 		.4byte	0x78a
 5550 0678 0F       		.uleb128 0xf
 5551 0679 A9050000 		.4byte	.LASF131
 5552 067d 08       		.byte	0x8
 5553 067e C602     		.2byte	0x2c6
 5554 0680 46050000 		.4byte	0x546
 5555 0684 00       		.byte	0
 5556 0685 0F       		.uleb128 0xf
 5557 0686 BA1D0000 		.4byte	.LASF132
 5558 068a 08       		.byte	0x8
 5559 068b C702     		.2byte	0x2c7
 5560 068d 46050000 		.4byte	0x546
 5561 0691 01       		.byte	0x1
 5562 0692 0F       		.uleb128 0xf
 5563 0693 5F030000 		.4byte	.LASF133
 5564 0697 08       		.byte	0x8
 5565 0698 C902     		.2byte	0x2c9
 5566 069a 0C010000 		.4byte	0x10c
 5567 069e 04       		.byte	0x4
 5568 069f 0F       		.uleb128 0xf
 5569 06a0 69250000 		.4byte	.LASF134
 5570 06a4 08       		.byte	0x8
 5571 06a5 CB02     		.2byte	0x2cb
 5572 06a7 0C010000 		.4byte	0x10c
 5573 06ab 08       		.byte	0x8
 5574 06ac 0F       		.uleb128 0xf
 5575 06ad 29270000 		.4byte	.LASF135
 5576 06b1 08       		.byte	0x8
 5577 06b2 CC02     		.2byte	0x2cc
 5578 06b4 46050000 		.4byte	0x546
 5579 06b8 0C       		.byte	0xc
 5580 06b9 0F       		.uleb128 0xf
 5581 06ba 58270000 		.4byte	.LASF136
 5582 06be 08       		.byte	0x8
 5583 06bf CD02     		.2byte	0x2cd
 5584 06c1 46050000 		.4byte	0x546
 5585 06c5 0D       		.byte	0xd
 5586 06c6 0F       		.uleb128 0xf
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 201


 5587 06c7 E6220000 		.4byte	.LASF137
 5588 06cb 08       		.byte	0x8
 5589 06cc CF02     		.2byte	0x2cf
 5590 06ce 8A070000 		.4byte	0x78a
 5591 06d2 10       		.byte	0x10
 5592 06d3 0F       		.uleb128 0xf
 5593 06d4 FD160000 		.4byte	.LASF138
 5594 06d8 08       		.byte	0x8
 5595 06d9 D002     		.2byte	0x2d0
 5596 06db 01010000 		.4byte	0x101
 5597 06df 14       		.byte	0x14
 5598 06e0 0F       		.uleb128 0xf
 5599 06e1 1E250000 		.4byte	.LASF139
 5600 06e5 08       		.byte	0x8
 5601 06e6 D102     		.2byte	0x2d1
 5602 06e8 0C010000 		.4byte	0x10c
 5603 06ec 18       		.byte	0x18
 5604 06ed 0F       		.uleb128 0xf
 5605 06ee 45080000 		.4byte	.LASF140
 5606 06f2 08       		.byte	0x8
 5607 06f3 D202     		.2byte	0x2d2
 5608 06f5 0C010000 		.4byte	0x10c
 5609 06f9 1C       		.byte	0x1c
 5610 06fa 0F       		.uleb128 0xf
 5611 06fb A9120000 		.4byte	.LASF141
 5612 06ff 08       		.byte	0x8
 5613 0700 D402     		.2byte	0x2d4
 5614 0702 0C010000 		.4byte	0x10c
 5615 0706 20       		.byte	0x20
 5616 0707 0F       		.uleb128 0xf
 5617 0708 17260000 		.4byte	.LASF142
 5618 070c 08       		.byte	0x8
 5619 070d D502     		.2byte	0x2d5
 5620 070f 90070000 		.4byte	0x790
 5621 0713 24       		.byte	0x24
 5622 0714 0F       		.uleb128 0xf
 5623 0715 F7140000 		.4byte	.LASF143
 5624 0719 08       		.byte	0x8
 5625 071a D702     		.2byte	0x2d7
 5626 071c 8A070000 		.4byte	0x78a
 5627 0720 28       		.byte	0x28
 5628 0721 0F       		.uleb128 0xf
 5629 0722 4B140000 		.4byte	.LASF144
 5630 0726 08       		.byte	0x8
 5631 0727 D802     		.2byte	0x2d8
 5632 0729 01010000 		.4byte	0x101
 5633 072d 2C       		.byte	0x2c
 5634 072e 0F       		.uleb128 0xf
 5635 072f 1E090000 		.4byte	.LASF145
 5636 0733 08       		.byte	0x8
 5637 0734 D902     		.2byte	0x2d9
 5638 0736 0C010000 		.4byte	0x10c
 5639 073a 30       		.byte	0x30
 5640 073b 0F       		.uleb128 0xf
 5641 073c 060E0000 		.4byte	.LASF146
 5642 0740 08       		.byte	0x8
 5643 0741 DA02     		.2byte	0x2da
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 202


 5644 0743 0C010000 		.4byte	0x10c
 5645 0747 34       		.byte	0x34
 5646 0748 0F       		.uleb128 0xf
 5647 0749 83090000 		.4byte	.LASF147
 5648 074d 08       		.byte	0x8
 5649 074e DC02     		.2byte	0x2dc
 5650 0750 8A070000 		.4byte	0x78a
 5651 0754 38       		.byte	0x38
 5652 0755 0F       		.uleb128 0xf
 5653 0756 251A0000 		.4byte	.LASF148
 5654 075a 08       		.byte	0x8
 5655 075b DD02     		.2byte	0x2dd
 5656 075d 01010000 		.4byte	0x101
 5657 0761 3C       		.byte	0x3c
 5658 0762 0F       		.uleb128 0xf
 5659 0763 D41B0000 		.4byte	.LASF149
 5660 0767 08       		.byte	0x8
 5661 0768 DE02     		.2byte	0x2de
 5662 076a 0C010000 		.4byte	0x10c
 5663 076e 40       		.byte	0x40
 5664 076f 0F       		.uleb128 0xf
 5665 0770 1B110000 		.4byte	.LASF150
 5666 0774 08       		.byte	0x8
 5667 0775 E402     		.2byte	0x2e4
 5668 0777 2D060000 		.4byte	0x62d
 5669 077b 44       		.byte	0x44
 5670 077c 0F       		.uleb128 0xf
 5671 077d F3220000 		.4byte	.LASF151
 5672 0781 08       		.byte	0x8
 5673 0782 EB02     		.2byte	0x2eb
 5674 0784 4A060000 		.4byte	0x64a
 5675 0788 48       		.byte	0x48
 5676 0789 00       		.byte	0
 5677 078a 06       		.uleb128 0x6
 5678 078b 04       		.byte	0x4
 5679 078c D5000000 		.4byte	0xd5
 5680 0790 08       		.uleb128 0x8
 5681 0791 46050000 		.4byte	0x546
 5682 0795 0D       		.uleb128 0xd
 5683 0796 C4090000 		.4byte	.LASF152
 5684 079a 08       		.byte	0x8
 5685 079b EE02     		.2byte	0x2ee
 5686 079d 6B060000 		.4byte	0x66b
 5687 07a1 0D       		.uleb128 0xd
 5688 07a2 361C0000 		.4byte	.LASF153
 5689 07a6 09       		.byte	0x9
 5690 07a7 D901     		.2byte	0x1d9
 5691 07a9 39060000 		.4byte	0x639
 5692 07ad 13       		.uleb128 0x13
 5693 07ae 06010000 		.4byte	.LASF155
 5694 07b2 38       		.byte	0x38
 5695 07b3 09       		.byte	0x9
 5696 07b4 7502     		.2byte	0x275
 5697 07b6 71080000 		.4byte	0x871
 5698 07ba 0F       		.uleb128 0xf
 5699 07bb 33030000 		.4byte	.LASF156
 5700 07bf 09       		.byte	0x9
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 203


 5701 07c0 7802     		.2byte	0x278
 5702 07c2 0C010000 		.4byte	0x10c
 5703 07c6 00       		.byte	0
 5704 07c7 0F       		.uleb128 0xf
 5705 07c8 DD220000 		.4byte	.LASF157
 5706 07cc 09       		.byte	0x9
 5707 07cd 7902     		.2byte	0x279
 5708 07cf 0C010000 		.4byte	0x10c
 5709 07d3 04       		.byte	0x4
 5710 07d4 0F       		.uleb128 0xf
 5711 07d5 132A0000 		.4byte	.LASF158
 5712 07d9 09       		.byte	0x9
 5713 07da 7B02     		.2byte	0x27b
 5714 07dc BB000000 		.4byte	0xbb
 5715 07e0 08       		.byte	0x8
 5716 07e1 0F       		.uleb128 0xf
 5717 07e2 E71A0000 		.4byte	.LASF159
 5718 07e6 09       		.byte	0x9
 5719 07e7 7C02     		.2byte	0x27c
 5720 07e9 01010000 		.4byte	0x101
 5721 07ed 0C       		.byte	0xc
 5722 07ee 0F       		.uleb128 0xf
 5723 07ef 75090000 		.4byte	.LASF160
 5724 07f3 09       		.byte	0x9
 5725 07f4 7D02     		.2byte	0x27d
 5726 07f6 0C010000 		.4byte	0x10c
 5727 07fa 10       		.byte	0x10
 5728 07fb 0F       		.uleb128 0xf
 5729 07fc D5290000 		.4byte	.LASF161
 5730 0800 09       		.byte	0x9
 5731 0801 7E02     		.2byte	0x27e
 5732 0803 0C010000 		.4byte	0x10c
 5733 0807 14       		.byte	0x14
 5734 0808 0F       		.uleb128 0xf
 5735 0809 5C010000 		.4byte	.LASF162
 5736 080d 09       		.byte	0x9
 5737 080e 8002     		.2byte	0x280
 5738 0810 BB000000 		.4byte	0xbb
 5739 0814 18       		.byte	0x18
 5740 0815 0F       		.uleb128 0xf
 5741 0816 760C0000 		.4byte	.LASF163
 5742 081a 09       		.byte	0x9
 5743 081b 8102     		.2byte	0x281
 5744 081d 01010000 		.4byte	0x101
 5745 0821 1C       		.byte	0x1c
 5746 0822 0F       		.uleb128 0xf
 5747 0823 3E160000 		.4byte	.LASF164
 5748 0827 09       		.byte	0x9
 5749 0828 8202     		.2byte	0x282
 5750 082a 0C010000 		.4byte	0x10c
 5751 082e 20       		.byte	0x20
 5752 082f 0F       		.uleb128 0xf
 5753 0830 CD1F0000 		.4byte	.LASF165
 5754 0834 09       		.byte	0x9
 5755 0835 8402     		.2byte	0x284
 5756 0837 BB000000 		.4byte	0xbb
 5757 083b 24       		.byte	0x24
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 204


 5758 083c 0F       		.uleb128 0xf
 5759 083d DF050000 		.4byte	.LASF166
 5760 0841 09       		.byte	0x9
 5761 0842 8502     		.2byte	0x285
 5762 0844 01010000 		.4byte	0x101
 5763 0848 28       		.byte	0x28
 5764 0849 0F       		.uleb128 0xf
 5765 084a 20120000 		.4byte	.LASF167
 5766 084e 09       		.byte	0x9
 5767 084f 8602     		.2byte	0x286
 5768 0851 0C010000 		.4byte	0x10c
 5769 0855 2C       		.byte	0x2c
 5770 0856 0F       		.uleb128 0xf
 5771 0857 1B110000 		.4byte	.LASF150
 5772 085b 09       		.byte	0x9
 5773 085c 8B02     		.2byte	0x28b
 5774 085e A1070000 		.4byte	0x7a1
 5775 0862 30       		.byte	0x30
 5776 0863 0F       		.uleb128 0xf
 5777 0864 F2230000 		.4byte	.LASF168
 5778 0868 09       		.byte	0x9
 5779 0869 8E02     		.2byte	0x28e
 5780 086b 01010000 		.4byte	0x101
 5781 086f 34       		.byte	0x34
 5782 0870 00       		.byte	0
 5783 0871 0D       		.uleb128 0xd
 5784 0872 05150000 		.4byte	.LASF169
 5785 0876 09       		.byte	0x9
 5786 0877 9102     		.2byte	0x291
 5787 0879 AD070000 		.4byte	0x7ad
 5788 087d 14       		.uleb128 0x14
 5789 087e 9D0E0000 		.4byte	.LASF170
 5790 0882 64       		.byte	0x64
 5791 0883 0A       		.byte	0xa
 5792 0884 2F       		.byte	0x2f
 5793 0885 B6090000 		.4byte	0x9b6
 5794 0889 0A       		.uleb128 0xa
 5795 088a FF170000 		.4byte	.LASF171
 5796 088e 0A       		.byte	0xa
 5797 088f 31       		.byte	0x31
 5798 0890 01010000 		.4byte	0x101
 5799 0894 00       		.byte	0
 5800 0895 0A       		.uleb128 0xa
 5801 0896 8B0C0000 		.4byte	.LASF172
 5802 089a 0A       		.byte	0xa
 5803 089b 33       		.byte	0x33
 5804 089c 01010000 		.4byte	0x101
 5805 08a0 04       		.byte	0x4
 5806 08a1 0A       		.uleb128 0xa
 5807 08a2 D8030000 		.4byte	.LASF173
 5808 08a6 0A       		.byte	0xa
 5809 08a7 34       		.byte	0x34
 5810 08a8 01010000 		.4byte	0x101
 5811 08ac 08       		.byte	0x8
 5812 08ad 0A       		.uleb128 0xa
 5813 08ae 3C1D0000 		.4byte	.LASF174
 5814 08b2 0A       		.byte	0xa
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 205


 5815 08b3 35       		.byte	0x35
 5816 08b4 01010000 		.4byte	0x101
 5817 08b8 0C       		.byte	0xc
 5818 08b9 0A       		.uleb128 0xa
 5819 08ba 6E0C0000 		.4byte	.LASF175
 5820 08be 0A       		.byte	0xa
 5821 08bf 36       		.byte	0x36
 5822 08c0 01010000 		.4byte	0x101
 5823 08c4 10       		.byte	0x10
 5824 08c5 0A       		.uleb128 0xa
 5825 08c6 EC080000 		.4byte	.LASF176
 5826 08ca 0A       		.byte	0xa
 5827 08cb 37       		.byte	0x37
 5828 08cc 01010000 		.4byte	0x101
 5829 08d0 14       		.byte	0x14
 5830 08d1 0A       		.uleb128 0xa
 5831 08d2 F4080000 		.4byte	.LASF177
 5832 08d6 0A       		.byte	0xa
 5833 08d7 38       		.byte	0x38
 5834 08d8 01010000 		.4byte	0x101
 5835 08dc 18       		.byte	0x18
 5836 08dd 0A       		.uleb128 0xa
 5837 08de D4120000 		.4byte	.LASF178
 5838 08e2 0A       		.byte	0xa
 5839 08e3 39       		.byte	0x39
 5840 08e4 46050000 		.4byte	0x546
 5841 08e8 1C       		.byte	0x1c
 5842 08e9 0A       		.uleb128 0xa
 5843 08ea 98030000 		.4byte	.LASF179
 5844 08ee 0A       		.byte	0xa
 5845 08ef 3A       		.byte	0x3a
 5846 08f0 01010000 		.4byte	0x101
 5847 08f4 20       		.byte	0x20
 5848 08f5 0A       		.uleb128 0xa
 5849 08f6 A1030000 		.4byte	.LASF180
 5850 08fa 0A       		.byte	0xa
 5851 08fb 3B       		.byte	0x3b
 5852 08fc 01010000 		.4byte	0x101
 5853 0900 24       		.byte	0x24
 5854 0901 0A       		.uleb128 0xa
 5855 0902 5B180000 		.4byte	.LASF181
 5856 0906 0A       		.byte	0xa
 5857 0907 3C       		.byte	0x3c
 5858 0908 46050000 		.4byte	0x546
 5859 090c 28       		.byte	0x28
 5860 090d 0A       		.uleb128 0xa
 5861 090e 24140000 		.4byte	.LASF182
 5862 0912 0A       		.byte	0xa
 5863 0913 3E       		.byte	0x3e
 5864 0914 01010000 		.4byte	0x101
 5865 0918 2C       		.byte	0x2c
 5866 0919 0A       		.uleb128 0xa
 5867 091a F3100000 		.4byte	.LASF183
 5868 091e 0A       		.byte	0xa
 5869 091f 3F       		.byte	0x3f
 5870 0920 01010000 		.4byte	0x101
 5871 0924 30       		.byte	0x30
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 206


 5872 0925 0A       		.uleb128 0xa
 5873 0926 61290000 		.4byte	.LASF184
 5874 092a 0A       		.byte	0xa
 5875 092b 40       		.byte	0x40
 5876 092c 01010000 		.4byte	0x101
 5877 0930 34       		.byte	0x34
 5878 0931 0A       		.uleb128 0xa
 5879 0932 31100000 		.4byte	.LASF185
 5880 0936 0A       		.byte	0xa
 5881 0937 41       		.byte	0x41
 5882 0938 01010000 		.4byte	0x101
 5883 093c 38       		.byte	0x38
 5884 093d 0A       		.uleb128 0xa
 5885 093e 84140000 		.4byte	.LASF186
 5886 0942 0A       		.byte	0xa
 5887 0943 42       		.byte	0x42
 5888 0944 01010000 		.4byte	0x101
 5889 0948 3C       		.byte	0x3c
 5890 0949 0A       		.uleb128 0xa
 5891 094a D5050000 		.4byte	.LASF187
 5892 094e 0A       		.byte	0xa
 5893 094f 44       		.byte	0x44
 5894 0950 01010000 		.4byte	0x101
 5895 0954 40       		.byte	0x40
 5896 0955 0A       		.uleb128 0xa
 5897 0956 1A070000 		.4byte	.LASF188
 5898 095a 0A       		.byte	0xa
 5899 095b 45       		.byte	0x45
 5900 095c 01010000 		.4byte	0x101
 5901 0960 44       		.byte	0x44
 5902 0961 0A       		.uleb128 0xa
 5903 0962 C9290000 		.4byte	.LASF189
 5904 0966 0A       		.byte	0xa
 5905 0967 47       		.byte	0x47
 5906 0968 01010000 		.4byte	0x101
 5907 096c 48       		.byte	0x48
 5908 096d 0A       		.uleb128 0xa
 5909 096e CE220000 		.4byte	.LASF190
 5910 0972 0A       		.byte	0xa
 5911 0973 48       		.byte	0x48
 5912 0974 01010000 		.4byte	0x101
 5913 0978 4C       		.byte	0x4c
 5914 0979 0A       		.uleb128 0xa
 5915 097a D52A0000 		.4byte	.LASF191
 5916 097e 0A       		.byte	0xa
 5917 097f 4A       		.byte	0x4a
 5918 0980 01010000 		.4byte	0x101
 5919 0984 50       		.byte	0x50
 5920 0985 0A       		.uleb128 0xa
 5921 0986 27260000 		.4byte	.LASF192
 5922 098a 0A       		.byte	0xa
 5923 098b 4B       		.byte	0x4b
 5924 098c 01010000 		.4byte	0x101
 5925 0990 54       		.byte	0x54
 5926 0991 0A       		.uleb128 0xa
 5927 0992 7D180000 		.4byte	.LASF193
 5928 0996 0A       		.byte	0xa
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 207


 5929 0997 4D       		.byte	0x4d
 5930 0998 01010000 		.4byte	0x101
 5931 099c 58       		.byte	0x58
 5932 099d 0A       		.uleb128 0xa
 5933 099e 2A040000 		.4byte	.LASF194
 5934 09a2 0A       		.byte	0xa
 5935 09a3 4E       		.byte	0x4e
 5936 09a4 01010000 		.4byte	0x101
 5937 09a8 5C       		.byte	0x5c
 5938 09a9 0A       		.uleb128 0xa
 5939 09aa 18190000 		.4byte	.LASF195
 5940 09ae 0A       		.byte	0xa
 5941 09af 50       		.byte	0x50
 5942 09b0 01010000 		.4byte	0x101
 5943 09b4 60       		.byte	0x60
 5944 09b5 00       		.byte	0
 5945 09b6 02       		.uleb128 0x2
 5946 09b7 70040000 		.4byte	.LASF196
 5947 09bb 0A       		.byte	0xa
 5948 09bc 51       		.byte	0x51
 5949 09bd 7D080000 		.4byte	0x87d
 5950 09c1 0B       		.uleb128 0xb
 5951 09c2 02       		.byte	0x2
 5952 09c3 82000000 		.4byte	0x82
 5953 09c7 0B       		.byte	0xb
 5954 09c8 5401     		.2byte	0x154
 5955 09ca 010D0000 		.4byte	0xd01
 5956 09ce 0C       		.uleb128 0xc
 5957 09cf 371A0000 		.4byte	.LASF197
 5958 09d3 00       		.byte	0
 5959 09d4 15       		.uleb128 0x15
 5960 09d5 4C120000 		.4byte	.LASF198
 5961 09d9 0010     		.2byte	0x1000
 5962 09db 15       		.uleb128 0x15
 5963 09dc 10080000 		.4byte	.LASF199
 5964 09e0 0110     		.2byte	0x1001
 5965 09e2 15       		.uleb128 0x15
 5966 09e3 F5050000 		.4byte	.LASF200
 5967 09e7 0210     		.2byte	0x1002
 5968 09e9 15       		.uleb128 0x15
 5969 09ea 9D140000 		.4byte	.LASF201
 5970 09ee 0310     		.2byte	0x1003
 5971 09f0 15       		.uleb128 0x15
 5972 09f1 0F000000 		.4byte	.LASF202
 5973 09f5 0410     		.2byte	0x1004
 5974 09f7 15       		.uleb128 0x15
 5975 09f8 2E290000 		.4byte	.LASF203
 5976 09fc 0510     		.2byte	0x1005
 5977 09fe 15       		.uleb128 0x15
 5978 09ff C9020000 		.4byte	.LASF204
 5979 0a03 0020     		.2byte	0x2000
 5980 0a05 15       		.uleb128 0x15
 5981 0a06 01030000 		.4byte	.LASF205
 5982 0a0a 0120     		.2byte	0x2001
 5983 0a0c 15       		.uleb128 0x15
 5984 0a0d 69230000 		.4byte	.LASF206
 5985 0a11 0220     		.2byte	0x2002
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 208


 5986 0a13 15       		.uleb128 0x15
 5987 0a14 B4230000 		.4byte	.LASF207
 5988 0a18 0320     		.2byte	0x2003
 5989 0a1a 15       		.uleb128 0x15
 5990 0a1b 6B020000 		.4byte	.LASF208
 5991 0a1f 0420     		.2byte	0x2004
 5992 0a21 15       		.uleb128 0x15
 5993 0a22 1D1E0000 		.4byte	.LASF209
 5994 0a26 0520     		.2byte	0x2005
 5995 0a28 15       		.uleb128 0x15
 5996 0a29 551C0000 		.4byte	.LASF210
 5997 0a2d 0620     		.2byte	0x2006
 5998 0a2f 15       		.uleb128 0x15
 5999 0a30 9C2A0000 		.4byte	.LASF211
 6000 0a34 0720     		.2byte	0x2007
 6001 0a36 15       		.uleb128 0x15
 6002 0a37 79160000 		.4byte	.LASF212
 6003 0a3b 0820     		.2byte	0x2008
 6004 0a3d 15       		.uleb128 0x15
 6005 0a3e 6E260000 		.4byte	.LASF213
 6006 0a42 0920     		.2byte	0x2009
 6007 0a44 15       		.uleb128 0x15
 6008 0a45 491F0000 		.4byte	.LASF214
 6009 0a49 0A20     		.2byte	0x200a
 6010 0a4b 15       		.uleb128 0x15
 6011 0a4c A7290000 		.4byte	.LASF215
 6012 0a50 0B20     		.2byte	0x200b
 6013 0a52 15       		.uleb128 0x15
 6014 0a53 F3110000 		.4byte	.LASF216
 6015 0a57 0C20     		.2byte	0x200c
 6016 0a59 15       		.uleb128 0x15
 6017 0a5a 4B1D0000 		.4byte	.LASF217
 6018 0a5e 0D20     		.2byte	0x200d
 6019 0a60 15       		.uleb128 0x15
 6020 0a61 A5070000 		.4byte	.LASF218
 6021 0a65 0E20     		.2byte	0x200e
 6022 0a67 15       		.uleb128 0x15
 6023 0a68 712A0000 		.4byte	.LASF219
 6024 0a6c 0F20     		.2byte	0x200f
 6025 0a6e 15       		.uleb128 0x15
 6026 0a6f 54080000 		.4byte	.LASF220
 6027 0a73 1020     		.2byte	0x2010
 6028 0a75 15       		.uleb128 0x15
 6029 0a76 7C050000 		.4byte	.LASF221
 6030 0a7a 1120     		.2byte	0x2011
 6031 0a7c 15       		.uleb128 0x15
 6032 0a7d 3F2A0000 		.4byte	.LASF222
 6033 0a81 1220     		.2byte	0x2012
 6034 0a83 15       		.uleb128 0x15
 6035 0a84 120C0000 		.4byte	.LASF223
 6036 0a88 1320     		.2byte	0x2013
 6037 0a8a 15       		.uleb128 0x15
 6038 0a8b C50E0000 		.4byte	.LASF224
 6039 0a8f 1420     		.2byte	0x2014
 6040 0a91 15       		.uleb128 0x15
 6041 0a92 2E0C0000 		.4byte	.LASF225
 6042 0a96 1520     		.2byte	0x2015
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 209


 6043 0a98 15       		.uleb128 0x15
 6044 0a99 80150000 		.4byte	.LASF226
 6045 0a9d 1620     		.2byte	0x2016
 6046 0a9f 15       		.uleb128 0x15
 6047 0aa0 49070000 		.4byte	.LASF227
 6048 0aa4 1720     		.2byte	0x2017
 6049 0aa6 15       		.uleb128 0x15
 6050 0aa7 F1030000 		.4byte	.LASF228
 6051 0aab 0030     		.2byte	0x3000
 6052 0aad 15       		.uleb128 0x15
 6053 0aae 62010000 		.4byte	.LASF229
 6054 0ab2 0130     		.2byte	0x3001
 6055 0ab4 15       		.uleb128 0x15
 6056 0ab5 B8000000 		.4byte	.LASF230
 6057 0ab9 0230     		.2byte	0x3002
 6058 0abb 15       		.uleb128 0x15
 6059 0abc 9A260000 		.4byte	.LASF231
 6060 0ac0 0330     		.2byte	0x3003
 6061 0ac2 15       		.uleb128 0x15
 6062 0ac3 C7100000 		.4byte	.LASF232
 6063 0ac7 0430     		.2byte	0x3004
 6064 0ac9 15       		.uleb128 0x15
 6065 0aca 42240000 		.4byte	.LASF233
 6066 0ace 0530     		.2byte	0x3005
 6067 0ad0 15       		.uleb128 0x15
 6068 0ad1 F4290000 		.4byte	.LASF234
 6069 0ad5 0630     		.2byte	0x3006
 6070 0ad7 15       		.uleb128 0x15
 6071 0ad8 00020000 		.4byte	.LASF235
 6072 0adc 0730     		.2byte	0x3007
 6073 0ade 15       		.uleb128 0x15
 6074 0adf 9E010000 		.4byte	.LASF236
 6075 0ae3 0830     		.2byte	0x3008
 6076 0ae5 15       		.uleb128 0x15
 6077 0ae6 C6130000 		.4byte	.LASF237
 6078 0aea 0930     		.2byte	0x3009
 6079 0aec 15       		.uleb128 0x15
 6080 0aed EC190000 		.4byte	.LASF238
 6081 0af1 0A30     		.2byte	0x300a
 6082 0af3 15       		.uleb128 0x15
 6083 0af4 461E0000 		.4byte	.LASF239
 6084 0af8 0B30     		.2byte	0x300b
 6085 0afa 15       		.uleb128 0x15
 6086 0afb 4A0C0000 		.4byte	.LASF240
 6087 0aff 0C30     		.2byte	0x300c
 6088 0b01 15       		.uleb128 0x15
 6089 0b02 71130000 		.4byte	.LASF241
 6090 0b06 1130     		.2byte	0x3011
 6091 0b08 15       		.uleb128 0x15
 6092 0b09 10240000 		.4byte	.LASF242
 6093 0b0d 1230     		.2byte	0x3012
 6094 0b0f 15       		.uleb128 0x15
 6095 0b10 A2280000 		.4byte	.LASF243
 6096 0b14 1330     		.2byte	0x3013
 6097 0b16 15       		.uleb128 0x15
 6098 0b17 FF240000 		.4byte	.LASF244
 6099 0b1b 1430     		.2byte	0x3014
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 210


 6100 0b1d 15       		.uleb128 0x15
 6101 0b1e 35260000 		.4byte	.LASF245
 6102 0b22 1530     		.2byte	0x3015
 6103 0b24 15       		.uleb128 0x15
 6104 0b25 63060000 		.4byte	.LASF246
 6105 0b29 1630     		.2byte	0x3016
 6106 0b2b 15       		.uleb128 0x15
 6107 0b2c C51A0000 		.4byte	.LASF247
 6108 0b30 1730     		.2byte	0x3017
 6109 0b32 15       		.uleb128 0x15
 6110 0b33 770E0000 		.4byte	.LASF248
 6111 0b37 1830     		.2byte	0x3018
 6112 0b39 15       		.uleb128 0x15
 6113 0b3a D4190000 		.4byte	.LASF249
 6114 0b3e 1930     		.2byte	0x3019
 6115 0b40 15       		.uleb128 0x15
 6116 0b41 321B0000 		.4byte	.LASF250
 6117 0b45 0040     		.2byte	0x4000
 6118 0b47 15       		.uleb128 0x15
 6119 0b48 CE160000 		.4byte	.LASF251
 6120 0b4c 0140     		.2byte	0x4001
 6121 0b4e 15       		.uleb128 0x15
 6122 0b4f 750A0000 		.4byte	.LASF252
 6123 0b53 0240     		.2byte	0x4002
 6124 0b55 15       		.uleb128 0x15
 6125 0b56 C41D0000 		.4byte	.LASF253
 6126 0b5a 0340     		.2byte	0x4003
 6127 0b5c 15       		.uleb128 0x15
 6128 0b5d B71B0000 		.4byte	.LASF254
 6129 0b61 0440     		.2byte	0x4004
 6130 0b63 15       		.uleb128 0x15
 6131 0b64 5A050000 		.4byte	.LASF255
 6132 0b68 0540     		.2byte	0x4005
 6133 0b6a 15       		.uleb128 0x15
 6134 0b6b A5220000 		.4byte	.LASF256
 6135 0b6f 0640     		.2byte	0x4006
 6136 0b71 15       		.uleb128 0x15
 6137 0b72 DF240000 		.4byte	.LASF257
 6138 0b76 0740     		.2byte	0x4007
 6139 0b78 15       		.uleb128 0x15
 6140 0b79 56280000 		.4byte	.LASF258
 6141 0b7d 0840     		.2byte	0x4008
 6142 0b7f 15       		.uleb128 0x15
 6143 0b80 87070000 		.4byte	.LASF259
 6144 0b84 0940     		.2byte	0x4009
 6145 0b86 15       		.uleb128 0x15
 6146 0b87 901D0000 		.4byte	.LASF260
 6147 0b8b 0A40     		.2byte	0x400a
 6148 0b8d 15       		.uleb128 0x15
 6149 0b8e 8A110000 		.4byte	.LASF261
 6150 0b92 0B40     		.2byte	0x400b
 6151 0b94 15       		.uleb128 0x15
 6152 0b95 171D0000 		.4byte	.LASF262
 6153 0b99 0C40     		.2byte	0x400c
 6154 0b9b 15       		.uleb128 0x15
 6155 0b9c 01280000 		.4byte	.LASF263
 6156 0ba0 0D40     		.2byte	0x400d
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 211


 6157 0ba2 15       		.uleb128 0x15
 6158 0ba3 87180000 		.4byte	.LASF264
 6159 0ba7 0E40     		.2byte	0x400e
 6160 0ba9 15       		.uleb128 0x15
 6161 0baa 4D0E0000 		.4byte	.LASF265
 6162 0bae 0F40     		.2byte	0x400f
 6163 0bb0 15       		.uleb128 0x15
 6164 0bb1 CA0C0000 		.4byte	.LASF266
 6165 0bb5 1040     		.2byte	0x4010
 6166 0bb7 15       		.uleb128 0x15
 6167 0bb8 C2080000 		.4byte	.LASF267
 6168 0bbc 1140     		.2byte	0x4011
 6169 0bbe 15       		.uleb128 0x15
 6170 0bbf 11210000 		.4byte	.LASF268
 6171 0bc3 1240     		.2byte	0x4012
 6172 0bc5 15       		.uleb128 0x15
 6173 0bc6 E5090000 		.4byte	.LASF269
 6174 0bca 1340     		.2byte	0x4013
 6175 0bcc 15       		.uleb128 0x15
 6176 0bcd 122B0000 		.4byte	.LASF270
 6177 0bd1 1440     		.2byte	0x4014
 6178 0bd3 15       		.uleb128 0x15
 6179 0bd4 A01E0000 		.4byte	.LASF271
 6180 0bd8 1540     		.2byte	0x4015
 6181 0bda 15       		.uleb128 0x15
 6182 0bdb 9A040000 		.4byte	.LASF272
 6183 0bdf 1640     		.2byte	0x4016
 6184 0be1 15       		.uleb128 0x15
 6185 0be2 2B280000 		.4byte	.LASF273
 6186 0be6 1740     		.2byte	0x4017
 6187 0be8 15       		.uleb128 0x15
 6188 0be9 B5160000 		.4byte	.LASF274
 6189 0bed 1840     		.2byte	0x4018
 6190 0bef 15       		.uleb128 0x15
 6191 0bf0 D6280000 		.4byte	.LASF275
 6192 0bf4 1940     		.2byte	0x4019
 6193 0bf6 15       		.uleb128 0x15
 6194 0bf7 D31F0000 		.4byte	.LASF276
 6195 0bfb 1A40     		.2byte	0x401a
 6196 0bfd 15       		.uleb128 0x15
 6197 0bfe BD0F0000 		.4byte	.LASF277
 6198 0c02 0050     		.2byte	0x5000
 6199 0c04 15       		.uleb128 0x15
 6200 0c05 30190000 		.4byte	.LASF278
 6201 0c09 0150     		.2byte	0x5001
 6202 0c0b 15       		.uleb128 0x15
 6203 0c0c B5120000 		.4byte	.LASF279
 6204 0c10 0250     		.2byte	0x5002
 6205 0c12 15       		.uleb128 0x15
 6206 0c13 37060000 		.4byte	.LASF280
 6207 0c17 0350     		.2byte	0x5003
 6208 0c19 15       		.uleb128 0x15
 6209 0c1a DA1E0000 		.4byte	.LASF281
 6210 0c1e 0450     		.2byte	0x5004
 6211 0c20 15       		.uleb128 0x15
 6212 0c21 24110000 		.4byte	.LASF282
 6213 0c25 0550     		.2byte	0x5005
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 212


 6214 0c27 15       		.uleb128 0x15
 6215 0c28 6D000000 		.4byte	.LASF283
 6216 0c2c 0650     		.2byte	0x5006
 6217 0c2e 15       		.uleb128 0x15
 6218 0c2f 560A0000 		.4byte	.LASF284
 6219 0c33 0750     		.2byte	0x5007
 6220 0c35 15       		.uleb128 0x15
 6221 0c36 03130000 		.4byte	.LASF285
 6222 0c3a 0850     		.2byte	0x5008
 6223 0c3c 15       		.uleb128 0x15
 6224 0c3d 4A130000 		.4byte	.LASF286
 6225 0c41 0950     		.2byte	0x5009
 6226 0c43 15       		.uleb128 0x15
 6227 0c44 C5210000 		.4byte	.LASF287
 6228 0c48 0A50     		.2byte	0x500a
 6229 0c4a 15       		.uleb128 0x15
 6230 0c4b B8030000 		.4byte	.LASF288
 6231 0c4f 0B50     		.2byte	0x500b
 6232 0c51 15       		.uleb128 0x15
 6233 0c52 CA060000 		.4byte	.LASF289
 6234 0c56 0C50     		.2byte	0x500c
 6235 0c58 15       		.uleb128 0x15
 6236 0c59 B30D0000 		.4byte	.LASF290
 6237 0c5d 0D50     		.2byte	0x500d
 6238 0c5f 15       		.uleb128 0x15
 6239 0c60 851A0000 		.4byte	.LASF291
 6240 0c64 0E50     		.2byte	0x500e
 6241 0c66 15       		.uleb128 0x15
 6242 0c67 D80F0000 		.4byte	.LASF292
 6243 0c6b 0F50     		.2byte	0x500f
 6244 0c6d 15       		.uleb128 0x15
 6245 0c6e 841C0000 		.4byte	.LASF293
 6246 0c72 1050     		.2byte	0x5010
 6247 0c74 15       		.uleb128 0x15
 6248 0c75 50040000 		.4byte	.LASF294
 6249 0c79 1150     		.2byte	0x5011
 6250 0c7b 15       		.uleb128 0x15
 6251 0c7c 2B0E0000 		.4byte	.LASF295
 6252 0c80 1250     		.2byte	0x5012
 6253 0c82 15       		.uleb128 0x15
 6254 0c83 B3050000 		.4byte	.LASF296
 6255 0c87 1350     		.2byte	0x5013
 6256 0c89 15       		.uleb128 0x15
 6257 0c8a 53090000 		.4byte	.LASF297
 6258 0c8e 1450     		.2byte	0x5014
 6259 0c90 15       		.uleb128 0x15
 6260 0c91 BA240000 		.4byte	.LASF298
 6261 0c95 1550     		.2byte	0x5015
 6262 0c97 15       		.uleb128 0x15
 6263 0c98 B60B0000 		.4byte	.LASF299
 6264 0c9c 1650     		.2byte	0x5016
 6265 0c9e 15       		.uleb128 0x15
 6266 0c9f 10220000 		.4byte	.LASF300
 6267 0ca3 1750     		.2byte	0x5017
 6268 0ca5 15       		.uleb128 0x15
 6269 0ca6 D3040000 		.4byte	.LASF301
 6270 0caa 1850     		.2byte	0x5018
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 213


 6271 0cac 15       		.uleb128 0x15
 6272 0cad EF0C0000 		.4byte	.LASF302
 6273 0cb1 0060     		.2byte	0x6000
 6274 0cb3 15       		.uleb128 0x15
 6275 0cb4 60210000 		.4byte	.LASF303
 6276 0cb8 0160     		.2byte	0x6001
 6277 0cba 15       		.uleb128 0x15
 6278 0cbb 72120000 		.4byte	.LASF304
 6279 0cbf 0260     		.2byte	0x6002
 6280 0cc1 15       		.uleb128 0x15
 6281 0cc2 56100000 		.4byte	.LASF305
 6282 0cc6 0360     		.2byte	0x6003
 6283 0cc8 15       		.uleb128 0x15
 6284 0cc9 F7040000 		.4byte	.LASF306
 6285 0ccd 0460     		.2byte	0x6004
 6286 0ccf 15       		.uleb128 0x15
 6287 0cd0 101F0000 		.4byte	.LASF307
 6288 0cd4 0560     		.2byte	0x6005
 6289 0cd6 15       		.uleb128 0x15
 6290 0cd7 1F150000 		.4byte	.LASF308
 6291 0cdb 0660     		.2byte	0x6006
 6292 0cdd 15       		.uleb128 0x15
 6293 0cde CE150000 		.4byte	.LASF309
 6294 0ce2 0760     		.2byte	0x6007
 6295 0ce4 15       		.uleb128 0x15
 6296 0ce5 2F090000 		.4byte	.LASF310
 6297 0ce9 0860     		.2byte	0x6008
 6298 0ceb 15       		.uleb128 0x15
 6299 0cec F80F0000 		.4byte	.LASF311
 6300 0cf0 0960     		.2byte	0x6009
 6301 0cf2 15       		.uleb128 0x15
 6302 0cf3 26200000 		.4byte	.LASF312
 6303 0cf7 0A60     		.2byte	0x600a
 6304 0cf9 15       		.uleb128 0x15
 6305 0cfa 3C030000 		.4byte	.LASF313
 6306 0cfe FFFF     		.2byte	0xffff
 6307 0d00 00       		.byte	0
 6308 0d01 07       		.uleb128 0x7
 6309 0d02 D5000000 		.4byte	0xd5
 6310 0d06 0E       		.uleb128 0xe
 6311 0d07 02       		.byte	0x2
 6312 0d08 0C       		.byte	0xc
 6313 0d09 6401     		.2byte	0x164
 6314 0d0b 2A0D0000 		.4byte	0xd2a
 6315 0d0f 0F       		.uleb128 0xf
 6316 0d10 16050000 		.4byte	.LASF314
 6317 0d14 0C       		.byte	0xc
 6318 0d15 6E01     		.2byte	0x16e
 6319 0d17 D5000000 		.4byte	0xd5
 6320 0d1b 00       		.byte	0
 6321 0d1c 0F       		.uleb128 0xf
 6322 0d1d 030B0000 		.4byte	.LASF315
 6323 0d21 0C       		.byte	0xc
 6324 0d22 7201     		.2byte	0x172
 6325 0d24 D5000000 		.4byte	0xd5
 6326 0d28 01       		.byte	0x1
 6327 0d29 00       		.byte	0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 214


 6328 0d2a 0D       		.uleb128 0xd
 6329 0d2b 69220000 		.4byte	.LASF316
 6330 0d2f 0C       		.byte	0xc
 6331 0d30 7401     		.2byte	0x174
 6332 0d32 060D0000 		.4byte	0xd06
 6333 0d36 16       		.uleb128 0x16
 6334 0d37 01       		.byte	0x1
 6335 0d38 5E000000 		.4byte	0x5e
 6336 0d3c 0D       		.byte	0xd
 6337 0d3d 7E       		.byte	0x7e
 6338 0d3e 5B0D0000 		.4byte	0xd5b
 6339 0d42 0C       		.uleb128 0xc
 6340 0d43 5F190000 		.4byte	.LASF317
 6341 0d47 00       		.byte	0
 6342 0d48 0C       		.uleb128 0xc
 6343 0d49 F1070000 		.4byte	.LASF318
 6344 0d4d 01       		.byte	0x1
 6345 0d4e 0C       		.uleb128 0xc
 6346 0d4f 4E020000 		.4byte	.LASF319
 6347 0d53 02       		.byte	0x2
 6348 0d54 0C       		.uleb128 0xc
 6349 0d55 FB1F0000 		.4byte	.LASF320
 6350 0d59 03       		.byte	0x3
 6351 0d5a 00       		.byte	0
 6352 0d5b 02       		.uleb128 0x2
 6353 0d5c 9D190000 		.4byte	.LASF321
 6354 0d60 0D       		.byte	0xd
 6355 0d61 83       		.byte	0x83
 6356 0d62 360D0000 		.4byte	0xd36
 6357 0d66 16       		.uleb128 0x16
 6358 0d67 01       		.byte	0x1
 6359 0d68 5E000000 		.4byte	0x5e
 6360 0d6c 0D       		.byte	0xd
 6361 0d6d 87       		.byte	0x87
 6362 0d6e A30D0000 		.4byte	0xda3
 6363 0d72 0C       		.uleb128 0xc
 6364 0d73 0F180000 		.4byte	.LASF322
 6365 0d77 00       		.byte	0
 6366 0d78 0C       		.uleb128 0xc
 6367 0d79 1B170000 		.4byte	.LASF323
 6368 0d7d 01       		.byte	0x1
 6369 0d7e 0C       		.uleb128 0xc
 6370 0d7f FA220000 		.4byte	.LASF324
 6371 0d83 02       		.byte	0x2
 6372 0d84 0C       		.uleb128 0xc
 6373 0d85 9C130000 		.4byte	.LASF325
 6374 0d89 03       		.byte	0x3
 6375 0d8a 0C       		.uleb128 0xc
 6376 0d8b EE180000 		.4byte	.LASF326
 6377 0d8f 04       		.byte	0x4
 6378 0d90 0C       		.uleb128 0xc
 6379 0d91 2C0A0000 		.4byte	.LASF327
 6380 0d95 05       		.byte	0x5
 6381 0d96 0C       		.uleb128 0xc
 6382 0d97 23020000 		.4byte	.LASF328
 6383 0d9b 06       		.byte	0x6
 6384 0d9c 0C       		.uleb128 0xc
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 215


 6385 0d9d 86060000 		.4byte	.LASF329
 6386 0da1 07       		.byte	0x7
 6387 0da2 00       		.byte	0
 6388 0da3 02       		.uleb128 0x2
 6389 0da4 59150000 		.4byte	.LASF330
 6390 0da8 0D       		.byte	0xd
 6391 0da9 90       		.byte	0x90
 6392 0daa 660D0000 		.4byte	0xd66
 6393 0dae 02       		.uleb128 0x2
 6394 0daf 28060000 		.4byte	.LASF331
 6395 0db3 0E       		.byte	0xe
 6396 0db4 23       		.byte	0x23
 6397 0db5 B90D0000 		.4byte	0xdb9
 6398 0db9 06       		.uleb128 0x6
 6399 0dba 04       		.byte	0x4
 6400 0dbb BF0D0000 		.4byte	0xdbf
 6401 0dbf 10       		.uleb128 0x10
 6402 0dc0 CA0D0000 		.4byte	0xdca
 6403 0dc4 11       		.uleb128 0x11
 6404 0dc5 BB000000 		.4byte	0xbb
 6405 0dc9 00       		.byte	0
 6406 0dca 02       		.uleb128 0x2
 6407 0dcb 64270000 		.4byte	.LASF332
 6408 0dcf 02       		.byte	0x2
 6409 0dd0 37       		.byte	0x37
 6410 0dd1 01010000 		.4byte	0x101
 6411 0dd5 02       		.uleb128 0x2
 6412 0dd6 F6020000 		.4byte	.LASF333
 6413 0dda 02       		.byte	0x2
 6414 0ddb 38       		.byte	0x38
 6415 0ddc 94000000 		.4byte	0x94
 6416 0de0 02       		.uleb128 0x2
 6417 0de1 891F0000 		.4byte	.LASF334
 6418 0de5 02       		.byte	0x2
 6419 0de6 39       		.byte	0x39
 6420 0de7 A6000000 		.4byte	0xa6
 6421 0deb 02       		.uleb128 0x2
 6422 0dec 1B200000 		.4byte	.LASF335
 6423 0df0 02       		.byte	0x2
 6424 0df1 3F       		.byte	0x3f
 6425 0df2 01010000 		.4byte	0x101
 6426 0df6 17       		.uleb128 0x17
 6427 0df7 BB000000 		.4byte	0xbb
 6428 0dfb 060E0000 		.4byte	0xe06
 6429 0dff 18       		.uleb128 0x18
 6430 0e00 B4000000 		.4byte	0xb4
 6431 0e04 04       		.byte	0x4
 6432 0e05 00       		.byte	0
 6433 0e06 14       		.uleb128 0x14
 6434 0e07 FE150000 		.4byte	.LASF336
 6435 0e0b 14       		.byte	0x14
 6436 0e0c 0F       		.byte	0xf
 6437 0e0d 8B       		.byte	0x8b
 6438 0e0e 4F0E0000 		.4byte	0xe4f
 6439 0e12 0A       		.uleb128 0xa
 6440 0e13 CA2A0000 		.4byte	.LASF337
 6441 0e17 0F       		.byte	0xf
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 216


 6442 0e18 8E       		.byte	0x8e
 6443 0e19 EB0D0000 		.4byte	0xdeb
 6444 0e1d 00       		.byte	0
 6445 0e1e 0A       		.uleb128 0xa
 6446 0e1f 93040000 		.4byte	.LASF338
 6447 0e23 0F       		.byte	0xf
 6448 0e24 8F       		.byte	0x8f
 6449 0e25 4F0E0000 		.4byte	0xe4f
 6450 0e29 04       		.byte	0x4
 6451 0e2a 0A       		.uleb128 0xa
 6452 0e2b 951F0000 		.4byte	.LASF339
 6453 0e2f 0F       		.byte	0xf
 6454 0e30 90       		.byte	0x90
 6455 0e31 4F0E0000 		.4byte	0xe4f
 6456 0e35 08       		.byte	0x8
 6457 0e36 0A       		.uleb128 0xa
 6458 0e37 07180000 		.4byte	.LASF340
 6459 0e3b 0F       		.byte	0xf
 6460 0e3c 91       		.byte	0x91
 6461 0e3d BB000000 		.4byte	0xbb
 6462 0e41 0C       		.byte	0xc
 6463 0e42 0A       		.uleb128 0xa
 6464 0e43 440D0000 		.4byte	.LASF341
 6465 0e47 0F       		.byte	0xf
 6466 0e48 92       		.byte	0x92
 6467 0e49 BB000000 		.4byte	0xbb
 6468 0e4d 10       		.byte	0x10
 6469 0e4e 00       		.byte	0
 6470 0e4f 06       		.uleb128 0x6
 6471 0e50 04       		.byte	0x4
 6472 0e51 060E0000 		.4byte	0xe06
 6473 0e55 02       		.uleb128 0x2
 6474 0e56 88250000 		.4byte	.LASF342
 6475 0e5a 0F       		.byte	0xf
 6476 0e5b 95       		.byte	0x95
 6477 0e5c 060E0000 		.4byte	0xe06
 6478 0e60 14       		.uleb128 0x14
 6479 0e61 020C0000 		.4byte	.LASF343
 6480 0e65 0C       		.byte	0xc
 6481 0e66 0F       		.byte	0xf
 6482 0e67 97       		.byte	0x97
 6483 0e68 910E0000 		.4byte	0xe91
 6484 0e6c 0A       		.uleb128 0xa
 6485 0e6d CA2A0000 		.4byte	.LASF337
 6486 0e71 0F       		.byte	0xf
 6487 0e72 9A       		.byte	0x9a
 6488 0e73 EB0D0000 		.4byte	0xdeb
 6489 0e77 00       		.byte	0
 6490 0e78 0A       		.uleb128 0xa
 6491 0e79 93040000 		.4byte	.LASF338
 6492 0e7d 0F       		.byte	0xf
 6493 0e7e 9B       		.byte	0x9b
 6494 0e7f 4F0E0000 		.4byte	0xe4f
 6495 0e83 04       		.byte	0x4
 6496 0e84 0A       		.uleb128 0xa
 6497 0e85 951F0000 		.4byte	.LASF339
 6498 0e89 0F       		.byte	0xf
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 217


 6499 0e8a 9C       		.byte	0x9c
 6500 0e8b 4F0E0000 		.4byte	0xe4f
 6501 0e8f 08       		.byte	0x8
 6502 0e90 00       		.byte	0
 6503 0e91 02       		.uleb128 0x2
 6504 0e92 0D0A0000 		.4byte	.LASF344
 6505 0e96 0F       		.byte	0xf
 6506 0e97 9E       		.byte	0x9e
 6507 0e98 600E0000 		.4byte	0xe60
 6508 0e9c 14       		.uleb128 0x14
 6509 0e9d E5060000 		.4byte	.LASF345
 6510 0ea1 14       		.byte	0x14
 6511 0ea2 0F       		.byte	0xf
 6512 0ea3 A3       		.byte	0xa3
 6513 0ea4 CD0E0000 		.4byte	0xecd
 6514 0ea8 0A       		.uleb128 0xa
 6515 0ea9 6D180000 		.4byte	.LASF346
 6516 0ead 0F       		.byte	0xf
 6517 0eae A6       		.byte	0xa6
 6518 0eaf CD0E0000 		.4byte	0xecd
 6519 0eb3 00       		.byte	0
 6520 0eb4 0A       		.uleb128 0xa
 6521 0eb5 5D140000 		.4byte	.LASF347
 6522 0eb9 0F       		.byte	0xf
 6523 0eba A7       		.byte	0xa7
 6524 0ebb D20E0000 		.4byte	0xed2
 6525 0ebf 04       		.byte	0x4
 6526 0ec0 0A       		.uleb128 0xa
 6527 0ec1 5E1A0000 		.4byte	.LASF348
 6528 0ec5 0F       		.byte	0xf
 6529 0ec6 A8       		.byte	0xa8
 6530 0ec7 910E0000 		.4byte	0xe91
 6531 0ecb 08       		.byte	0x8
 6532 0ecc 00       		.byte	0
 6533 0ecd 08       		.uleb128 0x8
 6534 0ece E00D0000 		.4byte	0xde0
 6535 0ed2 06       		.uleb128 0x6
 6536 0ed3 04       		.byte	0x4
 6537 0ed4 550E0000 		.4byte	0xe55
 6538 0ed8 02       		.uleb128 0x2
 6539 0ed9 58190000 		.4byte	.LASF349
 6540 0edd 0F       		.byte	0xf
 6541 0ede AA       		.byte	0xaa
 6542 0edf 9C0E0000 		.4byte	0xe9c
 6543 0ee3 02       		.uleb128 0x2
 6544 0ee4 23190000 		.4byte	.LASF350
 6545 0ee8 10       		.byte	0x10
 6546 0ee9 3D       		.byte	0x3d
 6547 0eea BB000000 		.4byte	0xbb
 6548 0eee 16       		.uleb128 0x16
 6549 0eef 01       		.byte	0x1
 6550 0ef0 5E000000 		.4byte	0x5e
 6551 0ef4 10       		.byte	0x10
 6552 0ef5 52       		.byte	0x52
 6553 0ef6 190F0000 		.4byte	0xf19
 6554 0efa 0C       		.uleb128 0xc
 6555 0efb 6F290000 		.4byte	.LASF351
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 218


 6556 0eff 00       		.byte	0
 6557 0f00 0C       		.uleb128 0xc
 6558 0f01 9C220000 		.4byte	.LASF352
 6559 0f05 01       		.byte	0x1
 6560 0f06 0C       		.uleb128 0xc
 6561 0f07 F11B0000 		.4byte	.LASF353
 6562 0f0b 02       		.byte	0x2
 6563 0f0c 0C       		.uleb128 0xc
 6564 0f0d 091C0000 		.4byte	.LASF354
 6565 0f11 03       		.byte	0x3
 6566 0f12 0C       		.uleb128 0xc
 6567 0f13 9A0C0000 		.4byte	.LASF355
 6568 0f17 04       		.byte	0x4
 6569 0f18 00       		.byte	0
 6570 0f19 02       		.uleb128 0x2
 6571 0f1a 35270000 		.4byte	.LASF356
 6572 0f1e 10       		.byte	0x10
 6573 0f1f 58       		.byte	0x58
 6574 0f20 EE0E0000 		.4byte	0xeee
 6575 0f24 14       		.uleb128 0x14
 6576 0f25 91020000 		.4byte	.LASF357
 6577 0f29 08       		.byte	0x8
 6578 0f2a 10       		.byte	0x10
 6579 0f2b 5D       		.byte	0x5d
 6580 0f2c 490F0000 		.4byte	0xf49
 6581 0f30 0A       		.uleb128 0xa
 6582 0f31 E4100000 		.4byte	.LASF358
 6583 0f35 10       		.byte	0x10
 6584 0f36 5F       		.byte	0x5f
 6585 0f37 D50D0000 		.4byte	0xdd5
 6586 0f3b 00       		.byte	0
 6587 0f3c 0A       		.uleb128 0xa
 6588 0f3d 090B0000 		.4byte	.LASF359
 6589 0f41 10       		.byte	0x10
 6590 0f42 60       		.byte	0x60
 6591 0f43 EB0D0000 		.4byte	0xdeb
 6592 0f47 04       		.byte	0x4
 6593 0f48 00       		.byte	0
 6594 0f49 02       		.uleb128 0x2
 6595 0f4a 5F220000 		.4byte	.LASF360
 6596 0f4e 10       		.byte	0x10
 6597 0f4f 61       		.byte	0x61
 6598 0f50 240F0000 		.4byte	0xf24
 6599 0f54 14       		.uleb128 0x14
 6600 0f55 8F120000 		.4byte	.LASF361
 6601 0f59 0C       		.byte	0xc
 6602 0f5a 10       		.byte	0x10
 6603 0f5b 66       		.byte	0x66
 6604 0f5c 850F0000 		.4byte	0xf85
 6605 0f60 0A       		.uleb128 0xa
 6606 0f61 7C100000 		.4byte	.LASF362
 6607 0f65 10       		.byte	0x10
 6608 0f66 68       		.byte	0x68
 6609 0f67 BB000000 		.4byte	0xbb
 6610 0f6b 00       		.byte	0
 6611 0f6c 0A       		.uleb128 0xa
 6612 0f6d 69160000 		.4byte	.LASF363
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 219


 6613 0f71 10       		.byte	0x10
 6614 0f72 69       		.byte	0x69
 6615 0f73 01010000 		.4byte	0x101
 6616 0f77 04       		.byte	0x4
 6617 0f78 0A       		.uleb128 0xa
 6618 0f79 9A290000 		.4byte	.LASF364
 6619 0f7d 10       		.byte	0x10
 6620 0f7e 6A       		.byte	0x6a
 6621 0f7f 01010000 		.4byte	0x101
 6622 0f83 08       		.byte	0x8
 6623 0f84 00       		.byte	0
 6624 0f85 02       		.uleb128 0x2
 6625 0f86 4D010000 		.4byte	.LASF365
 6626 0f8a 10       		.byte	0x10
 6627 0f8b 6B       		.byte	0x6b
 6628 0f8c 540F0000 		.4byte	0xf54
 6629 0f90 07       		.uleb128 0x7
 6630 0f91 CA000000 		.4byte	0xca
 6631 0f95 06       		.uleb128 0x6
 6632 0f96 04       		.byte	0x4
 6633 0f97 CA0D0000 		.4byte	0xdca
 6634 0f9b 13       		.uleb128 0x13
 6635 0f9c BD1C0000 		.4byte	.LASF366
 6636 0fa0 60       		.byte	0x60
 6637 0fa1 01       		.byte	0x1
 6638 0fa2 0D01     		.2byte	0x10d
 6639 0fa4 1E100000 		.4byte	0x101e
 6640 0fa8 0F       		.uleb128 0xf
 6641 0fa9 690B0000 		.4byte	.LASF367
 6642 0fad 01       		.byte	0x1
 6643 0fae 0F01     		.2byte	0x10f
 6644 0fb0 1E100000 		.4byte	0x101e
 6645 0fb4 00       		.byte	0
 6646 0fb5 0F       		.uleb128 0xf
 6647 0fb6 F31C0000 		.4byte	.LASF368
 6648 0fba 01       		.byte	0x1
 6649 0fbb 1501     		.2byte	0x115
 6650 0fbd 550E0000 		.4byte	0xe55
 6651 0fc1 04       		.byte	0x4
 6652 0fc2 0F       		.uleb128 0xf
 6653 0fc3 81010000 		.4byte	.LASF369
 6654 0fc7 01       		.byte	0x1
 6655 0fc8 1601     		.2byte	0x116
 6656 0fca 550E0000 		.4byte	0xe55
 6657 0fce 18       		.byte	0x18
 6658 0fcf 0F       		.uleb128 0xf
 6659 0fd0 FA2A0000 		.4byte	.LASF370
 6660 0fd4 01       		.byte	0x1
 6661 0fd5 1701     		.2byte	0x117
 6662 0fd7 E00D0000 		.4byte	0xde0
 6663 0fdb 2C       		.byte	0x2c
 6664 0fdc 0F       		.uleb128 0xf
 6665 0fdd 2B030000 		.4byte	.LASF371
 6666 0fe1 01       		.byte	0x1
 6667 0fe2 1801     		.2byte	0x118
 6668 0fe4 950F0000 		.4byte	0xf95
 6669 0fe8 30       		.byte	0x30
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 220


 6670 0fe9 0F       		.uleb128 0xf
 6671 0fea 791C0000 		.4byte	.LASF372
 6672 0fee 01       		.byte	0x1
 6673 0fef 1901     		.2byte	0x119
 6674 0ff1 29100000 		.4byte	0x1029
 6675 0ff5 34       		.byte	0x34
 6676 0ff6 0F       		.uleb128 0xf
 6677 0ff7 A01F0000 		.4byte	.LASF373
 6678 0ffb 01       		.byte	0x1
 6679 0ffc 3201     		.2byte	0x132
 6680 0ffe F60D0000 		.4byte	0xdf6
 6681 1002 44       		.byte	0x44
 6682 1003 0F       		.uleb128 0xf
 6683 1004 B50E0000 		.4byte	.LASF374
 6684 1008 01       		.byte	0x1
 6685 1009 4501     		.2byte	0x145
 6686 100b 0C010000 		.4byte	0x10c
 6687 100f 58       		.byte	0x58
 6688 1010 0F       		.uleb128 0xf
 6689 1011 96200000 		.4byte	.LASF375
 6690 1015 01       		.byte	0x1
 6691 1016 4601     		.2byte	0x146
 6692 1018 11010000 		.4byte	0x111
 6693 101c 5C       		.byte	0x5c
 6694 101d 00       		.byte	0
 6695 101e 06       		.uleb128 0x6
 6696 101f 04       		.byte	0x4
 6697 1020 24100000 		.4byte	0x1024
 6698 1024 08       		.uleb128 0x8
 6699 1025 CA0D0000 		.4byte	0xdca
 6700 1029 17       		.uleb128 0x17
 6701 102a C3000000 		.4byte	0xc3
 6702 102e 39100000 		.4byte	0x1039
 6703 1032 18       		.uleb128 0x18
 6704 1033 B4000000 		.4byte	0xb4
 6705 1037 0F       		.byte	0xf
 6706 1038 00       		.byte	0
 6707 1039 0D       		.uleb128 0xd
 6708 103a 75050000 		.4byte	.LASF376
 6709 103e 01       		.byte	0x1
 6710 103f 5301     		.2byte	0x153
 6711 1041 9B0F0000 		.4byte	0xf9b
 6712 1045 0D       		.uleb128 0xd
 6713 1046 01260000 		.4byte	.LASF377
 6714 104a 01       		.byte	0x1
 6715 104b 5701     		.2byte	0x157
 6716 104d 39100000 		.4byte	0x1039
 6717 1051 19       		.uleb128 0x19
 6718 1052 A8240000 		.4byte	.LASF380
 6719 1056 02       		.byte	0x2
 6720 1057 98       		.byte	0x98
 6721 1058 03       		.byte	0x3
 6722 1059 69100000 		.4byte	0x1069
 6723 105d 1A       		.uleb128 0x1a
 6724 105e 571B0000 		.4byte	.LASF378
 6725 1062 02       		.byte	0x2
 6726 1063 9A       		.byte	0x9a
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 221


 6727 1064 01010000 		.4byte	0x101
 6728 1068 00       		.byte	0
 6729 1069 1B       		.uleb128 0x1b
 6730 106a 6E0F0000 		.4byte	.LASF544
 6731 106e 02       		.byte	0x2
 6732 106f A8       		.byte	0xa8
 6733 1070 01010000 		.4byte	0x101
 6734 1074 03       		.byte	0x3
 6735 1075 90100000 		.4byte	0x1090
 6736 1079 1A       		.uleb128 0x1a
 6737 107a A3210000 		.4byte	.LASF379
 6738 107e 02       		.byte	0x2
 6739 107f AA       		.byte	0xaa
 6740 1080 01010000 		.4byte	0x101
 6741 1084 1A       		.uleb128 0x1a
 6742 1085 571B0000 		.4byte	.LASF378
 6743 1089 02       		.byte	0x2
 6744 108a AA       		.byte	0xaa
 6745 108b 01010000 		.4byte	0x101
 6746 108f 00       		.byte	0
 6747 1090 19       		.uleb128 0x19
 6748 1091 1C0A0000 		.4byte	.LASF381
 6749 1095 02       		.byte	0x2
 6750 1096 BC       		.byte	0xbc
 6751 1097 03       		.byte	0x3
 6752 1098 A8100000 		.4byte	0x10a8
 6753 109c 1C       		.uleb128 0x1c
 6754 109d C4250000 		.4byte	.LASF545
 6755 10a1 02       		.byte	0x2
 6756 10a2 BC       		.byte	0xbc
 6757 10a3 01010000 		.4byte	0x101
 6758 10a7 00       		.byte	0
 6759 10a8 1D       		.uleb128 0x1d
 6760 10a9 9A0B0000 		.4byte	.LASF398
 6761 10ad 01       		.byte	0x1
 6762 10ae C306     		.2byte	0x6c3
 6763 10b0 D50D0000 		.4byte	0xdd5
 6764 10b4 00000000 		.4byte	.LFB672
 6765 10b8 4C000000 		.4byte	.LFE672-.LFB672
 6766 10bc 01       		.uleb128 0x1
 6767 10bd 9C       		.byte	0x9c
 6768 10be 13110000 		.4byte	0x1113
 6769 10c2 1E       		.uleb128 0x1e
 6770 10c3 4A040000 		.4byte	.LASF386
 6771 10c7 01       		.byte	0x1
 6772 10c8 C306     		.2byte	0x6c3
 6773 10ca 13110000 		.4byte	0x1113
 6774 10ce 00000000 		.4byte	.LLST0
 6775 10d2 1F       		.uleb128 0x1f
 6776 10d3 DD090000 		.4byte	.LASF382
 6777 10d7 01       		.byte	0x1
 6778 10d8 C506     		.2byte	0x6c5
 6779 10da D50D0000 		.4byte	0xdd5
 6780 10de 69000000 		.4byte	.LLST1
 6781 10e2 1F       		.uleb128 0x1f
 6782 10e3 E02A0000 		.4byte	.LASF383
 6783 10e7 01       		.byte	0x1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 222


 6784 10e8 C606     		.2byte	0x6c6
 6785 10ea 23110000 		.4byte	0x1123
 6786 10ee 88000000 		.4byte	.LLST2
 6787 10f2 20       		.uleb128 0x20
 6788 10f3 51100000 		.4byte	0x1051
 6789 10f7 04000000 		.4byte	.LBB94
 6790 10fb 12000000 		.4byte	.LBE94-.LBB94
 6791 10ff 01       		.byte	0x1
 6792 1100 CC06     		.2byte	0x6cc
 6793 1102 21       		.uleb128 0x21
 6794 1103 04000000 		.4byte	.LBB95
 6795 1107 12000000 		.4byte	.LBE95-.LBB95
 6796 110b 22       		.uleb128 0x22
 6797 110c 5D100000 		.4byte	0x105d
 6798 1110 00       		.byte	0
 6799 1111 00       		.byte	0
 6800 1112 00       		.byte	0
 6801 1113 07       		.uleb128 0x7
 6802 1114 E30E0000 		.4byte	0xee3
 6803 1118 06       		.uleb128 0x6
 6804 1119 04       		.byte	0x4
 6805 111a 1E110000 		.4byte	0x111e
 6806 111e 07       		.uleb128 0x7
 6807 111f 45100000 		.4byte	0x1045
 6808 1123 07       		.uleb128 0x7
 6809 1124 18110000 		.4byte	0x1118
 6810 1128 23       		.uleb128 0x23
 6811 1129 9A0A0000 		.4byte	.LASF384
 6812 112d 01       		.byte	0x1
 6813 112e 9D0E     		.2byte	0xe9d
 6814 1130 00000000 		.4byte	.LFB700
 6815 1134 2C000000 		.4byte	.LFE700-.LFB700
 6816 1138 01       		.uleb128 0x1
 6817 1139 9C       		.byte	0x9c
 6818 113a 4F110000 		.4byte	0x114f
 6819 113e 1F       		.uleb128 0x1f
 6820 113f E02A0000 		.4byte	.LASF383
 6821 1143 01       		.byte	0x1
 6822 1144 9F0E     		.2byte	0xe9f
 6823 1146 4F110000 		.4byte	0x114f
 6824 114a F1000000 		.4byte	.LLST3
 6825 114e 00       		.byte	0
 6826 114f 06       		.uleb128 0x6
 6827 1150 04       		.byte	0x4
 6828 1151 45100000 		.4byte	0x1045
 6829 1155 23       		.uleb128 0x23
 6830 1156 2E180000 		.4byte	.LASF385
 6831 115a 01       		.byte	0x1
 6832 115b 670E     		.2byte	0xe67
 6833 115d 00000000 		.4byte	.LFB699
 6834 1161 12000000 		.4byte	.LFE699-.LFB699
 6835 1165 01       		.uleb128 0x1
 6836 1166 9C       		.byte	0x9c
 6837 1167 95110000 		.4byte	0x1195
 6838 116b 1E       		.uleb128 0x1e
 6839 116c E02A0000 		.4byte	.LASF383
 6840 1170 01       		.byte	0x1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 223


 6841 1171 670E     		.2byte	0xe67
 6842 1173 4F110000 		.4byte	0x114f
 6843 1177 04010000 		.4byte	.LLST4
 6844 117b 24       		.uleb128 0x24
 6845 117c 0A000000 		.4byte	.LVL13
 6846 1180 692F0000 		.4byte	0x2f69
 6847 1184 25       		.uleb128 0x25
 6848 1185 10000000 		.4byte	.LVL14
 6849 1189 692F0000 		.4byte	0x2f69
 6850 118d 26       		.uleb128 0x26
 6851 118e 01       		.uleb128 0x1
 6852 118f 50       		.byte	0x50
 6853 1190 02       		.uleb128 0x2
 6854 1191 74       		.byte	0x74
 6855 1192 00       		.sleb128 0
 6856 1193 00       		.byte	0
 6857 1194 00       		.byte	0
 6858 1195 23       		.uleb128 0x23
 6859 1196 C60A0000 		.4byte	.LASF387
 6860 119a 01       		.byte	0x1
 6861 119b 3703     		.2byte	0x337
 6862 119d 00000000 		.4byte	.LFB663
 6863 11a1 9E000000 		.4byte	.LFE663-.LFB663
 6864 11a5 01       		.uleb128 0x1
 6865 11a6 9C       		.byte	0x9c
 6866 11a7 A5120000 		.4byte	0x12a5
 6867 11ab 1E       		.uleb128 0x1e
 6868 11ac F70B0000 		.4byte	.LASF388
 6869 11b0 01       		.byte	0x1
 6870 11b1 3703     		.2byte	0x337
 6871 11b3 AE0D0000 		.4byte	0xdae
 6872 11b7 22010000 		.4byte	.LLST5
 6873 11bb 1E       		.uleb128 0x1e
 6874 11bc 23080000 		.4byte	.LASF389
 6875 11c0 01       		.byte	0x1
 6876 11c1 3803     		.2byte	0x338
 6877 11c3 900F0000 		.4byte	0xf90
 6878 11c7 40010000 		.4byte	.LLST6
 6879 11cb 1E       		.uleb128 0x1e
 6880 11cc 9F150000 		.4byte	.LASF390
 6881 11d0 01       		.byte	0x1
 6882 11d1 3903     		.2byte	0x339
 6883 11d3 A5120000 		.4byte	0x12a5
 6884 11d7 5E010000 		.4byte	.LLST7
 6885 11db 1E       		.uleb128 0x1e
 6886 11dc 61260000 		.4byte	.LASF391
 6887 11e0 01       		.byte	0x1
 6888 11e1 3A03     		.2byte	0x33a
 6889 11e3 AA120000 		.4byte	0x12aa
 6890 11e7 9B010000 		.4byte	.LLST8
 6891 11eb 1E       		.uleb128 0x1e
 6892 11ec FA2A0000 		.4byte	.LASF370
 6893 11f0 01       		.byte	0x1
 6894 11f1 3B03     		.2byte	0x33b
 6895 11f3 E00D0000 		.4byte	0xde0
 6896 11f7 B9010000 		.4byte	.LLST9
 6897 11fb 27       		.uleb128 0x27
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 224


 6898 11fc A10F0000 		.4byte	.LASF392
 6899 1200 01       		.byte	0x1
 6900 1201 3C03     		.2byte	0x33c
 6901 1203 B5120000 		.4byte	0x12b5
 6902 1207 02       		.uleb128 0x2
 6903 1208 91       		.byte	0x91
 6904 1209 04       		.sleb128 4
 6905 120a 27       		.uleb128 0x27
 6906 120b CA040000 		.4byte	.LASF393
 6907 120f 01       		.byte	0x1
 6908 1210 3D03     		.2byte	0x33d
 6909 1212 4F110000 		.4byte	0x114f
 6910 1216 02       		.uleb128 0x2
 6911 1217 91       		.byte	0x91
 6912 1218 08       		.sleb128 8
 6913 1219 27       		.uleb128 0x27
 6914 121a 20270000 		.4byte	.LASF394
 6915 121e 01       		.byte	0x1
 6916 121f 3E03     		.2byte	0x33e
 6917 1221 C5120000 		.4byte	0x12c5
 6918 1225 02       		.uleb128 0x2
 6919 1226 91       		.byte	0x91
 6920 1227 0C       		.sleb128 12
 6921 1228 28       		.uleb128 0x28
 6922 1229 690B0000 		.4byte	.LASF367
 6923 122d 01       		.byte	0x1
 6924 122e 4003     		.2byte	0x340
 6925 1230 950F0000 		.4byte	0xf95
 6926 1234 01       		.uleb128 0x1
 6927 1235 55       		.byte	0x55
 6928 1236 29       		.uleb128 0x29
 6929 1237 7800     		.ascii	"x\000"
 6930 1239 01       		.byte	0x1
 6931 123a 4103     		.2byte	0x341
 6932 123c E00D0000 		.4byte	0xde0
 6933 1240 D8010000 		.4byte	.LLST10
 6934 1244 2A       		.uleb128 0x2a
 6935 1245 1C000000 		.4byte	.LVL19
 6936 1249 742F0000 		.4byte	0x2f74
 6937 124d 60120000 		.4byte	0x1260
 6938 1251 26       		.uleb128 0x26
 6939 1252 01       		.uleb128 0x1
 6940 1253 51       		.byte	0x51
 6941 1254 02       		.uleb128 0x2
 6942 1255 08       		.byte	0x8
 6943 1256 A5       		.byte	0xa5
 6944 1257 26       		.uleb128 0x26
 6945 1258 01       		.uleb128 0x1
 6946 1259 52       		.byte	0x52
 6947 125a 04       		.uleb128 0x4
 6948 125b 75       		.byte	0x75
 6949 125c 00       		.sleb128 0
 6950 125d 32       		.byte	0x32
 6951 125e 24       		.byte	0x24
 6952 125f 00       		.byte	0
 6953 1260 2A       		.uleb128 0x2a
 6954 1261 5A000000 		.4byte	.LVL26
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 225


 6955 1265 7F2F0000 		.4byte	0x2f7f
 6956 1269 74120000 		.4byte	0x1274
 6957 126d 26       		.uleb128 0x26
 6958 126e 01       		.uleb128 0x1
 6959 126f 50       		.byte	0x50
 6960 1270 02       		.uleb128 0x2
 6961 1271 74       		.byte	0x74
 6962 1272 04       		.sleb128 4
 6963 1273 00       		.byte	0
 6964 1274 2A       		.uleb128 0x2a
 6965 1275 62000000 		.4byte	.LVL27
 6966 1279 7F2F0000 		.4byte	0x2f7f
 6967 127d 88120000 		.4byte	0x1288
 6968 1281 26       		.uleb128 0x26
 6969 1282 01       		.uleb128 0x1
 6970 1283 50       		.byte	0x50
 6971 1284 02       		.uleb128 0x2
 6972 1285 74       		.byte	0x74
 6973 1286 18       		.sleb128 24
 6974 1287 00       		.byte	0
 6975 1288 25       		.uleb128 0x25
 6976 1289 94000000 		.4byte	.LVL32
 6977 128d 8B2F0000 		.4byte	0x2f8b
 6978 1291 26       		.uleb128 0x26
 6979 1292 01       		.uleb128 0x1
 6980 1293 50       		.byte	0x50
 6981 1294 02       		.uleb128 0x2
 6982 1295 75       		.byte	0x75
 6983 1296 00       		.sleb128 0
 6984 1297 26       		.uleb128 0x26
 6985 1298 01       		.uleb128 0x1
 6986 1299 51       		.byte	0x51
 6987 129a 02       		.uleb128 0x2
 6988 129b 7A       		.byte	0x7a
 6989 129c 00       		.sleb128 0
 6990 129d 26       		.uleb128 0x26
 6991 129e 01       		.uleb128 0x1
 6992 129f 52       		.byte	0x52
 6993 12a0 02       		.uleb128 0x2
 6994 12a1 78       		.byte	0x78
 6995 12a2 00       		.sleb128 0
 6996 12a3 00       		.byte	0
 6997 12a4 00       		.byte	0
 6998 12a5 07       		.uleb128 0x7
 6999 12a6 01010000 		.4byte	0x101
 7000 12aa 07       		.uleb128 0x7
 7001 12ab BB000000 		.4byte	0xbb
 7002 12af 06       		.uleb128 0x6
 7003 12b0 04       		.byte	0x4
 7004 12b1 E30E0000 		.4byte	0xee3
 7005 12b5 07       		.uleb128 0x7
 7006 12b6 AF120000 		.4byte	0x12af
 7007 12ba 06       		.uleb128 0x6
 7008 12bb 04       		.byte	0x4
 7009 12bc C0120000 		.4byte	0x12c0
 7010 12c0 07       		.uleb128 0x7
 7011 12c1 850F0000 		.4byte	0xf85
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 226


 7012 12c5 07       		.uleb128 0x7
 7013 12c6 BA120000 		.4byte	0x12ba
 7014 12ca 23       		.uleb128 0x23
 7015 12cb 8B280000 		.4byte	.LASF395
 7016 12cf 01       		.byte	0x1
 7017 12d0 770D     		.2byte	0xd77
 7018 12d2 00000000 		.4byte	.LFB697
 7019 12d6 58000000 		.4byte	.LFE697-.LFB697
 7020 12da 01       		.uleb128 0x1
 7021 12db 9C       		.byte	0x9c
 7022 12dc 73130000 		.4byte	0x1373
 7023 12e0 1F       		.uleb128 0x1f
 7024 12e1 FA2A0000 		.4byte	.LASF370
 7025 12e5 01       		.byte	0x1
 7026 12e6 790D     		.2byte	0xd79
 7027 12e8 E00D0000 		.4byte	0xde0
 7028 12ec 02020000 		.4byte	.LLST11
 7029 12f0 2A       		.uleb128 0x2a
 7030 12f1 14000000 		.4byte	.LVL35
 7031 12f5 962F0000 		.4byte	0x2f96
 7032 12f9 11130000 		.4byte	0x1311
 7033 12fd 26       		.uleb128 0x26
 7034 12fe 01       		.uleb128 0x1
 7035 12ff 50       		.byte	0x50
 7036 1300 0F       		.uleb128 0xf
 7037 1301 74       		.byte	0x74
 7038 1302 00       		.sleb128 0
 7039 1303 32       		.byte	0x32
 7040 1304 24       		.byte	0x24
 7041 1305 74       		.byte	0x74
 7042 1306 00       		.sleb128 0
 7043 1307 22       		.byte	0x22
 7044 1308 32       		.byte	0x32
 7045 1309 24       		.byte	0x24
 7046 130a 03       		.byte	0x3
 7047 130b 30000000 		.4byte	.LANCHOR0+48
 7048 130f 22       		.byte	0x22
 7049 1310 00       		.byte	0
 7050 1311 2A       		.uleb128 0x2a
 7051 1312 26000000 		.4byte	.LVL38
 7052 1316 962F0000 		.4byte	0x2f96
 7053 131a 25130000 		.4byte	0x1325
 7054 131e 26       		.uleb128 0x26
 7055 131f 01       		.uleb128 0x1
 7056 1320 50       		.byte	0x50
 7057 1321 02       		.uleb128 0x2
 7058 1322 76       		.byte	0x76
 7059 1323 00       		.sleb128 0
 7060 1324 00       		.byte	0
 7061 1325 2A       		.uleb128 0x2a
 7062 1326 30000000 		.4byte	.LVL39
 7063 132a 962F0000 		.4byte	0x2f96
 7064 132e 39130000 		.4byte	0x1339
 7065 1332 26       		.uleb128 0x26
 7066 1333 01       		.uleb128 0x1
 7067 1334 50       		.byte	0x50
 7068 1335 02       		.uleb128 0x2
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 227


 7069 1336 75       		.byte	0x75
 7070 1337 00       		.sleb128 0
 7071 1338 00       		.byte	0
 7072 1339 2A       		.uleb128 0x2a
 7073 133a 38000000 		.4byte	.LVL40
 7074 133e 962F0000 		.4byte	0x2f96
 7075 1342 4D130000 		.4byte	0x134d
 7076 1346 26       		.uleb128 0x26
 7077 1347 01       		.uleb128 0x1
 7078 1348 50       		.byte	0x50
 7079 1349 02       		.uleb128 0x2
 7080 134a 74       		.byte	0x74
 7081 134b 14       		.sleb128 20
 7082 134c 00       		.byte	0
 7083 134d 2A       		.uleb128 0x2a
 7084 134e 40000000 		.4byte	.LVL41
 7085 1352 962F0000 		.4byte	0x2f96
 7086 1356 62130000 		.4byte	0x1362
 7087 135a 26       		.uleb128 0x26
 7088 135b 01       		.uleb128 0x1
 7089 135c 50       		.byte	0x50
 7090 135d 03       		.uleb128 0x3
 7091 135e 74       		.byte	0x74
 7092 135f E401     		.sleb128 228
 7093 1361 00       		.byte	0
 7094 1362 25       		.uleb128 0x25
 7095 1363 46000000 		.4byte	.LVL42
 7096 1367 962F0000 		.4byte	0x2f96
 7097 136b 26       		.uleb128 0x26
 7098 136c 01       		.uleb128 0x1
 7099 136d 50       		.byte	0x50
 7100 136e 02       		.uleb128 0x2
 7101 136f 74       		.byte	0x74
 7102 1370 00       		.sleb128 0
 7103 1371 00       		.byte	0
 7104 1372 00       		.byte	0
 7105 1373 23       		.uleb128 0x23
 7106 1374 6E070000 		.4byte	.LASF396
 7107 1378 01       		.byte	0x1
 7108 1379 0304     		.2byte	0x403
 7109 137b 00000000 		.4byte	.LFB664
 7110 137f AC000000 		.4byte	.LFE664-.LFB664
 7111 1383 01       		.uleb128 0x1
 7112 1384 9C       		.byte	0x9c
 7113 1385 C9130000 		.4byte	0x13c9
 7114 1389 1E       		.uleb128 0x1e
 7115 138a CA040000 		.4byte	.LASF393
 7116 138e 01       		.byte	0x1
 7117 138f 0304     		.2byte	0x403
 7118 1391 4F110000 		.4byte	0x114f
 7119 1395 21020000 		.4byte	.LLST12
 7120 1399 24       		.uleb128 0x24
 7121 139a 08000000 		.4byte	.LVL44
 7122 139e A22F0000 		.4byte	0x2fa2
 7123 13a2 24       		.uleb128 0x24
 7124 13a3 2C000000 		.4byte	.LVL45
 7125 13a7 CA120000 		.4byte	0x12ca
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 228


 7126 13ab 2A       		.uleb128 0x2a
 7127 13ac 7A000000 		.4byte	.LVL46
 7128 13b0 AD2F0000 		.4byte	0x2fad
 7129 13b4 BF130000 		.4byte	0x13bf
 7130 13b8 26       		.uleb128 0x26
 7131 13b9 01       		.uleb128 0x1
 7132 13ba 51       		.byte	0x51
 7133 13bb 02       		.uleb128 0x2
 7134 13bc 74       		.byte	0x74
 7135 13bd 04       		.sleb128 4
 7136 13be 00       		.byte	0
 7137 13bf 24       		.uleb128 0x24
 7138 13c0 7E000000 		.4byte	.LVL47
 7139 13c4 B92F0000 		.4byte	0x2fb9
 7140 13c8 00       		.byte	0
 7141 13c9 23       		.uleb128 0x23
 7142 13ca 62200000 		.4byte	.LASF397
 7143 13ce 01       		.byte	0x1
 7144 13cf 970D     		.2byte	0xd97
 7145 13d1 00000000 		.4byte	.LFB698
 7146 13d5 44000000 		.4byte	.LFE698-.LFB698
 7147 13d9 01       		.uleb128 0x1
 7148 13da 9C       		.byte	0x9c
 7149 13db 30140000 		.4byte	0x1430
 7150 13df 21       		.uleb128 0x21
 7151 13e0 02000000 		.4byte	.LBB96
 7152 13e4 3C000000 		.4byte	.LBE96-.LBB96
 7153 13e8 1F       		.uleb128 0x1f
 7154 13e9 E02A0000 		.4byte	.LASF383
 7155 13ed 01       		.byte	0x1
 7156 13ee 9E0D     		.2byte	0xd9e
 7157 13f0 4F110000 		.4byte	0x114f
 7158 13f4 4D020000 		.4byte	.LLST13
 7159 13f8 24       		.uleb128 0x24
 7160 13f9 08000000 		.4byte	.LVL49
 7161 13fd A22F0000 		.4byte	0x2fa2
 7162 1401 2A       		.uleb128 0x2a
 7163 1402 16000000 		.4byte	.LVL51
 7164 1406 C42F0000 		.4byte	0x2fc4
 7165 140a 15140000 		.4byte	0x1415
 7166 140e 26       		.uleb128 0x26
 7167 140f 01       		.uleb128 0x1
 7168 1410 50       		.byte	0x50
 7169 1411 02       		.uleb128 0x2
 7170 1412 75       		.byte	0x75
 7171 1413 04       		.sleb128 4
 7172 1414 00       		.byte	0
 7173 1415 24       		.uleb128 0x24
 7174 1416 2E000000 		.4byte	.LVL52
 7175 141a B92F0000 		.4byte	0x2fb9
 7176 141e 25       		.uleb128 0x25
 7177 141f 34000000 		.4byte	.LVL53
 7178 1423 55110000 		.4byte	0x1155
 7179 1427 26       		.uleb128 0x26
 7180 1428 01       		.uleb128 0x1
 7181 1429 50       		.byte	0x50
 7182 142a 02       		.uleb128 0x2
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 229


 7183 142b 75       		.byte	0x75
 7184 142c 00       		.sleb128 0
 7185 142d 00       		.byte	0
 7186 142e 00       		.byte	0
 7187 142f 00       		.byte	0
 7188 1430 2B       		.uleb128 0x2b
 7189 1431 65140000 		.4byte	.LASF399
 7190 1435 01       		.byte	0x1
 7191 1436 A30C     		.2byte	0xca3
 7192 1438 00000000 		.4byte	.LFB694
 7193 143c 28000000 		.4byte	.LFE694-.LFB694
 7194 1440 01       		.uleb128 0x1
 7195 1441 9C       		.byte	0x9c
 7196 1442 60140000 		.4byte	0x1460
 7197 1446 1E       		.uleb128 0x1e
 7198 1447 61260000 		.4byte	.LASF391
 7199 144b 01       		.byte	0x1
 7200 144c A30C     		.2byte	0xca3
 7201 144e BB000000 		.4byte	0xbb
 7202 1452 60020000 		.4byte	.LLST14
 7203 1456 24       		.uleb128 0x24
 7204 1457 06000000 		.4byte	.LVL56
 7205 145b C9130000 		.4byte	0x13c9
 7206 145f 00       		.byte	0
 7207 1460 23       		.uleb128 0x23
 7208 1461 6A1F0000 		.4byte	.LASF400
 7209 1465 01       		.byte	0x1
 7210 1466 3B13     		.2byte	0x133b
 7211 1468 00000000 		.4byte	.LFB710
 7212 146c 68000000 		.4byte	.LFE710-.LFB710
 7213 1470 01       		.uleb128 0x1
 7214 1471 9C       		.byte	0x9c
 7215 1472 E9140000 		.4byte	0x14e9
 7216 1476 1E       		.uleb128 0x1e
 7217 1477 78190000 		.4byte	.LASF401
 7218 147b 01       		.byte	0x1
 7219 147c 3B13     		.2byte	0x133b
 7220 147e EB0D0000 		.4byte	0xdeb
 7221 1482 81020000 		.4byte	.LLST15
 7222 1486 1E       		.uleb128 0x1e
 7223 1487 1E010000 		.4byte	.LASF402
 7224 148b 01       		.byte	0x1
 7225 148c 3B13     		.2byte	0x133b
 7226 148e E9140000 		.4byte	0x14e9
 7227 1492 AD020000 		.4byte	.LLST16
 7228 1496 1F       		.uleb128 0x1f
 7229 1497 F1160000 		.4byte	.LASF403
 7230 149b 01       		.byte	0x1
 7231 149c 3D13     		.2byte	0x133d
 7232 149e EB0D0000 		.4byte	0xdeb
 7233 14a2 D9020000 		.4byte	.LLST17
 7234 14a6 1F       		.uleb128 0x1f
 7235 14a7 A41A0000 		.4byte	.LASF404
 7236 14ab 01       		.byte	0x1
 7237 14ac 3E13     		.2byte	0x133e
 7238 14ae EE140000 		.4byte	0x14ee
 7239 14b2 EC020000 		.4byte	.LLST18
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 230


 7240 14b6 24       		.uleb128 0x24
 7241 14b7 16000000 		.4byte	.LVL60
 7242 14bb C42F0000 		.4byte	0x2fc4
 7243 14bf 2A       		.uleb128 0x2a
 7244 14c0 2A000000 		.4byte	.LVL61
 7245 14c4 AD2F0000 		.4byte	0x2fad
 7246 14c8 D6140000 		.4byte	0x14d6
 7247 14cc 26       		.uleb128 0x26
 7248 14cd 01       		.uleb128 0x1
 7249 14ce 50       		.byte	0x50
 7250 14cf 05       		.uleb128 0x5
 7251 14d0 03       		.byte	0x3
 7252 14d1 00000000 		.4byte	.LANCHOR0
 7253 14d5 00       		.byte	0
 7254 14d6 24       		.uleb128 0x24
 7255 14d7 4A000000 		.4byte	.LVL64
 7256 14db D02F0000 		.4byte	0x2fd0
 7257 14df 24       		.uleb128 0x24
 7258 14e0 5A000000 		.4byte	.LVL67
 7259 14e4 D02F0000 		.4byte	0x2fd0
 7260 14e8 00       		.byte	0
 7261 14e9 07       		.uleb128 0x7
 7262 14ea D50D0000 		.4byte	0xdd5
 7263 14ee 07       		.uleb128 0x7
 7264 14ef EB0D0000 		.4byte	0xdeb
 7265 14f3 2C       		.uleb128 0x2c
 7266 14f4 C8190000 		.4byte	.LASF407
 7267 14f8 01       		.byte	0x1
 7268 14f9 DC02     		.2byte	0x2dc
 7269 14fb D50D0000 		.4byte	0xdd5
 7270 14ff 00000000 		.4byte	.LFB662
 7271 1503 62000000 		.4byte	.LFE662-.LFB662
 7272 1507 01       		.uleb128 0x1
 7273 1508 9C       		.byte	0x9c
 7274 1509 37160000 		.4byte	0x1637
 7275 150d 1E       		.uleb128 0x1e
 7276 150e F70B0000 		.4byte	.LASF388
 7277 1512 01       		.byte	0x1
 7278 1513 DC02     		.2byte	0x2dc
 7279 1515 AE0D0000 		.4byte	0xdae
 7280 1519 FF020000 		.4byte	.LLST19
 7281 151d 1E       		.uleb128 0x1e
 7282 151e 23080000 		.4byte	.LASF389
 7283 1522 01       		.byte	0x1
 7284 1523 DD02     		.2byte	0x2dd
 7285 1525 900F0000 		.4byte	0xf90
 7286 1529 1D030000 		.4byte	.LLST20
 7287 152d 1E       		.uleb128 0x1e
 7288 152e F9000000 		.4byte	.LASF405
 7289 1532 01       		.byte	0x1
 7290 1533 DE02     		.2byte	0x2de
 7291 1535 37160000 		.4byte	0x1637
 7292 1539 3B030000 		.4byte	.LLST21
 7293 153d 1E       		.uleb128 0x1e
 7294 153e 61260000 		.4byte	.LASF391
 7295 1542 01       		.byte	0x1
 7296 1543 DF02     		.2byte	0x2df
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 231


 7297 1545 AA120000 		.4byte	0x12aa
 7298 1549 5C030000 		.4byte	.LLST22
 7299 154d 27       		.uleb128 0x27
 7300 154e FA2A0000 		.4byte	.LASF370
 7301 1552 01       		.byte	0x1
 7302 1553 E002     		.2byte	0x2e0
 7303 1555 E00D0000 		.4byte	0xde0
 7304 1559 02       		.uleb128 0x2
 7305 155a 91       		.byte	0x91
 7306 155b 00       		.sleb128 0
 7307 155c 27       		.uleb128 0x27
 7308 155d A10F0000 		.4byte	.LASF392
 7309 1561 01       		.byte	0x1
 7310 1562 E102     		.2byte	0x2e1
 7311 1564 B5120000 		.4byte	0x12b5
 7312 1568 02       		.uleb128 0x2
 7313 1569 91       		.byte	0x91
 7314 156a 04       		.sleb128 4
 7315 156b 1F       		.uleb128 0x1f
 7316 156c CA040000 		.4byte	.LASF393
 7317 1570 01       		.byte	0x1
 7318 1571 E302     		.2byte	0x2e3
 7319 1573 4F110000 		.4byte	0x114f
 7320 1577 7A030000 		.4byte	.LLST23
 7321 157b 1F       		.uleb128 0x1f
 7322 157c DD090000 		.4byte	.LASF382
 7323 1580 01       		.byte	0x1
 7324 1581 E402     		.2byte	0x2e4
 7325 1583 D50D0000 		.4byte	0xdd5
 7326 1587 A3030000 		.4byte	.LLST24
 7327 158b 2D       		.uleb128 0x2d
 7328 158c 0E000000 		.4byte	.LBB97
 7329 1590 24000000 		.4byte	.LBE97-.LBB97
 7330 1594 E3150000 		.4byte	0x15e3
 7331 1598 1F       		.uleb128 0x1f
 7332 1599 2B030000 		.4byte	.LASF371
 7333 159d 01       		.byte	0x1
 7334 159e 0103     		.2byte	0x301
 7335 15a0 950F0000 		.4byte	0xf95
 7336 15a4 C2030000 		.4byte	.LLST25
 7337 15a8 2A       		.uleb128 0x2a
 7338 15a9 14000000 		.4byte	.LVL71
 7339 15ad DC2F0000 		.4byte	0x2fdc
 7340 15b1 BE150000 		.4byte	0x15be
 7341 15b5 26       		.uleb128 0x26
 7342 15b6 01       		.uleb128 0x1
 7343 15b7 50       		.byte	0x50
 7344 15b8 04       		.uleb128 0x4
 7345 15b9 75       		.byte	0x75
 7346 15ba 00       		.sleb128 0
 7347 15bb 32       		.byte	0x32
 7348 15bc 24       		.byte	0x24
 7349 15bd 00       		.byte	0
 7350 15be 2A       		.uleb128 0x2a
 7351 15bf 1E000000 		.4byte	.LVL73
 7352 15c3 DC2F0000 		.4byte	0x2fdc
 7353 15c7 D2150000 		.4byte	0x15d2
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 232


 7354 15cb 26       		.uleb128 0x26
 7355 15cc 01       		.uleb128 0x1
 7356 15cd 50       		.byte	0x50
 7357 15ce 02       		.uleb128 0x2
 7358 15cf 08       		.byte	0x8
 7359 15d0 60       		.byte	0x60
 7360 15d1 00       		.byte	0
 7361 15d2 25       		.uleb128 0x25
 7362 15d3 2E000000 		.4byte	.LVL75
 7363 15d7 692F0000 		.4byte	0x2f69
 7364 15db 26       		.uleb128 0x26
 7365 15dc 01       		.uleb128 0x1
 7366 15dd 50       		.byte	0x50
 7367 15de 02       		.uleb128 0x2
 7368 15df 79       		.byte	0x79
 7369 15e0 00       		.sleb128 0
 7370 15e1 00       		.byte	0
 7371 15e2 00       		.byte	0
 7372 15e3 2A       		.uleb128 0x2a
 7373 15e4 4E000000 		.4byte	.LVL78
 7374 15e8 95110000 		.4byte	0x1195
 7375 15ec 26160000 		.4byte	0x1626
 7376 15f0 26       		.uleb128 0x26
 7377 15f1 01       		.uleb128 0x1
 7378 15f2 50       		.byte	0x50
 7379 15f3 02       		.uleb128 0x2
 7380 15f4 76       		.byte	0x76
 7381 15f5 00       		.sleb128 0
 7382 15f6 26       		.uleb128 0x26
 7383 15f7 01       		.uleb128 0x1
 7384 15f8 51       		.byte	0x51
 7385 15f9 02       		.uleb128 0x2
 7386 15fa 77       		.byte	0x77
 7387 15fb 00       		.sleb128 0
 7388 15fc 26       		.uleb128 0x26
 7389 15fd 01       		.uleb128 0x1
 7390 15fe 52       		.byte	0x52
 7391 15ff 02       		.uleb128 0x2
 7392 1600 75       		.byte	0x75
 7393 1601 00       		.sleb128 0
 7394 1602 26       		.uleb128 0x26
 7395 1603 01       		.uleb128 0x1
 7396 1604 53       		.byte	0x53
 7397 1605 02       		.uleb128 0x2
 7398 1606 78       		.byte	0x78
 7399 1607 00       		.sleb128 0
 7400 1608 26       		.uleb128 0x26
 7401 1609 02       		.uleb128 0x2
 7402 160a 7D       		.byte	0x7d
 7403 160b 00       		.sleb128 0
 7404 160c 03       		.uleb128 0x3
 7405 160d 91       		.byte	0x91
 7406 160e 00       		.sleb128 0
 7407 160f 06       		.byte	0x6
 7408 1610 26       		.uleb128 0x26
 7409 1611 02       		.uleb128 0x2
 7410 1612 7D       		.byte	0x7d
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 233


 7411 1613 04       		.sleb128 4
 7412 1614 03       		.uleb128 0x3
 7413 1615 91       		.byte	0x91
 7414 1616 04       		.sleb128 4
 7415 1617 06       		.byte	0x6
 7416 1618 26       		.uleb128 0x26
 7417 1619 02       		.uleb128 0x2
 7418 161a 7D       		.byte	0x7d
 7419 161b 08       		.sleb128 8
 7420 161c 02       		.uleb128 0x2
 7421 161d 74       		.byte	0x74
 7422 161e 00       		.sleb128 0
 7423 161f 26       		.uleb128 0x26
 7424 1620 02       		.uleb128 0x2
 7425 1621 7D       		.byte	0x7d
 7426 1622 0C       		.sleb128 12
 7427 1623 01       		.uleb128 0x1
 7428 1624 30       		.byte	0x30
 7429 1625 00       		.byte	0
 7430 1626 25       		.uleb128 0x25
 7431 1627 54000000 		.4byte	.LVL79
 7432 162b 73130000 		.4byte	0x1373
 7433 162f 26       		.uleb128 0x26
 7434 1630 01       		.uleb128 0x1
 7435 1631 50       		.byte	0x50
 7436 1632 02       		.uleb128 0x2
 7437 1633 74       		.byte	0x74
 7438 1634 00       		.sleb128 0
 7439 1635 00       		.byte	0
 7440 1636 00       		.byte	0
 7441 1637 07       		.uleb128 0x7
 7442 1638 EB000000 		.4byte	0xeb
 7443 163c 2E       		.uleb128 0x2e
 7444 163d 160D0000 		.4byte	.LASF412
 7445 1641 01       		.byte	0x1
 7446 1642 5804     		.2byte	0x458
 7447 1644 00000000 		.4byte	.LFB665
 7448 1648 B0000000 		.4byte	.LFE665-.LFB665
 7449 164c 01       		.uleb128 0x1
 7450 164d 9C       		.byte	0x9c
 7451 164e 09170000 		.4byte	0x1709
 7452 1652 1E       		.uleb128 0x1e
 7453 1653 CA270000 		.4byte	.LASF406
 7454 1657 01       		.byte	0x1
 7455 1658 5804     		.2byte	0x458
 7456 165a E30E0000 		.4byte	0xee3
 7457 165e EB030000 		.4byte	.LLST26
 7458 1662 1F       		.uleb128 0x1f
 7459 1663 E02A0000 		.4byte	.LASF383
 7460 1667 01       		.byte	0x1
 7461 1668 5A04     		.2byte	0x45a
 7462 166a 4F110000 		.4byte	0x114f
 7463 166e 09040000 		.4byte	.LLST27
 7464 1672 2F       		.uleb128 0x2f
 7465 1673 51100000 		.4byte	0x1051
 7466 1677 84000000 		.4byte	.LBB98
 7467 167b 12000000 		.4byte	.LBE98-.LBB98
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 234


 7468 167f 01       		.byte	0x1
 7469 1680 A504     		.2byte	0x4a5
 7470 1682 96160000 		.4byte	0x1696
 7471 1686 21       		.uleb128 0x21
 7472 1687 84000000 		.4byte	.LBB99
 7473 168b 12000000 		.4byte	.LBE99-.LBB99
 7474 168f 22       		.uleb128 0x22
 7475 1690 5D100000 		.4byte	0x105d
 7476 1694 00       		.byte	0
 7477 1695 00       		.byte	0
 7478 1696 24       		.uleb128 0x24
 7479 1697 08000000 		.4byte	.LVL83
 7480 169b A22F0000 		.4byte	0x2fa2
 7481 169f 2A       		.uleb128 0x2a
 7482 16a0 18000000 		.4byte	.LVL85
 7483 16a4 C42F0000 		.4byte	0x2fc4
 7484 16a8 B3160000 		.4byte	0x16b3
 7485 16ac 26       		.uleb128 0x26
 7486 16ad 01       		.uleb128 0x1
 7487 16ae 50       		.byte	0x50
 7488 16af 02       		.uleb128 0x2
 7489 16b0 76       		.byte	0x76
 7490 16b1 00       		.sleb128 0
 7491 16b2 00       		.byte	0
 7492 16b3 2A       		.uleb128 0x2a
 7493 16b4 24000000 		.4byte	.LVL86
 7494 16b8 C42F0000 		.4byte	0x2fc4
 7495 16bc C7160000 		.4byte	0x16c7
 7496 16c0 26       		.uleb128 0x26
 7497 16c1 01       		.uleb128 0x1
 7498 16c2 50       		.byte	0x50
 7499 16c3 02       		.uleb128 0x2
 7500 16c4 74       		.byte	0x74
 7501 16c5 18       		.sleb128 24
 7502 16c6 00       		.byte	0
 7503 16c7 2A       		.uleb128 0x2a
 7504 16c8 44000000 		.4byte	.LVL87
 7505 16cc AD2F0000 		.4byte	0x2fad
 7506 16d0 E2160000 		.4byte	0x16e2
 7507 16d4 26       		.uleb128 0x26
 7508 16d5 01       		.uleb128 0x1
 7509 16d6 50       		.byte	0x50
 7510 16d7 03       		.uleb128 0x3
 7511 16d8 75       		.byte	0x75
 7512 16d9 E401     		.sleb128 228
 7513 16db 26       		.uleb128 0x26
 7514 16dc 01       		.uleb128 0x1
 7515 16dd 51       		.byte	0x51
 7516 16de 02       		.uleb128 0x2
 7517 16df 76       		.byte	0x76
 7518 16e0 00       		.sleb128 0
 7519 16e1 00       		.byte	0
 7520 16e2 2A       		.uleb128 0x2a
 7521 16e3 62000000 		.4byte	.LVL88
 7522 16e7 55110000 		.4byte	0x1155
 7523 16eb F6160000 		.4byte	0x16f6
 7524 16ef 26       		.uleb128 0x26
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 235


 7525 16f0 01       		.uleb128 0x1
 7526 16f1 50       		.byte	0x50
 7527 16f2 02       		.uleb128 0x2
 7528 16f3 74       		.byte	0x74
 7529 16f4 00       		.sleb128 0
 7530 16f5 00       		.byte	0
 7531 16f6 24       		.uleb128 0x24
 7532 16f7 66000000 		.4byte	.LVL89
 7533 16fb 28110000 		.4byte	0x1128
 7534 16ff 24       		.uleb128 0x24
 7535 1700 6A000000 		.4byte	.LVL90
 7536 1704 B92F0000 		.4byte	0x2fb9
 7537 1708 00       		.byte	0
 7538 1709 2C       		.uleb128 0x2c
 7539 170a 201B0000 		.4byte	.LASF408
 7540 170e 01       		.byte	0x1
 7541 170f 7C05     		.2byte	0x57c
 7542 1711 E00D0000 		.4byte	0xde0
 7543 1715 00000000 		.4byte	.LFB668
 7544 1719 20000000 		.4byte	.LFE668-.LFB668
 7545 171d 01       		.uleb128 0x1
 7546 171e 9C       		.byte	0x9c
 7547 171f 66170000 		.4byte	0x1766
 7548 1723 1E       		.uleb128 0x1e
 7549 1724 4A040000 		.4byte	.LASF386
 7550 1728 01       		.byte	0x1
 7551 1729 7C05     		.2byte	0x57c
 7552 172b E30E0000 		.4byte	0xee3
 7553 172f 1C040000 		.4byte	.LLST28
 7554 1733 1F       		.uleb128 0x1f
 7555 1734 E02A0000 		.4byte	.LASF383
 7556 1738 01       		.byte	0x1
 7557 1739 7E05     		.2byte	0x57e
 7558 173b 4F110000 		.4byte	0x114f
 7559 173f 3A040000 		.4byte	.LLST29
 7560 1743 1F       		.uleb128 0x1f
 7561 1744 8A040000 		.4byte	.LASF409
 7562 1748 01       		.byte	0x1
 7563 1749 7F05     		.2byte	0x57f
 7564 174b E00D0000 		.4byte	0xde0
 7565 174f 4D040000 		.4byte	.LLST30
 7566 1753 24       		.uleb128 0x24
 7567 1754 08000000 		.4byte	.LVL94
 7568 1758 A22F0000 		.4byte	0x2fa2
 7569 175c 24       		.uleb128 0x24
 7570 175d 16000000 		.4byte	.LVL97
 7571 1761 B92F0000 		.4byte	0x2fb9
 7572 1765 00       		.byte	0
 7573 1766 2C       		.uleb128 0x2c
 7574 1767 BE260000 		.4byte	.LASF410
 7575 176b 01       		.byte	0x1
 7576 176c 9205     		.2byte	0x592
 7577 176e E00D0000 		.4byte	0xde0
 7578 1772 00000000 		.4byte	.LFB669
 7579 1776 30000000 		.4byte	.LFE669-.LFB669
 7580 177a 01       		.uleb128 0x1
 7581 177b 9C       		.byte	0x9c
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 236


 7582 177c 0B180000 		.4byte	0x180b
 7583 1780 1E       		.uleb128 0x1e
 7584 1781 4A040000 		.4byte	.LASF386
 7585 1785 01       		.byte	0x1
 7586 1786 9205     		.2byte	0x592
 7587 1788 E30E0000 		.4byte	0xee3
 7588 178c 6B040000 		.4byte	.LLST31
 7589 1790 1F       		.uleb128 0x1f
 7590 1791 E02A0000 		.4byte	.LASF383
 7591 1795 01       		.byte	0x1
 7592 1796 9405     		.2byte	0x594
 7593 1798 4F110000 		.4byte	0x114f
 7594 179c 89040000 		.4byte	.LLST32
 7595 17a0 28       		.uleb128 0x28
 7596 17a1 8A040000 		.4byte	.LASF409
 7597 17a5 01       		.byte	0x1
 7598 17a6 9505     		.2byte	0x595
 7599 17a8 E00D0000 		.4byte	0xde0
 7600 17ac 01       		.uleb128 0x1
 7601 17ad 50       		.byte	0x50
 7602 17ae 30       		.uleb128 0x30
 7603 17af B3020000 		.4byte	.LASF411
 7604 17b3 01       		.byte	0x1
 7605 17b4 9505     		.2byte	0x595
 7606 17b6 E00D0000 		.4byte	0xde0
 7607 17ba 2F       		.uleb128 0x2f
 7608 17bb 69100000 		.4byte	0x1069
 7609 17bf 08000000 		.4byte	.LBB100
 7610 17c3 14000000 		.4byte	.LBE100-.LBB100
 7611 17c7 01       		.byte	0x1
 7612 17c8 A905     		.2byte	0x5a9
 7613 17ca E3170000 		.4byte	0x17e3
 7614 17ce 21       		.uleb128 0x21
 7615 17cf 08000000 		.4byte	.LBB101
 7616 17d3 14000000 		.4byte	.LBE101-.LBB101
 7617 17d7 22       		.uleb128 0x22
 7618 17d8 79100000 		.4byte	0x1079
 7619 17dc 22       		.uleb128 0x22
 7620 17dd 84100000 		.4byte	0x1084
 7621 17e1 00       		.byte	0
 7622 17e2 00       		.byte	0
 7623 17e3 2F       		.uleb128 0x2f
 7624 17e4 90100000 		.4byte	0x1090
 7625 17e8 26000000 		.4byte	.LBB102
 7626 17ec 04000000 		.4byte	.LBE102-.LBB102
 7627 17f0 01       		.byte	0x1
 7628 17f1 B005     		.2byte	0x5b0
 7629 17f3 01180000 		.4byte	0x1801
 7630 17f7 31       		.uleb128 0x31
 7631 17f8 9C100000 		.4byte	0x109c
 7632 17fc 9C040000 		.4byte	.LLST33
 7633 1800 00       		.byte	0
 7634 1801 24       		.uleb128 0x24
 7635 1802 08000000 		.4byte	.LVL100
 7636 1806 E72F0000 		.4byte	0x2fe7
 7637 180a 00       		.byte	0
 7638 180b 2E       		.uleb128 0x2e
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 237


 7639 180c A1100000 		.4byte	.LASF413
 7640 1810 01       		.byte	0x1
 7641 1811 BA05     		.2byte	0x5ba
 7642 1813 00000000 		.4byte	.LFB670
 7643 1817 DC000000 		.4byte	.LFE670-.LFB670
 7644 181b 01       		.uleb128 0x1
 7645 181c 9C       		.byte	0x9c
 7646 181d E0180000 		.4byte	0x18e0
 7647 1821 1E       		.uleb128 0x1e
 7648 1822 4A040000 		.4byte	.LASF386
 7649 1826 01       		.byte	0x1
 7650 1827 BA05     		.2byte	0x5ba
 7651 1829 E30E0000 		.4byte	0xee3
 7652 182d AF040000 		.4byte	.LLST34
 7653 1831 1E       		.uleb128 0x1e
 7654 1832 42050000 		.4byte	.LASF414
 7655 1836 01       		.byte	0x1
 7656 1837 BA05     		.2byte	0x5ba
 7657 1839 E00D0000 		.4byte	0xde0
 7658 183d CD040000 		.4byte	.LLST35
 7659 1841 1F       		.uleb128 0x1f
 7660 1842 E02A0000 		.4byte	.LASF383
 7661 1846 01       		.byte	0x1
 7662 1847 BC05     		.2byte	0x5bc
 7663 1849 4F110000 		.4byte	0x114f
 7664 184d F7040000 		.4byte	.LLST36
 7665 1851 1F       		.uleb128 0x1f
 7666 1852 12060000 		.4byte	.LASF415
 7667 1856 01       		.byte	0x1
 7668 1857 BD05     		.2byte	0x5bd
 7669 1859 E00D0000 		.4byte	0xde0
 7670 185d 0A050000 		.4byte	.LLST37
 7671 1861 1F       		.uleb128 0x1f
 7672 1862 201C0000 		.4byte	.LASF416
 7673 1866 01       		.byte	0x1
 7674 1867 BD05     		.2byte	0x5bd
 7675 1869 E00D0000 		.4byte	0xde0
 7676 186d 1D050000 		.4byte	.LLST38
 7677 1871 1F       		.uleb128 0x1f
 7678 1872 41150000 		.4byte	.LASF417
 7679 1876 01       		.byte	0x1
 7680 1877 BE05     		.2byte	0x5be
 7681 1879 D50D0000 		.4byte	0xdd5
 7682 187d 30050000 		.4byte	.LLST39
 7683 1881 2F       		.uleb128 0x2f
 7684 1882 51100000 		.4byte	0x1051
 7685 1886 04000000 		.4byte	.LBB104
 7686 188a 12000000 		.4byte	.LBE104-.LBB104
 7687 188e 01       		.byte	0x1
 7688 188f C005     		.2byte	0x5c0
 7689 1891 A5180000 		.4byte	0x18a5
 7690 1895 21       		.uleb128 0x21
 7691 1896 04000000 		.4byte	.LBB105
 7692 189a 12000000 		.4byte	.LBE105-.LBB105
 7693 189e 22       		.uleb128 0x22
 7694 189f 5D100000 		.4byte	0x105d
 7695 18a3 00       		.byte	0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 238


 7696 18a4 00       		.byte	0
 7697 18a5 24       		.uleb128 0x24
 7698 18a6 26000000 		.4byte	.LVL108
 7699 18aa A22F0000 		.4byte	0x2fa2
 7700 18ae 2A       		.uleb128 0x2a
 7701 18af 96000000 		.4byte	.LVL114
 7702 18b3 C42F0000 		.4byte	0x2fc4
 7703 18b7 C2180000 		.4byte	0x18c2
 7704 18bb 26       		.uleb128 0x26
 7705 18bc 01       		.uleb128 0x1
 7706 18bd 50       		.byte	0x50
 7707 18be 02       		.uleb128 0x2
 7708 18bf 75       		.byte	0x75
 7709 18c0 00       		.sleb128 0
 7710 18c1 00       		.byte	0
 7711 18c2 2A       		.uleb128 0x2a
 7712 18c3 B8000000 		.4byte	.LVL115
 7713 18c7 AD2F0000 		.4byte	0x2fad
 7714 18cb D6180000 		.4byte	0x18d6
 7715 18cf 26       		.uleb128 0x26
 7716 18d0 01       		.uleb128 0x1
 7717 18d1 51       		.byte	0x51
 7718 18d2 02       		.uleb128 0x2
 7719 18d3 75       		.byte	0x75
 7720 18d4 00       		.sleb128 0
 7721 18d5 00       		.byte	0
 7722 18d6 24       		.uleb128 0x24
 7723 18d7 CE000000 		.4byte	.LVL117
 7724 18db B92F0000 		.4byte	0x2fb9
 7725 18df 00       		.byte	0
 7726 18e0 2E       		.uleb128 0x2e
 7727 18e1 4B030000 		.4byte	.LASF418
 7728 18e5 01       		.byte	0x1
 7729 18e6 F106     		.2byte	0x6f1
 7730 18e8 00000000 		.4byte	.LFB673
 7731 18ec 88000000 		.4byte	.LFE673-.LFB673
 7732 18f0 01       		.uleb128 0x1
 7733 18f1 9C       		.byte	0x9c
 7734 18f2 89190000 		.4byte	0x1989
 7735 18f6 1E       		.uleb128 0x1e
 7736 18f7 AF0F0000 		.4byte	.LASF419
 7737 18fb 01       		.byte	0x1
 7738 18fc F106     		.2byte	0x6f1
 7739 18fe E30E0000 		.4byte	0xee3
 7740 1902 4F050000 		.4byte	.LLST40
 7741 1906 1F       		.uleb128 0x1f
 7742 1907 E02A0000 		.4byte	.LASF383
 7743 190b 01       		.byte	0x1
 7744 190c F306     		.2byte	0x6f3
 7745 190e 89190000 		.4byte	0x1989
 7746 1912 7B050000 		.4byte	.LLST41
 7747 1916 2F       		.uleb128 0x2f
 7748 1917 51100000 		.4byte	0x1051
 7749 191b 02000000 		.4byte	.LBB106
 7750 191f 12000000 		.4byte	.LBE106-.LBB106
 7751 1923 01       		.byte	0x1
 7752 1924 F606     		.2byte	0x6f6
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 239


 7753 1926 3A190000 		.4byte	0x193a
 7754 192a 21       		.uleb128 0x21
 7755 192b 02000000 		.4byte	.LBB107
 7756 192f 12000000 		.4byte	.LBE107-.LBB107
 7757 1933 22       		.uleb128 0x22
 7758 1934 5D100000 		.4byte	0x105d
 7759 1938 00       		.byte	0
 7760 1939 00       		.byte	0
 7761 193a 24       		.uleb128 0x24
 7762 193b 28000000 		.4byte	.LVL121
 7763 193f A22F0000 		.4byte	0x2fa2
 7764 1943 2A       		.uleb128 0x2a
 7765 1944 2E000000 		.4byte	.LVL122
 7766 1948 A8100000 		.4byte	0x10a8
 7767 194c 57190000 		.4byte	0x1957
 7768 1950 26       		.uleb128 0x26
 7769 1951 01       		.uleb128 0x1
 7770 1952 50       		.byte	0x50
 7771 1953 02       		.uleb128 0x2
 7772 1954 74       		.byte	0x74
 7773 1955 00       		.sleb128 0
 7774 1956 00       		.byte	0
 7775 1957 2A       		.uleb128 0x2a
 7776 1958 38000000 		.4byte	.LVL123
 7777 195c C42F0000 		.4byte	0x2fc4
 7778 1960 6B190000 		.4byte	0x196b
 7779 1964 26       		.uleb128 0x26
 7780 1965 01       		.uleb128 0x1
 7781 1966 50       		.byte	0x50
 7782 1967 02       		.uleb128 0x2
 7783 1968 76       		.byte	0x76
 7784 1969 00       		.sleb128 0
 7785 196a 00       		.byte	0
 7786 196b 2A       		.uleb128 0x2a
 7787 196c 5E000000 		.4byte	.LVL124
 7788 1970 AD2F0000 		.4byte	0x2fad
 7789 1974 7F190000 		.4byte	0x197f
 7790 1978 26       		.uleb128 0x26
 7791 1979 01       		.uleb128 0x1
 7792 197a 51       		.byte	0x51
 7793 197b 02       		.uleb128 0x2
 7794 197c 76       		.byte	0x76
 7795 197d 00       		.sleb128 0
 7796 197e 00       		.byte	0
 7797 197f 24       		.uleb128 0x24
 7798 1980 7E000000 		.4byte	.LVL125
 7799 1984 B92F0000 		.4byte	0x2fb9
 7800 1988 00       		.byte	0
 7801 1989 07       		.uleb128 0x7
 7802 198a 4F110000 		.4byte	0x114f
 7803 198e 2C       		.uleb128 0x2c
 7804 198f 7A0D0000 		.4byte	.LASF420
 7805 1993 01       		.byte	0x1
 7806 1994 2707     		.2byte	0x727
 7807 1996 D50D0000 		.4byte	0xdd5
 7808 199a 00000000 		.4byte	.LFB674
 7809 199e A4000000 		.4byte	.LFE674-.LFB674
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 240


 7810 19a2 01       		.uleb128 0x1
 7811 19a3 9C       		.byte	0x9c
 7812 19a4 AE1A0000 		.4byte	0x1aae
 7813 19a8 1E       		.uleb128 0x1e
 7814 19a9 AF0F0000 		.4byte	.LASF419
 7815 19ad 01       		.byte	0x1
 7816 19ae 2707     		.2byte	0x727
 7817 19b0 E30E0000 		.4byte	0xee3
 7818 19b4 A7050000 		.4byte	.LLST42
 7819 19b8 1F       		.uleb128 0x1f
 7820 19b9 41150000 		.4byte	.LASF417
 7821 19bd 01       		.byte	0x1
 7822 19be 2907     		.2byte	0x729
 7823 19c0 D50D0000 		.4byte	0xdd5
 7824 19c4 D3050000 		.4byte	.LLST43
 7825 19c8 1F       		.uleb128 0x1f
 7826 19c9 E02A0000 		.4byte	.LASF383
 7827 19cd 01       		.byte	0x1
 7828 19ce 2A07     		.2byte	0x72a
 7829 19d0 89190000 		.4byte	0x1989
 7830 19d4 14060000 		.4byte	.LLST44
 7831 19d8 30       		.uleb128 0x30
 7832 19d9 C2140000 		.4byte	.LASF421
 7833 19dd 01       		.byte	0x1
 7834 19de 2B07     		.2byte	0x72b
 7835 19e0 E00D0000 		.4byte	0xde0
 7836 19e4 2F       		.uleb128 0x2f
 7837 19e5 51100000 		.4byte	0x1051
 7838 19e9 04000000 		.4byte	.LBB108
 7839 19ed 14000000 		.4byte	.LBE108-.LBB108
 7840 19f1 01       		.byte	0x1
 7841 19f2 2D07     		.2byte	0x72d
 7842 19f4 081A0000 		.4byte	0x1a08
 7843 19f8 21       		.uleb128 0x21
 7844 19f9 04000000 		.4byte	.LBB109
 7845 19fd 14000000 		.4byte	.LBE109-.LBB109
 7846 1a01 22       		.uleb128 0x22
 7847 1a02 5D100000 		.4byte	0x105d
 7848 1a06 00       		.byte	0
 7849 1a07 00       		.byte	0
 7850 1a08 2F       		.uleb128 0x2f
 7851 1a09 69100000 		.4byte	0x1069
 7852 1a0d 1C000000 		.4byte	.LBB110
 7853 1a11 14000000 		.4byte	.LBE110-.LBB110
 7854 1a15 01       		.byte	0x1
 7855 1a16 4107     		.2byte	0x741
 7856 1a18 311A0000 		.4byte	0x1a31
 7857 1a1c 21       		.uleb128 0x21
 7858 1a1d 1C000000 		.4byte	.LBB111
 7859 1a21 14000000 		.4byte	.LBE111-.LBB111
 7860 1a25 22       		.uleb128 0x22
 7861 1a26 79100000 		.4byte	0x1079
 7862 1a2a 22       		.uleb128 0x22
 7863 1a2b 84100000 		.4byte	0x1084
 7864 1a2f 00       		.byte	0
 7865 1a30 00       		.byte	0
 7866 1a31 2F       		.uleb128 0x2f
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 241


 7867 1a32 90100000 		.4byte	0x1090
 7868 1a36 90000000 		.4byte	.LBB112
 7869 1a3a 04000000 		.4byte	.LBE112-.LBB112
 7870 1a3e 01       		.byte	0x1
 7871 1a3f 6507     		.2byte	0x765
 7872 1a41 4F1A0000 		.4byte	0x1a4f
 7873 1a45 31       		.uleb128 0x31
 7874 1a46 9C100000 		.4byte	0x109c
 7875 1a4a 40060000 		.4byte	.LLST45
 7876 1a4e 00       		.byte	0
 7877 1a4f 24       		.uleb128 0x24
 7878 1a50 1C000000 		.4byte	.LVL130
 7879 1a54 E72F0000 		.4byte	0x2fe7
 7880 1a58 2A       		.uleb128 0x2a
 7881 1a59 36000000 		.4byte	.LVL131
 7882 1a5d A8100000 		.4byte	0x10a8
 7883 1a61 6C1A0000 		.4byte	0x1a6c
 7884 1a65 26       		.uleb128 0x26
 7885 1a66 01       		.uleb128 0x1
 7886 1a67 50       		.byte	0x50
 7887 1a68 02       		.uleb128 0x2
 7888 1a69 74       		.byte	0x74
 7889 1a6a 00       		.sleb128 0
 7890 1a6b 00       		.byte	0
 7891 1a6c 2A       		.uleb128 0x2a
 7892 1a6d 5C000000 		.4byte	.LVL133
 7893 1a71 C42F0000 		.4byte	0x2fc4
 7894 1a75 801A0000 		.4byte	0x1a80
 7895 1a79 26       		.uleb128 0x26
 7896 1a7a 01       		.uleb128 0x1
 7897 1a7b 50       		.byte	0x50
 7898 1a7c 02       		.uleb128 0x2
 7899 1a7d 76       		.byte	0x76
 7900 1a7e 00       		.sleb128 0
 7901 1a7f 00       		.byte	0
 7902 1a80 2A       		.uleb128 0x2a
 7903 1a81 7E000000 		.4byte	.LVL134
 7904 1a85 AD2F0000 		.4byte	0x2fad
 7905 1a89 941A0000 		.4byte	0x1a94
 7906 1a8d 26       		.uleb128 0x26
 7907 1a8e 01       		.uleb128 0x1
 7908 1a8f 51       		.byte	0x51
 7909 1a90 02       		.uleb128 0x2
 7910 1a91 76       		.byte	0x76
 7911 1a92 00       		.sleb128 0
 7912 1a93 00       		.byte	0
 7913 1a94 25       		.uleb128 0x25
 7914 1a95 8A000000 		.4byte	.LVL136
 7915 1a99 AD2F0000 		.4byte	0x2fad
 7916 1a9d 26       		.uleb128 0x26
 7917 1a9e 01       		.uleb128 0x1
 7918 1a9f 50       		.byte	0x50
 7919 1aa0 05       		.uleb128 0x5
 7920 1aa1 03       		.byte	0x3
 7921 1aa2 14000000 		.4byte	.LANCHOR0+20
 7922 1aa6 26       		.uleb128 0x26
 7923 1aa7 01       		.uleb128 0x1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 242


 7924 1aa8 51       		.byte	0x51
 7925 1aa9 02       		.uleb128 0x2
 7926 1aaa 74       		.byte	0x74
 7927 1aab 18       		.sleb128 24
 7928 1aac 00       		.byte	0
 7929 1aad 00       		.byte	0
 7930 1aae 2E       		.uleb128 0x2e
 7931 1aaf 4B0F0000 		.4byte	.LASF422
 7932 1ab3 01       		.byte	0x1
 7933 1ab4 6D07     		.2byte	0x76d
 7934 1ab6 00000000 		.4byte	.LFB675
 7935 1aba 7C000000 		.4byte	.LFE675-.LFB675
 7936 1abe 01       		.uleb128 0x1
 7937 1abf 9C       		.byte	0x9c
 7938 1ac0 6A1B0000 		.4byte	0x1b6a
 7939 1ac4 1F       		.uleb128 0x1f
 7940 1ac5 DD090000 		.4byte	.LASF382
 7941 1ac9 01       		.byte	0x1
 7942 1aca 6F07     		.2byte	0x76f
 7943 1acc D50D0000 		.4byte	0xdd5
 7944 1ad0 53060000 		.4byte	.LLST46
 7945 1ad4 2F       		.uleb128 0x2f
 7946 1ad5 51100000 		.4byte	0x1051
 7947 1ad9 22000000 		.4byte	.LBB114
 7948 1add 10000000 		.4byte	.LBE114-.LBB114
 7949 1ae1 01       		.byte	0x1
 7950 1ae2 B507     		.2byte	0x7b5
 7951 1ae4 F81A0000 		.4byte	0x1af8
 7952 1ae8 21       		.uleb128 0x21
 7953 1ae9 22000000 		.4byte	.LBB115
 7954 1aed 10000000 		.4byte	.LBE115-.LBB115
 7955 1af1 22       		.uleb128 0x22
 7956 1af2 5D100000 		.4byte	0x105d
 7957 1af6 00       		.byte	0
 7958 1af7 00       		.byte	0
 7959 1af8 2F       		.uleb128 0x2f
 7960 1af9 51100000 		.4byte	0x1051
 7961 1afd 52000000 		.4byte	.LBB116
 7962 1b01 12000000 		.4byte	.LBE116-.LBB116
 7963 1b05 01       		.byte	0x1
 7964 1b06 DC07     		.2byte	0x7dc
 7965 1b08 1C1B0000 		.4byte	0x1b1c
 7966 1b0c 21       		.uleb128 0x21
 7967 1b0d 52000000 		.4byte	.LBB117
 7968 1b11 12000000 		.4byte	.LBE117-.LBB117
 7969 1b15 22       		.uleb128 0x22
 7970 1b16 5D100000 		.4byte	0x105d
 7971 1b1a 00       		.byte	0
 7972 1b1b 00       		.byte	0
 7973 1b1c 2A       		.uleb128 0x2a
 7974 1b1d 16000000 		.4byte	.LVL140
 7975 1b21 F3140000 		.4byte	0x14f3
 7976 1b25 571B0000 		.4byte	0x1b57
 7977 1b29 26       		.uleb128 0x26
 7978 1b2a 01       		.uleb128 0x1
 7979 1b2b 50       		.byte	0x50
 7980 1b2c 05       		.uleb128 0x5
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 243


 7981 1b2d 03       		.byte	0x3
 7982 1b2e 00000000 		.4byte	prvIdleTask
 7983 1b32 26       		.uleb128 0x26
 7984 1b33 01       		.uleb128 0x1
 7985 1b34 51       		.byte	0x51
 7986 1b35 05       		.uleb128 0x5
 7987 1b36 03       		.byte	0x3
 7988 1b37 00000000 		.4byte	.LC0
 7989 1b3b 26       		.uleb128 0x26
 7990 1b3c 01       		.uleb128 0x1
 7991 1b3d 52       		.byte	0x52
 7992 1b3e 02       		.uleb128 0x2
 7993 1b3f 08       		.byte	0x8
 7994 1b40 80       		.byte	0x80
 7995 1b41 26       		.uleb128 0x26
 7996 1b42 01       		.uleb128 0x1
 7997 1b43 53       		.byte	0x53
 7998 1b44 01       		.uleb128 0x1
 7999 1b45 30       		.byte	0x30
 8000 1b46 26       		.uleb128 0x26
 8001 1b47 02       		.uleb128 0x2
 8002 1b48 7D       		.byte	0x7d
 8003 1b49 00       		.sleb128 0
 8004 1b4a 01       		.uleb128 0x1
 8005 1b4b 30       		.byte	0x30
 8006 1b4c 26       		.uleb128 0x26
 8007 1b4d 02       		.uleb128 0x2
 8008 1b4e 7D       		.byte	0x7d
 8009 1b4f 04       		.sleb128 4
 8010 1b50 05       		.uleb128 0x5
 8011 1b51 03       		.byte	0x3
 8012 1b52 1C010000 		.4byte	.LANCHOR0+284
 8013 1b56 00       		.byte	0
 8014 1b57 24       		.uleb128 0x24
 8015 1b58 1E000000 		.4byte	.LVL141
 8016 1b5c F22F0000 		.4byte	0x2ff2
 8017 1b60 24       		.uleb128 0x24
 8018 1b61 4A000000 		.4byte	.LVL142
 8019 1b65 FE2F0000 		.4byte	0x2ffe
 8020 1b69 00       		.byte	0
 8021 1b6a 2E       		.uleb128 0x2e
 8022 1b6b E91F0000 		.4byte	.LASF423
 8023 1b6f 01       		.byte	0x1
 8024 1b70 E507     		.2byte	0x7e5
 8025 1b72 00000000 		.4byte	.LFB676
 8026 1b76 24000000 		.4byte	.LFE676-.LFB676
 8027 1b7a 01       		.uleb128 0x1
 8028 1b7b 9C       		.byte	0x9c
 8029 1b7c AE1B0000 		.4byte	0x1bae
 8030 1b80 2F       		.uleb128 0x2f
 8031 1b81 51100000 		.4byte	0x1051
 8032 1b85 02000000 		.4byte	.LBB118
 8033 1b89 10000000 		.4byte	.LBE118-.LBB118
 8034 1b8d 01       		.byte	0x1
 8035 1b8e EA07     		.2byte	0x7ea
 8036 1b90 A41B0000 		.4byte	0x1ba4
 8037 1b94 21       		.uleb128 0x21
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 244


 8038 1b95 02000000 		.4byte	.LBB119
 8039 1b99 10000000 		.4byte	.LBE119-.LBB119
 8040 1b9d 22       		.uleb128 0x22
 8041 1b9e 5D100000 		.4byte	0x105d
 8042 1ba2 00       		.byte	0
 8043 1ba3 00       		.byte	0
 8044 1ba4 24       		.uleb128 0x24
 8045 1ba5 1E000000 		.4byte	.LVL146
 8046 1ba9 09300000 		.4byte	0x3009
 8047 1bad 00       		.byte	0
 8048 1bae 32       		.uleb128 0x32
 8049 1baf AC180000 		.4byte	.LASF463
 8050 1bb3 01       		.byte	0x1
 8051 1bb4 F007     		.2byte	0x7f0
 8052 1bb6 00000000 		.4byte	.LFB677
 8053 1bba 14000000 		.4byte	.LFE677-.LFB677
 8054 1bbe 01       		.uleb128 0x1
 8055 1bbf 9C       		.byte	0x9c
 8056 1bc0 2C       		.uleb128 0x2c
 8057 1bc1 87210000 		.4byte	.LASF424
 8058 1bc5 01       		.byte	0x1
 8059 1bc6 A708     		.2byte	0x8a7
 8060 1bc8 EB0D0000 		.4byte	0xdeb
 8061 1bcc 00000000 		.4byte	.LFB679
 8062 1bd0 0C000000 		.4byte	.LFE679-.LFB679
 8063 1bd4 01       		.uleb128 0x1
 8064 1bd5 9C       		.byte	0x9c
 8065 1bd6 E91B0000 		.4byte	0x1be9
 8066 1bda 28       		.uleb128 0x28
 8067 1bdb 75100000 		.4byte	.LASF425
 8068 1bdf 01       		.byte	0x1
 8069 1be0 A908     		.2byte	0x8a9
 8070 1be2 EB0D0000 		.4byte	0xdeb
 8071 1be6 01       		.uleb128 0x1
 8072 1be7 50       		.byte	0x50
 8073 1be8 00       		.byte	0
 8074 1be9 2C       		.uleb128 0x2c
 8075 1bea 34010000 		.4byte	.LASF426
 8076 1bee 01       		.byte	0x1
 8077 1bef B608     		.2byte	0x8b6
 8078 1bf1 EB0D0000 		.4byte	0xdeb
 8079 1bf5 00000000 		.4byte	.LFB680
 8080 1bf9 14000000 		.4byte	.LFE680-.LFB680
 8081 1bfd 01       		.uleb128 0x1
 8082 1bfe 9C       		.byte	0x9c
 8083 1bff 281C0000 		.4byte	0x1c28
 8084 1c03 28       		.uleb128 0x28
 8085 1c04 DD090000 		.4byte	.LASF382
 8086 1c08 01       		.byte	0x1
 8087 1c09 B808     		.2byte	0x8b8
 8088 1c0b EB0D0000 		.4byte	0xdeb
 8089 1c0f 01       		.uleb128 0x1
 8090 1c10 50       		.byte	0x50
 8091 1c11 33       		.uleb128 0x33
 8092 1c12 C2140000 		.4byte	.LASF421
 8093 1c16 01       		.byte	0x1
 8094 1c17 B908     		.2byte	0x8b9
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 245


 8095 1c19 E00D0000 		.4byte	0xde0
 8096 1c1d 00       		.byte	0
 8097 1c1e 24       		.uleb128 0x24
 8098 1c1f 06000000 		.4byte	.LVL148
 8099 1c23 E72F0000 		.4byte	0x2fe7
 8100 1c27 00       		.byte	0
 8101 1c28 34       		.uleb128 0x34
 8102 1c29 65030000 		.4byte	.LASF546
 8103 1c2d 01       		.byte	0x1
 8104 1c2e D508     		.2byte	0x8d5
 8105 1c30 E00D0000 		.4byte	0xde0
 8106 1c34 00000000 		.4byte	.LFB681
 8107 1c38 0C000000 		.4byte	.LFE681-.LFB681
 8108 1c3c 01       		.uleb128 0x1
 8109 1c3d 9C       		.byte	0x9c
 8110 1c3e 2C       		.uleb128 0x2c
 8111 1c3f 3E120000 		.4byte	.LASF427
 8112 1c43 01       		.byte	0x1
 8113 1c44 DD08     		.2byte	0x8dd
 8114 1c46 BD000000 		.4byte	0xbd
 8115 1c4a 00000000 		.4byte	.LFB682
 8116 1c4e 28000000 		.4byte	.LFE682-.LFB682
 8117 1c52 01       		.uleb128 0x1
 8118 1c53 9C       		.byte	0x9c
 8119 1c54 991C0000 		.4byte	0x1c99
 8120 1c58 1E       		.uleb128 0x1e
 8121 1c59 9B240000 		.4byte	.LASF428
 8122 1c5d 01       		.byte	0x1
 8123 1c5e DD08     		.2byte	0x8dd
 8124 1c60 E30E0000 		.4byte	0xee3
 8125 1c64 7C060000 		.4byte	.LLST47
 8126 1c68 1F       		.uleb128 0x1f
 8127 1c69 E02A0000 		.4byte	.LASF383
 8128 1c6d 01       		.byte	0x1
 8129 1c6e DF08     		.2byte	0x8df
 8130 1c70 4F110000 		.4byte	0x114f
 8131 1c74 8F060000 		.4byte	.LLST48
 8132 1c78 20       		.uleb128 0x20
 8133 1c79 51100000 		.4byte	0x1051
 8134 1c7d 0C000000 		.4byte	.LBB120
 8135 1c81 12000000 		.4byte	.LBE120-.LBB120
 8136 1c85 01       		.byte	0x1
 8137 1c86 E408     		.2byte	0x8e4
 8138 1c88 21       		.uleb128 0x21
 8139 1c89 0C000000 		.4byte	.LBB121
 8140 1c8d 12000000 		.4byte	.LBE121-.LBB121
 8141 1c91 22       		.uleb128 0x22
 8142 1c92 5D100000 		.4byte	0x105d
 8143 1c96 00       		.byte	0
 8144 1c97 00       		.byte	0
 8145 1c98 00       		.byte	0
 8146 1c99 2C       		.uleb128 0x2c
 8147 1c9a C71E0000 		.4byte	.LASF429
 8148 1c9e 01       		.byte	0x1
 8149 1c9f 1D0A     		.2byte	0xa1d
 8150 1ca1 D50D0000 		.4byte	0xdd5
 8151 1ca5 00000000 		.4byte	.LFB683
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 246


 8152 1ca9 FC000000 		.4byte	.LFE683-.LFB683
 8153 1cad 01       		.uleb128 0x1
 8154 1cae 9C       		.byte	0x9c
 8155 1caf 7D1D0000 		.4byte	0x1d7d
 8156 1cb3 1F       		.uleb128 0x1f
 8157 1cb4 E02A0000 		.4byte	.LASF383
 8158 1cb8 01       		.byte	0x1
 8159 1cb9 1F0A     		.2byte	0xa1f
 8160 1cbb 4F110000 		.4byte	0x114f
 8161 1cbf AD060000 		.4byte	.LLST49
 8162 1cc3 1F       		.uleb128 0x1f
 8163 1cc4 CA2A0000 		.4byte	.LASF337
 8164 1cc8 01       		.byte	0x1
 8165 1cc9 200A     		.2byte	0xa20
 8166 1ccb EB0D0000 		.4byte	0xdeb
 8167 1ccf CB060000 		.4byte	.LLST50
 8168 1cd3 1F       		.uleb128 0x1f
 8169 1cd4 E1200000 		.4byte	.LASF430
 8170 1cd8 01       		.byte	0x1
 8171 1cd9 210A     		.2byte	0xa21
 8172 1cdb D50D0000 		.4byte	0xdd5
 8173 1cdf DE060000 		.4byte	.LLST51
 8174 1ce3 35       		.uleb128 0x35
 8175 1ce4 00000000 		.4byte	.Ldebug_ranges0+0
 8176 1ce8 1F       		.uleb128 0x1f
 8177 1ce9 A41A0000 		.4byte	.LASF404
 8178 1ced 01       		.byte	0x1
 8179 1cee 2B0A     		.2byte	0xa2b
 8180 1cf0 EE140000 		.4byte	0x14ee
 8181 1cf4 36070000 		.4byte	.LLST52
 8182 1cf8 2D       		.uleb128 0x2d
 8183 1cf9 1C000000 		.4byte	.LBB123
 8184 1cfd 34000000 		.4byte	.LBE123-.LBB123
 8185 1d01 431D0000 		.4byte	0x1d43
 8186 1d05 1F       		.uleb128 0x1f
 8187 1d06 3A220000 		.4byte	.LASF431
 8188 1d0a 01       		.byte	0x1
 8189 1d0b 330A     		.2byte	0xa33
 8190 1d0d 7D1D0000 		.4byte	0x1d7d
 8191 1d11 49070000 		.4byte	.LLST53
 8192 1d15 2F       		.uleb128 0x2f
 8193 1d16 51100000 		.4byte	0x1051
 8194 1d1a 22000000 		.4byte	.LBB124
 8195 1d1e 12000000 		.4byte	.LBE124-.LBB124
 8196 1d22 01       		.byte	0x1
 8197 1d23 330A     		.2byte	0xa33
 8198 1d25 391D0000 		.4byte	0x1d39
 8199 1d29 21       		.uleb128 0x21
 8200 1d2a 22000000 		.4byte	.LBB125
 8201 1d2e 12000000 		.4byte	.LBE125-.LBB125
 8202 1d32 22       		.uleb128 0x22
 8203 1d33 5D100000 		.4byte	0x105d
 8204 1d37 00       		.byte	0
 8205 1d38 00       		.byte	0
 8206 1d39 24       		.uleb128 0x24
 8207 1d3a 50000000 		.4byte	.LVL160
 8208 1d3e 28110000 		.4byte	0x1128
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 247


 8209 1d42 00       		.byte	0
 8210 1d43 2A       		.uleb128 0x2a
 8211 1d44 9A000000 		.4byte	.LVL167
 8212 1d48 C42F0000 		.4byte	0x2fc4
 8213 1d4c 571D0000 		.4byte	0x1d57
 8214 1d50 26       		.uleb128 0x26
 8215 1d51 01       		.uleb128 0x1
 8216 1d52 50       		.byte	0x50
 8217 1d53 02       		.uleb128 0x2
 8218 1d54 78       		.byte	0x78
 8219 1d55 00       		.sleb128 0
 8220 1d56 00       		.byte	0
 8221 1d57 2A       		.uleb128 0x2a
 8222 1d58 A6000000 		.4byte	.LVL168
 8223 1d5c C42F0000 		.4byte	0x2fc4
 8224 1d60 6B1D0000 		.4byte	0x1d6b
 8225 1d64 26       		.uleb128 0x26
 8226 1d65 01       		.uleb128 0x1
 8227 1d66 50       		.byte	0x50
 8228 1d67 02       		.uleb128 0x2
 8229 1d68 75       		.byte	0x75
 8230 1d69 18       		.sleb128 24
 8231 1d6a 00       		.byte	0
 8232 1d6b 25       		.uleb128 0x25
 8233 1d6c CC000000 		.4byte	.LVL169
 8234 1d70 AD2F0000 		.4byte	0x2fad
 8235 1d74 26       		.uleb128 0x26
 8236 1d75 01       		.uleb128 0x1
 8237 1d76 51       		.byte	0x51
 8238 1d77 02       		.uleb128 0x2
 8239 1d78 78       		.byte	0x78
 8240 1d79 00       		.sleb128 0
 8241 1d7a 00       		.byte	0
 8242 1d7b 00       		.byte	0
 8243 1d7c 00       		.byte	0
 8244 1d7d 06       		.uleb128 0x6
 8245 1d7e 04       		.byte	0x4
 8246 1d7f D80E0000 		.4byte	0xed8
 8247 1d83 2C       		.uleb128 0x2c
 8248 1d84 8E190000 		.4byte	.LASF432
 8249 1d88 01       		.byte	0x1
 8250 1d89 3908     		.2byte	0x839
 8251 1d8b D50D0000 		.4byte	0xdd5
 8252 1d8f 00000000 		.4byte	.LFB678
 8253 1d93 F0000000 		.4byte	.LFE678-.LFB678
 8254 1d97 01       		.uleb128 0x1
 8255 1d98 9C       		.byte	0x9c
 8256 1d99 601E0000 		.4byte	0x1e60
 8257 1d9d 1F       		.uleb128 0x1f
 8258 1d9e E02A0000 		.4byte	.LASF383
 8259 1da2 01       		.byte	0x1
 8260 1da3 3B08     		.2byte	0x83b
 8261 1da5 4F110000 		.4byte	0x114f
 8262 1da9 6B070000 		.4byte	.LLST54
 8263 1dad 1F       		.uleb128 0x1f
 8264 1dae B5210000 		.4byte	.LASF433
 8265 1db2 01       		.byte	0x1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 248


 8266 1db3 3C08     		.2byte	0x83c
 8267 1db5 D50D0000 		.4byte	0xdd5
 8268 1db9 AD070000 		.4byte	.LLST55
 8269 1dbd 2F       		.uleb128 0x2f
 8270 1dbe 51100000 		.4byte	0x1051
 8271 1dc2 08000000 		.4byte	.LBB127
 8272 1dc6 12000000 		.4byte	.LBE127-.LBB127
 8273 1dca 01       		.byte	0x1
 8274 1dcb 4008     		.2byte	0x840
 8275 1dcd E11D0000 		.4byte	0x1de1
 8276 1dd1 21       		.uleb128 0x21
 8277 1dd2 08000000 		.4byte	.LBB128
 8278 1dd6 12000000 		.4byte	.LBE128-.LBB128
 8279 1dda 22       		.uleb128 0x22
 8280 1ddb 5D100000 		.4byte	0x105d
 8281 1ddf 00       		.byte	0
 8282 1de0 00       		.byte	0
 8283 1de1 2D       		.uleb128 0x2d
 8284 1de2 9C000000 		.4byte	.LBB129
 8285 1de6 22000000 		.4byte	.LBE129-.LBB129
 8286 1dea 081E0000 		.4byte	0x1e08
 8287 1dee 1F       		.uleb128 0x1f
 8288 1def 00000000 		.4byte	.LASF434
 8289 1df3 01       		.byte	0x1
 8290 1df4 7408     		.2byte	0x874
 8291 1df6 E00D0000 		.4byte	0xde0
 8292 1dfa EF070000 		.4byte	.LLST56
 8293 1dfe 24       		.uleb128 0x24
 8294 1dff A8000000 		.4byte	.LVL186
 8295 1e03 991C0000 		.4byte	0x1c99
 8296 1e07 00       		.byte	0
 8297 1e08 24       		.uleb128 0x24
 8298 1e09 20000000 		.4byte	.LVL176
 8299 1e0d A22F0000 		.4byte	0x2fa2
 8300 1e11 2A       		.uleb128 0x2a
 8301 1e12 4E000000 		.4byte	.LVL179
 8302 1e16 C42F0000 		.4byte	0x2fc4
 8303 1e1a 251E0000 		.4byte	0x1e25
 8304 1e1e 26       		.uleb128 0x26
 8305 1e1f 01       		.uleb128 0x1
 8306 1e20 50       		.byte	0x50
 8307 1e21 02       		.uleb128 0x2
 8308 1e22 74       		.byte	0x74
 8309 1e23 18       		.sleb128 24
 8310 1e24 00       		.byte	0
 8311 1e25 2A       		.uleb128 0x2a
 8312 1e26 56000000 		.4byte	.LVL180
 8313 1e2a C42F0000 		.4byte	0x2fc4
 8314 1e2e 391E0000 		.4byte	0x1e39
 8315 1e32 26       		.uleb128 0x26
 8316 1e33 01       		.uleb128 0x1
 8317 1e34 50       		.byte	0x50
 8318 1e35 02       		.uleb128 0x2
 8319 1e36 76       		.byte	0x76
 8320 1e37 00       		.sleb128 0
 8321 1e38 00       		.byte	0
 8322 1e39 2A       		.uleb128 0x2a
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 249


 8323 1e3a 78000000 		.4byte	.LVL181
 8324 1e3e AD2F0000 		.4byte	0x2fad
 8325 1e42 4D1E0000 		.4byte	0x1e4d
 8326 1e46 26       		.uleb128 0x26
 8327 1e47 01       		.uleb128 0x1
 8328 1e48 51       		.byte	0x51
 8329 1e49 02       		.uleb128 0x2
 8330 1e4a 76       		.byte	0x76
 8331 1e4b 00       		.sleb128 0
 8332 1e4c 00       		.byte	0
 8333 1e4d 24       		.uleb128 0x24
 8334 1e4e 9C000000 		.4byte	.LVL184
 8335 1e52 28110000 		.4byte	0x1128
 8336 1e56 24       		.uleb128 0x24
 8337 1e57 E4000000 		.4byte	.LVL194
 8338 1e5b B92F0000 		.4byte	0x2fb9
 8339 1e5f 00       		.byte	0
 8340 1e60 2E       		.uleb128 0x2e
 8341 1e61 BD1F0000 		.4byte	.LASF435
 8342 1e65 01       		.byte	0x1
 8343 1e66 B404     		.2byte	0x4b4
 8344 1e68 00000000 		.4byte	.LFB666
 8345 1e6c AC000000 		.4byte	.LFE666-.LFB666
 8346 1e70 01       		.uleb128 0x1
 8347 1e71 9C       		.byte	0x9c
 8348 1e72 6C1F0000 		.4byte	0x1f6c
 8349 1e76 1E       		.uleb128 0x1e
 8350 1e77 CE200000 		.4byte	.LASF436
 8351 1e7b 01       		.byte	0x1
 8352 1e7c B404     		.2byte	0x4b4
 8353 1e7e 721F0000 		.4byte	0x1f72
 8354 1e82 25080000 		.4byte	.LLST57
 8355 1e86 1E       		.uleb128 0x1e
 8356 1e87 D11C0000 		.4byte	.LASF437
 8357 1e8b 01       		.byte	0x1
 8358 1e8c B404     		.2byte	0x4b4
 8359 1e8e EE140000 		.4byte	0x14ee
 8360 1e92 51080000 		.4byte	.LLST58
 8361 1e96 1F       		.uleb128 0x1f
 8362 1e97 F1160000 		.4byte	.LASF403
 8363 1e9b 01       		.byte	0x1
 8364 1e9c B604     		.2byte	0x4b6
 8365 1e9e EB0D0000 		.4byte	0xdeb
 8366 1ea2 7D080000 		.4byte	.LLST59
 8367 1ea6 28       		.uleb128 0x28
 8368 1ea7 B5210000 		.4byte	.LASF433
 8369 1eab 01       		.byte	0x1
 8370 1eac B704     		.2byte	0x4b7
 8371 1eae D50D0000 		.4byte	0xdd5
 8372 1eb2 01       		.uleb128 0x1
 8373 1eb3 50       		.byte	0x50
 8374 1eb4 1F       		.uleb128 0x1f
 8375 1eb5 AA1B0000 		.4byte	.LASF438
 8376 1eb9 01       		.byte	0x1
 8377 1eba B704     		.2byte	0x4b7
 8378 1ebc D50D0000 		.4byte	0xdd5
 8379 1ec0 90080000 		.4byte	.LLST60
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 250


 8380 1ec4 2F       		.uleb128 0x2f
 8381 1ec5 51100000 		.4byte	0x1051
 8382 1ec9 04000000 		.4byte	.LBB130
 8383 1ecd 14000000 		.4byte	.LBE130-.LBB130
 8384 1ed1 01       		.byte	0x1
 8385 1ed2 B904     		.2byte	0x4b9
 8386 1ed4 E81E0000 		.4byte	0x1ee8
 8387 1ed8 21       		.uleb128 0x21
 8388 1ed9 04000000 		.4byte	.LBB131
 8389 1edd 14000000 		.4byte	.LBE131-.LBB131
 8390 1ee1 22       		.uleb128 0x22
 8391 1ee2 5D100000 		.4byte	0x105d
 8392 1ee6 00       		.byte	0
 8393 1ee7 00       		.byte	0
 8394 1ee8 2F       		.uleb128 0x2f
 8395 1ee9 51100000 		.4byte	0x1051
 8396 1eed 1A000000 		.4byte	.LBB132
 8397 1ef1 12000000 		.4byte	.LBE132-.LBB132
 8398 1ef5 01       		.byte	0x1
 8399 1ef6 BA04     		.2byte	0x4ba
 8400 1ef8 0C1F0000 		.4byte	0x1f0c
 8401 1efc 21       		.uleb128 0x21
 8402 1efd 1A000000 		.4byte	.LBB133
 8403 1f01 12000000 		.4byte	.LBE133-.LBB133
 8404 1f05 22       		.uleb128 0x22
 8405 1f06 5D100000 		.4byte	0x105d
 8406 1f0a 00       		.byte	0
 8407 1f0b 00       		.byte	0
 8408 1f0c 2F       		.uleb128 0x2f
 8409 1f0d 51100000 		.4byte	0x1051
 8410 1f11 34000000 		.4byte	.LBB134
 8411 1f15 14000000 		.4byte	.LBE134-.LBB134
 8412 1f19 01       		.byte	0x1
 8413 1f1a BB04     		.2byte	0x4bb
 8414 1f1c 301F0000 		.4byte	0x1f30
 8415 1f20 21       		.uleb128 0x21
 8416 1f21 34000000 		.4byte	.LBB135
 8417 1f25 14000000 		.4byte	.LBE135-.LBB135
 8418 1f29 22       		.uleb128 0x22
 8419 1f2a 5D100000 		.4byte	0x105d
 8420 1f2e 00       		.byte	0
 8421 1f2f 00       		.byte	0
 8422 1f30 36       		.uleb128 0x36
 8423 1f31 18000000 		.4byte	.Ldebug_ranges0+0x18
 8424 1f35 591F0000 		.4byte	0x1f59
 8425 1f39 1F       		.uleb128 0x1f
 8426 1f3a A41A0000 		.4byte	.LASF404
 8427 1f3e 01       		.byte	0x1
 8428 1f3f C104     		.2byte	0x4c1
 8429 1f41 EE140000 		.4byte	0x14ee
 8430 1f45 AF080000 		.4byte	.LLST61
 8431 1f49 25       		.uleb128 0x25
 8432 1f4a 8C000000 		.4byte	.LVL206
 8433 1f4e 60140000 		.4byte	0x1460
 8434 1f52 26       		.uleb128 0x26
 8435 1f53 01       		.uleb128 0x1
 8436 1f54 51       		.byte	0x51
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 251


 8437 1f55 01       		.uleb128 0x1
 8438 1f56 30       		.byte	0x30
 8439 1f57 00       		.byte	0
 8440 1f58 00       		.byte	0
 8441 1f59 24       		.uleb128 0x24
 8442 1f5a 4C000000 		.4byte	.LVL201
 8443 1f5e AE1B0000 		.4byte	0x1bae
 8444 1f62 24       		.uleb128 0x24
 8445 1f63 90000000 		.4byte	.LVL207
 8446 1f67 831D0000 		.4byte	0x1d83
 8447 1f6b 00       		.byte	0
 8448 1f6c 06       		.uleb128 0x6
 8449 1f6d 04       		.byte	0x4
 8450 1f6e EB0D0000 		.4byte	0xdeb
 8451 1f72 07       		.uleb128 0x7
 8452 1f73 6C1F0000 		.4byte	0x1f6c
 8453 1f77 2E       		.uleb128 0x2e
 8454 1f78 E81C0000 		.4byte	.LASF439
 8455 1f7c 01       		.byte	0x1
 8456 1f7d 0805     		.2byte	0x508
 8457 1f7f 00000000 		.4byte	.LFB667
 8458 1f83 50000000 		.4byte	.LFE667-.LFB667
 8459 1f87 01       		.uleb128 0x1
 8460 1f88 9C       		.byte	0x9c
 8461 1f89 FD1F0000 		.4byte	0x1ffd
 8462 1f8d 1E       		.uleb128 0x1e
 8463 1f8e 2B130000 		.4byte	.LASF440
 8464 1f92 01       		.byte	0x1
 8465 1f93 0805     		.2byte	0x508
 8466 1f95 EE140000 		.4byte	0x14ee
 8467 1f99 C2080000 		.4byte	.LLST62
 8468 1f9d 1F       		.uleb128 0x1f
 8469 1f9e B5210000 		.4byte	.LASF433
 8470 1fa2 01       		.byte	0x1
 8471 1fa3 0A05     		.2byte	0x50a
 8472 1fa5 D50D0000 		.4byte	0xdd5
 8473 1fa9 F9080000 		.4byte	.LLST63
 8474 1fad 2F       		.uleb128 0x2f
 8475 1fae 51100000 		.4byte	0x1051
 8476 1fb2 0E000000 		.4byte	.LBB139
 8477 1fb6 12000000 		.4byte	.LBE139-.LBB139
 8478 1fba 01       		.byte	0x1
 8479 1fbb 0F05     		.2byte	0x50f
 8480 1fbd D11F0000 		.4byte	0x1fd1
 8481 1fc1 21       		.uleb128 0x21
 8482 1fc2 0E000000 		.4byte	.LBB140
 8483 1fc6 12000000 		.4byte	.LBE140-.LBB140
 8484 1fca 22       		.uleb128 0x22
 8485 1fcb 5D100000 		.4byte	0x105d
 8486 1fcf 00       		.byte	0
 8487 1fd0 00       		.byte	0
 8488 1fd1 24       		.uleb128 0x24
 8489 1fd2 24000000 		.4byte	.LVL212
 8490 1fd6 AE1B0000 		.4byte	0x1bae
 8491 1fda 2A       		.uleb128 0x2a
 8492 1fdb 2C000000 		.4byte	.LVL213
 8493 1fdf 60140000 		.4byte	0x1460
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 252


 8494 1fe3 F31F0000 		.4byte	0x1ff3
 8495 1fe7 26       		.uleb128 0x26
 8496 1fe8 01       		.uleb128 0x1
 8497 1fe9 50       		.byte	0x50
 8498 1fea 02       		.uleb128 0x2
 8499 1feb 74       		.byte	0x74
 8500 1fec 00       		.sleb128 0
 8501 1fed 26       		.uleb128 0x26
 8502 1fee 01       		.uleb128 0x1
 8503 1fef 51       		.byte	0x51
 8504 1ff0 01       		.uleb128 0x1
 8505 1ff1 30       		.byte	0x30
 8506 1ff2 00       		.byte	0
 8507 1ff3 24       		.uleb128 0x24
 8508 1ff4 30000000 		.4byte	.LVL214
 8509 1ff8 831D0000 		.4byte	0x1d83
 8510 1ffc 00       		.byte	0
 8511 1ffd 2E       		.uleb128 0x2e
 8512 1ffe 230F0000 		.4byte	.LASF441
 8513 2002 01       		.byte	0x1
 8514 2003 230B     		.2byte	0xb23
 8515 2005 00000000 		.4byte	.LFB684
 8516 2009 C8000000 		.4byte	.LFE684-.LFB684
 8517 200d 01       		.uleb128 0x1
 8518 200e 9C       		.byte	0x9c
 8519 200f AC200000 		.4byte	0x20ac
 8520 2013 2D       		.uleb128 0x2d
 8521 2014 1C000000 		.4byte	.LBB141
 8522 2018 36000000 		.4byte	.LBE141-.LBB141
 8523 201c 4B200000 		.4byte	0x204b
 8524 2020 1F       		.uleb128 0x1f
 8525 2021 A20D0000 		.4byte	.LASF442
 8526 2025 01       		.byte	0x1
 8527 2026 4D0B     		.2byte	0xb4d
 8528 2028 B2200000 		.4byte	0x20b2
 8529 202c 2F090000 		.4byte	.LLST64
 8530 2030 37       		.uleb128 0x37
 8531 2031 FE0E0000 		.4byte	.LASF443
 8532 2035 01       		.byte	0x1
 8533 2036 4E0B     		.2byte	0xb4e
 8534 2038 A5120000 		.4byte	0x12a5
 8535 203c A5CB96AD 		.sleb128 -1515870811
 8535      7A
 8536 2041 24       		.uleb128 0x24
 8537 2042 52000000 		.4byte	.LVL219
 8538 2046 14300000 		.4byte	0x3014
 8539 204a 00       		.byte	0
 8540 204b 21       		.uleb128 0x21
 8541 204c 52000000 		.4byte	.LBB142
 8542 2050 76000000 		.4byte	.LBE142-.LBB142
 8543 2054 1F       		.uleb128 0x1f
 8544 2055 6E1D0000 		.4byte	.LASF444
 8545 2059 01       		.byte	0x1
 8546 205a 5B0B     		.2byte	0xb5b
 8547 205c E00D0000 		.4byte	0xde0
 8548 2060 42090000 		.4byte	.LLST65
 8549 2064 2F       		.uleb128 0x2f
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 253


 8550 2065 51100000 		.4byte	0x1051
 8551 2069 5C000000 		.4byte	.LBB143
 8552 206d 12000000 		.4byte	.LBE143-.LBB143
 8553 2071 01       		.byte	0x1
 8554 2072 5B0B     		.2byte	0xb5b
 8555 2074 88200000 		.4byte	0x2088
 8556 2078 21       		.uleb128 0x21
 8557 2079 5C000000 		.4byte	.LBB144
 8558 207d 12000000 		.4byte	.LBE144-.LBB144
 8559 2081 22       		.uleb128 0x22
 8560 2082 5D100000 		.4byte	0x105d
 8561 2086 00       		.byte	0
 8562 2087 00       		.byte	0
 8563 2088 21       		.uleb128 0x21
 8564 2089 80000000 		.4byte	.LBB145
 8565 208d 3E000000 		.4byte	.LBE145-.LBB145
 8566 2091 28       		.uleb128 0x28
 8567 2092 810F0000 		.4byte	.LASF445
 8568 2096 01       		.byte	0x1
 8569 2097 5B0B     		.2byte	0xb5b
 8570 2099 B7200000 		.4byte	0x20b7
 8571 209d 0B       		.uleb128 0xb
 8572 209e 73       		.byte	0x73
 8573 209f 00       		.sleb128 0
 8574 20a0 44       		.byte	0x44
 8575 20a1 1E       		.byte	0x1e
 8576 20a2 03       		.byte	0x3
 8577 20a3 30000000 		.4byte	pxReadyTasksLists
 8578 20a7 22       		.byte	0x22
 8579 20a8 9F       		.byte	0x9f
 8580 20a9 00       		.byte	0
 8581 20aa 00       		.byte	0
 8582 20ab 00       		.byte	0
 8583 20ac 06       		.uleb128 0x6
 8584 20ad 04       		.byte	0x4
 8585 20ae A5120000 		.4byte	0x12a5
 8586 20b2 07       		.uleb128 0x7
 8587 20b3 AC200000 		.4byte	0x20ac
 8588 20b7 07       		.uleb128 0x7
 8589 20b8 7D1D0000 		.4byte	0x1d7d
 8590 20bc 2E       		.uleb128 0x2e
 8591 20bd FC1B0000 		.4byte	.LASF446
 8592 20c1 01       		.byte	0x1
 8593 20c2 5E06     		.2byte	0x65e
 8594 20c4 00000000 		.4byte	.LFB671
 8595 20c8 B8000000 		.4byte	.LFE671-.LFB671
 8596 20cc 01       		.uleb128 0x1
 8597 20cd 9C       		.byte	0x9c
 8598 20ce 92210000 		.4byte	0x2192
 8599 20d2 1E       		.uleb128 0x1e
 8600 20d3 1B040000 		.4byte	.LASF447
 8601 20d7 01       		.byte	0x1
 8602 20d8 5E06     		.2byte	0x65e
 8603 20da E30E0000 		.4byte	0xee3
 8604 20de 60090000 		.4byte	.LLST66
 8605 20e2 1F       		.uleb128 0x1f
 8606 20e3 E02A0000 		.4byte	.LASF383
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 254


 8607 20e7 01       		.byte	0x1
 8608 20e8 6006     		.2byte	0x660
 8609 20ea 4F110000 		.4byte	0x114f
 8610 20ee 7E090000 		.4byte	.LLST67
 8611 20f2 2F       		.uleb128 0x2f
 8612 20f3 51100000 		.4byte	0x1051
 8613 20f7 6E000000 		.4byte	.LBB146
 8614 20fb 12000000 		.4byte	.LBE146-.LBB146
 8615 20ff 01       		.byte	0x1
 8616 2100 A206     		.2byte	0x6a2
 8617 2102 16210000 		.4byte	0x2116
 8618 2106 21       		.uleb128 0x21
 8619 2107 6E000000 		.4byte	.LBB147
 8620 210b 12000000 		.4byte	.LBE147-.LBB147
 8621 210f 22       		.uleb128 0x22
 8622 2110 5D100000 		.4byte	0x105d
 8623 2114 00       		.byte	0
 8624 2115 00       		.byte	0
 8625 2116 24       		.uleb128 0x24
 8626 2117 08000000 		.4byte	.LVL226
 8627 211b A22F0000 		.4byte	0x2fa2
 8628 211f 2A       		.uleb128 0x2a
 8629 2120 18000000 		.4byte	.LVL228
 8630 2124 C42F0000 		.4byte	0x2fc4
 8631 2128 33210000 		.4byte	0x2133
 8632 212c 26       		.uleb128 0x26
 8633 212d 01       		.uleb128 0x1
 8634 212e 50       		.byte	0x50
 8635 212f 02       		.uleb128 0x2
 8636 2130 75       		.byte	0x75
 8637 2131 00       		.sleb128 0
 8638 2132 00       		.byte	0
 8639 2133 2A       		.uleb128 0x2a
 8640 2134 24000000 		.4byte	.LVL229
 8641 2138 C42F0000 		.4byte	0x2fc4
 8642 213c 47210000 		.4byte	0x2147
 8643 2140 26       		.uleb128 0x26
 8644 2141 01       		.uleb128 0x1
 8645 2142 50       		.byte	0x50
 8646 2143 02       		.uleb128 0x2
 8647 2144 74       		.byte	0x74
 8648 2145 18       		.sleb128 24
 8649 2146 00       		.byte	0
 8650 2147 2A       		.uleb128 0x2a
 8651 2148 2C000000 		.4byte	.LVL230
 8652 214c AD2F0000 		.4byte	0x2fad
 8653 2150 64210000 		.4byte	0x2164
 8654 2154 26       		.uleb128 0x26
 8655 2155 01       		.uleb128 0x1
 8656 2156 50       		.byte	0x50
 8657 2157 05       		.uleb128 0x5
 8658 2158 03       		.byte	0x3
 8659 2159 00000000 		.4byte	.LANCHOR0
 8660 215d 26       		.uleb128 0x26
 8661 215e 01       		.uleb128 0x1
 8662 215f 51       		.byte	0x51
 8663 2160 02       		.uleb128 0x2
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 255


 8664 2161 75       		.byte	0x75
 8665 2162 00       		.sleb128 0
 8666 2163 00       		.byte	0
 8667 2164 24       		.uleb128 0x24
 8668 2165 40000000 		.4byte	.LVL231
 8669 2169 B92F0000 		.4byte	0x2fb9
 8670 216d 24       		.uleb128 0x24
 8671 216e 4C000000 		.4byte	.LVL232
 8672 2172 A22F0000 		.4byte	0x2fa2
 8673 2176 24       		.uleb128 0x24
 8674 2177 50000000 		.4byte	.LVL233
 8675 217b 28110000 		.4byte	0x1128
 8676 217f 24       		.uleb128 0x24
 8677 2180 54000000 		.4byte	.LVL234
 8678 2184 B92F0000 		.4byte	0x2fb9
 8679 2188 24       		.uleb128 0x24
 8680 2189 AC000000 		.4byte	.LVL238
 8681 218d FD1F0000 		.4byte	0x1ffd
 8682 2191 00       		.byte	0
 8683 2192 2E       		.uleb128 0x2e
 8684 2193 35140000 		.4byte	.LASF448
 8685 2197 01       		.byte	0x1
 8686 2198 690B     		.2byte	0xb69
 8687 219a 00000000 		.4byte	.LFB685
 8688 219e 34000000 		.4byte	.LFE685-.LFB685
 8689 21a2 01       		.uleb128 0x1
 8690 21a3 9C       		.byte	0x9c
 8691 21a4 0B220000 		.4byte	0x220b
 8692 21a8 1E       		.uleb128 0x1e
 8693 21a9 E9050000 		.4byte	.LASF449
 8694 21ad 01       		.byte	0x1
 8695 21ae 690B     		.2byte	0xb69
 8696 21b0 B7200000 		.4byte	0x20b7
 8697 21b4 91090000 		.4byte	.LLST68
 8698 21b8 1E       		.uleb128 0x1e
 8699 21b9 78190000 		.4byte	.LASF401
 8700 21bd 01       		.byte	0x1
 8701 21be 690B     		.2byte	0xb69
 8702 21c0 EE140000 		.4byte	0x14ee
 8703 21c4 B2090000 		.4byte	.LLST69
 8704 21c8 2F       		.uleb128 0x2f
 8705 21c9 51100000 		.4byte	0x1051
 8706 21cd 02000000 		.4byte	.LBB148
 8707 21d1 12000000 		.4byte	.LBE148-.LBB148
 8708 21d5 01       		.byte	0x1
 8709 21d6 6B0B     		.2byte	0xb6b
 8710 21d8 EC210000 		.4byte	0x21ec
 8711 21dc 21       		.uleb128 0x21
 8712 21dd 02000000 		.4byte	.LBB149
 8713 21e1 12000000 		.4byte	.LBE149-.LBB149
 8714 21e5 22       		.uleb128 0x22
 8715 21e6 5D100000 		.4byte	0x105d
 8716 21ea 00       		.byte	0
 8717 21eb 00       		.byte	0
 8718 21ec 24       		.uleb128 0x24
 8719 21ed 24000000 		.4byte	.LVL243
 8720 21f1 D02F0000 		.4byte	0x2fd0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 256


 8721 21f5 25       		.uleb128 0x25
 8722 21f6 2C000000 		.4byte	.LVL244
 8723 21fa 60140000 		.4byte	0x1460
 8724 21fe 26       		.uleb128 0x26
 8725 21ff 01       		.uleb128 0x1
 8726 2200 50       		.byte	0x50
 8727 2201 02       		.uleb128 0x2
 8728 2202 74       		.byte	0x74
 8729 2203 00       		.sleb128 0
 8730 2204 26       		.uleb128 0x26
 8731 2205 01       		.uleb128 0x1
 8732 2206 51       		.byte	0x51
 8733 2207 01       		.uleb128 0x1
 8734 2208 31       		.byte	0x31
 8735 2209 00       		.byte	0
 8736 220a 00       		.byte	0
 8737 220b 2E       		.uleb128 0x2e
 8738 220c C1010000 		.4byte	.LASF450
 8739 2210 01       		.byte	0x1
 8740 2211 7A0B     		.2byte	0xb7a
 8741 2213 00000000 		.4byte	.LFB686
 8742 2217 5C000000 		.4byte	.LFE686-.LFB686
 8743 221b 01       		.uleb128 0x1
 8744 221c 9C       		.byte	0x9c
 8745 221d C4220000 		.4byte	0x22c4
 8746 2221 1E       		.uleb128 0x1e
 8747 2222 E9050000 		.4byte	.LASF449
 8748 2226 01       		.byte	0x1
 8749 2227 7A0B     		.2byte	0xb7a
 8750 2229 7D1D0000 		.4byte	0x1d7d
 8751 222d DE090000 		.4byte	.LLST70
 8752 2231 1E       		.uleb128 0x1e
 8753 2232 CA2A0000 		.4byte	.LASF337
 8754 2236 01       		.byte	0x1
 8755 2237 7A0B     		.2byte	0xb7a
 8756 2239 EE140000 		.4byte	0x14ee
 8757 223d 2E0A0000 		.4byte	.LLST71
 8758 2241 1E       		.uleb128 0x1e
 8759 2242 78190000 		.4byte	.LASF401
 8760 2246 01       		.byte	0x1
 8761 2247 7A0B     		.2byte	0xb7a
 8762 2249 EE140000 		.4byte	0x14ee
 8763 224d 5A0A0000 		.4byte	.LLST72
 8764 2251 2F       		.uleb128 0x2f
 8765 2252 51100000 		.4byte	0x1051
 8766 2256 02000000 		.4byte	.LBB150
 8767 225a 14000000 		.4byte	.LBE150-.LBB150
 8768 225e 01       		.byte	0x1
 8769 225f 7C0B     		.2byte	0xb7c
 8770 2261 75220000 		.4byte	0x2275
 8771 2265 21       		.uleb128 0x21
 8772 2266 02000000 		.4byte	.LBB151
 8773 226a 14000000 		.4byte	.LBE151-.LBB151
 8774 226e 22       		.uleb128 0x22
 8775 226f 5D100000 		.4byte	0x105d
 8776 2273 00       		.byte	0
 8777 2274 00       		.byte	0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 257


 8778 2275 2F       		.uleb128 0x2f
 8779 2276 51100000 		.4byte	0x1051
 8780 227a 1E000000 		.4byte	.LBB152
 8781 227e 12000000 		.4byte	.LBE152-.LBB152
 8782 2282 01       		.byte	0x1
 8783 2283 800B     		.2byte	0xb80
 8784 2285 99220000 		.4byte	0x2299
 8785 2289 21       		.uleb128 0x21
 8786 228a 1E000000 		.4byte	.LBB153
 8787 228e 12000000 		.4byte	.LBE153-.LBB153
 8788 2292 22       		.uleb128 0x22
 8789 2293 5D100000 		.4byte	0x105d
 8790 2297 00       		.byte	0
 8791 2298 00       		.byte	0
 8792 2299 2A       		.uleb128 0x2a
 8793 229a 4E000000 		.4byte	.LVL255
 8794 229e AD2F0000 		.4byte	0x2fad
 8795 22a2 AE220000 		.4byte	0x22ae
 8796 22a6 26       		.uleb128 0x26
 8797 22a7 01       		.uleb128 0x1
 8798 22a8 50       		.byte	0x50
 8799 22a9 03       		.uleb128 0x3
 8800 22aa F3       		.byte	0xf3
 8801 22ab 01       		.uleb128 0x1
 8802 22ac 50       		.byte	0x50
 8803 22ad 00       		.byte	0
 8804 22ae 25       		.uleb128 0x25
 8805 22af 56000000 		.4byte	.LVL256
 8806 22b3 60140000 		.4byte	0x1460
 8807 22b7 26       		.uleb128 0x26
 8808 22b8 01       		.uleb128 0x1
 8809 22b9 50       		.byte	0x50
 8810 22ba 02       		.uleb128 0x2
 8811 22bb 74       		.byte	0x74
 8812 22bc 00       		.sleb128 0
 8813 22bd 26       		.uleb128 0x26
 8814 22be 01       		.uleb128 0x1
 8815 22bf 51       		.byte	0x51
 8816 22c0 01       		.uleb128 0x1
 8817 22c1 31       		.byte	0x31
 8818 22c2 00       		.byte	0
 8819 22c3 00       		.byte	0
 8820 22c4 2E       		.uleb128 0x2e
 8821 22c5 AA060000 		.4byte	.LASF451
 8822 22c9 01       		.byte	0x1
 8823 22ca 940B     		.2byte	0xb94
 8824 22cc 00000000 		.4byte	.LFB687
 8825 22d0 3C000000 		.4byte	.LFE687-.LFB687
 8826 22d4 01       		.uleb128 0x1
 8827 22d5 9C       		.byte	0x9c
 8828 22d6 4E230000 		.4byte	0x234e
 8829 22da 1E       		.uleb128 0x1e
 8830 22db E9050000 		.4byte	.LASF449
 8831 22df 01       		.byte	0x1
 8832 22e0 940B     		.2byte	0xb94
 8833 22e2 B7200000 		.4byte	0x20b7
 8834 22e6 860A0000 		.4byte	.LLST73
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 258


 8835 22ea 1E       		.uleb128 0x1e
 8836 22eb 78190000 		.4byte	.LASF401
 8837 22ef 01       		.byte	0x1
 8838 22f0 940B     		.2byte	0xb94
 8839 22f2 EB0D0000 		.4byte	0xdeb
 8840 22f6 A70A0000 		.4byte	.LLST74
 8841 22fa 1E       		.uleb128 0x1e
 8842 22fb 880B0000 		.4byte	.LASF452
 8843 22ff 01       		.byte	0x1
 8844 2300 940B     		.2byte	0xb94
 8845 2302 E9140000 		.4byte	0x14e9
 8846 2306 C50A0000 		.4byte	.LLST75
 8847 230a 2F       		.uleb128 0x2f
 8848 230b 51100000 		.4byte	0x1051
 8849 230f 04000000 		.4byte	.LBB154
 8850 2313 16000000 		.4byte	.LBE154-.LBB154
 8851 2317 01       		.byte	0x1
 8852 2318 960B     		.2byte	0xb96
 8853 231a 2E230000 		.4byte	0x232e
 8854 231e 21       		.uleb128 0x21
 8855 231f 04000000 		.4byte	.LBB155
 8856 2323 16000000 		.4byte	.LBE155-.LBB155
 8857 2327 22       		.uleb128 0x22
 8858 2328 5D100000 		.4byte	0x105d
 8859 232c 00       		.byte	0
 8860 232d 00       		.byte	0
 8861 232e 24       		.uleb128 0x24
 8862 232f 26000000 		.4byte	.LVL262
 8863 2333 AD2F0000 		.4byte	0x2fad
 8864 2337 25       		.uleb128 0x25
 8865 2338 34000000 		.4byte	.LVL264
 8866 233c 60140000 		.4byte	0x1460
 8867 2340 26       		.uleb128 0x26
 8868 2341 01       		.uleb128 0x1
 8869 2342 50       		.byte	0x50
 8870 2343 02       		.uleb128 0x2
 8871 2344 74       		.byte	0x74
 8872 2345 00       		.sleb128 0
 8873 2346 26       		.uleb128 0x26
 8874 2347 01       		.uleb128 0x1
 8875 2348 51       		.byte	0x51
 8876 2349 02       		.uleb128 0x2
 8877 234a 75       		.byte	0x75
 8878 234b 00       		.sleb128 0
 8879 234c 00       		.byte	0
 8880 234d 00       		.byte	0
 8881 234e 2C       		.uleb128 0x2c
 8882 234f 0C1A0000 		.4byte	.LASF453
 8883 2353 01       		.byte	0x1
 8884 2354 B30B     		.2byte	0xbb3
 8885 2356 D50D0000 		.4byte	0xdd5
 8886 235a 00000000 		.4byte	.LFB688
 8887 235e 88000000 		.4byte	.LFE688-.LFB688
 8888 2362 01       		.uleb128 0x1
 8889 2363 9C       		.byte	0x9c
 8890 2364 12240000 		.4byte	0x2412
 8891 2368 1E       		.uleb128 0x1e
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 259


 8892 2369 E9050000 		.4byte	.LASF449
 8893 236d 01       		.byte	0x1
 8894 236e B30B     		.2byte	0xbb3
 8895 2370 1D240000 		.4byte	0x241d
 8896 2374 F10A0000 		.4byte	.LLST76
 8897 2378 1F       		.uleb128 0x1f
 8898 2379 BC180000 		.4byte	.LASF454
 8899 237d 01       		.byte	0x1
 8900 237e B50B     		.2byte	0xbb5
 8901 2380 4F110000 		.4byte	0x114f
 8902 2384 120B0000 		.4byte	.LLST77
 8903 2388 1F       		.uleb128 0x1f
 8904 2389 DD090000 		.4byte	.LASF382
 8905 238d 01       		.byte	0x1
 8906 238e B60B     		.2byte	0xbb6
 8907 2390 D50D0000 		.4byte	0xdd5
 8908 2394 250B0000 		.4byte	.LLST78
 8909 2398 2F       		.uleb128 0x2f
 8910 2399 51100000 		.4byte	0x1051
 8911 239d 08000000 		.4byte	.LBB156
 8912 23a1 12000000 		.4byte	.LBE156-.LBB156
 8913 23a5 01       		.byte	0x1
 8914 23a6 C60B     		.2byte	0xbc6
 8915 23a8 BC230000 		.4byte	0x23bc
 8916 23ac 21       		.uleb128 0x21
 8917 23ad 08000000 		.4byte	.LBB157
 8918 23b1 12000000 		.4byte	.LBE157-.LBB157
 8919 23b5 22       		.uleb128 0x22
 8920 23b6 5D100000 		.4byte	0x105d
 8921 23ba 00       		.byte	0
 8922 23bb 00       		.byte	0
 8923 23bc 2A       		.uleb128 0x2a
 8924 23bd 24000000 		.4byte	.LVL270
 8925 23c1 C42F0000 		.4byte	0x2fc4
 8926 23c5 D0230000 		.4byte	0x23d0
 8927 23c9 26       		.uleb128 0x26
 8928 23ca 01       		.uleb128 0x1
 8929 23cb 50       		.byte	0x50
 8930 23cc 02       		.uleb128 0x2
 8931 23cd 75       		.byte	0x75
 8932 23ce 00       		.sleb128 0
 8933 23cf 00       		.byte	0
 8934 23d0 2A       		.uleb128 0x2a
 8935 23d1 34000000 		.4byte	.LVL271
 8936 23d5 C42F0000 		.4byte	0x2fc4
 8937 23d9 E4230000 		.4byte	0x23e4
 8938 23dd 26       		.uleb128 0x26
 8939 23de 01       		.uleb128 0x1
 8940 23df 50       		.byte	0x50
 8941 23e0 02       		.uleb128 0x2
 8942 23e1 75       		.byte	0x75
 8943 23e2 00       		.sleb128 0
 8944 23e3 00       		.byte	0
 8945 23e4 2A       		.uleb128 0x2a
 8946 23e5 56000000 		.4byte	.LVL272
 8947 23e9 AD2F0000 		.4byte	0x2fad
 8948 23ed F8230000 		.4byte	0x23f8
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 260


 8949 23f1 26       		.uleb128 0x26
 8950 23f2 01       		.uleb128 0x1
 8951 23f3 51       		.byte	0x51
 8952 23f4 02       		.uleb128 0x2
 8953 23f5 75       		.byte	0x75
 8954 23f6 00       		.sleb128 0
 8955 23f7 00       		.byte	0
 8956 23f8 25       		.uleb128 0x25
 8957 23f9 60000000 		.4byte	.LVL273
 8958 23fd AD2F0000 		.4byte	0x2fad
 8959 2401 26       		.uleb128 0x26
 8960 2402 01       		.uleb128 0x1
 8961 2403 50       		.byte	0x50
 8962 2404 05       		.uleb128 0x5
 8963 2405 03       		.byte	0x3
 8964 2406 14000000 		.4byte	.LANCHOR0+20
 8965 240a 26       		.uleb128 0x26
 8966 240b 01       		.uleb128 0x1
 8967 240c 51       		.byte	0x51
 8968 240d 02       		.uleb128 0x2
 8969 240e 75       		.byte	0x75
 8970 240f 00       		.sleb128 0
 8971 2410 00       		.byte	0
 8972 2411 00       		.byte	0
 8973 2412 06       		.uleb128 0x6
 8974 2413 04       		.byte	0x4
 8975 2414 18240000 		.4byte	0x2418
 8976 2418 07       		.uleb128 0x7
 8977 2419 D80E0000 		.4byte	0xed8
 8978 241d 07       		.uleb128 0x7
 8979 241e 12240000 		.4byte	0x2412
 8980 2422 2E       		.uleb128 0x2e
 8981 2423 332B0000 		.4byte	.LASF455
 8982 2427 01       		.byte	0x1
 8983 2428 F70B     		.2byte	0xbf7
 8984 242a 00000000 		.4byte	.LFB689
 8985 242e 84000000 		.4byte	.LFE689-.LFB689
 8986 2432 01       		.uleb128 0x1
 8987 2433 9C       		.byte	0x9c
 8988 2434 DE240000 		.4byte	0x24de
 8989 2438 1E       		.uleb128 0x1e
 8990 2439 EE150000 		.4byte	.LASF456
 8991 243d 01       		.byte	0x1
 8992 243e F70B     		.2byte	0xbf7
 8993 2440 D20E0000 		.4byte	0xed2
 8994 2444 440B0000 		.4byte	.LLST79
 8995 2448 1E       		.uleb128 0x1e
 8996 2449 CA2A0000 		.4byte	.LASF337
 8997 244d 01       		.byte	0x1
 8998 244e F70B     		.2byte	0xbf7
 8999 2450 EE140000 		.4byte	0x14ee
 9000 2454 650B0000 		.4byte	.LLST80
 9001 2458 1F       		.uleb128 0x1f
 9002 2459 BC180000 		.4byte	.LASF454
 9003 245d 01       		.byte	0x1
 9004 245e F90B     		.2byte	0xbf9
 9005 2460 4F110000 		.4byte	0x114f
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 261


 9006 2464 860B0000 		.4byte	.LLST81
 9007 2468 2F       		.uleb128 0x2f
 9008 2469 51100000 		.4byte	0x1051
 9009 246d 08000000 		.4byte	.LBB158
 9010 2471 12000000 		.4byte	.LBE158-.LBB158
 9011 2475 01       		.byte	0x1
 9012 2476 FD0B     		.2byte	0xbfd
 9013 2478 8C240000 		.4byte	0x248c
 9014 247c 21       		.uleb128 0x21
 9015 247d 08000000 		.4byte	.LBB159
 9016 2481 12000000 		.4byte	.LBE159-.LBB159
 9017 2485 22       		.uleb128 0x22
 9018 2486 5D100000 		.4byte	0x105d
 9019 248a 00       		.byte	0
 9020 248b 00       		.byte	0
 9021 248c 2F       		.uleb128 0x2f
 9022 248d 51100000 		.4byte	0x1051
 9023 2491 26000000 		.4byte	.LBB160
 9024 2495 12000000 		.4byte	.LBE160-.LBB160
 9025 2499 01       		.byte	0x1
 9026 249a 050C     		.2byte	0xc05
 9027 249c B0240000 		.4byte	0x24b0
 9028 24a0 21       		.uleb128 0x21
 9029 24a1 26000000 		.4byte	.LBB161
 9030 24a5 12000000 		.4byte	.LBE161-.LBB161
 9031 24a9 22       		.uleb128 0x22
 9032 24aa 5D100000 		.4byte	0x105d
 9033 24ae 00       		.byte	0
 9034 24af 00       		.byte	0
 9035 24b0 24       		.uleb128 0x24
 9036 24b1 3C000000 		.4byte	.LVL282
 9037 24b5 C42F0000 		.4byte	0x2fc4
 9038 24b9 2A       		.uleb128 0x2a
 9039 24ba 44000000 		.4byte	.LVL283
 9040 24be C42F0000 		.4byte	0x2fc4
 9041 24c2 CD240000 		.4byte	0x24cd
 9042 24c6 26       		.uleb128 0x26
 9043 24c7 01       		.uleb128 0x1
 9044 24c8 50       		.byte	0x50
 9045 24c9 02       		.uleb128 0x2
 9046 24ca 76       		.byte	0x76
 9047 24cb 00       		.sleb128 0
 9048 24cc 00       		.byte	0
 9049 24cd 25       		.uleb128 0x25
 9050 24ce 6A000000 		.4byte	.LVL284
 9051 24d2 AD2F0000 		.4byte	0x2fad
 9052 24d6 26       		.uleb128 0x26
 9053 24d7 01       		.uleb128 0x1
 9054 24d8 51       		.byte	0x51
 9055 24d9 02       		.uleb128 0x2
 9056 24da 76       		.byte	0x76
 9057 24db 00       		.sleb128 0
 9058 24dc 00       		.byte	0
 9059 24dd 00       		.byte	0
 9060 24de 2E       		.uleb128 0x2e
 9061 24df BA110000 		.4byte	.LASF457
 9062 24e3 01       		.byte	0x1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 262


 9063 24e4 190C     		.2byte	0xc19
 9064 24e6 00000000 		.4byte	.LFB690
 9065 24ea 34000000 		.4byte	.LFE690-.LFB690
 9066 24ee 01       		.uleb128 0x1
 9067 24ef 9C       		.byte	0x9c
 9068 24f0 3B250000 		.4byte	0x253b
 9069 24f4 1E       		.uleb128 0x1e
 9070 24f5 00110000 		.4byte	.LASF458
 9071 24f9 01       		.byte	0x1
 9072 24fa 190C     		.2byte	0xc19
 9073 24fc 41250000 		.4byte	0x2541
 9074 2500 990B0000 		.4byte	.LLST82
 9075 2504 2F       		.uleb128 0x2f
 9076 2505 51100000 		.4byte	0x1051
 9077 2509 02000000 		.4byte	.LBB162
 9078 250d 12000000 		.4byte	.LBE162-.LBB162
 9079 2511 01       		.byte	0x1
 9080 2512 1B0C     		.2byte	0xc1b
 9081 2514 28250000 		.4byte	0x2528
 9082 2518 21       		.uleb128 0x21
 9083 2519 02000000 		.4byte	.LBB163
 9084 251d 12000000 		.4byte	.LBE163-.LBB163
 9085 2521 22       		.uleb128 0x22
 9086 2522 5D100000 		.4byte	0x105d
 9087 2526 00       		.byte	0
 9088 2527 00       		.byte	0
 9089 2528 24       		.uleb128 0x24
 9090 2529 1C000000 		.4byte	.LVL288
 9091 252d A22F0000 		.4byte	0x2fa2
 9092 2531 24       		.uleb128 0x24
 9093 2532 2E000000 		.4byte	.LVL289
 9094 2536 B92F0000 		.4byte	0x2fb9
 9095 253a 00       		.byte	0
 9096 253b 06       		.uleb128 0x6
 9097 253c 04       		.byte	0x4
 9098 253d 490F0000 		.4byte	0xf49
 9099 2541 07       		.uleb128 0x7
 9100 2542 3B250000 		.4byte	0x253b
 9101 2546 2E       		.uleb128 0x2e
 9102 2547 DC000000 		.4byte	.LASF459
 9103 254b 01       		.byte	0x1
 9104 254c 250C     		.2byte	0xc25
 9105 254e 00000000 		.4byte	.LFB691
 9106 2552 14000000 		.4byte	.LFE691-.LFB691
 9107 2556 01       		.uleb128 0x1
 9108 2557 9C       		.byte	0x9c
 9109 2558 6B250000 		.4byte	0x256b
 9110 255c 27       		.uleb128 0x27
 9111 255d 00110000 		.4byte	.LASF458
 9112 2561 01       		.byte	0x1
 9113 2562 250C     		.2byte	0xc25
 9114 2564 41250000 		.4byte	0x2541
 9115 2568 01       		.uleb128 0x1
 9116 2569 50       		.byte	0x50
 9117 256a 00       		.byte	0
 9118 256b 2C       		.uleb128 0x2c
 9119 256c EE120000 		.4byte	.LASF460
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 263


 9120 2570 01       		.byte	0x1
 9121 2571 2D0C     		.2byte	0xc2d
 9122 2573 D50D0000 		.4byte	0xdd5
 9123 2577 00000000 		.4byte	.LFB692
 9124 257b 80000000 		.4byte	.LFE692-.LFB692
 9125 257f 01       		.uleb128 0x1
 9126 2580 9C       		.byte	0x9c
 9127 2581 4E260000 		.4byte	0x264e
 9128 2585 1E       		.uleb128 0x1e
 9129 2586 00110000 		.4byte	.LASF458
 9130 258a 01       		.byte	0x1
 9131 258b 2D0C     		.2byte	0xc2d
 9132 258d 41250000 		.4byte	0x2541
 9133 2591 C50B0000 		.4byte	.LLST83
 9134 2595 1E       		.uleb128 0x1e
 9135 2596 E3070000 		.4byte	.LASF461
 9136 259a 01       		.byte	0x1
 9137 259b 2D0C     		.2byte	0xc2d
 9138 259d 721F0000 		.4byte	0x1f72
 9139 25a1 F10B0000 		.4byte	.LLST84
 9140 25a5 1F       		.uleb128 0x1f
 9141 25a6 DD090000 		.4byte	.LASF382
 9142 25aa 01       		.byte	0x1
 9143 25ab 2F0C     		.2byte	0xc2f
 9144 25ad D50D0000 		.4byte	0xdd5
 9145 25b1 680C0000 		.4byte	.LLST85
 9146 25b5 2F       		.uleb128 0x2f
 9147 25b6 51100000 		.4byte	0x1051
 9148 25ba 04000000 		.4byte	.LBB164
 9149 25be 14000000 		.4byte	.LBE164-.LBB164
 9150 25c2 01       		.byte	0x1
 9151 25c3 310C     		.2byte	0xc31
 9152 25c5 D9250000 		.4byte	0x25d9
 9153 25c9 21       		.uleb128 0x21
 9154 25ca 04000000 		.4byte	.LBB165
 9155 25ce 14000000 		.4byte	.LBE165-.LBB165
 9156 25d2 22       		.uleb128 0x22
 9157 25d3 5D100000 		.4byte	0x105d
 9158 25d7 00       		.byte	0
 9159 25d8 00       		.byte	0
 9160 25d9 2F       		.uleb128 0x2f
 9161 25da 51100000 		.4byte	0x1051
 9162 25de 1A000000 		.4byte	.LBB166
 9163 25e2 14000000 		.4byte	.LBE166-.LBB166
 9164 25e6 01       		.byte	0x1
 9165 25e7 320C     		.2byte	0xc32
 9166 25e9 FD250000 		.4byte	0x25fd
 9167 25ed 21       		.uleb128 0x21
 9168 25ee 1A000000 		.4byte	.LBB167
 9169 25f2 14000000 		.4byte	.LBE167-.LBB167
 9170 25f6 22       		.uleb128 0x22
 9171 25f7 5D100000 		.4byte	0x105d
 9172 25fb 00       		.byte	0
 9173 25fc 00       		.byte	0
 9174 25fd 2D       		.uleb128 0x2d
 9175 25fe 32000000 		.4byte	.LBB168
 9176 2602 42000000 		.4byte	.LBE168-.LBB168
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 264


 9177 2606 3B260000 		.4byte	0x263b
 9178 260a 1F       		.uleb128 0x1f
 9179 260b A41A0000 		.4byte	.LASF404
 9180 260f 01       		.byte	0x1
 9181 2610 370C     		.2byte	0xc37
 9182 2612 EE140000 		.4byte	0x14ee
 9183 2616 9E0C0000 		.4byte	.LLST86
 9184 261a 1F       		.uleb128 0x1f
 9185 261b 72240000 		.4byte	.LASF462
 9186 261f 01       		.byte	0x1
 9187 2620 380C     		.2byte	0xc38
 9188 2622 EE140000 		.4byte	0x14ee
 9189 2626 BC0C0000 		.4byte	.LLST87
 9190 262a 25       		.uleb128 0x25
 9191 262b 62000000 		.4byte	.LVL299
 9192 262f 46250000 		.4byte	0x2546
 9193 2633 26       		.uleb128 0x26
 9194 2634 01       		.uleb128 0x1
 9195 2635 50       		.byte	0x50
 9196 2636 02       		.uleb128 0x2
 9197 2637 75       		.byte	0x75
 9198 2638 00       		.sleb128 0
 9199 2639 00       		.byte	0
 9200 263a 00       		.byte	0
 9201 263b 24       		.uleb128 0x24
 9202 263c 32000000 		.4byte	.LVL295
 9203 2640 A22F0000 		.4byte	0x2fa2
 9204 2644 24       		.uleb128 0x24
 9205 2645 78000000 		.4byte	.LVL308
 9206 2649 B92F0000 		.4byte	0x2fb9
 9207 264d 00       		.byte	0
 9208 264e 32       		.uleb128 0x32
 9209 264f 5E110000 		.4byte	.LASF464
 9210 2653 01       		.byte	0x1
 9211 2654 6C0C     		.2byte	0xc6c
 9212 2656 00000000 		.4byte	.LFB693
 9213 265a 10000000 		.4byte	.LFE693-.LFB693
 9214 265e 01       		.uleb128 0x1
 9215 265f 9C       		.byte	0x9c
 9216 2660 2E       		.uleb128 0x2e
 9217 2661 6A1E0000 		.4byte	.LASF465
 9218 2665 01       		.byte	0x1
 9219 2666 420D     		.2byte	0xd42
 9220 2668 00000000 		.4byte	.LFB695
 9221 266c 1C000000 		.4byte	.LFE695-.LFB695
 9222 2670 01       		.uleb128 0x1
 9223 2671 9C       		.byte	0x9c
 9224 2672 B5260000 		.4byte	0x26b5
 9225 2676 1E       		.uleb128 0x1e
 9226 2677 1D2A0000 		.4byte	.LASF466
 9227 267b 01       		.byte	0x1
 9228 267c 420D     		.2byte	0xd42
 9229 267e E30E0000 		.4byte	0xee3
 9230 2682 DA0C0000 		.4byte	.LLST88
 9231 2686 1E       		.uleb128 0x1e
 9232 2687 F51A0000 		.4byte	.LASF467
 9233 268b 01       		.byte	0x1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 265


 9234 268c 420D     		.2byte	0xd42
 9235 268e D50D0000 		.4byte	0xdd5
 9236 2692 ED0C0000 		.4byte	.LLST89
 9237 2696 27       		.uleb128 0x27
 9238 2697 F91E0000 		.4byte	.LASF468
 9239 269b 01       		.byte	0x1
 9240 269c 420D     		.2byte	0xd42
 9241 269e BB000000 		.4byte	0xbb
 9242 26a2 01       		.uleb128 0x1
 9243 26a3 52       		.byte	0x52
 9244 26a4 1F       		.uleb128 0x1f
 9245 26a5 E02A0000 		.4byte	.LASF383
 9246 26a9 01       		.byte	0x1
 9247 26aa 440D     		.2byte	0xd44
 9248 26ac 4F110000 		.4byte	0x114f
 9249 26b0 1B0D0000 		.4byte	.LLST90
 9250 26b4 00       		.byte	0
 9251 26b5 2C       		.uleb128 0x2c
 9252 26b6 1F050000 		.4byte	.LASF469
 9253 26ba 01       		.byte	0x1
 9254 26bb 520D     		.2byte	0xd52
 9255 26bd BB000000 		.4byte	0xbb
 9256 26c1 00000000 		.4byte	.LFB696
 9257 26c5 20000000 		.4byte	.LFE696-.LFB696
 9258 26c9 01       		.uleb128 0x1
 9259 26ca 9C       		.byte	0x9c
 9260 26cb 10270000 		.4byte	0x2710
 9261 26cf 1E       		.uleb128 0x1e
 9262 26d0 9B240000 		.4byte	.LASF428
 9263 26d4 01       		.byte	0x1
 9264 26d5 520D     		.2byte	0xd52
 9265 26d7 E30E0000 		.4byte	0xee3
 9266 26db 2E0D0000 		.4byte	.LLST91
 9267 26df 1E       		.uleb128 0x1e
 9268 26e0 F51A0000 		.4byte	.LASF467
 9269 26e4 01       		.byte	0x1
 9270 26e5 520D     		.2byte	0xd52
 9271 26e7 D50D0000 		.4byte	0xdd5
 9272 26eb 5A0D0000 		.4byte	.LLST92
 9273 26ef 1F       		.uleb128 0x1f
 9274 26f0 50150000 		.4byte	.LASF470
 9275 26f4 01       		.byte	0x1
 9276 26f5 540D     		.2byte	0xd54
 9277 26f7 BB000000 		.4byte	0xbb
 9278 26fb 850D0000 		.4byte	.LLST93
 9279 26ff 1F       		.uleb128 0x1f
 9280 2700 E02A0000 		.4byte	.LASF383
 9281 2704 01       		.byte	0x1
 9282 2705 550D     		.2byte	0xd55
 9283 2707 4F110000 		.4byte	0x114f
 9284 270b BB0D0000 		.4byte	.LLST94
 9285 270f 00       		.byte	0
 9286 2710 2C       		.uleb128 0x2c
 9287 2711 16230000 		.4byte	.LASF471
 9288 2715 01       		.byte	0x1
 9289 2716 B70E     		.2byte	0xeb7
 9290 2718 E30E0000 		.4byte	0xee3
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 266


 9291 271c 00000000 		.4byte	.LFB701
 9292 2720 0C000000 		.4byte	.LFE701-.LFB701
 9293 2724 01       		.uleb128 0x1
 9294 2725 9C       		.byte	0x9c
 9295 2726 39270000 		.4byte	0x2739
 9296 272a 28       		.uleb128 0x28
 9297 272b DD090000 		.4byte	.LASF382
 9298 272f 01       		.byte	0x1
 9299 2730 B90E     		.2byte	0xeb9
 9300 2732 E30E0000 		.4byte	0xee3
 9301 2736 01       		.uleb128 0x1
 9302 2737 50       		.byte	0x50
 9303 2738 00       		.byte	0
 9304 2739 2C       		.uleb128 0x2c
 9305 273a 321F0000 		.4byte	.LASF472
 9306 273e 01       		.byte	0x1
 9307 273f C80E     		.2byte	0xec8
 9308 2741 D50D0000 		.4byte	0xdd5
 9309 2745 00000000 		.4byte	.LFB702
 9310 2749 20000000 		.4byte	.LFE702-.LFB702
 9311 274d 01       		.uleb128 0x1
 9312 274e 9C       		.byte	0x9c
 9313 274f 62270000 		.4byte	0x2762
 9314 2753 28       		.uleb128 0x28
 9315 2754 DD090000 		.4byte	.LASF382
 9316 2758 01       		.byte	0x1
 9317 2759 CA0E     		.2byte	0xeca
 9318 275b D50D0000 		.4byte	0xdd5
 9319 275f 01       		.uleb128 0x1
 9320 2760 50       		.byte	0x50
 9321 2761 00       		.byte	0
 9322 2762 2C       		.uleb128 0x2c
 9323 2763 600D0000 		.4byte	.LASF473
 9324 2767 01       		.byte	0x1
 9325 2768 2911     		.2byte	0x1129
 9326 276a EB0D0000 		.4byte	0xdeb
 9327 276e 00000000 		.4byte	.LFB703
 9328 2772 20000000 		.4byte	.LFE703-.LFB703
 9329 2776 01       		.uleb128 0x1
 9330 2777 9C       		.byte	0x9c
 9331 2778 8B270000 		.4byte	0x278b
 9332 277c 28       		.uleb128 0x28
 9333 277d 8A040000 		.4byte	.LASF409
 9334 2781 01       		.byte	0x1
 9335 2782 2B11     		.2byte	0x112b
 9336 2784 EB0D0000 		.4byte	0xdeb
 9337 2788 01       		.uleb128 0x1
 9338 2789 50       		.byte	0x50
 9339 278a 00       		.byte	0
 9340 278b 2C       		.uleb128 0x2c
 9341 278c E3290000 		.4byte	.LASF474
 9342 2790 01       		.byte	0x1
 9343 2791 4A11     		.2byte	0x114a
 9344 2793 01010000 		.4byte	0x101
 9345 2797 00000000 		.4byte	.LFB704
 9346 279b 80000000 		.4byte	.LFE704-.LFB704
 9347 279f 01       		.uleb128 0x1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 267


 9348 27a0 9C       		.byte	0x9c
 9349 27a1 13280000 		.4byte	0x2813
 9350 27a5 1E       		.uleb128 0x1e
 9351 27a6 A4080000 		.4byte	.LASF475
 9352 27aa 01       		.byte	0x1
 9353 27ab 4A11     		.2byte	0x114a
 9354 27ad D50D0000 		.4byte	0xdd5
 9355 27b1 CE0D0000 		.4byte	.LLST95
 9356 27b5 1E       		.uleb128 0x1e
 9357 27b6 78190000 		.4byte	.LASF401
 9358 27ba 01       		.byte	0x1
 9359 27bb 4A11     		.2byte	0x114a
 9360 27bd EB0D0000 		.4byte	0xdeb
 9361 27c1 FA0D0000 		.4byte	.LLST96
 9362 27c5 1F       		.uleb128 0x1f
 9363 27c6 AF250000 		.4byte	.LASF476
 9364 27ca 01       		.byte	0x1
 9365 27cb 4C11     		.2byte	0x114c
 9366 27cd 01010000 		.4byte	0x101
 9367 27d1 260E0000 		.4byte	.LLST97
 9368 27d5 24       		.uleb128 0x24
 9369 27d6 0A000000 		.4byte	.LVL326
 9370 27da A22F0000 		.4byte	0x2fa2
 9371 27de 2A       		.uleb128 0x2a
 9372 27df 2A000000 		.4byte	.LVL327
 9373 27e3 60140000 		.4byte	0x1460
 9374 27e7 F7270000 		.4byte	0x27f7
 9375 27eb 26       		.uleb128 0x26
 9376 27ec 01       		.uleb128 0x1
 9377 27ed 50       		.byte	0x50
 9378 27ee 02       		.uleb128 0x2
 9379 27ef 74       		.byte	0x74
 9380 27f0 00       		.sleb128 0
 9381 27f1 26       		.uleb128 0x26
 9382 27f2 01       		.uleb128 0x1
 9383 27f3 51       		.byte	0x51
 9384 27f4 01       		.uleb128 0x1
 9385 27f5 31       		.byte	0x31
 9386 27f6 00       		.byte	0
 9387 27f7 24       		.uleb128 0x24
 9388 27f8 3E000000 		.4byte	.LVL328
 9389 27fc B92F0000 		.4byte	0x2fb9
 9390 2800 24       		.uleb128 0x24
 9391 2801 42000000 		.4byte	.LVL329
 9392 2805 A22F0000 		.4byte	0x2fa2
 9393 2809 24       		.uleb128 0x24
 9394 280a 74000000 		.4byte	.LVL331
 9395 280e B92F0000 		.4byte	0x2fb9
 9396 2812 00       		.byte	0
 9397 2813 2C       		.uleb128 0x2c
 9398 2814 B60A0000 		.4byte	.LASF477
 9399 2818 01       		.byte	0x1
 9400 2819 8E11     		.2byte	0x118e
 9401 281b D50D0000 		.4byte	0xdd5
 9402 281f 00000000 		.4byte	.LFB705
 9403 2823 A4000000 		.4byte	.LFE705-.LFB705
 9404 2827 01       		.uleb128 0x1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 268


 9405 2828 9C       		.byte	0x9c
 9406 2829 BB280000 		.4byte	0x28bb
 9407 282d 1E       		.uleb128 0x1e
 9408 282e 43270000 		.4byte	.LASF478
 9409 2832 01       		.byte	0x1
 9410 2833 8E11     		.2byte	0x118e
 9411 2835 01010000 		.4byte	0x101
 9412 2839 440E0000 		.4byte	.LLST98
 9413 283d 1E       		.uleb128 0x1e
 9414 283e 4A1A0000 		.4byte	.LASF479
 9415 2842 01       		.byte	0x1
 9416 2843 8E11     		.2byte	0x118e
 9417 2845 01010000 		.4byte	0x101
 9418 2849 700E0000 		.4byte	.LLST99
 9419 284d 1E       		.uleb128 0x1e
 9420 284e 91090000 		.4byte	.LASF480
 9421 2852 01       		.byte	0x1
 9422 2853 8E11     		.2byte	0x118e
 9423 2855 40050000 		.4byte	0x540
 9424 2859 B50E0000 		.4byte	.LLST100
 9425 285d 1E       		.uleb128 0x1e
 9426 285e 78190000 		.4byte	.LASF401
 9427 2862 01       		.byte	0x1
 9428 2863 8E11     		.2byte	0x118e
 9429 2865 EB0D0000 		.4byte	0xdeb
 9430 2869 FA0E0000 		.4byte	.LLST101
 9431 286d 1F       		.uleb128 0x1f
 9432 286e DD090000 		.4byte	.LASF382
 9433 2872 01       		.byte	0x1
 9434 2873 9011     		.2byte	0x1190
 9435 2875 D50D0000 		.4byte	0xdd5
 9436 2879 260F0000 		.4byte	.LLST102
 9437 287d 24       		.uleb128 0x24
 9438 287e 0E000000 		.4byte	.LVL334
 9439 2882 A22F0000 		.4byte	0x2fa2
 9440 2886 2A       		.uleb128 0x2a
 9441 2887 40000000 		.4byte	.LVL335
 9442 288b 60140000 		.4byte	0x1460
 9443 288f 9F280000 		.4byte	0x289f
 9444 2893 26       		.uleb128 0x26
 9445 2894 01       		.uleb128 0x1
 9446 2895 50       		.byte	0x50
 9447 2896 02       		.uleb128 0x2
 9448 2897 76       		.byte	0x76
 9449 2898 00       		.sleb128 0
 9450 2899 26       		.uleb128 0x26
 9451 289a 01       		.uleb128 0x1
 9452 289b 51       		.byte	0x51
 9453 289c 01       		.uleb128 0x1
 9454 289d 31       		.byte	0x31
 9455 289e 00       		.byte	0
 9456 289f 24       		.uleb128 0x24
 9457 28a0 54000000 		.4byte	.LVL336
 9458 28a4 B92F0000 		.4byte	0x2fb9
 9459 28a8 24       		.uleb128 0x24
 9460 28a9 58000000 		.4byte	.LVL337
 9461 28ad A22F0000 		.4byte	0x2fa2
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 269


 9462 28b1 24       		.uleb128 0x24
 9463 28b2 98000000 		.4byte	.LVL343
 9464 28b6 B92F0000 		.4byte	0x2fb9
 9465 28ba 00       		.byte	0
 9466 28bb 2C       		.uleb128 0x2c
 9467 28bc E3020000 		.4byte	.LASF481
 9468 28c0 01       		.byte	0x1
 9469 28c1 DE11     		.2byte	0x11de
 9470 28c3 D50D0000 		.4byte	0xdd5
 9471 28c7 00000000 		.4byte	.LFB706
 9472 28cb E4000000 		.4byte	.LFE706-.LFB706
 9473 28cf 01       		.uleb128 0x1
 9474 28d0 9C       		.byte	0x9c
 9475 28d1 C8290000 		.4byte	0x29c8
 9476 28d5 1E       		.uleb128 0x1e
 9477 28d6 EF260000 		.4byte	.LASF482
 9478 28da 01       		.byte	0x1
 9479 28db DE11     		.2byte	0x11de
 9480 28dd E30E0000 		.4byte	0xee3
 9481 28e1 500F0000 		.4byte	.LLST103
 9482 28e5 1E       		.uleb128 0x1e
 9483 28e6 151E0000 		.4byte	.LASF483
 9484 28ea 01       		.byte	0x1
 9485 28eb DE11     		.2byte	0x11de
 9486 28ed 01010000 		.4byte	0x101
 9487 28f1 7C0F0000 		.4byte	.LLST104
 9488 28f5 1E       		.uleb128 0x1e
 9489 28f6 E01C0000 		.4byte	.LASF484
 9490 28fa 01       		.byte	0x1
 9491 28fb DE11     		.2byte	0x11de
 9492 28fd 190F0000 		.4byte	0xf19
 9493 2901 C10F0000 		.4byte	.LLST105
 9494 2905 1E       		.uleb128 0x1e
 9495 2906 360B0000 		.4byte	.LASF485
 9496 290a 01       		.byte	0x1
 9497 290b DE11     		.2byte	0x11de
 9498 290d 40050000 		.4byte	0x540
 9499 2911 E20F0000 		.4byte	.LLST106
 9500 2915 1F       		.uleb128 0x1f
 9501 2916 E02A0000 		.4byte	.LASF383
 9502 291a 01       		.byte	0x1
 9503 291b E011     		.2byte	0x11e0
 9504 291d 4F110000 		.4byte	0x114f
 9505 2921 27100000 		.4byte	.LLST107
 9506 2925 1F       		.uleb128 0x1f
 9507 2926 DD090000 		.4byte	.LASF382
 9508 292a 01       		.byte	0x1
 9509 292b E111     		.2byte	0x11e1
 9510 292d D50D0000 		.4byte	0xdd5
 9511 2931 48100000 		.4byte	.LLST108
 9512 2935 1F       		.uleb128 0x1f
 9513 2936 FC080000 		.4byte	.LASF486
 9514 293a 01       		.byte	0x1
 9515 293b E211     		.2byte	0x11e2
 9516 293d D5000000 		.4byte	0xd5
 9517 2941 72100000 		.4byte	.LLST109
 9518 2945 2F       		.uleb128 0x2f
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 270


 9519 2946 51100000 		.4byte	0x1051
 9520 294a 04000000 		.4byte	.LBB169
 9521 294e 1A000000 		.4byte	.LBE169-.LBB169
 9522 2952 01       		.byte	0x1
 9523 2953 E411     		.2byte	0x11e4
 9524 2955 69290000 		.4byte	0x2969
 9525 2959 21       		.uleb128 0x21
 9526 295a 04000000 		.4byte	.LBB170
 9527 295e 1A000000 		.4byte	.LBE170-.LBB170
 9528 2962 22       		.uleb128 0x22
 9529 2963 5D100000 		.4byte	0x105d
 9530 2967 00       		.byte	0
 9531 2968 00       		.byte	0
 9532 2969 2F       		.uleb128 0x2f
 9533 296a 51100000 		.4byte	0x1051
 9534 296e 9E000000 		.4byte	.LBB171
 9535 2972 12000000 		.4byte	.LBE171-.LBB171
 9536 2976 01       		.byte	0x1
 9537 2977 1C12     		.2byte	0x121c
 9538 2979 8D290000 		.4byte	0x298d
 9539 297d 21       		.uleb128 0x21
 9540 297e 9E000000 		.4byte	.LBB172
 9541 2982 12000000 		.4byte	.LBE172-.LBB172
 9542 2986 22       		.uleb128 0x22
 9543 2987 5D100000 		.4byte	0x105d
 9544 298b 00       		.byte	0
 9545 298c 00       		.byte	0
 9546 298d 24       		.uleb128 0x24
 9547 298e 22000000 		.4byte	.LVL350
 9548 2992 A22F0000 		.4byte	0x2fa2
 9549 2996 2A       		.uleb128 0x2a
 9550 2997 78000000 		.4byte	.LVL355
 9551 299b C42F0000 		.4byte	0x2fc4
 9552 299f AA290000 		.4byte	0x29aa
 9553 29a3 26       		.uleb128 0x26
 9554 29a4 01       		.uleb128 0x1
 9555 29a5 50       		.byte	0x50
 9556 29a6 02       		.uleb128 0x2
 9557 29a7 76       		.byte	0x76
 9558 29a8 00       		.sleb128 0
 9559 29a9 00       		.byte	0
 9560 29aa 2A       		.uleb128 0x2a
 9561 29ab 9A000000 		.4byte	.LVL356
 9562 29af AD2F0000 		.4byte	0x2fad
 9563 29b3 BE290000 		.4byte	0x29be
 9564 29b7 26       		.uleb128 0x26
 9565 29b8 01       		.uleb128 0x1
 9566 29b9 51       		.byte	0x51
 9567 29ba 02       		.uleb128 0x2
 9568 29bb 76       		.byte	0x76
 9569 29bc 00       		.sleb128 0
 9570 29bd 00       		.byte	0
 9571 29be 24       		.uleb128 0x24
 9572 29bf D2000000 		.4byte	.LVL358
 9573 29c3 B92F0000 		.4byte	0x2fb9
 9574 29c7 00       		.byte	0
 9575 29c8 2C       		.uleb128 0x2c
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 271


 9576 29c9 82220000 		.4byte	.LASF487
 9577 29cd 01       		.byte	0x1
 9578 29ce 4812     		.2byte	0x1248
 9579 29d0 D50D0000 		.4byte	0xdd5
 9580 29d4 00000000 		.4byte	.LFB707
 9581 29d8 20010000 		.4byte	.LFE707-.LFB707
 9582 29dc 01       		.uleb128 0x1
 9583 29dd 9C       		.byte	0x9c
 9584 29de 482B0000 		.4byte	0x2b48
 9585 29e2 1E       		.uleb128 0x1e
 9586 29e3 EF260000 		.4byte	.LASF482
 9587 29e7 01       		.byte	0x1
 9588 29e8 4812     		.2byte	0x1248
 9589 29ea E30E0000 		.4byte	0xee3
 9590 29ee 85100000 		.4byte	.LLST110
 9591 29f2 1E       		.uleb128 0x1e
 9592 29f3 151E0000 		.4byte	.LASF483
 9593 29f7 01       		.byte	0x1
 9594 29f8 4812     		.2byte	0x1248
 9595 29fa 01010000 		.4byte	0x101
 9596 29fe B1100000 		.4byte	.LLST111
 9597 2a02 1E       		.uleb128 0x1e
 9598 2a03 E01C0000 		.4byte	.LASF484
 9599 2a07 01       		.byte	0x1
 9600 2a08 4812     		.2byte	0x1248
 9601 2a0a 190F0000 		.4byte	0xf19
 9602 2a0e F6100000 		.4byte	.LLST112
 9603 2a12 1E       		.uleb128 0x1e
 9604 2a13 360B0000 		.4byte	.LASF485
 9605 2a17 01       		.byte	0x1
 9606 2a18 4812     		.2byte	0x1248
 9607 2a1a 40050000 		.4byte	0x540
 9608 2a1e 17110000 		.4byte	.LLST113
 9609 2a22 1E       		.uleb128 0x1e
 9610 2a23 4F230000 		.4byte	.LASF488
 9611 2a27 01       		.byte	0x1
 9612 2a28 4812     		.2byte	0x1248
 9613 2a2a 482B0000 		.4byte	0x2b48
 9614 2a2e 5C110000 		.4byte	.LLST114
 9615 2a32 1F       		.uleb128 0x1f
 9616 2a33 E02A0000 		.4byte	.LASF383
 9617 2a37 01       		.byte	0x1
 9618 2a38 4A12     		.2byte	0x124a
 9619 2a3a 4F110000 		.4byte	0x114f
 9620 2a3e 7C110000 		.4byte	.LLST115
 9621 2a42 1F       		.uleb128 0x1f
 9622 2a43 FC080000 		.4byte	.LASF486
 9623 2a47 01       		.byte	0x1
 9624 2a48 4B12     		.2byte	0x124b
 9625 2a4a D5000000 		.4byte	0xd5
 9626 2a4e 9D110000 		.4byte	.LLST116
 9627 2a52 1F       		.uleb128 0x1f
 9628 2a53 DD090000 		.4byte	.LASF382
 9629 2a57 01       		.byte	0x1
 9630 2a58 4C12     		.2byte	0x124c
 9631 2a5a D50D0000 		.4byte	0xdd5
 9632 2a5e B0110000 		.4byte	.LLST117
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 272


 9633 2a62 30       		.uleb128 0x30
 9634 2a63 C2140000 		.4byte	.LASF421
 9635 2a67 01       		.byte	0x1
 9636 2a68 4D12     		.2byte	0x124d
 9637 2a6a E00D0000 		.4byte	0xde0
 9638 2a6e 2F       		.uleb128 0x2f
 9639 2a6f 51100000 		.4byte	0x1051
 9640 2a73 08000000 		.4byte	.LBB173
 9641 2a77 1A000000 		.4byte	.LBE173-.LBB173
 9642 2a7b 01       		.byte	0x1
 9643 2a7c 4F12     		.2byte	0x124f
 9644 2a7e 922A0000 		.4byte	0x2a92
 9645 2a82 21       		.uleb128 0x21
 9646 2a83 08000000 		.4byte	.LBB174
 9647 2a87 1A000000 		.4byte	.LBE174-.LBB174
 9648 2a8b 22       		.uleb128 0x22
 9649 2a8c 5D100000 		.4byte	0x105d
 9650 2a90 00       		.byte	0
 9651 2a91 00       		.byte	0
 9652 2a92 2F       		.uleb128 0x2f
 9653 2a93 69100000 		.4byte	0x1069
 9654 2a97 26000000 		.4byte	.LBB175
 9655 2a9b 14000000 		.4byte	.LBE175-.LBB175
 9656 2a9f 01       		.byte	0x1
 9657 2aa0 6512     		.2byte	0x1265
 9658 2aa2 BB2A0000 		.4byte	0x2abb
 9659 2aa6 21       		.uleb128 0x21
 9660 2aa7 26000000 		.4byte	.LBB176
 9661 2aab 14000000 		.4byte	.LBE176-.LBB176
 9662 2aaf 22       		.uleb128 0x22
 9663 2ab0 79100000 		.4byte	0x1079
 9664 2ab4 22       		.uleb128 0x22
 9665 2ab5 84100000 		.4byte	0x1084
 9666 2ab9 00       		.byte	0
 9667 2aba 00       		.byte	0
 9668 2abb 2F       		.uleb128 0x2f
 9669 2abc 51100000 		.4byte	0x1051
 9670 2ac0 98000000 		.4byte	.LBB177
 9671 2ac4 12000000 		.4byte	.LBE177-.LBB177
 9672 2ac8 01       		.byte	0x1
 9673 2ac9 9612     		.2byte	0x1296
 9674 2acb DF2A0000 		.4byte	0x2adf
 9675 2acf 21       		.uleb128 0x21
 9676 2ad0 98000000 		.4byte	.LBB178
 9677 2ad4 12000000 		.4byte	.LBE178-.LBB178
 9678 2ad8 22       		.uleb128 0x22
 9679 2ad9 5D100000 		.4byte	0x105d
 9680 2add 00       		.byte	0
 9681 2ade 00       		.byte	0
 9682 2adf 2F       		.uleb128 0x2f
 9683 2ae0 90100000 		.4byte	0x1090
 9684 2ae4 08010000 		.4byte	.LBB179
 9685 2ae8 04000000 		.4byte	.LBE179-.LBB179
 9686 2aec 01       		.byte	0x1
 9687 2aed BA12     		.2byte	0x12ba
 9688 2aef FD2A0000 		.4byte	0x2afd
 9689 2af3 31       		.uleb128 0x31
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 273


 9690 2af4 9C100000 		.4byte	0x109c
 9691 2af8 DA110000 		.4byte	.LLST118
 9692 2afc 00       		.byte	0
 9693 2afd 24       		.uleb128 0x24
 9694 2afe 26000000 		.4byte	.LVL364
 9695 2b02 E72F0000 		.4byte	0x2fe7
 9696 2b06 2A       		.uleb128 0x2a
 9697 2b07 BC000000 		.4byte	.LVL370
 9698 2b0b C42F0000 		.4byte	0x2fc4
 9699 2b0f 1A2B0000 		.4byte	0x2b1a
 9700 2b13 26       		.uleb128 0x26
 9701 2b14 01       		.uleb128 0x1
 9702 2b15 50       		.byte	0x50
 9703 2b16 02       		.uleb128 0x2
 9704 2b17 78       		.byte	0x78
 9705 2b18 00       		.sleb128 0
 9706 2b19 00       		.byte	0
 9707 2b1a 2A       		.uleb128 0x2a
 9708 2b1b DE000000 		.4byte	.LVL371
 9709 2b1f AD2F0000 		.4byte	0x2fad
 9710 2b23 2E2B0000 		.4byte	0x2b2e
 9711 2b27 26       		.uleb128 0x26
 9712 2b28 01       		.uleb128 0x1
 9713 2b29 51       		.byte	0x51
 9714 2b2a 02       		.uleb128 0x2
 9715 2b2b 78       		.byte	0x78
 9716 2b2c 00       		.sleb128 0
 9717 2b2d 00       		.byte	0
 9718 2b2e 25       		.uleb128 0x25
 9719 2b2f EA000000 		.4byte	.LVL373
 9720 2b33 AD2F0000 		.4byte	0x2fad
 9721 2b37 26       		.uleb128 0x26
 9722 2b38 01       		.uleb128 0x1
 9723 2b39 50       		.byte	0x50
 9724 2b3a 05       		.uleb128 0x5
 9725 2b3b 03       		.byte	0x3
 9726 2b3c 14000000 		.4byte	.LANCHOR0+20
 9727 2b40 26       		.uleb128 0x26
 9728 2b41 01       		.uleb128 0x1
 9729 2b42 51       		.byte	0x51
 9730 2b43 02       		.uleb128 0x2
 9731 2b44 74       		.byte	0x74
 9732 2b45 18       		.sleb128 24
 9733 2b46 00       		.byte	0
 9734 2b47 00       		.byte	0
 9735 2b48 06       		.uleb128 0x6
 9736 2b49 04       		.byte	0x4
 9737 2b4a D50D0000 		.4byte	0xdd5
 9738 2b4e 2E       		.uleb128 0x2e
 9739 2b4f 83290000 		.4byte	.LASF489
 9740 2b53 01       		.byte	0x1
 9741 2b54 C412     		.2byte	0x12c4
 9742 2b56 00000000 		.4byte	.LFB708
 9743 2b5a CC000000 		.4byte	.LFE708-.LFB708
 9744 2b5e 01       		.uleb128 0x1
 9745 2b5f 9C       		.byte	0x9c
 9746 2b60 8A2C0000 		.4byte	0x2c8a
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 274


 9747 2b64 1E       		.uleb128 0x1e
 9748 2b65 EF260000 		.4byte	.LASF482
 9749 2b69 01       		.byte	0x1
 9750 2b6a C412     		.2byte	0x12c4
 9751 2b6c E30E0000 		.4byte	0xee3
 9752 2b70 ED110000 		.4byte	.LLST119
 9753 2b74 1E       		.uleb128 0x1e
 9754 2b75 4F230000 		.4byte	.LASF488
 9755 2b79 01       		.byte	0x1
 9756 2b7a C412     		.2byte	0x12c4
 9757 2b7c 482B0000 		.4byte	0x2b48
 9758 2b80 19120000 		.4byte	.LLST120
 9759 2b84 1F       		.uleb128 0x1f
 9760 2b85 E02A0000 		.4byte	.LASF383
 9761 2b89 01       		.byte	0x1
 9762 2b8a C612     		.2byte	0x12c6
 9763 2b8c 4F110000 		.4byte	0x114f
 9764 2b90 45120000 		.4byte	.LLST121
 9765 2b94 1F       		.uleb128 0x1f
 9766 2b95 FC080000 		.4byte	.LASF486
 9767 2b99 01       		.byte	0x1
 9768 2b9a C712     		.2byte	0x12c7
 9769 2b9c D5000000 		.4byte	0xd5
 9770 2ba0 66120000 		.4byte	.LLST122
 9771 2ba4 30       		.uleb128 0x30
 9772 2ba5 C2140000 		.4byte	.LASF421
 9773 2ba9 01       		.byte	0x1
 9774 2baa C812     		.2byte	0x12c8
 9775 2bac E00D0000 		.4byte	0xde0
 9776 2bb0 2F       		.uleb128 0x2f
 9777 2bb1 51100000 		.4byte	0x1051
 9778 2bb5 04000000 		.4byte	.LBB181
 9779 2bb9 16000000 		.4byte	.LBE181-.LBB181
 9780 2bbd 01       		.byte	0x1
 9781 2bbe CA12     		.2byte	0x12ca
 9782 2bc0 D42B0000 		.4byte	0x2bd4
 9783 2bc4 21       		.uleb128 0x21
 9784 2bc5 04000000 		.4byte	.LBB182
 9785 2bc9 16000000 		.4byte	.LBE182-.LBB182
 9786 2bcd 22       		.uleb128 0x22
 9787 2bce 5D100000 		.4byte	0x105d
 9788 2bd2 00       		.byte	0
 9789 2bd3 00       		.byte	0
 9790 2bd4 2F       		.uleb128 0x2f
 9791 2bd5 69100000 		.4byte	0x1069
 9792 2bd9 1E000000 		.4byte	.LBB183
 9793 2bdd 14000000 		.4byte	.LBE183-.LBB183
 9794 2be1 01       		.byte	0x1
 9795 2be2 E012     		.2byte	0x12e0
 9796 2be4 FD2B0000 		.4byte	0x2bfd
 9797 2be8 21       		.uleb128 0x21
 9798 2be9 1E000000 		.4byte	.LBB184
 9799 2bed 14000000 		.4byte	.LBE184-.LBB184
 9800 2bf1 22       		.uleb128 0x22
 9801 2bf2 79100000 		.4byte	0x1079
 9802 2bf6 22       		.uleb128 0x22
 9803 2bf7 84100000 		.4byte	0x1084
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 275


 9804 2bfb 00       		.byte	0
 9805 2bfc 00       		.byte	0
 9806 2bfd 2F       		.uleb128 0x2f
 9807 2bfe 51100000 		.4byte	0x1051
 9808 2c02 4C000000 		.4byte	.LBB185
 9809 2c06 12000000 		.4byte	.LBE185-.LBB185
 9810 2c0a 01       		.byte	0x1
 9811 2c0b F012     		.2byte	0x12f0
 9812 2c0d 212C0000 		.4byte	0x2c21
 9813 2c11 21       		.uleb128 0x21
 9814 2c12 4C000000 		.4byte	.LBB186
 9815 2c16 12000000 		.4byte	.LBE186-.LBB186
 9816 2c1a 22       		.uleb128 0x22
 9817 2c1b 5D100000 		.4byte	0x105d
 9818 2c1f 00       		.byte	0
 9819 2c20 00       		.byte	0
 9820 2c21 2F       		.uleb128 0x2f
 9821 2c22 90100000 		.4byte	0x1090
 9822 2c26 BA000000 		.4byte	.LBB187
 9823 2c2a 12000000 		.4byte	.LBE187-.LBB187
 9824 2c2e 01       		.byte	0x1
 9825 2c2f 1413     		.2byte	0x1314
 9826 2c31 3F2C0000 		.4byte	0x2c3f
 9827 2c35 31       		.uleb128 0x31
 9828 2c36 9C100000 		.4byte	0x109c
 9829 2c3a 79120000 		.4byte	.LLST123
 9830 2c3e 00       		.byte	0
 9831 2c3f 24       		.uleb128 0x24
 9832 2c40 1E000000 		.4byte	.LVL379
 9833 2c44 E72F0000 		.4byte	0x2fe7
 9834 2c48 2A       		.uleb128 0x2a
 9835 2c49 6E000000 		.4byte	.LVL383
 9836 2c4d C42F0000 		.4byte	0x2fc4
 9837 2c51 5C2C0000 		.4byte	0x2c5c
 9838 2c55 26       		.uleb128 0x26
 9839 2c56 01       		.uleb128 0x1
 9840 2c57 50       		.byte	0x50
 9841 2c58 02       		.uleb128 0x2
 9842 2c59 77       		.byte	0x77
 9843 2c5a 00       		.sleb128 0
 9844 2c5b 00       		.byte	0
 9845 2c5c 2A       		.uleb128 0x2a
 9846 2c5d 90000000 		.4byte	.LVL384
 9847 2c61 AD2F0000 		.4byte	0x2fad
 9848 2c65 702C0000 		.4byte	0x2c70
 9849 2c69 26       		.uleb128 0x26
 9850 2c6a 01       		.uleb128 0x1
 9851 2c6b 51       		.byte	0x51
 9852 2c6c 02       		.uleb128 0x2
 9853 2c6d 77       		.byte	0x77
 9854 2c6e 00       		.sleb128 0
 9855 2c6f 00       		.byte	0
 9856 2c70 25       		.uleb128 0x25
 9857 2c71 9C000000 		.4byte	.LVL385
 9858 2c75 AD2F0000 		.4byte	0x2fad
 9859 2c79 26       		.uleb128 0x26
 9860 2c7a 01       		.uleb128 0x1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 276


 9861 2c7b 50       		.byte	0x50
 9862 2c7c 05       		.uleb128 0x5
 9863 2c7d 03       		.byte	0x3
 9864 2c7e 14000000 		.4byte	.LANCHOR0+20
 9865 2c82 26       		.uleb128 0x26
 9866 2c83 01       		.uleb128 0x1
 9867 2c84 51       		.byte	0x51
 9868 2c85 02       		.uleb128 0x2
 9869 2c86 74       		.byte	0x74
 9870 2c87 18       		.sleb128 24
 9871 2c88 00       		.byte	0
 9872 2c89 00       		.byte	0
 9873 2c8a 2C       		.uleb128 0x2c
 9874 2c8b FB200000 		.4byte	.LASF490
 9875 2c8f 01       		.byte	0x1
 9876 2c90 1D13     		.2byte	0x131d
 9877 2c92 D50D0000 		.4byte	0xdd5
 9878 2c96 00000000 		.4byte	.LFB709
 9879 2c9a 34000000 		.4byte	.LFE709-.LFB709
 9880 2c9e 01       		.uleb128 0x1
 9881 2c9f 9C       		.byte	0x9c
 9882 2ca0 E72C0000 		.4byte	0x2ce7
 9883 2ca4 1E       		.uleb128 0x1e
 9884 2ca5 4A040000 		.4byte	.LASF386
 9885 2ca9 01       		.byte	0x1
 9886 2caa 1D13     		.2byte	0x131d
 9887 2cac E30E0000 		.4byte	0xee3
 9888 2cb0 8C120000 		.4byte	.LLST124
 9889 2cb4 1F       		.uleb128 0x1f
 9890 2cb5 E02A0000 		.4byte	.LASF383
 9891 2cb9 01       		.byte	0x1
 9892 2cba 1F13     		.2byte	0x131f
 9893 2cbc 4F110000 		.4byte	0x114f
 9894 2cc0 9F120000 		.4byte	.LLST125
 9895 2cc4 1F       		.uleb128 0x1f
 9896 2cc5 DD090000 		.4byte	.LASF382
 9897 2cc9 01       		.byte	0x1
 9898 2cca 2013     		.2byte	0x1320
 9899 2ccc D50D0000 		.4byte	0xdd5
 9900 2cd0 BD120000 		.4byte	.LLST126
 9901 2cd4 24       		.uleb128 0x24
 9902 2cd5 10000000 		.4byte	.LVL391
 9903 2cd9 A22F0000 		.4byte	0x2fa2
 9904 2cdd 24       		.uleb128 0x24
 9905 2cde 2A000000 		.4byte	.LVL396
 9906 2ce2 B92F0000 		.4byte	0x2fb9
 9907 2ce6 00       		.byte	0
 9908 2ce7 17       		.uleb128 0x17
 9909 2ce8 D80E0000 		.4byte	0xed8
 9910 2cec F72C0000 		.4byte	0x2cf7
 9911 2cf0 18       		.uleb128 0x18
 9912 2cf1 B4000000 		.4byte	0xb4
 9913 2cf5 06       		.byte	0x6
 9914 2cf6 00       		.byte	0
 9915 2cf7 28       		.uleb128 0x28
 9916 2cf8 9D160000 		.4byte	.LASF491
 9917 2cfc 01       		.byte	0x1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 277


 9918 2cfd 5F01     		.2byte	0x15f
 9919 2cff E72C0000 		.4byte	0x2ce7
 9920 2d03 05       		.uleb128 0x5
 9921 2d04 03       		.byte	0x3
 9922 2d05 30000000 		.4byte	pxReadyTasksLists
 9923 2d09 28       		.uleb128 0x28
 9924 2d0a 60120000 		.4byte	.LASF492
 9925 2d0e 01       		.byte	0x1
 9926 2d0f 6001     		.2byte	0x160
 9927 2d11 D80E0000 		.4byte	0xed8
 9928 2d15 05       		.uleb128 0x5
 9929 2d16 03       		.byte	0x3
 9930 2d17 BC000000 		.4byte	xDelayedTaskList1
 9931 2d1b 28       		.uleb128 0x28
 9932 2d1c 12290000 		.4byte	.LASF493
 9933 2d20 01       		.byte	0x1
 9934 2d21 6101     		.2byte	0x161
 9935 2d23 D80E0000 		.4byte	0xed8
 9936 2d27 05       		.uleb128 0x5
 9937 2d28 03       		.byte	0x3
 9938 2d29 D0000000 		.4byte	xDelayedTaskList2
 9939 2d2d 28       		.uleb128 0x28
 9940 2d2e 3D230000 		.4byte	.LASF494
 9941 2d32 01       		.byte	0x1
 9942 2d33 6201     		.2byte	0x162
 9943 2d35 3F2D0000 		.4byte	0x2d3f
 9944 2d39 05       		.uleb128 0x5
 9945 2d3a 03       		.byte	0x3
 9946 2d3b 28000000 		.4byte	pxDelayedTaskList
 9947 2d3f 08       		.uleb128 0x8
 9948 2d40 7D1D0000 		.4byte	0x1d7d
 9949 2d44 28       		.uleb128 0x28
 9950 2d45 D8230000 		.4byte	.LASF495
 9951 2d49 01       		.byte	0x1
 9952 2d4a 6301     		.2byte	0x163
 9953 2d4c 3F2D0000 		.4byte	0x2d3f
 9954 2d50 05       		.uleb128 0x5
 9955 2d51 03       		.byte	0x3
 9956 2d52 F8000000 		.4byte	pxOverflowDelayedTaskList
 9957 2d56 28       		.uleb128 0x28
 9958 2d57 E50D0000 		.4byte	.LASF496
 9959 2d5b 01       		.byte	0x1
 9960 2d5c 6401     		.2byte	0x164
 9961 2d5e D80E0000 		.4byte	0xed8
 9962 2d62 05       		.uleb128 0x5
 9963 2d63 03       		.byte	0x3
 9964 2d64 14000000 		.4byte	xPendingReadyList
 9965 2d68 28       		.uleb128 0x28
 9966 2d69 2E250000 		.4byte	.LASF497
 9967 2d6d 01       		.byte	0x1
 9968 2d6e 6801     		.2byte	0x168
 9969 2d70 D80E0000 		.4byte	0xed8
 9970 2d74 05       		.uleb128 0x5
 9971 2d75 03       		.byte	0x3
 9972 2d76 E4000000 		.4byte	xTasksWaitingTermination
 9973 2d7a 28       		.uleb128 0x28
 9974 2d7b EB060000 		.4byte	.LASF498
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 278


 9975 2d7f 01       		.byte	0x1
 9976 2d80 6901     		.2byte	0x169
 9977 2d82 CD0E0000 		.4byte	0xecd
 9978 2d86 05       		.uleb128 0x5
 9979 2d87 03       		.byte	0x3
 9980 2d88 10010000 		.4byte	uxDeletedTasksWaitingCleanUp
 9981 2d8c 28       		.uleb128 0x28
 9982 2d8d 91080000 		.4byte	.LASF499
 9983 2d91 01       		.byte	0x1
 9984 2d92 6F01     		.2byte	0x16f
 9985 2d94 D80E0000 		.4byte	0xed8
 9986 2d98 05       		.uleb128 0x5
 9987 2d99 03       		.byte	0x3
 9988 2d9a 00000000 		.4byte	xSuspendedTaskList
 9989 2d9e 28       		.uleb128 0x28
 9990 2d9f 8A100000 		.4byte	.LASF500
 9991 2da3 01       		.byte	0x1
 9992 2da4 7401     		.2byte	0x174
 9993 2da6 CD0E0000 		.4byte	0xecd
 9994 2daa 05       		.uleb128 0x5
 9995 2dab 03       		.byte	0x3
 9996 2dac FC000000 		.4byte	uxCurrentNumberOfTasks
 9997 2db0 28       		.uleb128 0x28
 9998 2db1 9B020000 		.4byte	.LASF501
 9999 2db5 01       		.byte	0x1
 10000 2db6 7501     		.2byte	0x175
 10001 2db8 C22D0000 		.4byte	0x2dc2
 10002 2dbc 05       		.uleb128 0x5
 10003 2dbd 03       		.byte	0x3
 10004 2dbe 14010000 		.4byte	xTickCount
 10005 2dc2 08       		.uleb128 0x8
 10006 2dc3 EB0D0000 		.4byte	0xdeb
 10007 2dc7 28       		.uleb128 0x28
 10008 2dc8 39210000 		.4byte	.LASF502
 10009 2dcc 01       		.byte	0x1
 10010 2dcd 7601     		.2byte	0x176
 10011 2dcf CD0E0000 		.4byte	0xecd
 10012 2dd3 05       		.uleb128 0x5
 10013 2dd4 03       		.byte	0x3
 10014 2dd5 0C010000 		.4byte	uxTopReadyPriority
 10015 2dd9 28       		.uleb128 0x28
 10016 2dda 760B0000 		.4byte	.LASF503
 10017 2dde 01       		.byte	0x1
 10018 2ddf 7701     		.2byte	0x177
 10019 2de1 EB2D0000 		.4byte	0x2deb
 10020 2de5 05       		.uleb128 0x5
 10021 2de6 03       		.byte	0x3
 10022 2de7 04010000 		.4byte	xSchedulerRunning
 10023 2deb 08       		.uleb128 0x8
 10024 2dec D50D0000 		.4byte	0xdd5
 10025 2df0 28       		.uleb128 0x28
 10026 2df1 190B0000 		.4byte	.LASF504
 10027 2df5 01       		.byte	0x1
 10028 2df6 7801     		.2byte	0x178
 10029 2df8 CD0E0000 		.4byte	0xecd
 10030 2dfc 05       		.uleb128 0x5
 10031 2dfd 03       		.byte	0x3
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 279


 10032 2dfe 24010000 		.4byte	uxPendedTicks
 10033 2e02 28       		.uleb128 0x28
 10034 2e03 8F000000 		.4byte	.LASF505
 10035 2e07 01       		.byte	0x1
 10036 2e08 7901     		.2byte	0x179
 10037 2e0a EB2D0000 		.4byte	0x2deb
 10038 2e0e 05       		.uleb128 0x5
 10039 2e0f 03       		.byte	0x3
 10040 2e10 28010000 		.4byte	xYieldPending
 10041 2e14 28       		.uleb128 0x28
 10042 2e15 B4090000 		.4byte	.LASF506
 10043 2e19 01       		.byte	0x1
 10044 2e1a 7A01     		.2byte	0x17a
 10045 2e1c EB2D0000 		.4byte	0x2deb
 10046 2e20 05       		.uleb128 0x5
 10047 2e21 03       		.byte	0x3
 10048 2e22 20010000 		.4byte	xNumOfOverflows
 10049 2e26 28       		.uleb128 0x28
 10050 2e27 A6020000 		.4byte	.LASF507
 10051 2e2b 01       		.byte	0x1
 10052 2e2c 7B01     		.2byte	0x17b
 10053 2e2e E00D0000 		.4byte	0xde0
 10054 2e32 05       		.uleb128 0x5
 10055 2e33 03       		.byte	0x3
 10056 2e34 08010000 		.4byte	uxTaskNumber
 10057 2e38 28       		.uleb128 0x28
 10058 2e39 220D0000 		.4byte	.LASF508
 10059 2e3d 01       		.byte	0x1
 10060 2e3e 7C01     		.2byte	0x17c
 10061 2e40 C22D0000 		.4byte	0x2dc2
 10062 2e44 05       		.uleb128 0x5
 10063 2e45 03       		.byte	0x3
 10064 2e46 2C000000 		.4byte	xNextTaskUnblockTime
 10065 2e4a 28       		.uleb128 0x28
 10066 2e4b AA110000 		.4byte	.LASF509
 10067 2e4f 01       		.byte	0x1
 10068 2e50 7D01     		.2byte	0x17d
 10069 2e52 E30E0000 		.4byte	0xee3
 10070 2e56 05       		.uleb128 0x5
 10071 2e57 03       		.byte	0x3
 10072 2e58 1C010000 		.4byte	xIdleTaskHandle
 10073 2e5c 28       		.uleb128 0x28
 10074 2e5d 8D0D0000 		.4byte	.LASF510
 10075 2e61 01       		.byte	0x1
 10076 2e62 8701     		.2byte	0x187
 10077 2e64 CD0E0000 		.4byte	0xecd
 10078 2e68 05       		.uleb128 0x5
 10079 2e69 03       		.byte	0x3
 10080 2e6a 18010000 		.4byte	uxSchedulerSuspended
 10081 2e6e 38       		.uleb128 0x38
 10082 2e6f 55220000 		.4byte	.LASF511
 10083 2e73 06       		.byte	0x6
 10084 2e74 A7       		.byte	0xa7
 10085 2e75 792E0000 		.4byte	0x2e79
 10086 2e79 06       		.uleb128 0x6
 10087 2e7a 04       		.byte	0x4
 10088 2e7b 7F2E0000 		.4byte	0x2e7f
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 280


 10089 2e7f 07       		.uleb128 0x7
 10090 2e80 27050000 		.4byte	0x527
 10091 2e84 39       		.uleb128 0x39
 10092 2e85 5C160000 		.4byte	.LASF512
 10093 2e89 11       		.byte	0x11
 10094 2e8a F907     		.2byte	0x7f9
 10095 2e8c 902E0000 		.4byte	0x2e90
 10096 2e90 08       		.uleb128 0x8
 10097 2e91 F6000000 		.4byte	0xf6
 10098 2e95 17       		.uleb128 0x17
 10099 2e96 010D0000 		.4byte	0xd01
 10100 2e9a A52E0000 		.4byte	0x2ea5
 10101 2e9e 18       		.uleb128 0x18
 10102 2e9f B4000000 		.4byte	0xb4
 10103 2ea3 0B       		.byte	0xb
 10104 2ea4 00       		.byte	0
 10105 2ea5 39       		.uleb128 0x39
 10106 2ea6 0A270000 		.4byte	.LASF513
 10107 2eaa 07       		.byte	0x7
 10108 2eab 0303     		.2byte	0x303
 10109 2ead B12E0000 		.4byte	0x2eb1
 10110 2eb1 07       		.uleb128 0x7
 10111 2eb2 952E0000 		.4byte	0x2e95
 10112 2eb6 39       		.uleb128 0x39
 10113 2eb7 07260000 		.4byte	.LASF514
 10114 2ebb 0D       		.byte	0xd
 10115 2ebc 2202     		.2byte	0x222
 10116 2ebe 5B0D0000 		.4byte	0xd5b
 10117 2ec2 17       		.uleb128 0x17
 10118 2ec3 2A0D0000 		.4byte	0xd2a
 10119 2ec7 D22E0000 		.4byte	0x2ed2
 10120 2ecb 18       		.uleb128 0x18
 10121 2ecc B4000000 		.4byte	0xb4
 10122 2ed0 00       		.byte	0
 10123 2ed1 00       		.byte	0
 10124 2ed2 39       		.uleb128 0x39
 10125 2ed3 F10A0000 		.4byte	.LASF515
 10126 2ed7 0D       		.byte	0xd
 10127 2ed8 2C02     		.2byte	0x22c
 10128 2eda C22E0000 		.4byte	0x2ec2
 10129 2ede 17       		.uleb128 0x17
 10130 2edf A30D0000 		.4byte	0xda3
 10131 2ee3 EE2E0000 		.4byte	0x2eee
 10132 2ee7 18       		.uleb128 0x18
 10133 2ee8 B4000000 		.4byte	0xb4
 10134 2eec 00       		.byte	0
 10135 2eed 00       		.byte	0
 10136 2eee 39       		.uleb128 0x39
 10137 2eef 47250000 		.4byte	.LASF516
 10138 2ef3 0D       		.byte	0xd
 10139 2ef4 2D02     		.2byte	0x22d
 10140 2ef6 DE2E0000 		.4byte	0x2ede
 10141 2efa 39       		.uleb128 0x39
 10142 2efb CA070000 		.4byte	.LASF517
 10143 2eff 0D       		.byte	0xd
 10144 2f00 5202     		.2byte	0x252
 10145 2f02 D5000000 		.4byte	0xd5
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 281


 10146 2f06 38       		.uleb128 0x38
 10147 2f07 FD260000 		.4byte	.LASF518
 10148 2f0b 12       		.byte	0x12
 10149 2f0c 87       		.byte	0x87
 10150 2f0d 71080000 		.4byte	0x871
 10151 2f11 38       		.uleb128 0x38
 10152 2f12 AF1C0000 		.4byte	.LASF519
 10153 2f16 13       		.byte	0x13
 10154 2f17 7F       		.byte	0x7f
 10155 2f18 95070000 		.4byte	0x795
 10156 2f1c 38       		.uleb128 0x38
 10157 2f1d 8C260000 		.4byte	.LASF520
 10158 2f21 14       		.byte	0x14
 10159 2f22 7F       		.byte	0x7f
 10160 2f23 95070000 		.4byte	0x795
 10161 2f27 38       		.uleb128 0x38
 10162 2f28 33240000 		.4byte	.LASF521
 10163 2f2c 15       		.byte	0x15
 10164 2f2d 1F       		.byte	0x1f
 10165 2f2e 322F0000 		.4byte	0x2f32
 10166 2f32 07       		.uleb128 0x7
 10167 2f33 B6090000 		.4byte	0x9b6
 10168 2f37 38       		.uleb128 0x38
 10169 2f38 39130000 		.4byte	.LASF522
 10170 2f3c 16       		.byte	0x16
 10171 2f3d 7C       		.byte	0x7c
 10172 2f3e 46050000 		.4byte	0x546
 10173 2f42 38       		.uleb128 0x38
 10174 2f43 F3250000 		.4byte	.LASF523
 10175 2f47 16       		.byte	0x16
 10176 2f48 7D       		.byte	0x7d
 10177 2f49 4D2F0000 		.4byte	0x2f4d
 10178 2f4d 07       		.uleb128 0x7
 10179 2f4e FB050000 		.4byte	0x5fb
 10180 2f52 3A       		.uleb128 0x3a
 10181 2f53 56060000 		.4byte	.LASF524
 10182 2f57 01       		.byte	0x1
 10183 2f58 5C01     		.2byte	0x15c
 10184 2f5a 642F0000 		.4byte	0x2f64
 10185 2f5e 05       		.uleb128 0x5
 10186 2f5f 03       		.byte	0x3
 10187 2f60 00000000 		.4byte	pxCurrentTCB
 10188 2f64 08       		.uleb128 0x8
 10189 2f65 4F110000 		.4byte	0x114f
 10190 2f69 3B       		.uleb128 0x3b
 10191 2f6a 24290000 		.4byte	.LASF525
 10192 2f6e 24290000 		.4byte	.LASF525
 10193 2f72 17       		.byte	0x17
 10194 2f73 82       		.byte	0x82
 10195 2f74 3B       		.uleb128 0x3b
 10196 2f75 C7200000 		.4byte	.LASF526
 10197 2f79 C7200000 		.4byte	.LASF526
 10198 2f7d 18       		.byte	0x18
 10199 2f7e 19       		.byte	0x19
 10200 2f7f 3C       		.uleb128 0x3c
 10201 2f80 0C1B0000 		.4byte	.LASF527
 10202 2f84 0C1B0000 		.4byte	.LASF527
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 282


 10203 2f88 0F       		.byte	0xf
 10204 2f89 6301     		.2byte	0x163
 10205 2f8b 3B       		.uleb128 0x3b
 10206 2f8c B40C0000 		.4byte	.LASF528
 10207 2f90 B40C0000 		.4byte	.LASF528
 10208 2f94 17       		.byte	0x17
 10209 2f95 66       		.byte	0x66
 10210 2f96 3C       		.uleb128 0x3c
 10211 2f97 35080000 		.4byte	.LASF529
 10212 2f9b 35080000 		.4byte	.LASF529
 10213 2f9f 0F       		.byte	0xf
 10214 2fa0 5801     		.2byte	0x158
 10215 2fa2 3B       		.uleb128 0x3b
 10216 2fa3 021E0000 		.4byte	.LASF530
 10217 2fa7 021E0000 		.4byte	.LASF530
 10218 2fab 02       		.byte	0x2
 10219 2fac 61       		.byte	0x61
 10220 2fad 3C       		.uleb128 0x3c
 10221 2fae E0260000 		.4byte	.LASF531
 10222 2fb2 E0260000 		.4byte	.LASF531
 10223 2fb6 0F       		.byte	0xf
 10224 2fb7 8501     		.2byte	0x185
 10225 2fb9 3B       		.uleb128 0x3b
 10226 2fba 49180000 		.4byte	.LASF532
 10227 2fbe 49180000 		.4byte	.LASF532
 10228 2fc2 02       		.byte	0x2
 10229 2fc3 62       		.byte	0x62
 10230 2fc4 3C       		.uleb128 0x3c
 10231 2fc5 30230000 		.4byte	.LASF533
 10232 2fc9 30230000 		.4byte	.LASF533
 10233 2fcd 0F       		.byte	0xf
 10234 2fce 9401     		.2byte	0x194
 10235 2fd0 3C       		.uleb128 0x3c
 10236 2fd1 E5030000 		.4byte	.LASF534
 10237 2fd5 E5030000 		.4byte	.LASF534
 10238 2fd9 0F       		.byte	0xf
 10239 2fda 7001     		.2byte	0x170
 10240 2fdc 3B       		.uleb128 0x3b
 10241 2fdd 84080000 		.4byte	.LASF535
 10242 2fe1 84080000 		.4byte	.LASF535
 10243 2fe5 17       		.byte	0x17
 10244 2fe6 81       		.byte	0x81
 10245 2fe7 3B       		.uleb128 0x3b
 10246 2fe8 70270000 		.4byte	.LASF536
 10247 2fec 70270000 		.4byte	.LASF536
 10248 2ff0 02       		.byte	0x2
 10249 2ff1 75       		.byte	0x75
 10250 2ff2 3C       		.uleb128 0x3c
 10251 2ff3 92230000 		.4byte	.LASF537
 10252 2ff7 92230000 		.4byte	.LASF537
 10253 2ffb 19       		.byte	0x19
 10254 2ffc EF04     		.2byte	0x4ef
 10255 2ffe 3B       		.uleb128 0x3b
 10256 2fff 6F110000 		.4byte	.LASF538
 10257 3003 6F110000 		.4byte	.LASF538
 10258 3007 17       		.byte	0x17
 10259 3008 8B       		.byte	0x8b
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 283


 10260 3009 3B       		.uleb128 0x3b
 10261 300a 79280000 		.4byte	.LASF539
 10262 300e 79280000 		.4byte	.LASF539
 10263 3012 17       		.byte	0x17
 10264 3013 92       		.byte	0x92
 10265 3014 3C       		.uleb128 0x3c
 10266 3015 D90B0000 		.4byte	.LASF540
 10267 3019 D90B0000 		.4byte	.LASF540
 10268 301d 01       		.byte	0x1
 10269 301e 9701     		.2byte	0x197
 10270 3020 00       		.byte	0
 10271              		.section	.debug_abbrev,"",%progbits
 10272              	.Ldebug_abbrev0:
 10273 0000 01       		.uleb128 0x1
 10274 0001 11       		.uleb128 0x11
 10275 0002 01       		.byte	0x1
 10276 0003 25       		.uleb128 0x25
 10277 0004 0E       		.uleb128 0xe
 10278 0005 13       		.uleb128 0x13
 10279 0006 0B       		.uleb128 0xb
 10280 0007 03       		.uleb128 0x3
 10281 0008 0E       		.uleb128 0xe
 10282 0009 1B       		.uleb128 0x1b
 10283 000a 0E       		.uleb128 0xe
 10284 000b 55       		.uleb128 0x55
 10285 000c 17       		.uleb128 0x17
 10286 000d 11       		.uleb128 0x11
 10287 000e 01       		.uleb128 0x1
 10288 000f 10       		.uleb128 0x10
 10289 0010 17       		.uleb128 0x17
 10290 0011 00       		.byte	0
 10291 0012 00       		.byte	0
 10292 0013 02       		.uleb128 0x2
 10293 0014 16       		.uleb128 0x16
 10294 0015 00       		.byte	0
 10295 0016 03       		.uleb128 0x3
 10296 0017 0E       		.uleb128 0xe
 10297 0018 3A       		.uleb128 0x3a
 10298 0019 0B       		.uleb128 0xb
 10299 001a 3B       		.uleb128 0x3b
 10300 001b 0B       		.uleb128 0xb
 10301 001c 49       		.uleb128 0x49
 10302 001d 13       		.uleb128 0x13
 10303 001e 00       		.byte	0
 10304 001f 00       		.byte	0
 10305 0020 03       		.uleb128 0x3
 10306 0021 24       		.uleb128 0x24
 10307 0022 00       		.byte	0
 10308 0023 0B       		.uleb128 0xb
 10309 0024 0B       		.uleb128 0xb
 10310 0025 3E       		.uleb128 0x3e
 10311 0026 0B       		.uleb128 0xb
 10312 0027 03       		.uleb128 0x3
 10313 0028 0E       		.uleb128 0xe
 10314 0029 00       		.byte	0
 10315 002a 00       		.byte	0
 10316 002b 04       		.uleb128 0x4
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 284


 10317 002c 24       		.uleb128 0x24
 10318 002d 00       		.byte	0
 10319 002e 0B       		.uleb128 0xb
 10320 002f 0B       		.uleb128 0xb
 10321 0030 3E       		.uleb128 0x3e
 10322 0031 0B       		.uleb128 0xb
 10323 0032 03       		.uleb128 0x3
 10324 0033 08       		.uleb128 0x8
 10325 0034 00       		.byte	0
 10326 0035 00       		.byte	0
 10327 0036 05       		.uleb128 0x5
 10328 0037 0F       		.uleb128 0xf
 10329 0038 00       		.byte	0
 10330 0039 0B       		.uleb128 0xb
 10331 003a 0B       		.uleb128 0xb
 10332 003b 00       		.byte	0
 10333 003c 00       		.byte	0
 10334 003d 06       		.uleb128 0x6
 10335 003e 0F       		.uleb128 0xf
 10336 003f 00       		.byte	0
 10337 0040 0B       		.uleb128 0xb
 10338 0041 0B       		.uleb128 0xb
 10339 0042 49       		.uleb128 0x49
 10340 0043 13       		.uleb128 0x13
 10341 0044 00       		.byte	0
 10342 0045 00       		.byte	0
 10343 0046 07       		.uleb128 0x7
 10344 0047 26       		.uleb128 0x26
 10345 0048 00       		.byte	0
 10346 0049 49       		.uleb128 0x49
 10347 004a 13       		.uleb128 0x13
 10348 004b 00       		.byte	0
 10349 004c 00       		.byte	0
 10350 004d 08       		.uleb128 0x8
 10351 004e 35       		.uleb128 0x35
 10352 004f 00       		.byte	0
 10353 0050 49       		.uleb128 0x49
 10354 0051 13       		.uleb128 0x13
 10355 0052 00       		.byte	0
 10356 0053 00       		.byte	0
 10357 0054 09       		.uleb128 0x9
 10358 0055 13       		.uleb128 0x13
 10359 0056 01       		.byte	0x1
 10360 0057 0B       		.uleb128 0xb
 10361 0058 0B       		.uleb128 0xb
 10362 0059 3A       		.uleb128 0x3a
 10363 005a 0B       		.uleb128 0xb
 10364 005b 3B       		.uleb128 0x3b
 10365 005c 0B       		.uleb128 0xb
 10366 005d 01       		.uleb128 0x1
 10367 005e 13       		.uleb128 0x13
 10368 005f 00       		.byte	0
 10369 0060 00       		.byte	0
 10370 0061 0A       		.uleb128 0xa
 10371 0062 0D       		.uleb128 0xd
 10372 0063 00       		.byte	0
 10373 0064 03       		.uleb128 0x3
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 285


 10374 0065 0E       		.uleb128 0xe
 10375 0066 3A       		.uleb128 0x3a
 10376 0067 0B       		.uleb128 0xb
 10377 0068 3B       		.uleb128 0x3b
 10378 0069 0B       		.uleb128 0xb
 10379 006a 49       		.uleb128 0x49
 10380 006b 13       		.uleb128 0x13
 10381 006c 38       		.uleb128 0x38
 10382 006d 0B       		.uleb128 0xb
 10383 006e 00       		.byte	0
 10384 006f 00       		.byte	0
 10385 0070 0B       		.uleb128 0xb
 10386 0071 04       		.uleb128 0x4
 10387 0072 01       		.byte	0x1
 10388 0073 0B       		.uleb128 0xb
 10389 0074 0B       		.uleb128 0xb
 10390 0075 49       		.uleb128 0x49
 10391 0076 13       		.uleb128 0x13
 10392 0077 3A       		.uleb128 0x3a
 10393 0078 0B       		.uleb128 0xb
 10394 0079 3B       		.uleb128 0x3b
 10395 007a 05       		.uleb128 0x5
 10396 007b 01       		.uleb128 0x1
 10397 007c 13       		.uleb128 0x13
 10398 007d 00       		.byte	0
 10399 007e 00       		.byte	0
 10400 007f 0C       		.uleb128 0xc
 10401 0080 28       		.uleb128 0x28
 10402 0081 00       		.byte	0
 10403 0082 03       		.uleb128 0x3
 10404 0083 0E       		.uleb128 0xe
 10405 0084 1C       		.uleb128 0x1c
 10406 0085 0B       		.uleb128 0xb
 10407 0086 00       		.byte	0
 10408 0087 00       		.byte	0
 10409 0088 0D       		.uleb128 0xd
 10410 0089 16       		.uleb128 0x16
 10411 008a 00       		.byte	0
 10412 008b 03       		.uleb128 0x3
 10413 008c 0E       		.uleb128 0xe
 10414 008d 3A       		.uleb128 0x3a
 10415 008e 0B       		.uleb128 0xb
 10416 008f 3B       		.uleb128 0x3b
 10417 0090 05       		.uleb128 0x5
 10418 0091 49       		.uleb128 0x49
 10419 0092 13       		.uleb128 0x13
 10420 0093 00       		.byte	0
 10421 0094 00       		.byte	0
 10422 0095 0E       		.uleb128 0xe
 10423 0096 13       		.uleb128 0x13
 10424 0097 01       		.byte	0x1
 10425 0098 0B       		.uleb128 0xb
 10426 0099 0B       		.uleb128 0xb
 10427 009a 3A       		.uleb128 0x3a
 10428 009b 0B       		.uleb128 0xb
 10429 009c 3B       		.uleb128 0x3b
 10430 009d 05       		.uleb128 0x5
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 286


 10431 009e 01       		.uleb128 0x1
 10432 009f 13       		.uleb128 0x13
 10433 00a0 00       		.byte	0
 10434 00a1 00       		.byte	0
 10435 00a2 0F       		.uleb128 0xf
 10436 00a3 0D       		.uleb128 0xd
 10437 00a4 00       		.byte	0
 10438 00a5 03       		.uleb128 0x3
 10439 00a6 0E       		.uleb128 0xe
 10440 00a7 3A       		.uleb128 0x3a
 10441 00a8 0B       		.uleb128 0xb
 10442 00a9 3B       		.uleb128 0x3b
 10443 00aa 05       		.uleb128 0x5
 10444 00ab 49       		.uleb128 0x49
 10445 00ac 13       		.uleb128 0x13
 10446 00ad 38       		.uleb128 0x38
 10447 00ae 0B       		.uleb128 0xb
 10448 00af 00       		.byte	0
 10449 00b0 00       		.byte	0
 10450 00b1 10       		.uleb128 0x10
 10451 00b2 15       		.uleb128 0x15
 10452 00b3 01       		.byte	0x1
 10453 00b4 27       		.uleb128 0x27
 10454 00b5 19       		.uleb128 0x19
 10455 00b6 01       		.uleb128 0x1
 10456 00b7 13       		.uleb128 0x13
 10457 00b8 00       		.byte	0
 10458 00b9 00       		.byte	0
 10459 00ba 11       		.uleb128 0x11
 10460 00bb 05       		.uleb128 0x5
 10461 00bc 00       		.byte	0
 10462 00bd 49       		.uleb128 0x49
 10463 00be 13       		.uleb128 0x13
 10464 00bf 00       		.byte	0
 10465 00c0 00       		.byte	0
 10466 00c1 12       		.uleb128 0x12
 10467 00c2 15       		.uleb128 0x15
 10468 00c3 01       		.byte	0x1
 10469 00c4 27       		.uleb128 0x27
 10470 00c5 19       		.uleb128 0x19
 10471 00c6 49       		.uleb128 0x49
 10472 00c7 13       		.uleb128 0x13
 10473 00c8 01       		.uleb128 0x1
 10474 00c9 13       		.uleb128 0x13
 10475 00ca 00       		.byte	0
 10476 00cb 00       		.byte	0
 10477 00cc 13       		.uleb128 0x13
 10478 00cd 13       		.uleb128 0x13
 10479 00ce 01       		.byte	0x1
 10480 00cf 03       		.uleb128 0x3
 10481 00d0 0E       		.uleb128 0xe
 10482 00d1 0B       		.uleb128 0xb
 10483 00d2 0B       		.uleb128 0xb
 10484 00d3 3A       		.uleb128 0x3a
 10485 00d4 0B       		.uleb128 0xb
 10486 00d5 3B       		.uleb128 0x3b
 10487 00d6 05       		.uleb128 0x5
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 287


 10488 00d7 01       		.uleb128 0x1
 10489 00d8 13       		.uleb128 0x13
 10490 00d9 00       		.byte	0
 10491 00da 00       		.byte	0
 10492 00db 14       		.uleb128 0x14
 10493 00dc 13       		.uleb128 0x13
 10494 00dd 01       		.byte	0x1
 10495 00de 03       		.uleb128 0x3
 10496 00df 0E       		.uleb128 0xe
 10497 00e0 0B       		.uleb128 0xb
 10498 00e1 0B       		.uleb128 0xb
 10499 00e2 3A       		.uleb128 0x3a
 10500 00e3 0B       		.uleb128 0xb
 10501 00e4 3B       		.uleb128 0x3b
 10502 00e5 0B       		.uleb128 0xb
 10503 00e6 01       		.uleb128 0x1
 10504 00e7 13       		.uleb128 0x13
 10505 00e8 00       		.byte	0
 10506 00e9 00       		.byte	0
 10507 00ea 15       		.uleb128 0x15
 10508 00eb 28       		.uleb128 0x28
 10509 00ec 00       		.byte	0
 10510 00ed 03       		.uleb128 0x3
 10511 00ee 0E       		.uleb128 0xe
 10512 00ef 1C       		.uleb128 0x1c
 10513 00f0 05       		.uleb128 0x5
 10514 00f1 00       		.byte	0
 10515 00f2 00       		.byte	0
 10516 00f3 16       		.uleb128 0x16
 10517 00f4 04       		.uleb128 0x4
 10518 00f5 01       		.byte	0x1
 10519 00f6 0B       		.uleb128 0xb
 10520 00f7 0B       		.uleb128 0xb
 10521 00f8 49       		.uleb128 0x49
 10522 00f9 13       		.uleb128 0x13
 10523 00fa 3A       		.uleb128 0x3a
 10524 00fb 0B       		.uleb128 0xb
 10525 00fc 3B       		.uleb128 0x3b
 10526 00fd 0B       		.uleb128 0xb
 10527 00fe 01       		.uleb128 0x1
 10528 00ff 13       		.uleb128 0x13
 10529 0100 00       		.byte	0
 10530 0101 00       		.byte	0
 10531 0102 17       		.uleb128 0x17
 10532 0103 01       		.uleb128 0x1
 10533 0104 01       		.byte	0x1
 10534 0105 49       		.uleb128 0x49
 10535 0106 13       		.uleb128 0x13
 10536 0107 01       		.uleb128 0x1
 10537 0108 13       		.uleb128 0x13
 10538 0109 00       		.byte	0
 10539 010a 00       		.byte	0
 10540 010b 18       		.uleb128 0x18
 10541 010c 21       		.uleb128 0x21
 10542 010d 00       		.byte	0
 10543 010e 49       		.uleb128 0x49
 10544 010f 13       		.uleb128 0x13
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 288


 10545 0110 2F       		.uleb128 0x2f
 10546 0111 0B       		.uleb128 0xb
 10547 0112 00       		.byte	0
 10548 0113 00       		.byte	0
 10549 0114 19       		.uleb128 0x19
 10550 0115 2E       		.uleb128 0x2e
 10551 0116 01       		.byte	0x1
 10552 0117 03       		.uleb128 0x3
 10553 0118 0E       		.uleb128 0xe
 10554 0119 3A       		.uleb128 0x3a
 10555 011a 0B       		.uleb128 0xb
 10556 011b 3B       		.uleb128 0x3b
 10557 011c 0B       		.uleb128 0xb
 10558 011d 27       		.uleb128 0x27
 10559 011e 19       		.uleb128 0x19
 10560 011f 20       		.uleb128 0x20
 10561 0120 0B       		.uleb128 0xb
 10562 0121 01       		.uleb128 0x1
 10563 0122 13       		.uleb128 0x13
 10564 0123 00       		.byte	0
 10565 0124 00       		.byte	0
 10566 0125 1A       		.uleb128 0x1a
 10567 0126 34       		.uleb128 0x34
 10568 0127 00       		.byte	0
 10569 0128 03       		.uleb128 0x3
 10570 0129 0E       		.uleb128 0xe
 10571 012a 3A       		.uleb128 0x3a
 10572 012b 0B       		.uleb128 0xb
 10573 012c 3B       		.uleb128 0x3b
 10574 012d 0B       		.uleb128 0xb
 10575 012e 49       		.uleb128 0x49
 10576 012f 13       		.uleb128 0x13
 10577 0130 00       		.byte	0
 10578 0131 00       		.byte	0
 10579 0132 1B       		.uleb128 0x1b
 10580 0133 2E       		.uleb128 0x2e
 10581 0134 01       		.byte	0x1
 10582 0135 03       		.uleb128 0x3
 10583 0136 0E       		.uleb128 0xe
 10584 0137 3A       		.uleb128 0x3a
 10585 0138 0B       		.uleb128 0xb
 10586 0139 3B       		.uleb128 0x3b
 10587 013a 0B       		.uleb128 0xb
 10588 013b 27       		.uleb128 0x27
 10589 013c 19       		.uleb128 0x19
 10590 013d 49       		.uleb128 0x49
 10591 013e 13       		.uleb128 0x13
 10592 013f 20       		.uleb128 0x20
 10593 0140 0B       		.uleb128 0xb
 10594 0141 01       		.uleb128 0x1
 10595 0142 13       		.uleb128 0x13
 10596 0143 00       		.byte	0
 10597 0144 00       		.byte	0
 10598 0145 1C       		.uleb128 0x1c
 10599 0146 05       		.uleb128 0x5
 10600 0147 00       		.byte	0
 10601 0148 03       		.uleb128 0x3
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 289


 10602 0149 0E       		.uleb128 0xe
 10603 014a 3A       		.uleb128 0x3a
 10604 014b 0B       		.uleb128 0xb
 10605 014c 3B       		.uleb128 0x3b
 10606 014d 0B       		.uleb128 0xb
 10607 014e 49       		.uleb128 0x49
 10608 014f 13       		.uleb128 0x13
 10609 0150 00       		.byte	0
 10610 0151 00       		.byte	0
 10611 0152 1D       		.uleb128 0x1d
 10612 0153 2E       		.uleb128 0x2e
 10613 0154 01       		.byte	0x1
 10614 0155 03       		.uleb128 0x3
 10615 0156 0E       		.uleb128 0xe
 10616 0157 3A       		.uleb128 0x3a
 10617 0158 0B       		.uleb128 0xb
 10618 0159 3B       		.uleb128 0x3b
 10619 015a 05       		.uleb128 0x5
 10620 015b 27       		.uleb128 0x27
 10621 015c 19       		.uleb128 0x19
 10622 015d 49       		.uleb128 0x49
 10623 015e 13       		.uleb128 0x13
 10624 015f 11       		.uleb128 0x11
 10625 0160 01       		.uleb128 0x1
 10626 0161 12       		.uleb128 0x12
 10627 0162 06       		.uleb128 0x6
 10628 0163 40       		.uleb128 0x40
 10629 0164 18       		.uleb128 0x18
 10630 0165 9742     		.uleb128 0x2117
 10631 0167 19       		.uleb128 0x19
 10632 0168 01       		.uleb128 0x1
 10633 0169 13       		.uleb128 0x13
 10634 016a 00       		.byte	0
 10635 016b 00       		.byte	0
 10636 016c 1E       		.uleb128 0x1e
 10637 016d 05       		.uleb128 0x5
 10638 016e 00       		.byte	0
 10639 016f 03       		.uleb128 0x3
 10640 0170 0E       		.uleb128 0xe
 10641 0171 3A       		.uleb128 0x3a
 10642 0172 0B       		.uleb128 0xb
 10643 0173 3B       		.uleb128 0x3b
 10644 0174 05       		.uleb128 0x5
 10645 0175 49       		.uleb128 0x49
 10646 0176 13       		.uleb128 0x13
 10647 0177 02       		.uleb128 0x2
 10648 0178 17       		.uleb128 0x17
 10649 0179 00       		.byte	0
 10650 017a 00       		.byte	0
 10651 017b 1F       		.uleb128 0x1f
 10652 017c 34       		.uleb128 0x34
 10653 017d 00       		.byte	0
 10654 017e 03       		.uleb128 0x3
 10655 017f 0E       		.uleb128 0xe
 10656 0180 3A       		.uleb128 0x3a
 10657 0181 0B       		.uleb128 0xb
 10658 0182 3B       		.uleb128 0x3b
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 290


 10659 0183 05       		.uleb128 0x5
 10660 0184 49       		.uleb128 0x49
 10661 0185 13       		.uleb128 0x13
 10662 0186 02       		.uleb128 0x2
 10663 0187 17       		.uleb128 0x17
 10664 0188 00       		.byte	0
 10665 0189 00       		.byte	0
 10666 018a 20       		.uleb128 0x20
 10667 018b 1D       		.uleb128 0x1d
 10668 018c 01       		.byte	0x1
 10669 018d 31       		.uleb128 0x31
 10670 018e 13       		.uleb128 0x13
 10671 018f 11       		.uleb128 0x11
 10672 0190 01       		.uleb128 0x1
 10673 0191 12       		.uleb128 0x12
 10674 0192 06       		.uleb128 0x6
 10675 0193 58       		.uleb128 0x58
 10676 0194 0B       		.uleb128 0xb
 10677 0195 59       		.uleb128 0x59
 10678 0196 05       		.uleb128 0x5
 10679 0197 00       		.byte	0
 10680 0198 00       		.byte	0
 10681 0199 21       		.uleb128 0x21
 10682 019a 0B       		.uleb128 0xb
 10683 019b 01       		.byte	0x1
 10684 019c 11       		.uleb128 0x11
 10685 019d 01       		.uleb128 0x1
 10686 019e 12       		.uleb128 0x12
 10687 019f 06       		.uleb128 0x6
 10688 01a0 00       		.byte	0
 10689 01a1 00       		.byte	0
 10690 01a2 22       		.uleb128 0x22
 10691 01a3 34       		.uleb128 0x34
 10692 01a4 00       		.byte	0
 10693 01a5 31       		.uleb128 0x31
 10694 01a6 13       		.uleb128 0x13
 10695 01a7 00       		.byte	0
 10696 01a8 00       		.byte	0
 10697 01a9 23       		.uleb128 0x23
 10698 01aa 2E       		.uleb128 0x2e
 10699 01ab 01       		.byte	0x1
 10700 01ac 03       		.uleb128 0x3
 10701 01ad 0E       		.uleb128 0xe
 10702 01ae 3A       		.uleb128 0x3a
 10703 01af 0B       		.uleb128 0xb
 10704 01b0 3B       		.uleb128 0x3b
 10705 01b1 05       		.uleb128 0x5
 10706 01b2 27       		.uleb128 0x27
 10707 01b3 19       		.uleb128 0x19
 10708 01b4 11       		.uleb128 0x11
 10709 01b5 01       		.uleb128 0x1
 10710 01b6 12       		.uleb128 0x12
 10711 01b7 06       		.uleb128 0x6
 10712 01b8 40       		.uleb128 0x40
 10713 01b9 18       		.uleb128 0x18
 10714 01ba 9742     		.uleb128 0x2117
 10715 01bc 19       		.uleb128 0x19
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 291


 10716 01bd 01       		.uleb128 0x1
 10717 01be 13       		.uleb128 0x13
 10718 01bf 00       		.byte	0
 10719 01c0 00       		.byte	0
 10720 01c1 24       		.uleb128 0x24
 10721 01c2 898201   		.uleb128 0x4109
 10722 01c5 00       		.byte	0
 10723 01c6 11       		.uleb128 0x11
 10724 01c7 01       		.uleb128 0x1
 10725 01c8 31       		.uleb128 0x31
 10726 01c9 13       		.uleb128 0x13
 10727 01ca 00       		.byte	0
 10728 01cb 00       		.byte	0
 10729 01cc 25       		.uleb128 0x25
 10730 01cd 898201   		.uleb128 0x4109
 10731 01d0 01       		.byte	0x1
 10732 01d1 11       		.uleb128 0x11
 10733 01d2 01       		.uleb128 0x1
 10734 01d3 31       		.uleb128 0x31
 10735 01d4 13       		.uleb128 0x13
 10736 01d5 00       		.byte	0
 10737 01d6 00       		.byte	0
 10738 01d7 26       		.uleb128 0x26
 10739 01d8 8A8201   		.uleb128 0x410a
 10740 01db 00       		.byte	0
 10741 01dc 02       		.uleb128 0x2
 10742 01dd 18       		.uleb128 0x18
 10743 01de 9142     		.uleb128 0x2111
 10744 01e0 18       		.uleb128 0x18
 10745 01e1 00       		.byte	0
 10746 01e2 00       		.byte	0
 10747 01e3 27       		.uleb128 0x27
 10748 01e4 05       		.uleb128 0x5
 10749 01e5 00       		.byte	0
 10750 01e6 03       		.uleb128 0x3
 10751 01e7 0E       		.uleb128 0xe
 10752 01e8 3A       		.uleb128 0x3a
 10753 01e9 0B       		.uleb128 0xb
 10754 01ea 3B       		.uleb128 0x3b
 10755 01eb 05       		.uleb128 0x5
 10756 01ec 49       		.uleb128 0x49
 10757 01ed 13       		.uleb128 0x13
 10758 01ee 02       		.uleb128 0x2
 10759 01ef 18       		.uleb128 0x18
 10760 01f0 00       		.byte	0
 10761 01f1 00       		.byte	0
 10762 01f2 28       		.uleb128 0x28
 10763 01f3 34       		.uleb128 0x34
 10764 01f4 00       		.byte	0
 10765 01f5 03       		.uleb128 0x3
 10766 01f6 0E       		.uleb128 0xe
 10767 01f7 3A       		.uleb128 0x3a
 10768 01f8 0B       		.uleb128 0xb
 10769 01f9 3B       		.uleb128 0x3b
 10770 01fa 05       		.uleb128 0x5
 10771 01fb 49       		.uleb128 0x49
 10772 01fc 13       		.uleb128 0x13
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 292


 10773 01fd 02       		.uleb128 0x2
 10774 01fe 18       		.uleb128 0x18
 10775 01ff 00       		.byte	0
 10776 0200 00       		.byte	0
 10777 0201 29       		.uleb128 0x29
 10778 0202 34       		.uleb128 0x34
 10779 0203 00       		.byte	0
 10780 0204 03       		.uleb128 0x3
 10781 0205 08       		.uleb128 0x8
 10782 0206 3A       		.uleb128 0x3a
 10783 0207 0B       		.uleb128 0xb
 10784 0208 3B       		.uleb128 0x3b
 10785 0209 05       		.uleb128 0x5
 10786 020a 49       		.uleb128 0x49
 10787 020b 13       		.uleb128 0x13
 10788 020c 02       		.uleb128 0x2
 10789 020d 17       		.uleb128 0x17
 10790 020e 00       		.byte	0
 10791 020f 00       		.byte	0
 10792 0210 2A       		.uleb128 0x2a
 10793 0211 898201   		.uleb128 0x4109
 10794 0214 01       		.byte	0x1
 10795 0215 11       		.uleb128 0x11
 10796 0216 01       		.uleb128 0x1
 10797 0217 31       		.uleb128 0x31
 10798 0218 13       		.uleb128 0x13
 10799 0219 01       		.uleb128 0x1
 10800 021a 13       		.uleb128 0x13
 10801 021b 00       		.byte	0
 10802 021c 00       		.byte	0
 10803 021d 2B       		.uleb128 0x2b
 10804 021e 2E       		.uleb128 0x2e
 10805 021f 01       		.byte	0x1
 10806 0220 03       		.uleb128 0x3
 10807 0221 0E       		.uleb128 0xe
 10808 0222 3A       		.uleb128 0x3a
 10809 0223 0B       		.uleb128 0xb
 10810 0224 3B       		.uleb128 0x3b
 10811 0225 05       		.uleb128 0x5
 10812 0226 27       		.uleb128 0x27
 10813 0227 19       		.uleb128 0x19
 10814 0228 8701     		.uleb128 0x87
 10815 022a 19       		.uleb128 0x19
 10816 022b 11       		.uleb128 0x11
 10817 022c 01       		.uleb128 0x1
 10818 022d 12       		.uleb128 0x12
 10819 022e 06       		.uleb128 0x6
 10820 022f 40       		.uleb128 0x40
 10821 0230 18       		.uleb128 0x18
 10822 0231 9742     		.uleb128 0x2117
 10823 0233 19       		.uleb128 0x19
 10824 0234 01       		.uleb128 0x1
 10825 0235 13       		.uleb128 0x13
 10826 0236 00       		.byte	0
 10827 0237 00       		.byte	0
 10828 0238 2C       		.uleb128 0x2c
 10829 0239 2E       		.uleb128 0x2e
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 293


 10830 023a 01       		.byte	0x1
 10831 023b 3F       		.uleb128 0x3f
 10832 023c 19       		.uleb128 0x19
 10833 023d 03       		.uleb128 0x3
 10834 023e 0E       		.uleb128 0xe
 10835 023f 3A       		.uleb128 0x3a
 10836 0240 0B       		.uleb128 0xb
 10837 0241 3B       		.uleb128 0x3b
 10838 0242 05       		.uleb128 0x5
 10839 0243 27       		.uleb128 0x27
 10840 0244 19       		.uleb128 0x19
 10841 0245 49       		.uleb128 0x49
 10842 0246 13       		.uleb128 0x13
 10843 0247 11       		.uleb128 0x11
 10844 0248 01       		.uleb128 0x1
 10845 0249 12       		.uleb128 0x12
 10846 024a 06       		.uleb128 0x6
 10847 024b 40       		.uleb128 0x40
 10848 024c 18       		.uleb128 0x18
 10849 024d 9742     		.uleb128 0x2117
 10850 024f 19       		.uleb128 0x19
 10851 0250 01       		.uleb128 0x1
 10852 0251 13       		.uleb128 0x13
 10853 0252 00       		.byte	0
 10854 0253 00       		.byte	0
 10855 0254 2D       		.uleb128 0x2d
 10856 0255 0B       		.uleb128 0xb
 10857 0256 01       		.byte	0x1
 10858 0257 11       		.uleb128 0x11
 10859 0258 01       		.uleb128 0x1
 10860 0259 12       		.uleb128 0x12
 10861 025a 06       		.uleb128 0x6
 10862 025b 01       		.uleb128 0x1
 10863 025c 13       		.uleb128 0x13
 10864 025d 00       		.byte	0
 10865 025e 00       		.byte	0
 10866 025f 2E       		.uleb128 0x2e
 10867 0260 2E       		.uleb128 0x2e
 10868 0261 01       		.byte	0x1
 10869 0262 3F       		.uleb128 0x3f
 10870 0263 19       		.uleb128 0x19
 10871 0264 03       		.uleb128 0x3
 10872 0265 0E       		.uleb128 0xe
 10873 0266 3A       		.uleb128 0x3a
 10874 0267 0B       		.uleb128 0xb
 10875 0268 3B       		.uleb128 0x3b
 10876 0269 05       		.uleb128 0x5
 10877 026a 27       		.uleb128 0x27
 10878 026b 19       		.uleb128 0x19
 10879 026c 11       		.uleb128 0x11
 10880 026d 01       		.uleb128 0x1
 10881 026e 12       		.uleb128 0x12
 10882 026f 06       		.uleb128 0x6
 10883 0270 40       		.uleb128 0x40
 10884 0271 18       		.uleb128 0x18
 10885 0272 9742     		.uleb128 0x2117
 10886 0274 19       		.uleb128 0x19
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 294


 10887 0275 01       		.uleb128 0x1
 10888 0276 13       		.uleb128 0x13
 10889 0277 00       		.byte	0
 10890 0278 00       		.byte	0
 10891 0279 2F       		.uleb128 0x2f
 10892 027a 1D       		.uleb128 0x1d
 10893 027b 01       		.byte	0x1
 10894 027c 31       		.uleb128 0x31
 10895 027d 13       		.uleb128 0x13
 10896 027e 11       		.uleb128 0x11
 10897 027f 01       		.uleb128 0x1
 10898 0280 12       		.uleb128 0x12
 10899 0281 06       		.uleb128 0x6
 10900 0282 58       		.uleb128 0x58
 10901 0283 0B       		.uleb128 0xb
 10902 0284 59       		.uleb128 0x59
 10903 0285 05       		.uleb128 0x5
 10904 0286 01       		.uleb128 0x1
 10905 0287 13       		.uleb128 0x13
 10906 0288 00       		.byte	0
 10907 0289 00       		.byte	0
 10908 028a 30       		.uleb128 0x30
 10909 028b 34       		.uleb128 0x34
 10910 028c 00       		.byte	0
 10911 028d 03       		.uleb128 0x3
 10912 028e 0E       		.uleb128 0xe
 10913 028f 3A       		.uleb128 0x3a
 10914 0290 0B       		.uleb128 0xb
 10915 0291 3B       		.uleb128 0x3b
 10916 0292 05       		.uleb128 0x5
 10917 0293 49       		.uleb128 0x49
 10918 0294 13       		.uleb128 0x13
 10919 0295 00       		.byte	0
 10920 0296 00       		.byte	0
 10921 0297 31       		.uleb128 0x31
 10922 0298 05       		.uleb128 0x5
 10923 0299 00       		.byte	0
 10924 029a 31       		.uleb128 0x31
 10925 029b 13       		.uleb128 0x13
 10926 029c 02       		.uleb128 0x2
 10927 029d 17       		.uleb128 0x17
 10928 029e 00       		.byte	0
 10929 029f 00       		.byte	0
 10930 02a0 32       		.uleb128 0x32
 10931 02a1 2E       		.uleb128 0x2e
 10932 02a2 00       		.byte	0
 10933 02a3 3F       		.uleb128 0x3f
 10934 02a4 19       		.uleb128 0x19
 10935 02a5 03       		.uleb128 0x3
 10936 02a6 0E       		.uleb128 0xe
 10937 02a7 3A       		.uleb128 0x3a
 10938 02a8 0B       		.uleb128 0xb
 10939 02a9 3B       		.uleb128 0x3b
 10940 02aa 05       		.uleb128 0x5
 10941 02ab 27       		.uleb128 0x27
 10942 02ac 19       		.uleb128 0x19
 10943 02ad 11       		.uleb128 0x11
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 295


 10944 02ae 01       		.uleb128 0x1
 10945 02af 12       		.uleb128 0x12
 10946 02b0 06       		.uleb128 0x6
 10947 02b1 40       		.uleb128 0x40
 10948 02b2 18       		.uleb128 0x18
 10949 02b3 9742     		.uleb128 0x2117
 10950 02b5 19       		.uleb128 0x19
 10951 02b6 00       		.byte	0
 10952 02b7 00       		.byte	0
 10953 02b8 33       		.uleb128 0x33
 10954 02b9 34       		.uleb128 0x34
 10955 02ba 00       		.byte	0
 10956 02bb 03       		.uleb128 0x3
 10957 02bc 0E       		.uleb128 0xe
 10958 02bd 3A       		.uleb128 0x3a
 10959 02be 0B       		.uleb128 0xb
 10960 02bf 3B       		.uleb128 0x3b
 10961 02c0 05       		.uleb128 0x5
 10962 02c1 49       		.uleb128 0x49
 10963 02c2 13       		.uleb128 0x13
 10964 02c3 1C       		.uleb128 0x1c
 10965 02c4 0B       		.uleb128 0xb
 10966 02c5 00       		.byte	0
 10967 02c6 00       		.byte	0
 10968 02c7 34       		.uleb128 0x34
 10969 02c8 2E       		.uleb128 0x2e
 10970 02c9 00       		.byte	0
 10971 02ca 3F       		.uleb128 0x3f
 10972 02cb 19       		.uleb128 0x19
 10973 02cc 03       		.uleb128 0x3
 10974 02cd 0E       		.uleb128 0xe
 10975 02ce 3A       		.uleb128 0x3a
 10976 02cf 0B       		.uleb128 0xb
 10977 02d0 3B       		.uleb128 0x3b
 10978 02d1 05       		.uleb128 0x5
 10979 02d2 27       		.uleb128 0x27
 10980 02d3 19       		.uleb128 0x19
 10981 02d4 49       		.uleb128 0x49
 10982 02d5 13       		.uleb128 0x13
 10983 02d6 11       		.uleb128 0x11
 10984 02d7 01       		.uleb128 0x1
 10985 02d8 12       		.uleb128 0x12
 10986 02d9 06       		.uleb128 0x6
 10987 02da 40       		.uleb128 0x40
 10988 02db 18       		.uleb128 0x18
 10989 02dc 9742     		.uleb128 0x2117
 10990 02de 19       		.uleb128 0x19
 10991 02df 00       		.byte	0
 10992 02e0 00       		.byte	0
 10993 02e1 35       		.uleb128 0x35
 10994 02e2 0B       		.uleb128 0xb
 10995 02e3 01       		.byte	0x1
 10996 02e4 55       		.uleb128 0x55
 10997 02e5 17       		.uleb128 0x17
 10998 02e6 00       		.byte	0
 10999 02e7 00       		.byte	0
 11000 02e8 36       		.uleb128 0x36
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 296


 11001 02e9 0B       		.uleb128 0xb
 11002 02ea 01       		.byte	0x1
 11003 02eb 55       		.uleb128 0x55
 11004 02ec 17       		.uleb128 0x17
 11005 02ed 01       		.uleb128 0x1
 11006 02ee 13       		.uleb128 0x13
 11007 02ef 00       		.byte	0
 11008 02f0 00       		.byte	0
 11009 02f1 37       		.uleb128 0x37
 11010 02f2 34       		.uleb128 0x34
 11011 02f3 00       		.byte	0
 11012 02f4 03       		.uleb128 0x3
 11013 02f5 0E       		.uleb128 0xe
 11014 02f6 3A       		.uleb128 0x3a
 11015 02f7 0B       		.uleb128 0xb
 11016 02f8 3B       		.uleb128 0x3b
 11017 02f9 05       		.uleb128 0x5
 11018 02fa 49       		.uleb128 0x49
 11019 02fb 13       		.uleb128 0x13
 11020 02fc 1C       		.uleb128 0x1c
 11021 02fd 0D       		.uleb128 0xd
 11022 02fe 00       		.byte	0
 11023 02ff 00       		.byte	0
 11024 0300 38       		.uleb128 0x38
 11025 0301 34       		.uleb128 0x34
 11026 0302 00       		.byte	0
 11027 0303 03       		.uleb128 0x3
 11028 0304 0E       		.uleb128 0xe
 11029 0305 3A       		.uleb128 0x3a
 11030 0306 0B       		.uleb128 0xb
 11031 0307 3B       		.uleb128 0x3b
 11032 0308 0B       		.uleb128 0xb
 11033 0309 49       		.uleb128 0x49
 11034 030a 13       		.uleb128 0x13
 11035 030b 3F       		.uleb128 0x3f
 11036 030c 19       		.uleb128 0x19
 11037 030d 3C       		.uleb128 0x3c
 11038 030e 19       		.uleb128 0x19
 11039 030f 00       		.byte	0
 11040 0310 00       		.byte	0
 11041 0311 39       		.uleb128 0x39
 11042 0312 34       		.uleb128 0x34
 11043 0313 00       		.byte	0
 11044 0314 03       		.uleb128 0x3
 11045 0315 0E       		.uleb128 0xe
 11046 0316 3A       		.uleb128 0x3a
 11047 0317 0B       		.uleb128 0xb
 11048 0318 3B       		.uleb128 0x3b
 11049 0319 05       		.uleb128 0x5
 11050 031a 49       		.uleb128 0x49
 11051 031b 13       		.uleb128 0x13
 11052 031c 3F       		.uleb128 0x3f
 11053 031d 19       		.uleb128 0x19
 11054 031e 3C       		.uleb128 0x3c
 11055 031f 19       		.uleb128 0x19
 11056 0320 00       		.byte	0
 11057 0321 00       		.byte	0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 297


 11058 0322 3A       		.uleb128 0x3a
 11059 0323 34       		.uleb128 0x34
 11060 0324 00       		.byte	0
 11061 0325 03       		.uleb128 0x3
 11062 0326 0E       		.uleb128 0xe
 11063 0327 3A       		.uleb128 0x3a
 11064 0328 0B       		.uleb128 0xb
 11065 0329 3B       		.uleb128 0x3b
 11066 032a 05       		.uleb128 0x5
 11067 032b 49       		.uleb128 0x49
 11068 032c 13       		.uleb128 0x13
 11069 032d 3F       		.uleb128 0x3f
 11070 032e 19       		.uleb128 0x19
 11071 032f 02       		.uleb128 0x2
 11072 0330 18       		.uleb128 0x18
 11073 0331 00       		.byte	0
 11074 0332 00       		.byte	0
 11075 0333 3B       		.uleb128 0x3b
 11076 0334 2E       		.uleb128 0x2e
 11077 0335 00       		.byte	0
 11078 0336 3F       		.uleb128 0x3f
 11079 0337 19       		.uleb128 0x19
 11080 0338 3C       		.uleb128 0x3c
 11081 0339 19       		.uleb128 0x19
 11082 033a 6E       		.uleb128 0x6e
 11083 033b 0E       		.uleb128 0xe
 11084 033c 03       		.uleb128 0x3
 11085 033d 0E       		.uleb128 0xe
 11086 033e 3A       		.uleb128 0x3a
 11087 033f 0B       		.uleb128 0xb
 11088 0340 3B       		.uleb128 0x3b
 11089 0341 0B       		.uleb128 0xb
 11090 0342 00       		.byte	0
 11091 0343 00       		.byte	0
 11092 0344 3C       		.uleb128 0x3c
 11093 0345 2E       		.uleb128 0x2e
 11094 0346 00       		.byte	0
 11095 0347 3F       		.uleb128 0x3f
 11096 0348 19       		.uleb128 0x19
 11097 0349 3C       		.uleb128 0x3c
 11098 034a 19       		.uleb128 0x19
 11099 034b 6E       		.uleb128 0x6e
 11100 034c 0E       		.uleb128 0xe
 11101 034d 03       		.uleb128 0x3
 11102 034e 0E       		.uleb128 0xe
 11103 034f 3A       		.uleb128 0x3a
 11104 0350 0B       		.uleb128 0xb
 11105 0351 3B       		.uleb128 0x3b
 11106 0352 05       		.uleb128 0x5
 11107 0353 00       		.byte	0
 11108 0354 00       		.byte	0
 11109 0355 00       		.byte	0
 11110              		.section	.debug_loc,"",%progbits
 11111              	.Ldebug_loc0:
 11112              	.LLST0:
 11113 0000 00000000 		.4byte	.LVL0
 11114 0004 36000000 		.4byte	.LVL2
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 298


 11115 0008 0100     		.2byte	0x1
 11116 000a 50       		.byte	0x50
 11117 000b 36000000 		.4byte	.LVL2
 11118 000f 38000000 		.4byte	.LVL3
 11119 0013 0400     		.2byte	0x4
 11120 0015 F3       		.byte	0xf3
 11121 0016 01       		.uleb128 0x1
 11122 0017 50       		.byte	0x50
 11123 0018 9F       		.byte	0x9f
 11124 0019 38000000 		.4byte	.LVL3
 11125 001d 3A000000 		.4byte	.LVL4
 11126 0021 0100     		.2byte	0x1
 11127 0023 50       		.byte	0x50
 11128 0024 3A000000 		.4byte	.LVL4
 11129 0028 3C000000 		.4byte	.LVL5
 11130 002c 0100     		.2byte	0x1
 11131 002e 52       		.byte	0x52
 11132 002f 3C000000 		.4byte	.LVL5
 11133 0033 3E000000 		.4byte	.LVL6
 11134 0037 0100     		.2byte	0x1
 11135 0039 50       		.byte	0x50
 11136 003a 3E000000 		.4byte	.LVL6
 11137 003e 40000000 		.4byte	.LVL7
 11138 0042 0400     		.2byte	0x4
 11139 0044 F3       		.byte	0xf3
 11140 0045 01       		.uleb128 0x1
 11141 0046 50       		.byte	0x50
 11142 0047 9F       		.byte	0x9f
 11143 0048 40000000 		.4byte	.LVL7
 11144 004c 42000000 		.4byte	.LVL8
 11145 0050 0100     		.2byte	0x1
 11146 0052 50       		.byte	0x50
 11147 0053 42000000 		.4byte	.LVL8
 11148 0057 4C000000 		.4byte	.LFE672
 11149 005b 0400     		.2byte	0x4
 11150 005d F3       		.byte	0xf3
 11151 005e 01       		.uleb128 0x1
 11152 005f 50       		.byte	0x50
 11153 0060 9F       		.byte	0x9f
 11154 0061 00000000 		.4byte	0
 11155 0065 00000000 		.4byte	0
 11156              	.LLST1:
 11157 0069 00000000 		.4byte	.LVL0
 11158 006d 42000000 		.4byte	.LVL8
 11159 0071 0200     		.2byte	0x2
 11160 0073 30       		.byte	0x30
 11161 0074 9F       		.byte	0x9f
 11162 0075 42000000 		.4byte	.LVL8
 11163 0079 4C000000 		.4byte	.LFE672
 11164 007d 0100     		.2byte	0x1
 11165 007f 50       		.byte	0x50
 11166 0080 00000000 		.4byte	0
 11167 0084 00000000 		.4byte	0
 11168              	.LLST2:
 11169 0088 00000000 		.4byte	.LVL0
 11170 008c 36000000 		.4byte	.LVL2
 11171 0090 0100     		.2byte	0x1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 299


 11172 0092 50       		.byte	0x50
 11173 0093 36000000 		.4byte	.LVL2
 11174 0097 38000000 		.4byte	.LVL3
 11175 009b 0400     		.2byte	0x4
 11176 009d F3       		.byte	0xf3
 11177 009e 01       		.uleb128 0x1
 11178 009f 50       		.byte	0x50
 11179 00a0 9F       		.byte	0x9f
 11180 00a1 38000000 		.4byte	.LVL3
 11181 00a5 3A000000 		.4byte	.LVL4
 11182 00a9 0100     		.2byte	0x1
 11183 00ab 50       		.byte	0x50
 11184 00ac 3A000000 		.4byte	.LVL4
 11185 00b0 3C000000 		.4byte	.LVL5
 11186 00b4 0100     		.2byte	0x1
 11187 00b6 52       		.byte	0x52
 11188 00b7 3C000000 		.4byte	.LVL5
 11189 00bb 3E000000 		.4byte	.LVL6
 11190 00bf 0100     		.2byte	0x1
 11191 00c1 50       		.byte	0x50
 11192 00c2 3E000000 		.4byte	.LVL6
 11193 00c6 40000000 		.4byte	.LVL7
 11194 00ca 0400     		.2byte	0x4
 11195 00cc F3       		.byte	0xf3
 11196 00cd 01       		.uleb128 0x1
 11197 00ce 50       		.byte	0x50
 11198 00cf 9F       		.byte	0x9f
 11199 00d0 40000000 		.4byte	.LVL7
 11200 00d4 42000000 		.4byte	.LVL8
 11201 00d8 0100     		.2byte	0x1
 11202 00da 50       		.byte	0x50
 11203 00db 42000000 		.4byte	.LVL8
 11204 00df 4C000000 		.4byte	.LFE672
 11205 00e3 0400     		.2byte	0x4
 11206 00e5 F3       		.byte	0xf3
 11207 00e6 01       		.uleb128 0x1
 11208 00e7 50       		.byte	0x50
 11209 00e8 9F       		.byte	0x9f
 11210 00e9 00000000 		.4byte	0
 11211 00ed 00000000 		.4byte	0
 11212              	.LLST3:
 11213 00f1 22000000 		.4byte	.LVL9
 11214 00f5 24000000 		.4byte	.LVL10
 11215 00f9 0100     		.2byte	0x1
 11216 00fb 52       		.byte	0x52
 11217 00fc 00000000 		.4byte	0
 11218 0100 00000000 		.4byte	0
 11219              	.LLST4:
 11220 0104 00000000 		.4byte	.LVL11
 11221 0108 06000000 		.4byte	.LVL12
 11222 010c 0100     		.2byte	0x1
 11223 010e 50       		.byte	0x50
 11224 010f 06000000 		.4byte	.LVL12
 11225 0113 12000000 		.4byte	.LFE699
 11226 0117 0100     		.2byte	0x1
 11227 0119 54       		.byte	0x54
 11228 011a 00000000 		.4byte	0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 300


 11229 011e 00000000 		.4byte	0
 11230              	.LLST5:
 11231 0122 00000000 		.4byte	.LVL15
 11232 0126 18000000 		.4byte	.LVL18
 11233 012a 0100     		.2byte	0x1
 11234 012c 50       		.byte	0x50
 11235 012d 18000000 		.4byte	.LVL18
 11236 0131 9E000000 		.4byte	.LFE663
 11237 0135 0100     		.2byte	0x1
 11238 0137 5A       		.byte	0x5a
 11239 0138 00000000 		.4byte	0
 11240 013c 00000000 		.4byte	0
 11241              	.LLST6:
 11242 0140 00000000 		.4byte	.LVL15
 11243 0144 16000000 		.4byte	.LVL17
 11244 0148 0100     		.2byte	0x1
 11245 014a 51       		.byte	0x51
 11246 014b 16000000 		.4byte	.LVL17
 11247 014f 9E000000 		.4byte	.LFE663
 11248 0153 0100     		.2byte	0x1
 11249 0155 59       		.byte	0x59
 11250 0156 00000000 		.4byte	0
 11251 015a 00000000 		.4byte	0
 11252              	.LLST7:
 11253 015e 00000000 		.4byte	.LVL15
 11254 0162 14000000 		.4byte	.LVL16
 11255 0166 0100     		.2byte	0x1
 11256 0168 52       		.byte	0x52
 11257 0169 14000000 		.4byte	.LVL16
 11258 016d 28000000 		.4byte	.LVL20
 11259 0171 0100     		.2byte	0x1
 11260 0173 55       		.byte	0x55
 11261 0174 28000000 		.4byte	.LVL20
 11262 0178 30000000 		.4byte	.LVL22
 11263 017c 0700     		.2byte	0x7
 11264 017e 72       		.byte	0x72
 11265 017f 81808080 		.sleb128 -1073741823
 11265      7C
 11266 0184 9F       		.byte	0x9f
 11267 0185 30000000 		.4byte	.LVL22
 11268 0189 9E000000 		.4byte	.LFE663
 11269 018d 0400     		.2byte	0x4
 11270 018f F3       		.byte	0xf3
 11271 0190 01       		.uleb128 0x1
 11272 0191 52       		.byte	0x52
 11273 0192 9F       		.byte	0x9f
 11274 0193 00000000 		.4byte	0
 11275 0197 00000000 		.4byte	0
 11276              	.LLST8:
 11277 019b 00000000 		.4byte	.LVL15
 11278 019f 1B000000 		.4byte	.LVL19-1
 11279 01a3 0100     		.2byte	0x1
 11280 01a5 53       		.byte	0x53
 11281 01a6 1B000000 		.4byte	.LVL19-1
 11282 01aa 9E000000 		.4byte	.LFE663
 11283 01ae 0100     		.2byte	0x1
 11284 01b0 58       		.byte	0x58
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 301


 11285 01b1 00000000 		.4byte	0
 11286 01b5 00000000 		.4byte	0
 11287              	.LLST9:
 11288 01b9 00000000 		.4byte	.LVL15
 11289 01bd 52000000 		.4byte	.LVL25
 11290 01c1 0200     		.2byte	0x2
 11291 01c3 91       		.byte	0x91
 11292 01c4 00       		.sleb128 0
 11293 01c5 52000000 		.4byte	.LVL25
 11294 01c9 9E000000 		.4byte	.LFE663
 11295 01cd 0100     		.2byte	0x1
 11296 01cf 57       		.byte	0x57
 11297 01d0 00000000 		.4byte	0
 11298 01d4 00000000 		.4byte	0
 11299              	.LLST10:
 11300 01d8 30000000 		.4byte	.LVL22
 11301 01dc 48000000 		.4byte	.LVL24
 11302 01e0 0100     		.2byte	0x1
 11303 01e2 53       		.byte	0x53
 11304 01e3 6C000000 		.4byte	.LVL28
 11305 01e7 70000000 		.4byte	.LVL29
 11306 01eb 0200     		.2byte	0x2
 11307 01ed 30       		.byte	0x30
 11308 01ee 9F       		.byte	0x9f
 11309 01ef 70000000 		.4byte	.LVL29
 11310 01f3 84000000 		.4byte	.LVL31
 11311 01f7 0100     		.2byte	0x1
 11312 01f9 53       		.byte	0x53
 11313 01fa 00000000 		.4byte	0
 11314 01fe 00000000 		.4byte	0
 11315              	.LLST11:
 11316 0202 02000000 		.4byte	.LVL33
 11317 0206 06000000 		.4byte	.LVL34
 11318 020a 0200     		.2byte	0x2
 11319 020c 30       		.byte	0x30
 11320 020d 9F       		.byte	0x9f
 11321 020e 06000000 		.4byte	.LVL34
 11322 0212 1C000000 		.4byte	.LVL37
 11323 0216 0100     		.2byte	0x1
 11324 0218 54       		.byte	0x54
 11325 0219 00000000 		.4byte	0
 11326 021d 00000000 		.4byte	0
 11327              	.LLST12:
 11328 0221 00000000 		.4byte	.LVL43
 11329 0225 07000000 		.4byte	.LVL44-1
 11330 0229 0100     		.2byte	0x1
 11331 022b 50       		.byte	0x50
 11332 022c 07000000 		.4byte	.LVL44-1
 11333 0230 A2000000 		.4byte	.LVL48
 11334 0234 0100     		.2byte	0x1
 11335 0236 54       		.byte	0x54
 11336 0237 A2000000 		.4byte	.LVL48
 11337 023b AC000000 		.4byte	.LFE664
 11338 023f 0400     		.2byte	0x4
 11339 0241 F3       		.byte	0xf3
 11340 0242 01       		.uleb128 0x1
 11341 0243 50       		.byte	0x50
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 302


 11342 0244 9F       		.byte	0x9f
 11343 0245 00000000 		.4byte	0
 11344 0249 00000000 		.4byte	0
 11345              	.LLST13:
 11346 024d 10000000 		.4byte	.LVL50
 11347 0251 34000000 		.4byte	.LVL53
 11348 0255 0100     		.2byte	0x1
 11349 0257 55       		.byte	0x55
 11350 0258 00000000 		.4byte	0
 11351 025c 00000000 		.4byte	0
 11352              	.LLST14:
 11353 0260 00000000 		.4byte	.LVL54
 11354 0264 02000000 		.4byte	.LVL55
 11355 0268 0100     		.2byte	0x1
 11356 026a 50       		.byte	0x50
 11357 026b 02000000 		.4byte	.LVL55
 11358 026f 28000000 		.4byte	.LFE694
 11359 0273 0400     		.2byte	0x4
 11360 0275 F3       		.byte	0xf3
 11361 0276 01       		.uleb128 0x1
 11362 0277 50       		.byte	0x50
 11363 0278 9F       		.byte	0x9f
 11364 0279 00000000 		.4byte	0
 11365 027d 00000000 		.4byte	0
 11366              	.LLST15:
 11367 0281 00000000 		.4byte	.LVL57
 11368 0285 10000000 		.4byte	.LVL59
 11369 0289 0100     		.2byte	0x1
 11370 028b 50       		.byte	0x50
 11371 028c 10000000 		.4byte	.LVL59
 11372 0290 2E000000 		.4byte	.LVL63
 11373 0294 0100     		.2byte	0x1
 11374 0296 54       		.byte	0x54
 11375 0297 2E000000 		.4byte	.LVL63
 11376 029b 68000000 		.4byte	.LFE710
 11377 029f 0400     		.2byte	0x4
 11378 02a1 F3       		.byte	0xf3
 11379 02a2 01       		.uleb128 0x1
 11380 02a3 50       		.byte	0x50
 11381 02a4 9F       		.byte	0x9f
 11382 02a5 00000000 		.4byte	0
 11383 02a9 00000000 		.4byte	0
 11384              	.LLST16:
 11385 02ad 00000000 		.4byte	.LVL57
 11386 02b1 15000000 		.4byte	.LVL60-1
 11387 02b5 0100     		.2byte	0x1
 11388 02b7 51       		.byte	0x51
 11389 02b8 15000000 		.4byte	.LVL60-1
 11390 02bc 64000000 		.4byte	.LVL68
 11391 02c0 0100     		.2byte	0x1
 11392 02c2 56       		.byte	0x56
 11393 02c3 64000000 		.4byte	.LVL68
 11394 02c7 68000000 		.4byte	.LFE710
 11395 02cb 0400     		.2byte	0x4
 11396 02cd F3       		.byte	0xf3
 11397 02ce 01       		.uleb128 0x1
 11398 02cf 51       		.byte	0x51
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 303


 11399 02d0 9F       		.byte	0x9f
 11400 02d1 00000000 		.4byte	0
 11401 02d5 00000000 		.4byte	0
 11402              	.LLST17:
 11403 02d9 2E000000 		.4byte	.LVL63
 11404 02dd 64000000 		.4byte	.LVL68
 11405 02e1 0100     		.2byte	0x1
 11406 02e3 54       		.byte	0x54
 11407 02e4 00000000 		.4byte	0
 11408 02e8 00000000 		.4byte	0
 11409              	.LLST18:
 11410 02ec 0C000000 		.4byte	.LVL58
 11411 02f0 4E000000 		.4byte	.LVL66
 11412 02f4 0100     		.2byte	0x1
 11413 02f6 55       		.byte	0x55
 11414 02f7 00000000 		.4byte	0
 11415 02fb 00000000 		.4byte	0
 11416              	.LLST19:
 11417 02ff 00000000 		.4byte	.LVL69
 11418 0303 10000000 		.4byte	.LVL70
 11419 0307 0100     		.2byte	0x1
 11420 0309 50       		.byte	0x50
 11421 030a 10000000 		.4byte	.LVL70
 11422 030e 62000000 		.4byte	.LFE662
 11423 0312 0100     		.2byte	0x1
 11424 0314 56       		.byte	0x56
 11425 0315 00000000 		.4byte	0
 11426 0319 00000000 		.4byte	0
 11427              	.LLST20:
 11428 031d 00000000 		.4byte	.LVL69
 11429 0321 13000000 		.4byte	.LVL71-1
 11430 0325 0100     		.2byte	0x1
 11431 0327 51       		.byte	0x51
 11432 0328 13000000 		.4byte	.LVL71-1
 11433 032c 62000000 		.4byte	.LFE662
 11434 0330 0100     		.2byte	0x1
 11435 0332 57       		.byte	0x57
 11436 0333 00000000 		.4byte	0
 11437 0337 00000000 		.4byte	0
 11438              	.LLST21:
 11439 033b 00000000 		.4byte	.LVL69
 11440 033f 13000000 		.4byte	.LVL71-1
 11441 0343 0100     		.2byte	0x1
 11442 0345 52       		.byte	0x52
 11443 0346 13000000 		.4byte	.LVL71-1
 11444 034a 62000000 		.4byte	.LFE662
 11445 034e 0400     		.2byte	0x4
 11446 0350 F3       		.byte	0xf3
 11447 0351 01       		.uleb128 0x1
 11448 0352 52       		.byte	0x52
 11449 0353 9F       		.byte	0x9f
 11450 0354 00000000 		.4byte	0
 11451 0358 00000000 		.4byte	0
 11452              	.LLST22:
 11453 035c 00000000 		.4byte	.LVL69
 11454 0360 13000000 		.4byte	.LVL71-1
 11455 0364 0100     		.2byte	0x1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 304


 11456 0366 53       		.byte	0x53
 11457 0367 13000000 		.4byte	.LVL71-1
 11458 036b 62000000 		.4byte	.LFE662
 11459 036f 0100     		.2byte	0x1
 11460 0371 58       		.byte	0x58
 11461 0372 00000000 		.4byte	0
 11462 0376 00000000 		.4byte	0
 11463              	.LLST23:
 11464 037a 1E000000 		.4byte	.LVL73
 11465 037e 2A000000 		.4byte	.LVL74
 11466 0382 0100     		.2byte	0x1
 11467 0384 50       		.byte	0x50
 11468 0385 2A000000 		.4byte	.LVL74
 11469 0389 30000000 		.4byte	.LVL76
 11470 038d 0100     		.2byte	0x1
 11471 038f 54       		.byte	0x54
 11472 0390 32000000 		.4byte	.LVL77
 11473 0394 62000000 		.4byte	.LFE662
 11474 0398 0100     		.2byte	0x1
 11475 039a 54       		.byte	0x54
 11476 039b 00000000 		.4byte	0
 11477 039f 00000000 		.4byte	0
 11478              	.LLST24:
 11479 03a3 54000000 		.4byte	.LVL79
 11480 03a7 58000000 		.4byte	.LVL80
 11481 03ab 0200     		.2byte	0x2
 11482 03ad 31       		.byte	0x31
 11483 03ae 9F       		.byte	0x9f
 11484 03af 5C000000 		.4byte	.LVL81
 11485 03b3 62000000 		.4byte	.LFE662
 11486 03b7 0100     		.2byte	0x1
 11487 03b9 50       		.byte	0x50
 11488 03ba 00000000 		.4byte	0
 11489 03be 00000000 		.4byte	0
 11490              	.LLST25:
 11491 03c2 14000000 		.4byte	.LVL71
 11492 03c6 1A000000 		.4byte	.LVL72
 11493 03ca 0100     		.2byte	0x1
 11494 03cc 50       		.byte	0x50
 11495 03cd 1A000000 		.4byte	.LVL72
 11496 03d1 30000000 		.4byte	.LVL76
 11497 03d5 0100     		.2byte	0x1
 11498 03d7 59       		.byte	0x59
 11499 03d8 30000000 		.4byte	.LVL76
 11500 03dc 32000000 		.4byte	.LVL77
 11501 03e0 0100     		.2byte	0x1
 11502 03e2 50       		.byte	0x50
 11503 03e3 00000000 		.4byte	0
 11504 03e7 00000000 		.4byte	0
 11505              	.LLST26:
 11506 03eb 00000000 		.4byte	.LVL82
 11507 03ef 07000000 		.4byte	.LVL83-1
 11508 03f3 0100     		.2byte	0x1
 11509 03f5 50       		.byte	0x50
 11510 03f6 07000000 		.4byte	.LVL83-1
 11511 03fa 10000000 		.4byte	.LVL84
 11512 03fe 0100     		.2byte	0x1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 305


 11513 0400 54       		.byte	0x54
 11514 0401 00000000 		.4byte	0
 11515 0405 00000000 		.4byte	0
 11516              	.LLST27:
 11517 0409 10000000 		.4byte	.LVL84
 11518 040d A8000000 		.4byte	.LVL92
 11519 0411 0100     		.2byte	0x1
 11520 0413 54       		.byte	0x54
 11521 0414 00000000 		.4byte	0
 11522 0418 00000000 		.4byte	0
 11523              	.LLST28:
 11524 041c 00000000 		.4byte	.LVL93
 11525 0420 07000000 		.4byte	.LVL94-1
 11526 0424 0100     		.2byte	0x1
 11527 0426 50       		.byte	0x50
 11528 0427 07000000 		.4byte	.LVL94-1
 11529 042b 10000000 		.4byte	.LVL95
 11530 042f 0100     		.2byte	0x1
 11531 0431 54       		.byte	0x54
 11532 0432 00000000 		.4byte	0
 11533 0436 00000000 		.4byte	0
 11534              	.LLST29:
 11535 043a 10000000 		.4byte	.LVL95
 11536 043e 12000000 		.4byte	.LVL96
 11537 0442 0100     		.2byte	0x1
 11538 0444 54       		.byte	0x54
 11539 0445 00000000 		.4byte	0
 11540 0449 00000000 		.4byte	0
 11541              	.LLST30:
 11542 044d 12000000 		.4byte	.LVL96
 11543 0451 1A000000 		.4byte	.LVL98
 11544 0455 0100     		.2byte	0x1
 11545 0457 54       		.byte	0x54
 11546 0458 1A000000 		.4byte	.LVL98
 11547 045c 20000000 		.4byte	.LFE668
 11548 0460 0100     		.2byte	0x1
 11549 0462 50       		.byte	0x50
 11550 0463 00000000 		.4byte	0
 11551 0467 00000000 		.4byte	0
 11552              	.LLST31:
 11553 046b 00000000 		.4byte	.LVL99
 11554 046f 07000000 		.4byte	.LVL100-1
 11555 0473 0100     		.2byte	0x1
 11556 0475 50       		.byte	0x50
 11557 0476 07000000 		.4byte	.LVL100-1
 11558 047a 24000000 		.4byte	.LVL101
 11559 047e 0100     		.2byte	0x1
 11560 0480 54       		.byte	0x54
 11561 0481 00000000 		.4byte	0
 11562 0485 00000000 		.4byte	0
 11563              	.LLST32:
 11564 0489 24000000 		.4byte	.LVL101
 11565 048d 2C000000 		.4byte	.LVL104
 11566 0491 0100     		.2byte	0x1
 11567 0493 54       		.byte	0x54
 11568 0494 00000000 		.4byte	0
 11569 0498 00000000 		.4byte	0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 306


 11570              	.LLST33:
 11571 049c 26000000 		.4byte	.LVL102
 11572 04a0 2A000000 		.4byte	.LVL103
 11573 04a4 0100     		.2byte	0x1
 11574 04a6 53       		.byte	0x53
 11575 04a7 00000000 		.4byte	0
 11576 04ab 00000000 		.4byte	0
 11577              	.LLST34:
 11578 04af 00000000 		.4byte	.LVL105
 11579 04b3 25000000 		.4byte	.LVL108-1
 11580 04b7 0100     		.2byte	0x1
 11581 04b9 50       		.byte	0x50
 11582 04ba 25000000 		.4byte	.LVL108-1
 11583 04be 2E000000 		.4byte	.LVL109
 11584 04c2 0100     		.2byte	0x1
 11585 04c4 54       		.byte	0x54
 11586 04c5 00000000 		.4byte	0
 11587 04c9 00000000 		.4byte	0
 11588              	.LLST35:
 11589 04cd 00000000 		.4byte	.LVL105
 11590 04d1 22000000 		.4byte	.LVL107
 11591 04d5 0100     		.2byte	0x1
 11592 04d7 51       		.byte	0x51
 11593 04d8 22000000 		.4byte	.LVL107
 11594 04dc 74000000 		.4byte	.LVL112
 11595 04e0 0100     		.2byte	0x1
 11596 04e2 55       		.byte	0x55
 11597 04e3 74000000 		.4byte	.LVL112
 11598 04e7 95000000 		.4byte	.LVL114-1
 11599 04eb 0200     		.2byte	0x2
 11600 04ed 74       		.byte	0x74
 11601 04ee 2C       		.sleb128 44
 11602 04ef 00000000 		.4byte	0
 11603 04f3 00000000 		.4byte	0
 11604              	.LLST36:
 11605 04f7 2E000000 		.4byte	.LVL109
 11606 04fb D0000000 		.4byte	.LVL118
 11607 04ff 0100     		.2byte	0x1
 11608 0501 54       		.byte	0x54
 11609 0502 00000000 		.4byte	0
 11610 0506 00000000 		.4byte	0
 11611              	.LLST37:
 11612 050a 30000000 		.4byte	.LVL110
 11613 050e 7C000000 		.4byte	.LVL113
 11614 0512 0100     		.2byte	0x1
 11615 0514 53       		.byte	0x53
 11616 0515 00000000 		.4byte	0
 11617 0519 00000000 		.4byte	0
 11618              	.LLST38:
 11619 051d 68000000 		.4byte	.LVL111
 11620 0521 7C000000 		.4byte	.LVL113
 11621 0525 0100     		.2byte	0x1
 11622 0527 53       		.byte	0x53
 11623 0528 00000000 		.4byte	0
 11624 052c 00000000 		.4byte	0
 11625              	.LLST39:
 11626 0530 00000000 		.4byte	.LVL105
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 307


 11627 0534 68000000 		.4byte	.LVL111
 11628 0538 0200     		.2byte	0x2
 11629 053a 30       		.byte	0x30
 11630 053b 9F       		.byte	0x9f
 11631 053c 68000000 		.4byte	.LVL111
 11632 0540 CA000000 		.4byte	.LVL116
 11633 0544 0100     		.2byte	0x1
 11634 0546 56       		.byte	0x56
 11635 0547 00000000 		.4byte	0
 11636 054b 00000000 		.4byte	0
 11637              	.LLST40:
 11638 054f 00000000 		.4byte	.LVL119
 11639 0553 27000000 		.4byte	.LVL121-1
 11640 0557 0100     		.2byte	0x1
 11641 0559 50       		.byte	0x50
 11642 055a 27000000 		.4byte	.LVL121-1
 11643 055e 80000000 		.4byte	.LVL126
 11644 0562 0100     		.2byte	0x1
 11645 0564 54       		.byte	0x54
 11646 0565 80000000 		.4byte	.LVL126
 11647 0569 88000000 		.4byte	.LFE673
 11648 056d 0400     		.2byte	0x4
 11649 056f F3       		.byte	0xf3
 11650 0570 01       		.uleb128 0x1
 11651 0571 50       		.byte	0x50
 11652 0572 9F       		.byte	0x9f
 11653 0573 00000000 		.4byte	0
 11654 0577 00000000 		.4byte	0
 11655              	.LLST41:
 11656 057b 00000000 		.4byte	.LVL119
 11657 057f 27000000 		.4byte	.LVL121-1
 11658 0583 0100     		.2byte	0x1
 11659 0585 50       		.byte	0x50
 11660 0586 27000000 		.4byte	.LVL121-1
 11661 058a 80000000 		.4byte	.LVL126
 11662 058e 0100     		.2byte	0x1
 11663 0590 54       		.byte	0x54
 11664 0591 80000000 		.4byte	.LVL126
 11665 0595 88000000 		.4byte	.LFE673
 11666 0599 0400     		.2byte	0x4
 11667 059b F3       		.byte	0xf3
 11668 059c 01       		.uleb128 0x1
 11669 059d 50       		.byte	0x50
 11670 059e 9F       		.byte	0x9f
 11671 059f 00000000 		.4byte	0
 11672 05a3 00000000 		.4byte	0
 11673              	.LLST42:
 11674 05a7 00000000 		.4byte	.LVL127
 11675 05ab 1B000000 		.4byte	.LVL130-1
 11676 05af 0100     		.2byte	0x1
 11677 05b1 50       		.byte	0x50
 11678 05b2 1B000000 		.4byte	.LVL130-1
 11679 05b6 98000000 		.4byte	.LVL139
 11680 05ba 0100     		.2byte	0x1
 11681 05bc 54       		.byte	0x54
 11682 05bd 98000000 		.4byte	.LVL139
 11683 05c1 A4000000 		.4byte	.LFE674
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 308


 11684 05c5 0400     		.2byte	0x4
 11685 05c7 F3       		.byte	0xf3
 11686 05c8 01       		.uleb128 0x1
 11687 05c9 50       		.byte	0x50
 11688 05ca 9F       		.byte	0x9f
 11689 05cb 00000000 		.4byte	0
 11690 05cf 00000000 		.4byte	0
 11691              	.LLST43:
 11692 05d3 02000000 		.4byte	.LVL128
 11693 05d7 54000000 		.4byte	.LVL132
 11694 05db 0200     		.2byte	0x2
 11695 05dd 30       		.byte	0x30
 11696 05de 9F       		.byte	0x9f
 11697 05df 54000000 		.4byte	.LVL132
 11698 05e3 80000000 		.4byte	.LVL135
 11699 05e7 0100     		.2byte	0x1
 11700 05e9 55       		.byte	0x55
 11701 05ea 80000000 		.4byte	.LVL135
 11702 05ee 90000000 		.4byte	.LVL137
 11703 05f2 0200     		.2byte	0x2
 11704 05f4 30       		.byte	0x30
 11705 05f5 9F       		.byte	0x9f
 11706 05f6 90000000 		.4byte	.LVL137
 11707 05fa 98000000 		.4byte	.LVL139
 11708 05fe 0100     		.2byte	0x1
 11709 0600 55       		.byte	0x55
 11710 0601 98000000 		.4byte	.LVL139
 11711 0605 A4000000 		.4byte	.LFE674
 11712 0609 0100     		.2byte	0x1
 11713 060b 50       		.byte	0x50
 11714 060c 00000000 		.4byte	0
 11715 0610 00000000 		.4byte	0
 11716              	.LLST44:
 11717 0614 02000000 		.4byte	.LVL128
 11718 0618 1B000000 		.4byte	.LVL130-1
 11719 061c 0100     		.2byte	0x1
 11720 061e 50       		.byte	0x50
 11721 061f 1B000000 		.4byte	.LVL130-1
 11722 0623 98000000 		.4byte	.LVL139
 11723 0627 0100     		.2byte	0x1
 11724 0629 54       		.byte	0x54
 11725 062a 98000000 		.4byte	.LVL139
 11726 062e A4000000 		.4byte	.LFE674
 11727 0632 0400     		.2byte	0x4
 11728 0634 F3       		.byte	0xf3
 11729 0635 01       		.uleb128 0x1
 11730 0636 50       		.byte	0x50
 11731 0637 9F       		.byte	0x9f
 11732 0638 00000000 		.4byte	0
 11733 063c 00000000 		.4byte	0
 11734              	.LLST45:
 11735 0640 90000000 		.4byte	.LVL137
 11736 0644 94000000 		.4byte	.LVL138
 11737 0648 0100     		.2byte	0x1
 11738 064a 57       		.byte	0x57
 11739 064b 00000000 		.4byte	0
 11740 064f 00000000 		.4byte	0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 309


 11741              	.LLST46:
 11742 0653 16000000 		.4byte	.LVL140
 11743 0657 1D000000 		.4byte	.LVL141-1
 11744 065b 0100     		.2byte	0x1
 11745 065d 50       		.byte	0x50
 11746 065e 1E000000 		.4byte	.LVL141
 11747 0662 49000000 		.4byte	.LVL142-1
 11748 0666 0100     		.2byte	0x1
 11749 0668 50       		.byte	0x50
 11750 0669 4C000000 		.4byte	.LVL143
 11751 066d 64000000 		.4byte	.LVL145
 11752 0671 0100     		.2byte	0x1
 11753 0673 50       		.byte	0x50
 11754 0674 00000000 		.4byte	0
 11755 0678 00000000 		.4byte	0
 11756              	.LLST47:
 11757 067c 00000000 		.4byte	.LVL150
 11758 0680 0A000000 		.4byte	.LVL151
 11759 0684 0100     		.2byte	0x1
 11760 0686 50       		.byte	0x50
 11761 0687 00000000 		.4byte	0
 11762 068b 00000000 		.4byte	0
 11763              	.LLST48:
 11764 068f 0A000000 		.4byte	.LVL151
 11765 0693 1C000000 		.4byte	.LVL152
 11766 0697 0100     		.2byte	0x1
 11767 0699 53       		.byte	0x53
 11768 069a 1E000000 		.4byte	.LVL153
 11769 069e 28000000 		.4byte	.LFE682
 11770 06a2 0100     		.2byte	0x1
 11771 06a4 53       		.byte	0x53
 11772 06a5 00000000 		.4byte	0
 11773 06a9 00000000 		.4byte	0
 11774              	.LLST49:
 11775 06ad 5C000000 		.4byte	.LVL161
 11776 06b1 60000000 		.4byte	.LVL163
 11777 06b5 0100     		.2byte	0x1
 11778 06b7 55       		.byte	0x55
 11779 06b8 84000000 		.4byte	.LVL165
 11780 06bc DA000000 		.4byte	.LVL170
 11781 06c0 0100     		.2byte	0x1
 11782 06c2 55       		.byte	0x55
 11783 06c3 00000000 		.4byte	0
 11784 06c7 00000000 		.4byte	0
 11785              	.LLST50:
 11786 06cb 86000000 		.4byte	.LVL166
 11787 06cf 99000000 		.4byte	.LVL167-1
 11788 06d3 0100     		.2byte	0x1
 11789 06d5 53       		.byte	0x53
 11790 06d6 00000000 		.4byte	0
 11791 06da 00000000 		.4byte	0
 11792              	.LLST51:
 11793 06de 04000000 		.4byte	.LVL154
 11794 06e2 5C000000 		.4byte	.LVL161
 11795 06e6 0200     		.2byte	0x2
 11796 06e8 30       		.byte	0x30
 11797 06e9 9F       		.byte	0x9f
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 310


 11798 06ea 5C000000 		.4byte	.LVL161
 11799 06ee 5E000000 		.4byte	.LVL162
 11800 06f2 0100     		.2byte	0x1
 11801 06f4 56       		.byte	0x56
 11802 06f5 60000000 		.4byte	.LVL163
 11803 06f9 62000000 		.4byte	.LVL164
 11804 06fd 0200     		.2byte	0x2
 11805 06ff 30       		.byte	0x30
 11806 0700 9F       		.byte	0x9f
 11807 0701 62000000 		.4byte	.LVL164
 11808 0705 DA000000 		.4byte	.LVL170
 11809 0709 0100     		.2byte	0x1
 11810 070b 56       		.byte	0x56
 11811 070c DA000000 		.4byte	.LVL170
 11812 0710 E8000000 		.4byte	.LVL171
 11813 0714 0200     		.2byte	0x2
 11814 0716 30       		.byte	0x30
 11815 0717 9F       		.byte	0x9f
 11816 0718 E8000000 		.4byte	.LVL171
 11817 071c F8000000 		.4byte	.LVL173
 11818 0720 0100     		.2byte	0x1
 11819 0722 56       		.byte	0x56
 11820 0723 F8000000 		.4byte	.LVL173
 11821 0727 FC000000 		.4byte	.LFE683
 11822 072b 0100     		.2byte	0x1
 11823 072d 50       		.byte	0x50
 11824 072e 00000000 		.4byte	0
 11825 0732 00000000 		.4byte	0
 11826              	.LLST52:
 11827 0736 16000000 		.4byte	.LVL155
 11828 073a DA000000 		.4byte	.LVL170
 11829 073e 0100     		.2byte	0x1
 11830 0740 54       		.byte	0x54
 11831 0741 00000000 		.4byte	0
 11832 0745 00000000 		.4byte	0
 11833              	.LLST53:
 11834 0749 38000000 		.4byte	.LVL157
 11835 074d 46000000 		.4byte	.LVL158
 11836 0751 0100     		.2byte	0x1
 11837 0753 52       		.byte	0x52
 11838 0754 46000000 		.4byte	.LVL158
 11839 0758 4C000000 		.4byte	.LVL159
 11840 075c 0500     		.2byte	0x5
 11841 075e 03       		.byte	0x3
 11842 075f F8000000 		.4byte	pxOverflowDelayedTaskList
 11843 0763 00000000 		.4byte	0
 11844 0767 00000000 		.4byte	0
 11845              	.LLST54:
 11846 076b 00000000 		.4byte	.LVL174
 11847 076f 40000000 		.4byte	.LVL177
 11848 0773 0200     		.2byte	0x2
 11849 0775 30       		.byte	0x30
 11850 0776 9F       		.byte	0x9f
 11851 0777 40000000 		.4byte	.LVL177
 11852 077b 8C000000 		.4byte	.LVL182
 11853 077f 0100     		.2byte	0x1
 11854 0781 54       		.byte	0x54
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 311


 11855 0782 8C000000 		.4byte	.LVL182
 11856 0786 8E000000 		.4byte	.LVL183
 11857 078a 0200     		.2byte	0x2
 11858 078c 30       		.byte	0x30
 11859 078d 9F       		.byte	0x9f
 11860 078e 8E000000 		.4byte	.LVL183
 11861 0792 A2000000 		.4byte	.LVL185
 11862 0796 0100     		.2byte	0x1
 11863 0798 54       		.byte	0x54
 11864 0799 DA000000 		.4byte	.LVL191
 11865 079d DE000000 		.4byte	.LVL192
 11866 07a1 0200     		.2byte	0x2
 11867 07a3 30       		.byte	0x30
 11868 07a4 9F       		.byte	0x9f
 11869 07a5 00000000 		.4byte	0
 11870 07a9 00000000 		.4byte	0
 11871              	.LLST55:
 11872 07ad 00000000 		.4byte	.LVL174
 11873 07b1 C6000000 		.4byte	.LVL189
 11874 07b5 0200     		.2byte	0x2
 11875 07b7 30       		.byte	0x30
 11876 07b8 9F       		.byte	0x9f
 11877 07b9 C6000000 		.4byte	.LVL189
 11878 07bd DA000000 		.4byte	.LVL191
 11879 07c1 0200     		.2byte	0x2
 11880 07c3 31       		.byte	0x31
 11881 07c4 9F       		.byte	0x9f
 11882 07c5 DA000000 		.4byte	.LVL191
 11883 07c9 E0000000 		.4byte	.LVL193
 11884 07cd 0200     		.2byte	0x2
 11885 07cf 30       		.byte	0x30
 11886 07d0 9F       		.byte	0x9f
 11887 07d1 E0000000 		.4byte	.LVL193
 11888 07d5 E8000000 		.4byte	.LVL195
 11889 07d9 0100     		.2byte	0x1
 11890 07db 54       		.byte	0x54
 11891 07dc E8000000 		.4byte	.LVL195
 11892 07e0 F0000000 		.4byte	.LFE678
 11893 07e4 0100     		.2byte	0x1
 11894 07e6 50       		.byte	0x50
 11895 07e7 00000000 		.4byte	0
 11896 07eb 00000000 		.4byte	0
 11897              	.LLST56:
 11898 07ef A2000000 		.4byte	.LVL185
 11899 07f3 B2000000 		.4byte	.LVL187
 11900 07f7 0100     		.2byte	0x1
 11901 07f9 54       		.byte	0x54
 11902 07fa B2000000 		.4byte	.LVL187
 11903 07fe B4000000 		.4byte	.LVL188
 11904 0802 0300     		.2byte	0x3
 11905 0804 74       		.byte	0x74
 11906 0805 7F       		.sleb128 -1
 11907 0806 9F       		.byte	0x9f
 11908 0807 B4000000 		.4byte	.LVL188
 11909 080b D8000000 		.4byte	.LVL190
 11910 080f 0100     		.2byte	0x1
 11911 0811 54       		.byte	0x54
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 312


 11912 0812 DE000000 		.4byte	.LVL192
 11913 0816 E0000000 		.4byte	.LVL193
 11914 081a 0100     		.2byte	0x1
 11915 081c 54       		.byte	0x54
 11916 081d 00000000 		.4byte	0
 11917 0821 00000000 		.4byte	0
 11918              	.LLST57:
 11919 0825 00000000 		.4byte	.LVL196
 11920 0829 4B000000 		.4byte	.LVL201-1
 11921 082d 0100     		.2byte	0x1
 11922 082f 50       		.byte	0x50
 11923 0830 4B000000 		.4byte	.LVL201-1
 11924 0834 A4000000 		.4byte	.LVL208
 11925 0838 0100     		.2byte	0x1
 11926 083a 55       		.byte	0x55
 11927 083b A4000000 		.4byte	.LVL208
 11928 083f AC000000 		.4byte	.LFE666
 11929 0843 0400     		.2byte	0x4
 11930 0845 F3       		.byte	0xf3
 11931 0846 01       		.uleb128 0x1
 11932 0847 50       		.byte	0x50
 11933 0848 9F       		.byte	0x9f
 11934 0849 00000000 		.4byte	0
 11935 084d 00000000 		.4byte	0
 11936              	.LLST58:
 11937 0851 00000000 		.4byte	.LVL196
 11938 0855 4B000000 		.4byte	.LVL201-1
 11939 0859 0100     		.2byte	0x1
 11940 085b 51       		.byte	0x51
 11941 085c 4B000000 		.4byte	.LVL201-1
 11942 0860 A4000000 		.4byte	.LVL208
 11943 0864 0100     		.2byte	0x1
 11944 0866 54       		.byte	0x54
 11945 0867 A4000000 		.4byte	.LVL208
 11946 086b AC000000 		.4byte	.LFE666
 11947 086f 0400     		.2byte	0x4
 11948 0871 F3       		.byte	0xf3
 11949 0872 01       		.uleb128 0x1
 11950 0873 51       		.byte	0x51
 11951 0874 9F       		.byte	0x9f
 11952 0875 00000000 		.4byte	0
 11953 0879 00000000 		.4byte	0
 11954              	.LLST59:
 11955 087d 56000000 		.4byte	.LVL203
 11956 0881 8B000000 		.4byte	.LVL206-1
 11957 0885 0100     		.2byte	0x1
 11958 0887 53       		.byte	0x53
 11959 0888 00000000 		.4byte	0
 11960 088c 00000000 		.4byte	0
 11961              	.LLST60:
 11962 0890 02000000 		.4byte	.LVL197
 11963 0894 80000000 		.4byte	.LVL204
 11964 0898 0200     		.2byte	0x2
 11965 089a 30       		.byte	0x30
 11966 089b 9F       		.byte	0x9f
 11967 089c 80000000 		.4byte	.LVL204
 11968 08a0 8B000000 		.4byte	.LVL206-1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 313


 11969 08a4 0100     		.2byte	0x1
 11970 08a6 52       		.byte	0x52
 11971 08a7 00000000 		.4byte	0
 11972 08ab 00000000 		.4byte	0
 11973              	.LLST61:
 11974 08af 52000000 		.4byte	.LVL202
 11975 08b3 88000000 		.4byte	.LVL205
 11976 08b7 0100     		.2byte	0x1
 11977 08b9 50       		.byte	0x50
 11978 08ba 00000000 		.4byte	0
 11979 08be 00000000 		.4byte	0
 11980              	.LLST62:
 11981 08c2 00000000 		.4byte	.LVL209
 11982 08c6 23000000 		.4byte	.LVL212-1
 11983 08ca 0100     		.2byte	0x1
 11984 08cc 50       		.byte	0x50
 11985 08cd 23000000 		.4byte	.LVL212-1
 11986 08d1 32000000 		.4byte	.LVL215
 11987 08d5 0100     		.2byte	0x1
 11988 08d7 54       		.byte	0x54
 11989 08d8 32000000 		.4byte	.LVL215
 11990 08dc 34000000 		.4byte	.LVL216
 11991 08e0 0100     		.2byte	0x1
 11992 08e2 50       		.byte	0x50
 11993 08e3 34000000 		.4byte	.LVL216
 11994 08e7 50000000 		.4byte	.LFE667
 11995 08eb 0400     		.2byte	0x4
 11996 08ed F3       		.byte	0xf3
 11997 08ee 01       		.uleb128 0x1
 11998 08ef 50       		.byte	0x50
 11999 08f0 9F       		.byte	0x9f
 12000 08f1 00000000 		.4byte	0
 12001 08f5 00000000 		.4byte	0
 12002              	.LLST63:
 12003 08f9 02000000 		.4byte	.LVL210
 12004 08fd 30000000 		.4byte	.LVL214
 12005 0901 0200     		.2byte	0x2
 12006 0903 30       		.byte	0x30
 12007 0904 9F       		.byte	0x9f
 12008 0905 30000000 		.4byte	.LVL214
 12009 0909 32000000 		.4byte	.LVL215
 12010 090d 0100     		.2byte	0x1
 12011 090f 50       		.byte	0x50
 12012 0910 32000000 		.4byte	.LVL215
 12013 0914 34000000 		.4byte	.LVL216
 12014 0918 0200     		.2byte	0x2
 12015 091a 30       		.byte	0x30
 12016 091b 9F       		.byte	0x9f
 12017 091c 34000000 		.4byte	.LVL216
 12018 0920 50000000 		.4byte	.LFE667
 12019 0924 0100     		.2byte	0x1
 12020 0926 50       		.byte	0x50
 12021 0927 00000000 		.4byte	0
 12022 092b 00000000 		.4byte	0
 12023              	.LLST64:
 12024 092f 22000000 		.4byte	.LVL217
 12025 0933 3C000000 		.4byte	.LVL218
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 314


 12026 0937 0100     		.2byte	0x1
 12027 0939 53       		.byte	0x53
 12028 093a 00000000 		.4byte	0
 12029 093e 00000000 		.4byte	0
 12030              	.LLST65:
 12031 0942 58000000 		.4byte	.LVL220
 12032 0946 6C000000 		.4byte	.LVL221
 12033 094a 0100     		.2byte	0x1
 12034 094c 53       		.byte	0x53
 12035 094d 6E000000 		.4byte	.LVL222
 12036 0951 C8000000 		.4byte	.LFE684
 12037 0955 0100     		.2byte	0x1
 12038 0957 53       		.byte	0x53
 12039 0958 00000000 		.4byte	0
 12040 095c 00000000 		.4byte	0
 12041              	.LLST66:
 12042 0960 00000000 		.4byte	.LVL225
 12043 0964 07000000 		.4byte	.LVL226-1
 12044 0968 0100     		.2byte	0x1
 12045 096a 50       		.byte	0x50
 12046 096b 07000000 		.4byte	.LVL226-1
 12047 096f 10000000 		.4byte	.LVL227
 12048 0973 0100     		.2byte	0x1
 12049 0975 54       		.byte	0x54
 12050 0976 00000000 		.4byte	0
 12051 097a 00000000 		.4byte	0
 12052              	.LLST67:
 12053 097e 10000000 		.4byte	.LVL227
 12054 0982 AE000000 		.4byte	.LVL239
 12055 0986 0100     		.2byte	0x1
 12056 0988 54       		.byte	0x54
 12057 0989 00000000 		.4byte	0
 12058 098d 00000000 		.4byte	0
 12059              	.LLST68:
 12060 0991 00000000 		.4byte	.LVL240
 12061 0995 23000000 		.4byte	.LVL243-1
 12062 0999 0100     		.2byte	0x1
 12063 099b 50       		.byte	0x50
 12064 099c 23000000 		.4byte	.LVL243-1
 12065 09a0 34000000 		.4byte	.LFE685
 12066 09a4 0400     		.2byte	0x4
 12067 09a6 F3       		.byte	0xf3
 12068 09a7 01       		.uleb128 0x1
 12069 09a8 50       		.byte	0x50
 12070 09a9 9F       		.byte	0x9f
 12071 09aa 00000000 		.4byte	0
 12072 09ae 00000000 		.4byte	0
 12073              	.LLST69:
 12074 09b2 00000000 		.4byte	.LVL240
 12075 09b6 1E000000 		.4byte	.LVL242
 12076 09ba 0100     		.2byte	0x1
 12077 09bc 51       		.byte	0x51
 12078 09bd 1E000000 		.4byte	.LVL242
 12079 09c1 2E000000 		.4byte	.LVL245
 12080 09c5 0100     		.2byte	0x1
 12081 09c7 54       		.byte	0x54
 12082 09c8 2E000000 		.4byte	.LVL245
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 315


 12083 09cc 34000000 		.4byte	.LFE685
 12084 09d0 0400     		.2byte	0x4
 12085 09d2 F3       		.byte	0xf3
 12086 09d3 01       		.uleb128 0x1
 12087 09d4 51       		.byte	0x51
 12088 09d5 9F       		.byte	0x9f
 12089 09d6 00000000 		.4byte	0
 12090 09da 00000000 		.4byte	0
 12091              	.LLST70:
 12092 09de 00000000 		.4byte	.LVL246
 12093 09e2 18000000 		.4byte	.LVL248
 12094 09e6 0100     		.2byte	0x1
 12095 09e8 50       		.byte	0x50
 12096 09e9 18000000 		.4byte	.LVL248
 12097 09ed 2E000000 		.4byte	.LVL249
 12098 09f1 0100     		.2byte	0x1
 12099 09f3 53       		.byte	0x53
 12100 09f4 2E000000 		.4byte	.LVL249
 12101 09f8 30000000 		.4byte	.LVL250
 12102 09fc 0400     		.2byte	0x4
 12103 09fe F3       		.byte	0xf3
 12104 09ff 01       		.uleb128 0x1
 12105 0a00 50       		.byte	0x50
 12106 0a01 9F       		.byte	0x9f
 12107 0a02 30000000 		.4byte	.LVL250
 12108 0a06 38000000 		.4byte	.LVL251
 12109 0a0a 0100     		.2byte	0x1
 12110 0a0c 53       		.byte	0x53
 12111 0a0d 38000000 		.4byte	.LVL251
 12112 0a11 4D000000 		.4byte	.LVL255-1
 12113 0a15 0100     		.2byte	0x1
 12114 0a17 50       		.byte	0x50
 12115 0a18 4D000000 		.4byte	.LVL255-1
 12116 0a1c 5C000000 		.4byte	.LFE686
 12117 0a20 0400     		.2byte	0x4
 12118 0a22 F3       		.byte	0xf3
 12119 0a23 01       		.uleb128 0x1
 12120 0a24 50       		.byte	0x50
 12121 0a25 9F       		.byte	0x9f
 12122 0a26 00000000 		.4byte	0
 12123 0a2a 00000000 		.4byte	0
 12124              	.LLST71:
 12125 0a2e 00000000 		.4byte	.LVL246
 12126 0a32 3E000000 		.4byte	.LVL253
 12127 0a36 0100     		.2byte	0x1
 12128 0a38 51       		.byte	0x51
 12129 0a39 3E000000 		.4byte	.LVL253
 12130 0a3d 42000000 		.4byte	.LVL254
 12131 0a41 0100     		.2byte	0x1
 12132 0a43 53       		.byte	0x53
 12133 0a44 42000000 		.4byte	.LVL254
 12134 0a48 5C000000 		.4byte	.LFE686
 12135 0a4c 0400     		.2byte	0x4
 12136 0a4e F3       		.byte	0xf3
 12137 0a4f 01       		.uleb128 0x1
 12138 0a50 51       		.byte	0x51
 12139 0a51 9F       		.byte	0x9f
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 316


 12140 0a52 00000000 		.4byte	0
 12141 0a56 00000000 		.4byte	0
 12142              	.LLST72:
 12143 0a5a 00000000 		.4byte	.LVL246
 12144 0a5e 3A000000 		.4byte	.LVL252
 12145 0a62 0100     		.2byte	0x1
 12146 0a64 52       		.byte	0x52
 12147 0a65 3A000000 		.4byte	.LVL252
 12148 0a69 58000000 		.4byte	.LVL257
 12149 0a6d 0100     		.2byte	0x1
 12150 0a6f 54       		.byte	0x54
 12151 0a70 58000000 		.4byte	.LVL257
 12152 0a74 5C000000 		.4byte	.LFE686
 12153 0a78 0400     		.2byte	0x4
 12154 0a7a F3       		.byte	0xf3
 12155 0a7b 01       		.uleb128 0x1
 12156 0a7c 52       		.byte	0x52
 12157 0a7d 9F       		.byte	0x9f
 12158 0a7e 00000000 		.4byte	0
 12159 0a82 00000000 		.4byte	0
 12160              	.LLST73:
 12161 0a86 00000000 		.4byte	.LVL258
 12162 0a8a 25000000 		.4byte	.LVL262-1
 12163 0a8e 0100     		.2byte	0x1
 12164 0a90 50       		.byte	0x50
 12165 0a91 25000000 		.4byte	.LVL262-1
 12166 0a95 3C000000 		.4byte	.LFE687
 12167 0a99 0400     		.2byte	0x4
 12168 0a9b F3       		.byte	0xf3
 12169 0a9c 01       		.uleb128 0x1
 12170 0a9d 50       		.byte	0x50
 12171 0a9e 9F       		.byte	0x9f
 12172 0a9f 00000000 		.4byte	0
 12173 0aa3 00000000 		.4byte	0
 12174              	.LLST74:
 12175 0aa7 00000000 		.4byte	.LVL258
 12176 0aab 20000000 		.4byte	.LVL261
 12177 0aaf 0100     		.2byte	0x1
 12178 0ab1 51       		.byte	0x51
 12179 0ab2 20000000 		.4byte	.LVL261
 12180 0ab6 36000000 		.4byte	.LVL265
 12181 0aba 0100     		.2byte	0x1
 12182 0abc 54       		.byte	0x54
 12183 0abd 00000000 		.4byte	0
 12184 0ac1 00000000 		.4byte	0
 12185              	.LLST75:
 12186 0ac5 00000000 		.4byte	.LVL258
 12187 0ac9 1C000000 		.4byte	.LVL260
 12188 0acd 0100     		.2byte	0x1
 12189 0acf 52       		.byte	0x52
 12190 0ad0 1C000000 		.4byte	.LVL260
 12191 0ad4 36000000 		.4byte	.LVL265
 12192 0ad8 0100     		.2byte	0x1
 12193 0ada 55       		.byte	0x55
 12194 0adb 36000000 		.4byte	.LVL265
 12195 0adf 3C000000 		.4byte	.LFE687
 12196 0ae3 0400     		.2byte	0x4
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 317


 12197 0ae5 F3       		.byte	0xf3
 12198 0ae6 01       		.uleb128 0x1
 12199 0ae7 52       		.byte	0x52
 12200 0ae8 9F       		.byte	0x9f
 12201 0ae9 00000000 		.4byte	0
 12202 0aed 00000000 		.4byte	0
 12203              	.LLST76:
 12204 0af1 00000000 		.4byte	.LVL266
 12205 0af5 20000000 		.4byte	.LVL269
 12206 0af9 0100     		.2byte	0x1
 12207 0afb 50       		.byte	0x50
 12208 0afc 20000000 		.4byte	.LVL269
 12209 0b00 88000000 		.4byte	.LFE688
 12210 0b04 0400     		.2byte	0x4
 12211 0b06 F3       		.byte	0xf3
 12212 0b07 01       		.uleb128 0x1
 12213 0b08 50       		.byte	0x50
 12214 0b09 9F       		.byte	0x9f
 12215 0b0a 00000000 		.4byte	0
 12216 0b0e 00000000 		.4byte	0
 12217              	.LLST77:
 12218 0b12 06000000 		.4byte	.LVL267
 12219 0b16 7C000000 		.4byte	.LVL277
 12220 0b1a 0100     		.2byte	0x1
 12221 0b1c 54       		.byte	0x54
 12222 0b1d 00000000 		.4byte	0
 12223 0b21 00000000 		.4byte	0
 12224              	.LLST78:
 12225 0b25 6E000000 		.4byte	.LVL274
 12226 0b29 78000000 		.4byte	.LVL275
 12227 0b2d 0200     		.2byte	0x2
 12228 0b2f 31       		.byte	0x31
 12229 0b30 9F       		.byte	0x9f
 12230 0b31 7A000000 		.4byte	.LVL276
 12231 0b35 88000000 		.4byte	.LFE688
 12232 0b39 0100     		.2byte	0x1
 12233 0b3b 50       		.byte	0x50
 12234 0b3c 00000000 		.4byte	0
 12235 0b40 00000000 		.4byte	0
 12236              	.LLST79:
 12237 0b44 00000000 		.4byte	.LVL278
 12238 0b48 3B000000 		.4byte	.LVL282-1
 12239 0b4c 0100     		.2byte	0x1
 12240 0b4e 50       		.byte	0x50
 12241 0b4f 3B000000 		.4byte	.LVL282-1
 12242 0b53 84000000 		.4byte	.LFE689
 12243 0b57 0400     		.2byte	0x4
 12244 0b59 F3       		.byte	0xf3
 12245 0b5a 01       		.uleb128 0x1
 12246 0b5b 50       		.byte	0x50
 12247 0b5c 9F       		.byte	0x9f
 12248 0b5d 00000000 		.4byte	0
 12249 0b61 00000000 		.4byte	0
 12250              	.LLST80:
 12251 0b65 00000000 		.4byte	.LVL278
 12252 0b69 3B000000 		.4byte	.LVL282-1
 12253 0b6d 0100     		.2byte	0x1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 318


 12254 0b6f 51       		.byte	0x51
 12255 0b70 3B000000 		.4byte	.LVL282-1
 12256 0b74 84000000 		.4byte	.LFE689
 12257 0b78 0400     		.2byte	0x4
 12258 0b7a F3       		.byte	0xf3
 12259 0b7b 01       		.uleb128 0x1
 12260 0b7c 51       		.byte	0x51
 12261 0b7d 9F       		.byte	0x9f
 12262 0b7e 00000000 		.4byte	0
 12263 0b82 00000000 		.4byte	0
 12264              	.LLST81:
 12265 0b86 24000000 		.4byte	.LVL280
 12266 0b8a 7E000000 		.4byte	.LVL285
 12267 0b8e 0100     		.2byte	0x1
 12268 0b90 54       		.byte	0x54
 12269 0b91 00000000 		.4byte	0
 12270 0b95 00000000 		.4byte	0
 12271              	.LLST82:
 12272 0b99 00000000 		.4byte	.LVL286
 12273 0b9d 1B000000 		.4byte	.LVL288-1
 12274 0ba1 0100     		.2byte	0x1
 12275 0ba3 50       		.byte	0x50
 12276 0ba4 1B000000 		.4byte	.LVL288-1
 12277 0ba8 30000000 		.4byte	.LVL290
 12278 0bac 0100     		.2byte	0x1
 12279 0bae 54       		.byte	0x54
 12280 0baf 30000000 		.4byte	.LVL290
 12281 0bb3 34000000 		.4byte	.LFE690
 12282 0bb7 0400     		.2byte	0x4
 12283 0bb9 F3       		.byte	0xf3
 12284 0bba 01       		.uleb128 0x1
 12285 0bbb 50       		.byte	0x50
 12286 0bbc 9F       		.byte	0x9f
 12287 0bbd 00000000 		.4byte	0
 12288 0bc1 00000000 		.4byte	0
 12289              	.LLST83:
 12290 0bc5 00000000 		.4byte	.LVL292
 12291 0bc9 31000000 		.4byte	.LVL295-1
 12292 0bcd 0100     		.2byte	0x1
 12293 0bcf 50       		.byte	0x50
 12294 0bd0 31000000 		.4byte	.LVL295-1
 12295 0bd4 7C000000 		.4byte	.LVL309
 12296 0bd8 0100     		.2byte	0x1
 12297 0bda 55       		.byte	0x55
 12298 0bdb 7C000000 		.4byte	.LVL309
 12299 0bdf 80000000 		.4byte	.LFE692
 12300 0be3 0400     		.2byte	0x4
 12301 0be5 F3       		.byte	0xf3
 12302 0be6 01       		.uleb128 0x1
 12303 0be7 50       		.byte	0x50
 12304 0be8 9F       		.byte	0x9f
 12305 0be9 00000000 		.4byte	0
 12306 0bed 00000000 		.4byte	0
 12307              	.LLST84:
 12308 0bf1 00000000 		.4byte	.LVL292
 12309 0bf5 31000000 		.4byte	.LVL295-1
 12310 0bf9 0100     		.2byte	0x1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 319


 12311 0bfb 51       		.byte	0x51
 12312 0bfc 31000000 		.4byte	.LVL295-1
 12313 0c00 64000000 		.4byte	.LVL300
 12314 0c04 0100     		.2byte	0x1
 12315 0c06 54       		.byte	0x54
 12316 0c07 64000000 		.4byte	.LVL300
 12317 0c0b 66000000 		.4byte	.LVL301
 12318 0c0f 0400     		.2byte	0x4
 12319 0c11 F3       		.byte	0xf3
 12320 0c12 01       		.uleb128 0x1
 12321 0c13 51       		.byte	0x51
 12322 0c14 9F       		.byte	0x9f
 12323 0c15 66000000 		.4byte	.LVL301
 12324 0c19 6C000000 		.4byte	.LVL303
 12325 0c1d 0100     		.2byte	0x1
 12326 0c1f 54       		.byte	0x54
 12327 0c20 6C000000 		.4byte	.LVL303
 12328 0c24 6E000000 		.4byte	.LVL304
 12329 0c28 0400     		.2byte	0x4
 12330 0c2a F3       		.byte	0xf3
 12331 0c2b 01       		.uleb128 0x1
 12332 0c2c 51       		.byte	0x51
 12333 0c2d 9F       		.byte	0x9f
 12334 0c2e 6E000000 		.4byte	.LVL304
 12335 0c32 70000000 		.4byte	.LVL305
 12336 0c36 0100     		.2byte	0x1
 12337 0c38 54       		.byte	0x54
 12338 0c39 70000000 		.4byte	.LVL305
 12339 0c3d 72000000 		.4byte	.LVL306
 12340 0c41 0400     		.2byte	0x4
 12341 0c43 F3       		.byte	0xf3
 12342 0c44 01       		.uleb128 0x1
 12343 0c45 51       		.byte	0x51
 12344 0c46 9F       		.byte	0x9f
 12345 0c47 72000000 		.4byte	.LVL306
 12346 0c4b 74000000 		.4byte	.LVL307
 12347 0c4f 0100     		.2byte	0x1
 12348 0c51 54       		.byte	0x54
 12349 0c52 74000000 		.4byte	.LVL307
 12350 0c56 80000000 		.4byte	.LFE692
 12351 0c5a 0400     		.2byte	0x4
 12352 0c5c F3       		.byte	0xf3
 12353 0c5d 01       		.uleb128 0x1
 12354 0c5e 51       		.byte	0x51
 12355 0c5f 9F       		.byte	0x9f
 12356 0c60 00000000 		.4byte	0
 12357 0c64 00000000 		.4byte	0
 12358              	.LLST85:
 12359 0c68 62000000 		.4byte	.LVL299
 12360 0c6c 66000000 		.4byte	.LVL301
 12361 0c70 0200     		.2byte	0x2
 12362 0c72 30       		.byte	0x30
 12363 0c73 9F       		.byte	0x9f
 12364 0c74 6A000000 		.4byte	.LVL302
 12365 0c78 6E000000 		.4byte	.LVL304
 12366 0c7c 0200     		.2byte	0x2
 12367 0c7e 31       		.byte	0x31
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 320


 12368 0c7f 9F       		.byte	0x9f
 12369 0c80 74000000 		.4byte	.LVL307
 12370 0c84 7C000000 		.4byte	.LVL309
 12371 0c88 0100     		.2byte	0x1
 12372 0c8a 54       		.byte	0x54
 12373 0c8b 7C000000 		.4byte	.LVL309
 12374 0c8f 80000000 		.4byte	.LFE692
 12375 0c93 0100     		.2byte	0x1
 12376 0c95 50       		.byte	0x50
 12377 0c96 00000000 		.4byte	0
 12378 0c9a 00000000 		.4byte	0
 12379              	.LLST86:
 12380 0c9e 38000000 		.4byte	.LVL296
 12381 0ca2 5E000000 		.4byte	.LVL298
 12382 0ca6 0100     		.2byte	0x1
 12383 0ca8 50       		.byte	0x50
 12384 0ca9 66000000 		.4byte	.LVL301
 12385 0cad 74000000 		.4byte	.LVL307
 12386 0cb1 0100     		.2byte	0x1
 12387 0cb3 50       		.byte	0x50
 12388 0cb4 00000000 		.4byte	0
 12389 0cb8 00000000 		.4byte	0
 12390              	.LLST87:
 12391 0cbc 3C000000 		.4byte	.LVL297
 12392 0cc0 61000000 		.4byte	.LVL299-1
 12393 0cc4 0100     		.2byte	0x1
 12394 0cc6 52       		.byte	0x52
 12395 0cc7 66000000 		.4byte	.LVL301
 12396 0ccb 74000000 		.4byte	.LVL307
 12397 0ccf 0100     		.2byte	0x1
 12398 0cd1 52       		.byte	0x52
 12399 0cd2 00000000 		.4byte	0
 12400 0cd6 00000000 		.4byte	0
 12401              	.LLST88:
 12402 0cda 00000000 		.4byte	.LVL310
 12403 0cde 0C000000 		.4byte	.LVL311
 12404 0ce2 0100     		.2byte	0x1
 12405 0ce4 50       		.byte	0x50
 12406 0ce5 00000000 		.4byte	0
 12407 0ce9 00000000 		.4byte	0
 12408              	.LLST89:
 12409 0ced 00000000 		.4byte	.LVL310
 12410 0cf1 0E000000 		.4byte	.LVL312
 12411 0cf5 0100     		.2byte	0x1
 12412 0cf7 51       		.byte	0x51
 12413 0cf8 0E000000 		.4byte	.LVL312
 12414 0cfc 12000000 		.4byte	.LVL313
 12415 0d00 0300     		.2byte	0x3
 12416 0d02 71       		.byte	0x71
 12417 0d03 70       		.sleb128 -16
 12418 0d04 9F       		.byte	0x9f
 12419 0d05 12000000 		.4byte	.LVL313
 12420 0d09 1C000000 		.4byte	.LFE695
 12421 0d0d 0400     		.2byte	0x4
 12422 0d0f F3       		.byte	0xf3
 12423 0d10 01       		.uleb128 0x1
 12424 0d11 51       		.byte	0x51
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 321


 12425 0d12 9F       		.byte	0x9f
 12426 0d13 00000000 		.4byte	0
 12427 0d17 00000000 		.4byte	0
 12428              	.LLST90:
 12429 0d1b 0C000000 		.4byte	.LVL311
 12430 0d1f 14000000 		.4byte	.LVL314
 12431 0d23 0100     		.2byte	0x1
 12432 0d25 50       		.byte	0x50
 12433 0d26 00000000 		.4byte	0
 12434 0d2a 00000000 		.4byte	0
 12435              	.LLST91:
 12436 0d2e 00000000 		.4byte	.LVL315
 12437 0d32 0C000000 		.4byte	.LVL316
 12438 0d36 0100     		.2byte	0x1
 12439 0d38 50       		.byte	0x50
 12440 0d39 16000000 		.4byte	.LVL320
 12441 0d3d 18000000 		.4byte	.LVL321
 12442 0d41 0100     		.2byte	0x1
 12443 0d43 50       		.byte	0x50
 12444 0d44 18000000 		.4byte	.LVL321
 12445 0d48 20000000 		.4byte	.LFE696
 12446 0d4c 0400     		.2byte	0x4
 12447 0d4e F3       		.byte	0xf3
 12448 0d4f 01       		.uleb128 0x1
 12449 0d50 50       		.byte	0x50
 12450 0d51 9F       		.byte	0x9f
 12451 0d52 00000000 		.4byte	0
 12452 0d56 00000000 		.4byte	0
 12453              	.LLST92:
 12454 0d5a 00000000 		.4byte	.LVL315
 12455 0d5e 0E000000 		.4byte	.LVL317
 12456 0d62 0100     		.2byte	0x1
 12457 0d64 51       		.byte	0x51
 12458 0d65 0E000000 		.4byte	.LVL317
 12459 0d69 16000000 		.4byte	.LVL320
 12460 0d6d 0300     		.2byte	0x3
 12461 0d6f 71       		.byte	0x71
 12462 0d70 70       		.sleb128 -16
 12463 0d71 9F       		.byte	0x9f
 12464 0d72 16000000 		.4byte	.LVL320
 12465 0d76 20000000 		.4byte	.LFE696
 12466 0d7a 0100     		.2byte	0x1
 12467 0d7c 51       		.byte	0x51
 12468 0d7d 00000000 		.4byte	0
 12469 0d81 00000000 		.4byte	0
 12470              	.LLST93:
 12471 0d85 00000000 		.4byte	.LVL315
 12472 0d89 14000000 		.4byte	.LVL319
 12473 0d8d 0200     		.2byte	0x2
 12474 0d8f 30       		.byte	0x30
 12475 0d90 9F       		.byte	0x9f
 12476 0d91 14000000 		.4byte	.LVL319
 12477 0d95 16000000 		.4byte	.LVL320
 12478 0d99 0100     		.2byte	0x1
 12479 0d9b 50       		.byte	0x50
 12480 0d9c 16000000 		.4byte	.LVL320
 12481 0da0 18000000 		.4byte	.LVL321
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 322


 12482 0da4 0200     		.2byte	0x2
 12483 0da6 30       		.byte	0x30
 12484 0da7 9F       		.byte	0x9f
 12485 0da8 18000000 		.4byte	.LVL321
 12486 0dac 20000000 		.4byte	.LFE696
 12487 0db0 0100     		.2byte	0x1
 12488 0db2 50       		.byte	0x50
 12489 0db3 00000000 		.4byte	0
 12490 0db7 00000000 		.4byte	0
 12491              	.LLST94:
 12492 0dbb 0C000000 		.4byte	.LVL316
 12493 0dbf 12000000 		.4byte	.LVL318
 12494 0dc3 0100     		.2byte	0x1
 12495 0dc5 50       		.byte	0x50
 12496 0dc6 00000000 		.4byte	0
 12497 0dca 00000000 		.4byte	0
 12498              	.LLST95:
 12499 0dce 00000000 		.4byte	.LVL325
 12500 0dd2 09000000 		.4byte	.LVL326-1
 12501 0dd6 0100     		.2byte	0x1
 12502 0dd8 50       		.byte	0x50
 12503 0dd9 09000000 		.4byte	.LVL326-1
 12504 0ddd 78000000 		.4byte	.LVL332
 12505 0de1 0100     		.2byte	0x1
 12506 0de3 55       		.byte	0x55
 12507 0de4 78000000 		.4byte	.LVL332
 12508 0de8 80000000 		.4byte	.LFE704
 12509 0dec 0400     		.2byte	0x4
 12510 0dee F3       		.byte	0xf3
 12511 0def 01       		.uleb128 0x1
 12512 0df0 50       		.byte	0x50
 12513 0df1 9F       		.byte	0x9f
 12514 0df2 00000000 		.4byte	0
 12515 0df6 00000000 		.4byte	0
 12516              	.LLST96:
 12517 0dfa 00000000 		.4byte	.LVL325
 12518 0dfe 09000000 		.4byte	.LVL326-1
 12519 0e02 0100     		.2byte	0x1
 12520 0e04 51       		.byte	0x51
 12521 0e05 09000000 		.4byte	.LVL326-1
 12522 0e09 4A000000 		.4byte	.LVL330
 12523 0e0d 0100     		.2byte	0x1
 12524 0e0f 54       		.byte	0x54
 12525 0e10 4A000000 		.4byte	.LVL330
 12526 0e14 80000000 		.4byte	.LFE704
 12527 0e18 0400     		.2byte	0x4
 12528 0e1a F3       		.byte	0xf3
 12529 0e1b 01       		.uleb128 0x1
 12530 0e1c 51       		.byte	0x51
 12531 0e1d 9F       		.byte	0x9f
 12532 0e1e 00000000 		.4byte	0
 12533 0e22 00000000 		.4byte	0
 12534              	.LLST97:
 12535 0e26 4A000000 		.4byte	.LVL330
 12536 0e2a 78000000 		.4byte	.LVL332
 12537 0e2e 0100     		.2byte	0x1
 12538 0e30 54       		.byte	0x54
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 323


 12539 0e31 78000000 		.4byte	.LVL332
 12540 0e35 80000000 		.4byte	.LFE704
 12541 0e39 0100     		.2byte	0x1
 12542 0e3b 50       		.byte	0x50
 12543 0e3c 00000000 		.4byte	0
 12544 0e40 00000000 		.4byte	0
 12545              	.LLST98:
 12546 0e44 00000000 		.4byte	.LVL333
 12547 0e48 0D000000 		.4byte	.LVL334-1
 12548 0e4c 0100     		.2byte	0x1
 12549 0e4e 50       		.byte	0x50
 12550 0e4f 0D000000 		.4byte	.LVL334-1
 12551 0e53 9C000000 		.4byte	.LVL344
 12552 0e57 0100     		.2byte	0x1
 12553 0e59 57       		.byte	0x57
 12554 0e5a 9C000000 		.4byte	.LVL344
 12555 0e5e A4000000 		.4byte	.LFE705
 12556 0e62 0400     		.2byte	0x4
 12557 0e64 F3       		.byte	0xf3
 12558 0e65 01       		.uleb128 0x1
 12559 0e66 50       		.byte	0x50
 12560 0e67 9F       		.byte	0x9f
 12561 0e68 00000000 		.4byte	0
 12562 0e6c 00000000 		.4byte	0
 12563              	.LLST99:
 12564 0e70 00000000 		.4byte	.LVL333
 12565 0e74 0D000000 		.4byte	.LVL334-1
 12566 0e78 0100     		.2byte	0x1
 12567 0e7a 51       		.byte	0x51
 12568 0e7b 0D000000 		.4byte	.LVL334-1
 12569 0e7f 80000000 		.4byte	.LVL338
 12570 0e83 0100     		.2byte	0x1
 12571 0e85 55       		.byte	0x55
 12572 0e86 80000000 		.4byte	.LVL338
 12573 0e8a 86000000 		.4byte	.LVL341
 12574 0e8e 0400     		.2byte	0x4
 12575 0e90 F3       		.byte	0xf3
 12576 0e91 01       		.uleb128 0x1
 12577 0e92 51       		.byte	0x51
 12578 0e93 9F       		.byte	0x9f
 12579 0e94 86000000 		.4byte	.LVL341
 12580 0e98 88000000 		.4byte	.LVL342
 12581 0e9c 0100     		.2byte	0x1
 12582 0e9e 55       		.byte	0x55
 12583 0e9f 88000000 		.4byte	.LVL342
 12584 0ea3 A4000000 		.4byte	.LFE705
 12585 0ea7 0400     		.2byte	0x4
 12586 0ea9 F3       		.byte	0xf3
 12587 0eaa 01       		.uleb128 0x1
 12588 0eab 51       		.byte	0x51
 12589 0eac 9F       		.byte	0x9f
 12590 0ead 00000000 		.4byte	0
 12591 0eb1 00000000 		.4byte	0
 12592              	.LLST100:
 12593 0eb5 00000000 		.4byte	.LVL333
 12594 0eb9 0D000000 		.4byte	.LVL334-1
 12595 0ebd 0100     		.2byte	0x1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 324


 12596 0ebf 52       		.byte	0x52
 12597 0ec0 0D000000 		.4byte	.LVL334-1
 12598 0ec4 84000000 		.4byte	.LVL340
 12599 0ec8 0100     		.2byte	0x1
 12600 0eca 54       		.byte	0x54
 12601 0ecb 84000000 		.4byte	.LVL340
 12602 0ecf 86000000 		.4byte	.LVL341
 12603 0ed3 0400     		.2byte	0x4
 12604 0ed5 F3       		.byte	0xf3
 12605 0ed6 01       		.uleb128 0x1
 12606 0ed7 52       		.byte	0x52
 12607 0ed8 9F       		.byte	0x9f
 12608 0ed9 86000000 		.4byte	.LVL341
 12609 0edd 88000000 		.4byte	.LVL342
 12610 0ee1 0100     		.2byte	0x1
 12611 0ee3 54       		.byte	0x54
 12612 0ee4 88000000 		.4byte	.LVL342
 12613 0ee8 A4000000 		.4byte	.LFE705
 12614 0eec 0400     		.2byte	0x4
 12615 0eee F3       		.byte	0xf3
 12616 0eef 01       		.uleb128 0x1
 12617 0ef0 52       		.byte	0x52
 12618 0ef1 9F       		.byte	0x9f
 12619 0ef2 00000000 		.4byte	0
 12620 0ef6 00000000 		.4byte	0
 12621              	.LLST101:
 12622 0efa 00000000 		.4byte	.LVL333
 12623 0efe 0D000000 		.4byte	.LVL334-1
 12624 0f02 0100     		.2byte	0x1
 12625 0f04 53       		.byte	0x53
 12626 0f05 0D000000 		.4byte	.LVL334-1
 12627 0f09 9C000000 		.4byte	.LVL344
 12628 0f0d 0100     		.2byte	0x1
 12629 0f0f 56       		.byte	0x56
 12630 0f10 9C000000 		.4byte	.LVL344
 12631 0f14 A4000000 		.4byte	.LFE705
 12632 0f18 0400     		.2byte	0x4
 12633 0f1a F3       		.byte	0xf3
 12634 0f1b 01       		.uleb128 0x1
 12635 0f1c 53       		.byte	0x53
 12636 0f1d 9F       		.byte	0x9f
 12637 0f1e 00000000 		.4byte	0
 12638 0f22 00000000 		.4byte	0
 12639              	.LLST102:
 12640 0f26 82000000 		.4byte	.LVL339
 12641 0f2a 86000000 		.4byte	.LVL341
 12642 0f2e 0200     		.2byte	0x2
 12643 0f30 31       		.byte	0x31
 12644 0f31 9F       		.byte	0x9f
 12645 0f32 88000000 		.4byte	.LVL342
 12646 0f36 9C000000 		.4byte	.LVL344
 12647 0f3a 0100     		.2byte	0x1
 12648 0f3c 54       		.byte	0x54
 12649 0f3d 9C000000 		.4byte	.LVL344
 12650 0f41 A4000000 		.4byte	.LFE705
 12651 0f45 0100     		.2byte	0x1
 12652 0f47 50       		.byte	0x50
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 325


 12653 0f48 00000000 		.4byte	0
 12654 0f4c 00000000 		.4byte	0
 12655              	.LLST103:
 12656 0f50 00000000 		.4byte	.LVL345
 12657 0f54 21000000 		.4byte	.LVL350-1
 12658 0f58 0100     		.2byte	0x1
 12659 0f5a 50       		.byte	0x50
 12660 0f5b 21000000 		.4byte	.LVL350-1
 12661 0f5f D6000000 		.4byte	.LVL359
 12662 0f63 0100     		.2byte	0x1
 12663 0f65 54       		.byte	0x54
 12664 0f66 D6000000 		.4byte	.LVL359
 12665 0f6a E4000000 		.4byte	.LFE706
 12666 0f6e 0400     		.2byte	0x4
 12667 0f70 F3       		.byte	0xf3
 12668 0f71 01       		.uleb128 0x1
 12669 0f72 50       		.byte	0x50
 12670 0f73 9F       		.byte	0x9f
 12671 0f74 00000000 		.4byte	0
 12672 0f78 00000000 		.4byte	0
 12673              	.LLST104:
 12674 0f7c 00000000 		.4byte	.LVL345
 12675 0f80 21000000 		.4byte	.LVL350-1
 12676 0f84 0100     		.2byte	0x1
 12677 0f86 51       		.byte	0x51
 12678 0f87 21000000 		.4byte	.LVL350-1
 12679 0f8b 46000000 		.4byte	.LVL352
 12680 0f8f 0100     		.2byte	0x1
 12681 0f91 56       		.byte	0x56
 12682 0f92 46000000 		.4byte	.LVL352
 12683 0f96 4C000000 		.4byte	.LVL353
 12684 0f9a 0400     		.2byte	0x4
 12685 0f9c F3       		.byte	0xf3
 12686 0f9d 01       		.uleb128 0x1
 12687 0f9e 51       		.byte	0x51
 12688 0f9f 9F       		.byte	0x9f
 12689 0fa0 4C000000 		.4byte	.LVL353
 12690 0fa4 6C000000 		.4byte	.LVL354
 12691 0fa8 0100     		.2byte	0x1
 12692 0faa 56       		.byte	0x56
 12693 0fab 6C000000 		.4byte	.LVL354
 12694 0faf E4000000 		.4byte	.LFE706
 12695 0fb3 0400     		.2byte	0x4
 12696 0fb5 F3       		.byte	0xf3
 12697 0fb6 01       		.uleb128 0x1
 12698 0fb7 51       		.byte	0x51
 12699 0fb8 9F       		.byte	0x9f
 12700 0fb9 00000000 		.4byte	0
 12701 0fbd 00000000 		.4byte	0
 12702              	.LLST105:
 12703 0fc1 00000000 		.4byte	.LVL345
 12704 0fc5 21000000 		.4byte	.LVL350-1
 12705 0fc9 0100     		.2byte	0x1
 12706 0fcb 52       		.byte	0x52
 12707 0fcc 21000000 		.4byte	.LVL350-1
 12708 0fd0 E4000000 		.4byte	.LFE706
 12709 0fd4 0400     		.2byte	0x4
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 326


 12710 0fd6 F3       		.byte	0xf3
 12711 0fd7 01       		.uleb128 0x1
 12712 0fd8 52       		.byte	0x52
 12713 0fd9 9F       		.byte	0x9f
 12714 0fda 00000000 		.4byte	0
 12715 0fde 00000000 		.4byte	0
 12716              	.LLST106:
 12717 0fe2 00000000 		.4byte	.LVL345
 12718 0fe6 14000000 		.4byte	.LVL347
 12719 0fea 0100     		.2byte	0x1
 12720 0fec 53       		.byte	0x53
 12721 0fed 14000000 		.4byte	.LVL347
 12722 0ff1 16000000 		.4byte	.LVL348
 12723 0ff5 0400     		.2byte	0x4
 12724 0ff7 F3       		.byte	0xf3
 12725 0ff8 01       		.uleb128 0x1
 12726 0ff9 53       		.byte	0x53
 12727 0ffa 9F       		.byte	0x9f
 12728 0ffb 16000000 		.4byte	.LVL348
 12729 0fff 21000000 		.4byte	.LVL350-1
 12730 1003 0100     		.2byte	0x1
 12731 1005 53       		.byte	0x53
 12732 1006 21000000 		.4byte	.LVL350-1
 12733 100a D6000000 		.4byte	.LVL359
 12734 100e 0100     		.2byte	0x1
 12735 1010 57       		.byte	0x57
 12736 1011 D6000000 		.4byte	.LVL359
 12737 1015 E4000000 		.4byte	.LFE706
 12738 1019 0400     		.2byte	0x4
 12739 101b F3       		.byte	0xf3
 12740 101c 01       		.uleb128 0x1
 12741 101d 53       		.byte	0x53
 12742 101e 9F       		.byte	0x9f
 12743 101f 00000000 		.4byte	0
 12744 1023 00000000 		.4byte	0
 12745              	.LLST107:
 12746 1027 1E000000 		.4byte	.LVL349
 12747 102b D6000000 		.4byte	.LVL359
 12748 102f 0100     		.2byte	0x1
 12749 1031 54       		.byte	0x54
 12750 1032 D6000000 		.4byte	.LVL359
 12751 1036 E4000000 		.4byte	.LFE706
 12752 103a 0400     		.2byte	0x4
 12753 103c F3       		.byte	0xf3
 12754 103d 01       		.uleb128 0x1
 12755 103e 50       		.byte	0x50
 12756 103f 9F       		.byte	0x9f
 12757 1040 00000000 		.4byte	0
 12758 1044 00000000 		.4byte	0
 12759              	.LLST108:
 12760 1048 02000000 		.4byte	.LVL346
 12761 104c 6C000000 		.4byte	.LVL354
 12762 1050 0200     		.2byte	0x2
 12763 1052 31       		.byte	0x31
 12764 1053 9F       		.byte	0x9f
 12765 1054 6C000000 		.4byte	.LVL354
 12766 1058 D6000000 		.4byte	.LVL359
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 327


 12767 105c 0100     		.2byte	0x1
 12768 105e 55       		.byte	0x55
 12769 105f D6000000 		.4byte	.LVL359
 12770 1063 E4000000 		.4byte	.LFE706
 12771 1067 0100     		.2byte	0x1
 12772 1069 50       		.byte	0x50
 12773 106a 00000000 		.4byte	0
 12774 106e 00000000 		.4byte	0
 12775              	.LLST109:
 12776 1072 2E000000 		.4byte	.LVL351
 12777 1076 77000000 		.4byte	.LVL355-1
 12778 107a 0100     		.2byte	0x1
 12779 107c 53       		.byte	0x53
 12780 107d 00000000 		.4byte	0
 12781 1081 00000000 		.4byte	0
 12782              	.LLST110:
 12783 1085 00000000 		.4byte	.LVL360
 12784 1089 25000000 		.4byte	.LVL364-1
 12785 108d 0100     		.2byte	0x1
 12786 108f 50       		.byte	0x50
 12787 1090 25000000 		.4byte	.LVL364-1
 12788 1094 12010000 		.4byte	.LVL376
 12789 1098 0100     		.2byte	0x1
 12790 109a 54       		.byte	0x54
 12791 109b 12010000 		.4byte	.LVL376
 12792 109f 20010000 		.4byte	.LFE707
 12793 10a3 0400     		.2byte	0x4
 12794 10a5 F3       		.byte	0xf3
 12795 10a6 01       		.uleb128 0x1
 12796 10a7 50       		.byte	0x50
 12797 10a8 9F       		.byte	0x9f
 12798 10a9 00000000 		.4byte	0
 12799 10ad 00000000 		.4byte	0
 12800              	.LLST111:
 12801 10b1 00000000 		.4byte	.LVL360
 12802 10b5 25000000 		.4byte	.LVL364-1
 12803 10b9 0100     		.2byte	0x1
 12804 10bb 51       		.byte	0x51
 12805 10bc 25000000 		.4byte	.LVL364-1
 12806 10c0 B6000000 		.4byte	.LVL369
 12807 10c4 0100     		.2byte	0x1
 12808 10c6 58       		.byte	0x58
 12809 10c7 B6000000 		.4byte	.LVL369
 12810 10cb E0000000 		.4byte	.LVL372
 12811 10cf 0400     		.2byte	0x4
 12812 10d1 F3       		.byte	0xf3
 12813 10d2 01       		.uleb128 0x1
 12814 10d3 51       		.byte	0x51
 12815 10d4 9F       		.byte	0x9f
 12816 10d5 E0000000 		.4byte	.LVL372
 12817 10d9 EA000000 		.4byte	.LVL373
 12818 10dd 0100     		.2byte	0x1
 12819 10df 58       		.byte	0x58
 12820 10e0 EA000000 		.4byte	.LVL373
 12821 10e4 20010000 		.4byte	.LFE707
 12822 10e8 0400     		.2byte	0x4
 12823 10ea F3       		.byte	0xf3
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 328


 12824 10eb 01       		.uleb128 0x1
 12825 10ec 51       		.byte	0x51
 12826 10ed 9F       		.byte	0x9f
 12827 10ee 00000000 		.4byte	0
 12828 10f2 00000000 		.4byte	0
 12829              	.LLST112:
 12830 10f6 00000000 		.4byte	.LVL360
 12831 10fa 25000000 		.4byte	.LVL364-1
 12832 10fe 0100     		.2byte	0x1
 12833 1100 52       		.byte	0x52
 12834 1101 25000000 		.4byte	.LVL364-1
 12835 1105 20010000 		.4byte	.LFE707
 12836 1109 0400     		.2byte	0x4
 12837 110b F3       		.byte	0xf3
 12838 110c 01       		.uleb128 0x1
 12839 110d 52       		.byte	0x52
 12840 110e 9F       		.byte	0x9f
 12841 110f 00000000 		.4byte	0
 12842 1113 00000000 		.4byte	0
 12843              	.LLST113:
 12844 1117 00000000 		.4byte	.LVL360
 12845 111b 18000000 		.4byte	.LVL362
 12846 111f 0100     		.2byte	0x1
 12847 1121 53       		.byte	0x53
 12848 1122 18000000 		.4byte	.LVL362
 12849 1126 1A000000 		.4byte	.LVL363
 12850 112a 0400     		.2byte	0x4
 12851 112c F3       		.byte	0xf3
 12852 112d 01       		.uleb128 0x1
 12853 112e 53       		.byte	0x53
 12854 112f 9F       		.byte	0x9f
 12855 1130 1A000000 		.4byte	.LVL363
 12856 1134 25000000 		.4byte	.LVL364-1
 12857 1138 0100     		.2byte	0x1
 12858 113a 53       		.byte	0x53
 12859 113b 25000000 		.4byte	.LVL364-1
 12860 113f 12010000 		.4byte	.LVL376
 12861 1143 0100     		.2byte	0x1
 12862 1145 59       		.byte	0x59
 12863 1146 12010000 		.4byte	.LVL376
 12864 114a 20010000 		.4byte	.LFE707
 12865 114e 0400     		.2byte	0x4
 12866 1150 F3       		.byte	0xf3
 12867 1151 01       		.uleb128 0x1
 12868 1152 53       		.byte	0x53
 12869 1153 9F       		.byte	0x9f
 12870 1154 00000000 		.4byte	0
 12871 1158 00000000 		.4byte	0
 12872              	.LLST114:
 12873 115c 00000000 		.4byte	.LVL360
 12874 1160 12010000 		.4byte	.LVL376
 12875 1164 0200     		.2byte	0x2
 12876 1166 91       		.byte	0x91
 12877 1167 00       		.sleb128 0
 12878 1168 12010000 		.4byte	.LVL376
 12879 116c 20010000 		.4byte	.LFE707
 12880 1170 0200     		.2byte	0x2
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 329


 12881 1172 7D       		.byte	0x7d
 12882 1173 00       		.sleb128 0
 12883 1174 00000000 		.4byte	0
 12884 1178 00000000 		.4byte	0
 12885              	.LLST115:
 12886 117c 26000000 		.4byte	.LVL364
 12887 1180 12010000 		.4byte	.LVL376
 12888 1184 0100     		.2byte	0x1
 12889 1186 54       		.byte	0x54
 12890 1187 12010000 		.4byte	.LVL376
 12891 118b 20010000 		.4byte	.LFE707
 12892 118f 0400     		.2byte	0x4
 12893 1191 F3       		.byte	0xf3
 12894 1192 01       		.uleb128 0x1
 12895 1193 50       		.byte	0x50
 12896 1194 9F       		.byte	0x9f
 12897 1195 00000000 		.4byte	0
 12898 1199 00000000 		.4byte	0
 12899              	.LLST116:
 12900 119d 4C000000 		.4byte	.LVL365
 12901 11a1 96000000 		.4byte	.LVL367
 12902 11a5 0100     		.2byte	0x1
 12903 11a7 53       		.byte	0x53
 12904 11a8 00000000 		.4byte	0
 12905 11ac 00000000 		.4byte	0
 12906              	.LLST117:
 12907 11b0 06000000 		.4byte	.LVL361
 12908 11b4 90000000 		.4byte	.LVL366
 12909 11b8 0200     		.2byte	0x2
 12910 11ba 31       		.byte	0x31
 12911 11bb 9F       		.byte	0x9f
 12912 11bc 90000000 		.4byte	.LVL366
 12913 11c0 12010000 		.4byte	.LVL376
 12914 11c4 0100     		.2byte	0x1
 12915 11c6 55       		.byte	0x55
 12916 11c7 12010000 		.4byte	.LVL376
 12917 11cb 20010000 		.4byte	.LFE707
 12918 11cf 0100     		.2byte	0x1
 12919 11d1 50       		.byte	0x50
 12920 11d2 00000000 		.4byte	0
 12921 11d6 00000000 		.4byte	0
 12922              	.LLST118:
 12923 11da 08010000 		.4byte	.LVL374
 12924 11de 0C010000 		.4byte	.LVL375
 12925 11e2 0100     		.2byte	0x1
 12926 11e4 57       		.byte	0x57
 12927 11e5 00000000 		.4byte	0
 12928 11e9 00000000 		.4byte	0
 12929              	.LLST119:
 12930 11ed 00000000 		.4byte	.LVL377
 12931 11f1 1D000000 		.4byte	.LVL379-1
 12932 11f5 0100     		.2byte	0x1
 12933 11f7 50       		.byte	0x50
 12934 11f8 1D000000 		.4byte	.LVL379-1
 12935 11fc C0000000 		.4byte	.LVL388
 12936 1200 0100     		.2byte	0x1
 12937 1202 54       		.byte	0x54
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 330


 12938 1203 C0000000 		.4byte	.LVL388
 12939 1207 CC000000 		.4byte	.LFE708
 12940 120b 0400     		.2byte	0x4
 12941 120d F3       		.byte	0xf3
 12942 120e 01       		.uleb128 0x1
 12943 120f 50       		.byte	0x50
 12944 1210 9F       		.byte	0x9f
 12945 1211 00000000 		.4byte	0
 12946 1215 00000000 		.4byte	0
 12947              	.LLST120:
 12948 1219 00000000 		.4byte	.LVL377
 12949 121d 1D000000 		.4byte	.LVL379-1
 12950 1221 0100     		.2byte	0x1
 12951 1223 51       		.byte	0x51
 12952 1224 1D000000 		.4byte	.LVL379-1
 12953 1228 C0000000 		.4byte	.LVL388
 12954 122c 0100     		.2byte	0x1
 12955 122e 55       		.byte	0x55
 12956 122f C0000000 		.4byte	.LVL388
 12957 1233 CC000000 		.4byte	.LFE708
 12958 1237 0400     		.2byte	0x4
 12959 1239 F3       		.byte	0xf3
 12960 123a 01       		.uleb128 0x1
 12961 123b 51       		.byte	0x51
 12962 123c 9F       		.byte	0x9f
 12963 123d 00000000 		.4byte	0
 12964 1241 00000000 		.4byte	0
 12965              	.LLST121:
 12966 1245 1E000000 		.4byte	.LVL379
 12967 1249 C0000000 		.4byte	.LVL388
 12968 124d 0100     		.2byte	0x1
 12969 124f 54       		.byte	0x54
 12970 1250 C0000000 		.4byte	.LVL388
 12971 1254 CC000000 		.4byte	.LFE708
 12972 1258 0400     		.2byte	0x4
 12973 125a F3       		.byte	0xf3
 12974 125b 01       		.uleb128 0x1
 12975 125c 50       		.byte	0x50
 12976 125d 9F       		.byte	0x9f
 12977 125e 00000000 		.4byte	0
 12978 1262 00000000 		.4byte	0
 12979              	.LLST122:
 12980 1266 38000000 		.4byte	.LVL380
 12981 126a 4A000000 		.4byte	.LVL381
 12982 126e 0100     		.2byte	0x1
 12983 1270 53       		.byte	0x53
 12984 1271 00000000 		.4byte	0
 12985 1275 00000000 		.4byte	0
 12986              	.LLST123:
 12987 1279 BA000000 		.4byte	.LVL386
 12988 127d BE000000 		.4byte	.LVL387
 12989 1281 0100     		.2byte	0x1
 12990 1283 56       		.byte	0x56
 12991 1284 00000000 		.4byte	0
 12992 1288 00000000 		.4byte	0
 12993              	.LLST124:
 12994 128c 00000000 		.4byte	.LVL389
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 331


 12995 1290 0C000000 		.4byte	.LVL390
 12996 1294 0100     		.2byte	0x1
 12997 1296 50       		.byte	0x50
 12998 1297 00000000 		.4byte	0
 12999 129b 00000000 		.4byte	0
 13000              	.LLST125:
 13001 129f 0C000000 		.4byte	.LVL390
 13002 12a3 22000000 		.4byte	.LVL393
 13003 12a7 0100     		.2byte	0x1
 13004 12a9 54       		.byte	0x54
 13005 12aa 24000000 		.4byte	.LVL394
 13006 12ae 26000000 		.4byte	.LVL395
 13007 12b2 0100     		.2byte	0x1
 13008 12b4 54       		.byte	0x54
 13009 12b5 00000000 		.4byte	0
 13010 12b9 00000000 		.4byte	0
 13011              	.LLST126:
 13012 12bd 20000000 		.4byte	.LVL392
 13013 12c1 24000000 		.4byte	.LVL394
 13014 12c5 0200     		.2byte	0x2
 13015 12c7 31       		.byte	0x31
 13016 12c8 9F       		.byte	0x9f
 13017 12c9 26000000 		.4byte	.LVL395
 13018 12cd 2E000000 		.4byte	.LVL397
 13019 12d1 0100     		.2byte	0x1
 13020 12d3 54       		.byte	0x54
 13021 12d4 2E000000 		.4byte	.LVL397
 13022 12d8 34000000 		.4byte	.LFE709
 13023 12dc 0100     		.2byte	0x1
 13024 12de 50       		.byte	0x50
 13025 12df 00000000 		.4byte	0
 13026 12e3 00000000 		.4byte	0
 13027              		.section	.debug_aranges,"",%progbits
 13028 0000 9C010000 		.4byte	0x19c
 13029 0004 0200     		.2byte	0x2
 13030 0006 00000000 		.4byte	.Ldebug_info0
 13031 000a 04       		.byte	0x4
 13032 000b 00       		.byte	0
 13033 000c 0000     		.2byte	0
 13034 000e 0000     		.2byte	0
 13035 0010 00000000 		.4byte	.LFB672
 13036 0014 4C000000 		.4byte	.LFE672-.LFB672
 13037 0018 00000000 		.4byte	.LFB700
 13038 001c 2C000000 		.4byte	.LFE700-.LFB700
 13039 0020 00000000 		.4byte	.LFB699
 13040 0024 12000000 		.4byte	.LFE699-.LFB699
 13041 0028 00000000 		.4byte	.LFB663
 13042 002c 9E000000 		.4byte	.LFE663-.LFB663
 13043 0030 00000000 		.4byte	.LFB697
 13044 0034 58000000 		.4byte	.LFE697-.LFB697
 13045 0038 00000000 		.4byte	.LFB664
 13046 003c AC000000 		.4byte	.LFE664-.LFB664
 13047 0040 00000000 		.4byte	.LFB698
 13048 0044 44000000 		.4byte	.LFE698-.LFB698
 13049 0048 00000000 		.4byte	.LFB694
 13050 004c 28000000 		.4byte	.LFE694-.LFB694
 13051 0050 00000000 		.4byte	.LFB710
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 332


 13052 0054 68000000 		.4byte	.LFE710-.LFB710
 13053 0058 00000000 		.4byte	.LFB662
 13054 005c 62000000 		.4byte	.LFE662-.LFB662
 13055 0060 00000000 		.4byte	.LFB665
 13056 0064 B0000000 		.4byte	.LFE665-.LFB665
 13057 0068 00000000 		.4byte	.LFB668
 13058 006c 20000000 		.4byte	.LFE668-.LFB668
 13059 0070 00000000 		.4byte	.LFB669
 13060 0074 30000000 		.4byte	.LFE669-.LFB669
 13061 0078 00000000 		.4byte	.LFB670
 13062 007c DC000000 		.4byte	.LFE670-.LFB670
 13063 0080 00000000 		.4byte	.LFB673
 13064 0084 88000000 		.4byte	.LFE673-.LFB673
 13065 0088 00000000 		.4byte	.LFB674
 13066 008c A4000000 		.4byte	.LFE674-.LFB674
 13067 0090 00000000 		.4byte	.LFB675
 13068 0094 7C000000 		.4byte	.LFE675-.LFB675
 13069 0098 00000000 		.4byte	.LFB676
 13070 009c 24000000 		.4byte	.LFE676-.LFB676
 13071 00a0 00000000 		.4byte	.LFB677
 13072 00a4 14000000 		.4byte	.LFE677-.LFB677
 13073 00a8 00000000 		.4byte	.LFB679
 13074 00ac 0C000000 		.4byte	.LFE679-.LFB679
 13075 00b0 00000000 		.4byte	.LFB680
 13076 00b4 14000000 		.4byte	.LFE680-.LFB680
 13077 00b8 00000000 		.4byte	.LFB681
 13078 00bc 0C000000 		.4byte	.LFE681-.LFB681
 13079 00c0 00000000 		.4byte	.LFB682
 13080 00c4 28000000 		.4byte	.LFE682-.LFB682
 13081 00c8 00000000 		.4byte	.LFB683
 13082 00cc FC000000 		.4byte	.LFE683-.LFB683
 13083 00d0 00000000 		.4byte	.LFB678
 13084 00d4 F0000000 		.4byte	.LFE678-.LFB678
 13085 00d8 00000000 		.4byte	.LFB666
 13086 00dc AC000000 		.4byte	.LFE666-.LFB666
 13087 00e0 00000000 		.4byte	.LFB667
 13088 00e4 50000000 		.4byte	.LFE667-.LFB667
 13089 00e8 00000000 		.4byte	.LFB684
 13090 00ec C8000000 		.4byte	.LFE684-.LFB684
 13091 00f0 00000000 		.4byte	.LFB671
 13092 00f4 B8000000 		.4byte	.LFE671-.LFB671
 13093 00f8 00000000 		.4byte	.LFB685
 13094 00fc 34000000 		.4byte	.LFE685-.LFB685
 13095 0100 00000000 		.4byte	.LFB686
 13096 0104 5C000000 		.4byte	.LFE686-.LFB686
 13097 0108 00000000 		.4byte	.LFB687
 13098 010c 3C000000 		.4byte	.LFE687-.LFB687
 13099 0110 00000000 		.4byte	.LFB688
 13100 0114 88000000 		.4byte	.LFE688-.LFB688
 13101 0118 00000000 		.4byte	.LFB689
 13102 011c 84000000 		.4byte	.LFE689-.LFB689
 13103 0120 00000000 		.4byte	.LFB690
 13104 0124 34000000 		.4byte	.LFE690-.LFB690
 13105 0128 00000000 		.4byte	.LFB691
 13106 012c 14000000 		.4byte	.LFE691-.LFB691
 13107 0130 00000000 		.4byte	.LFB692
 13108 0134 80000000 		.4byte	.LFE692-.LFB692
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 333


 13109 0138 00000000 		.4byte	.LFB693
 13110 013c 10000000 		.4byte	.LFE693-.LFB693
 13111 0140 00000000 		.4byte	.LFB695
 13112 0144 1C000000 		.4byte	.LFE695-.LFB695
 13113 0148 00000000 		.4byte	.LFB696
 13114 014c 20000000 		.4byte	.LFE696-.LFB696
 13115 0150 00000000 		.4byte	.LFB701
 13116 0154 0C000000 		.4byte	.LFE701-.LFB701
 13117 0158 00000000 		.4byte	.LFB702
 13118 015c 20000000 		.4byte	.LFE702-.LFB702
 13119 0160 00000000 		.4byte	.LFB703
 13120 0164 20000000 		.4byte	.LFE703-.LFB703
 13121 0168 00000000 		.4byte	.LFB704
 13122 016c 80000000 		.4byte	.LFE704-.LFB704
 13123 0170 00000000 		.4byte	.LFB705
 13124 0174 A4000000 		.4byte	.LFE705-.LFB705
 13125 0178 00000000 		.4byte	.LFB706
 13126 017c E4000000 		.4byte	.LFE706-.LFB706
 13127 0180 00000000 		.4byte	.LFB707
 13128 0184 20010000 		.4byte	.LFE707-.LFB707
 13129 0188 00000000 		.4byte	.LFB708
 13130 018c CC000000 		.4byte	.LFE708-.LFB708
 13131 0190 00000000 		.4byte	.LFB709
 13132 0194 34000000 		.4byte	.LFE709-.LFB709
 13133 0198 00000000 		.4byte	0
 13134 019c 00000000 		.4byte	0
 13135              		.section	.debug_ranges,"",%progbits
 13136              	.Ldebug_ranges0:
 13137 0000 0E000000 		.4byte	.LBB122
 13138 0004 58000000 		.4byte	.LBE122
 13139 0008 5C000000 		.4byte	.LBB126
 13140 000c DA000000 		.4byte	.LBE126
 13141 0010 00000000 		.4byte	0
 13142 0014 00000000 		.4byte	0
 13143 0018 4C000000 		.4byte	.LBB136
 13144 001c 62000000 		.4byte	.LBE136
 13145 0020 66000000 		.4byte	.LBB137
 13146 0024 6E000000 		.4byte	.LBE137
 13147 0028 76000000 		.4byte	.LBB138
 13148 002c 8C000000 		.4byte	.LBE138
 13149 0030 00000000 		.4byte	0
 13150 0034 00000000 		.4byte	0
 13151 0038 00000000 		.4byte	.LFB672
 13152 003c 4C000000 		.4byte	.LFE672
 13153 0040 00000000 		.4byte	.LFB700
 13154 0044 2C000000 		.4byte	.LFE700
 13155 0048 00000000 		.4byte	.LFB699
 13156 004c 12000000 		.4byte	.LFE699
 13157 0050 00000000 		.4byte	.LFB663
 13158 0054 9E000000 		.4byte	.LFE663
 13159 0058 00000000 		.4byte	.LFB697
 13160 005c 58000000 		.4byte	.LFE697
 13161 0060 00000000 		.4byte	.LFB664
 13162 0064 AC000000 		.4byte	.LFE664
 13163 0068 00000000 		.4byte	.LFB698
 13164 006c 44000000 		.4byte	.LFE698
 13165 0070 00000000 		.4byte	.LFB694
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 334


 13166 0074 28000000 		.4byte	.LFE694
 13167 0078 00000000 		.4byte	.LFB710
 13168 007c 68000000 		.4byte	.LFE710
 13169 0080 00000000 		.4byte	.LFB662
 13170 0084 62000000 		.4byte	.LFE662
 13171 0088 00000000 		.4byte	.LFB665
 13172 008c B0000000 		.4byte	.LFE665
 13173 0090 00000000 		.4byte	.LFB668
 13174 0094 20000000 		.4byte	.LFE668
 13175 0098 00000000 		.4byte	.LFB669
 13176 009c 30000000 		.4byte	.LFE669
 13177 00a0 00000000 		.4byte	.LFB670
 13178 00a4 DC000000 		.4byte	.LFE670
 13179 00a8 00000000 		.4byte	.LFB673
 13180 00ac 88000000 		.4byte	.LFE673
 13181 00b0 00000000 		.4byte	.LFB674
 13182 00b4 A4000000 		.4byte	.LFE674
 13183 00b8 00000000 		.4byte	.LFB675
 13184 00bc 7C000000 		.4byte	.LFE675
 13185 00c0 00000000 		.4byte	.LFB676
 13186 00c4 24000000 		.4byte	.LFE676
 13187 00c8 00000000 		.4byte	.LFB677
 13188 00cc 14000000 		.4byte	.LFE677
 13189 00d0 00000000 		.4byte	.LFB679
 13190 00d4 0C000000 		.4byte	.LFE679
 13191 00d8 00000000 		.4byte	.LFB680
 13192 00dc 14000000 		.4byte	.LFE680
 13193 00e0 00000000 		.4byte	.LFB681
 13194 00e4 0C000000 		.4byte	.LFE681
 13195 00e8 00000000 		.4byte	.LFB682
 13196 00ec 28000000 		.4byte	.LFE682
 13197 00f0 00000000 		.4byte	.LFB683
 13198 00f4 FC000000 		.4byte	.LFE683
 13199 00f8 00000000 		.4byte	.LFB678
 13200 00fc F0000000 		.4byte	.LFE678
 13201 0100 00000000 		.4byte	.LFB666
 13202 0104 AC000000 		.4byte	.LFE666
 13203 0108 00000000 		.4byte	.LFB667
 13204 010c 50000000 		.4byte	.LFE667
 13205 0110 00000000 		.4byte	.LFB684
 13206 0114 C8000000 		.4byte	.LFE684
 13207 0118 00000000 		.4byte	.LFB671
 13208 011c B8000000 		.4byte	.LFE671
 13209 0120 00000000 		.4byte	.LFB685
 13210 0124 34000000 		.4byte	.LFE685
 13211 0128 00000000 		.4byte	.LFB686
 13212 012c 5C000000 		.4byte	.LFE686
 13213 0130 00000000 		.4byte	.LFB687
 13214 0134 3C000000 		.4byte	.LFE687
 13215 0138 00000000 		.4byte	.LFB688
 13216 013c 88000000 		.4byte	.LFE688
 13217 0140 00000000 		.4byte	.LFB689
 13218 0144 84000000 		.4byte	.LFE689
 13219 0148 00000000 		.4byte	.LFB690
 13220 014c 34000000 		.4byte	.LFE690
 13221 0150 00000000 		.4byte	.LFB691
 13222 0154 14000000 		.4byte	.LFE691
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 335


 13223 0158 00000000 		.4byte	.LFB692
 13224 015c 80000000 		.4byte	.LFE692
 13225 0160 00000000 		.4byte	.LFB693
 13226 0164 10000000 		.4byte	.LFE693
 13227 0168 00000000 		.4byte	.LFB695
 13228 016c 1C000000 		.4byte	.LFE695
 13229 0170 00000000 		.4byte	.LFB696
 13230 0174 20000000 		.4byte	.LFE696
 13231 0178 00000000 		.4byte	.LFB701
 13232 017c 0C000000 		.4byte	.LFE701
 13233 0180 00000000 		.4byte	.LFB702
 13234 0184 20000000 		.4byte	.LFE702
 13235 0188 00000000 		.4byte	.LFB703
 13236 018c 20000000 		.4byte	.LFE703
 13237 0190 00000000 		.4byte	.LFB704
 13238 0194 80000000 		.4byte	.LFE704
 13239 0198 00000000 		.4byte	.LFB705
 13240 019c A4000000 		.4byte	.LFE705
 13241 01a0 00000000 		.4byte	.LFB706
 13242 01a4 E4000000 		.4byte	.LFE706
 13243 01a8 00000000 		.4byte	.LFB707
 13244 01ac 20010000 		.4byte	.LFE707
 13245 01b0 00000000 		.4byte	.LFB708
 13246 01b4 CC000000 		.4byte	.LFE708
 13247 01b8 00000000 		.4byte	.LFB709
 13248 01bc 34000000 		.4byte	.LFE709
 13249 01c0 00000000 		.4byte	0
 13250 01c4 00000000 		.4byte	0
 13251              		.section	.debug_line,"",%progbits
 13252              	.Ldebug_line0:
 13253 0000 9C0E0000 		.section	.debug_str,"MS",%progbits,1
 13253      02002205 
 13253      00000201 
 13253      FB0E0D00 
 13253      01010101 
 13254              	.LASF434:
 13255 0000 75785065 		.ascii	"uxPendedCounts\000"
 13255      6E646564 
 13255      436F756E 
 13255      747300
 13256              	.LASF202:
 13257 000f 43595F42 		.ascii	"CY_BLE_EVT_PENDING_FLASH_WRITE\000"
 13257      4C455F45 
 13257      56545F50 
 13257      454E4449 
 13257      4E475F46 
 13258              	.LASF542:
 13259 002e 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\10.0."
 13259      72617465 
 13259      645F536F 
 13259      75726365 
 13259      5C50536F 
 13260 005c 315C536F 		.ascii	"1\\Source\\tasks.c\000"
 13260      75726365 
 13260      5C746173 
 13260      6B732E63 
 13260      00
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 336


 13261              	.LASF283:
 13262 006d 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_BY_TYPE_RSP\000"
 13262      4C455F45 
 13262      56545F47 
 13262      41545443 
 13262      5F524541 
 13263              	.LASF505:
 13264 008f 78596965 		.ascii	"xYieldPending\000"
 13264      6C645065 
 13264      6E64696E 
 13264      6700
 13265              	.LASF32:
 13266 009d 63727970 		.ascii	"cryptoBase\000"
 13266      746F4261 
 13266      736500
 13267              	.LASF4:
 13268 00a8 73697A65 		.ascii	"size_t\000"
 13268      5F7400
 13269              	.LASF16:
 13270 00af 73697A65 		.ascii	"sizetype\000"
 13270      74797065 
 13270      00
 13271              	.LASF230:
 13272 00b8 43595F42 		.ascii	"CY_BLE_EVT_SET_DEVICE_ADDR_COMPLETE\000"
 13272      4C455F45 
 13272      56545F53 
 13272      45545F44 
 13272      45564943 
 13273              	.LASF459:
 13274 00dc 76546173 		.ascii	"vTaskInternalSetTimeOutState\000"
 13274      6B496E74 
 13274      65726E61 
 13274      6C536574 
 13274      54696D65 
 13275              	.LASF405:
 13276 00f9 75735374 		.ascii	"usStackDepth\000"
 13276      61636B44 
 13276      65707468 
 13276      00
 13277              	.LASF155:
 13278 0106 63795F73 		.ascii	"cy_stc_scb_uart_context\000"
 13278      74635F73 
 13278      63625F75 
 13278      6172745F 
 13278      636F6E74 
 13279              	.LASF402:
 13280 011e 7843616E 		.ascii	"xCanBlockIndefinitely\000"
 13280      426C6F63 
 13280      6B496E64 
 13280      6566696E 
 13280      6974656C 
 13281              	.LASF426:
 13282 0134 78546173 		.ascii	"xTaskGetTickCountFromISR\000"
 13282      6B476574 
 13282      5469636B 
 13282      436F756E 
 13282      7446726F 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 337


 13283              	.LASF365:
 13284 014d 4D656D6F 		.ascii	"MemoryRegion_t\000"
 13284      72795265 
 13284      67696F6E 
 13284      5F7400
 13285              	.LASF162:
 13286 015c 72784275 		.ascii	"rxBuf\000"
 13286      6600
 13287              	.LASF229:
 13288 0162 43595F42 		.ascii	"CY_BLE_EVT_SOFT_RESET_COMPLETE\000"
 13288      4C455F45 
 13288      56545F53 
 13288      4F46545F 
 13288      52455345 
 13289              	.LASF369:
 13290 0181 78457665 		.ascii	"xEventListItem\000"
 13290      6E744C69 
 13290      73744974 
 13290      656D00
 13291              	.LASF59:
 13292 0190 63727970 		.ascii	"cryptoMemSize\000"
 13292      746F4D65 
 13292      6D53697A 
 13292      6500
 13293              	.LASF236:
 13294 019e 43595F42 		.ascii	"CY_BLE_EVT_SET_CLK_CONFIG_COMPLETE\000"
 13294      4C455F45 
 13294      56545F53 
 13294      45545F43 
 13294      4C4B5F43 
 13295              	.LASF450:
 13296 01c1 76546173 		.ascii	"vTaskPlaceOnUnorderedEventList\000"
 13296      6B506C61 
 13296      63654F6E 
 13296      556E6F72 
 13296      64657265 
 13297              	.LASF82:
 13298 01e0 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 13298      44697643 
 13298      6D645061 
 13298      44697653 
 13298      656C506F 
 13299              	.LASF28:
 13300 01f6 6873696F 		.ascii	"hsiomBase\000"
 13300      6D426173 
 13300      6500
 13301              	.LASF235:
 13302 0200 43595F42 		.ascii	"CY_BLE_EVT_GET_CLK_CONFIG_COMPLETE\000"
 13302      4C455F45 
 13302      56545F47 
 13302      45545F43 
 13302      4C4B5F43 
 13303              	.LASF328:
 13304 0223 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_DESCR_DISCOVERING\000"
 13304      4C455F43 
 13304      4F4E4E5F 
 13304      53544154 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 338


 13304      455F434C 
 13305              	.LASF319:
 13306 024e 43595F42 		.ascii	"CY_BLE_ADV_STATE_ADVERTISING\000"
 13306      4C455F41 
 13306      44565F53 
 13306      54415445 
 13306      5F414456 
 13307              	.LASF208:
 13308 026b 43595F42 		.ascii	"CY_BLE_EVT_LE_SET_EVENT_MASK_COMPLETE\000"
 13308      4C455F45 
 13308      56545F4C 
 13308      455F5345 
 13308      545F4556 
 13309              	.LASF357:
 13310 0291 7854494D 		.ascii	"xTIME_OUT\000"
 13310      455F4F55 
 13310      5400
 13311              	.LASF501:
 13312 029b 78546963 		.ascii	"xTickCount\000"
 13312      6B436F75 
 13312      6E7400
 13313              	.LASF507:
 13314 02a6 75785461 		.ascii	"uxTaskNumber\000"
 13314      736B4E75 
 13314      6D626572 
 13314      00
 13315              	.LASF411:
 13316 02b3 75785361 		.ascii	"uxSavedInterruptState\000"
 13316      76656449 
 13316      6E746572 
 13316      72757074 
 13316      53746174 
 13317              	.LASF204:
 13318 02c9 43595F42 		.ascii	"CY_BLE_EVT_HARDWARE_ERROR\000"
 13318      4C455F45 
 13318      56545F48 
 13318      41524457 
 13318      4152455F 
 13319              	.LASF481:
 13320 02e3 78546173 		.ascii	"xTaskGenericNotify\000"
 13320      6B47656E 
 13320      65726963 
 13320      4E6F7469 
 13320      667900
 13321              	.LASF333:
 13322 02f6 42617365 		.ascii	"BaseType_t\000"
 13322      54797065 
 13322      5F7400
 13323              	.LASF205:
 13324 0301 43595F42 		.ascii	"CY_BLE_EVT_WRITE_AUTH_PAYLOAD_TO_COMPLETE\000"
 13324      4C455F45 
 13324      56545F57 
 13324      52495445 
 13324      5F415554 
 13325              	.LASF371:
 13326 032b 70785374 		.ascii	"pxStack\000"
 13326      61636B00 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 339


 13327              	.LASF156:
 13328 0333 74785374 		.ascii	"txStatus\000"
 13328      61747573 
 13328      00
 13329              	.LASF313:
 13330 033c 43595F42 		.ascii	"CY_BLE_EVT_MAX\000"
 13330      4C455F45 
 13330      56545F4D 
 13330      415800
 13331              	.LASF418:
 13332 034b 76546173 		.ascii	"vTaskResume\000"
 13332      6B526573 
 13332      756D6500 
 13333              	.LASF124:
 13334 0357 73746F70 		.ascii	"stopDst\000"
 13334      44737400 
 13335              	.LASF133:
 13336 035f 73746174 		.ascii	"state\000"
 13336      6500
 13337              	.LASF546:
 13338 0365 75785461 		.ascii	"uxTaskGetNumberOfTasks\000"
 13338      736B4765 
 13338      744E756D 
 13338      6265724F 
 13338      66546173 
 13339              	.LASF89:
 13340 037c 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 13340      50727443 
 13340      66674F66 
 13340      66736574 
 13340      00
 13341              	.LASF24:
 13342 038d 666C6173 		.ascii	"flashcBase\000"
 13342      68634261 
 13342      736500
 13343              	.LASF179:
 13344 0398 636F6D70 		.ascii	"compare0\000"
 13344      61726530 
 13344      00
 13345              	.LASF180:
 13346 03a1 636F6D70 		.ascii	"compare1\000"
 13346      61726531 
 13346      00
 13347              	.LASF51:
 13348 03aa 73727373 		.ascii	"srssNumHfroot\000"
 13348      4E756D48 
 13348      66726F6F 
 13348      7400
 13349              	.LASF288:
 13350 03b8 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_MULTI_RSP\000"
 13350      4C455F45 
 13350      56545F47 
 13350      41545443 
 13350      5F524541 
 13351              	.LASF173:
 13352 03d8 70776D41 		.ascii	"pwmAlignment\000"
 13352      6C69676E 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 340


 13352      6D656E74 
 13352      00
 13353              	.LASF534:
 13354 03e5 764C6973 		.ascii	"vListInsert\000"
 13354      74496E73 
 13354      65727400 
 13355              	.LASF228:
 13356 03f1 43595F42 		.ascii	"CY_BLE_EVT_LL_CNTRL_PROC_PENDING_COMPLETE\000"
 13356      4C455F45 
 13356      56545F4C 
 13356      4C5F434E 
 13356      54524C5F 
 13357              	.LASF447:
 13358 041b 78546173 		.ascii	"xTaskToSuspend\000"
 13358      6B546F53 
 13358      75737065 
 13358      6E6400
 13359              	.LASF194:
 13360 042a 636F756E 		.ascii	"countInputMode\000"
 13360      74496E70 
 13360      75744D6F 
 13360      646500
 13361              	.LASF74:
 13362 0439 64775374 		.ascii	"dwStatusChIdxPos\000"
 13362      61747573 
 13362      43684964 
 13362      78506F73 
 13362      00
 13363              	.LASF386:
 13364 044a 78546173 		.ascii	"xTask\000"
 13364      6B00
 13365              	.LASF294:
 13366 0450 43595F42 		.ascii	"CY_BLE_EVT_GATTC_EXEC_WRITE_RSP\000"
 13366      4C455F45 
 13366      56545F47 
 13366      41545443 
 13366      5F455845 
 13367              	.LASF196:
 13368 0470 63795F73 		.ascii	"cy_stc_tcpwm_pwm_config_t\000"
 13368      74635F74 
 13368      6370776D 
 13368      5F70776D 
 13368      5F636F6E 
 13369              	.LASF409:
 13370 048a 75785265 		.ascii	"uxReturn\000"
 13370      7475726E 
 13370      00
 13371              	.LASF338:
 13372 0493 70784E65 		.ascii	"pxNext\000"
 13372      787400
 13373              	.LASF272:
 13374 049a 43595F42 		.ascii	"CY_BLE_EVT_GAP_GEN_SET_LOCAL_P256_KEYS_COMPLETE\000"
 13374      4C455F45 
 13374      56545F47 
 13374      41505F47 
 13374      454E5F53 
 13375              	.LASF393:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 341


 13376 04ca 70784E65 		.ascii	"pxNewTCB\000"
 13376      77544342 
 13376      00
 13377              	.LASF301:
 13378 04d3 43595F42 		.ascii	"CY_BLE_EVT_GATTC_LONG_PROCEDURE_END\000"
 13378      4C455F45 
 13378      56545F47 
 13378      41545443 
 13378      5F4C4F4E 
 13379              	.LASF306:
 13380 04f7 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_CONN_CNF\000"
 13380      4C455F45 
 13380      56545F4C 
 13380      32434150 
 13380      5F434246 
 13381              	.LASF314:
 13382 0516 62644861 		.ascii	"bdHandle\000"
 13382      6E646C65 
 13382      00
 13383              	.LASF469:
 13384 051f 70765461 		.ascii	"pvTaskGetThreadLocalStoragePointer\000"
 13384      736B4765 
 13384      74546872 
 13384      6561644C 
 13384      6F63616C 
 13385              	.LASF414:
 13386 0542 75784E65 		.ascii	"uxNewPriority\000"
 13386      77507269 
 13386      6F726974 
 13386      7900
 13387              	.LASF5:
 13388 0550 5F5F7569 		.ascii	"__uint8_t\000"
 13388      6E74385F 
 13388      7400
 13389              	.LASF255:
 13390 055a 43595F42 		.ascii	"CY_BLE_EVT_GAP_AUTH_FAILED\000"
 13390      4C455F45 
 13390      56545F47 
 13390      41505F41 
 13390      5554485F 
 13391              	.LASF376:
 13392 0575 74736B54 		.ascii	"tskTCB\000"
 13392      434200
 13393              	.LASF221:
 13394 057c 43595F42 		.ascii	"CY_BLE_EVT_ADD_DEVICE_TO_WHITE_LIST_COMPLETE\000"
 13394      4C455F45 
 13394      56545F41 
 13394      44445F44 
 13394      45564943 
 13395              	.LASF131:
 13396 05a9 75736552 		.ascii	"useRxFifo\000"
 13396      78466966 
 13396      6F00
 13397              	.LASF296:
 13398 05b3 43595F42 		.ascii	"CY_BLE_EVT_GATTC_HANDLE_VALUE_IND\000"
 13398      4C455F45 
 13398      56545F47 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 342


 13398      41545443 
 13398      5F48414E 
 13399              	.LASF187:
 13400 05d5 73776170 		.ascii	"swapInput\000"
 13400      496E7075 
 13400      7400
 13401              	.LASF166:
 13402 05df 74784275 		.ascii	"txBufSize\000"
 13402      6653697A 
 13402      6500
 13403              	.LASF449:
 13404 05e9 70784576 		.ascii	"pxEventList\000"
 13404      656E744C 
 13404      69737400 
 13405              	.LASF200:
 13406 05f5 43595F42 		.ascii	"CY_BLE_EVT_STACK_BUSY_STATUS\000"
 13406      4C455F45 
 13406      56545F53 
 13406      5441434B 
 13406      5F425553 
 13407              	.LASF415:
 13408 0612 75784375 		.ascii	"uxCurrentBasePriority\000"
 13408      7272656E 
 13408      74426173 
 13408      65507269 
 13408      6F726974 
 13409              	.LASF331:
 13410 0628 5461736B 		.ascii	"TaskFunction_t\000"
 13410      46756E63 
 13410      74696F6E 
 13410      5F7400
 13411              	.LASF280:
 13412 0637 43595F42 		.ascii	"CY_BLE_EVT_GATTS_XCNHG_MTU_REQ\000"
 13412      4C455F45 
 13412      56545F47 
 13412      41545453 
 13412      5F58434E 
 13413              	.LASF524:
 13414 0656 70784375 		.ascii	"pxCurrentTCB\000"
 13414      7272656E 
 13414      74544342 
 13414      00
 13415              	.LASF246:
 13416 0663 43595F42 		.ascii	"CY_BLE_EVT_SET_EVENT_MASK_COMPLETE\000"
 13416      4C455F45 
 13416      56545F53 
 13416      45545F45 
 13416      56454E54 
 13417              	.LASF329:
 13418 0686 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_DISCOVERED\000"
 13418      4C455F43 
 13418      4F4E4E5F 
 13418      53544154 
 13418      455F434C 
 13419              	.LASF451:
 13420 06aa 76546173 		.ascii	"vTaskPlaceOnEventListRestricted\000"
 13420      6B506C61 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 343


 13420      63654F6E 
 13420      4576656E 
 13420      744C6973 
 13421              	.LASF289:
 13422 06ca 43595F42 		.ascii	"CY_BLE_EVT_GATTS_WRITE_REQ\000"
 13422      4C455F45 
 13422      56545F47 
 13422      41545453 
 13422      5F575249 
 13423              	.LASF345:
 13424 06e5 784C4953 		.ascii	"xLIST\000"
 13424      5400
 13425              	.LASF498:
 13426 06eb 75784465 		.ascii	"uxDeletedTasksWaitingCleanUp\000"
 13426      6C657465 
 13426      64546173 
 13426      6B735761 
 13426      6974696E 
 13427              	.LASF77:
 13428 0708 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 13428      5472436D 
 13428      64477253 
 13428      656C4D73 
 13428      6B00
 13429              	.LASF188:
 13430 071a 72656C6F 		.ascii	"reloadInputMode\000"
 13430      6164496E 
 13430      7075744D 
 13430      6F646500 
 13431              	.LASF84:
 13432 072a 70657269 		.ascii	"periDiv8CtlOffset\000"
 13432      44697638 
 13432      43746C4F 
 13432      66667365 
 13432      7400
 13433              	.LASF79:
 13434 073c 70657269 		.ascii	"periTrGrSize\000"
 13434      54724772 
 13434      53697A65 
 13434      00
 13435              	.LASF227:
 13436 0749 43595F42 		.ascii	"CY_BLE_EVT_SET_PRIVACY_MODE_COMPLETE\000"
 13436      4C455F45 
 13436      56545F53 
 13436      45545F50 
 13436      52495641 
 13437              	.LASF396:
 13438 076e 70727641 		.ascii	"prvAddNewTaskToReadyList\000"
 13438      64644E65 
 13438      77546173 
 13438      6B546F52 
 13438      65616479 
 13439              	.LASF259:
 13440 0787 43595F42 		.ascii	"CY_BLE_EVT_GAP_ENCRYPT_CHANGE\000"
 13440      4C455F45 
 13440      56545F47 
 13440      41505F45 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 344


 13440      4E435259 
 13441              	.LASF218:
 13442 07a5 43595F42 		.ascii	"CY_BLE_EVT_SET_HOST_CHANNEL_COMPLETE\000"
 13442      4C455F45 
 13442      56545F53 
 13442      45545F48 
 13442      4F53545F 
 13443              	.LASF517:
 13444 07ca 63795F62 		.ascii	"cy_ble_pendingFlashWrite\000"
 13444      6C655F70 
 13444      656E6469 
 13444      6E67466C 
 13444      61736857 
 13445              	.LASF461:
 13446 07e3 70785469 		.ascii	"pxTicksToWait\000"
 13446      636B7354 
 13446      6F576169 
 13446      7400
 13447              	.LASF318:
 13448 07f1 43595F42 		.ascii	"CY_BLE_ADV_STATE_ADV_INITIATED\000"
 13448      4C455F41 
 13448      44565F53 
 13448      54415445 
 13448      5F414456 
 13449              	.LASF199:
 13450 0810 43595F42 		.ascii	"CY_BLE_EVT_TIMEOUT\000"
 13450      4C455F45 
 13450      56545F54 
 13450      494D454F 
 13450      555400
 13451              	.LASF389:
 13452 0823 70634E61 		.ascii	"pcName\000"
 13452      6D6500
 13453              	.LASF118:
 13454 082a 6461794F 		.ascii	"dayOfMonth\000"
 13454      664D6F6E 
 13454      746800
 13455              	.LASF529:
 13456 0835 764C6973 		.ascii	"vListInitialise\000"
 13456      74496E69 
 13456      7469616C 
 13456      69736500 
 13457              	.LASF140:
 13458 0845 6D617374 		.ascii	"masterNumBytes\000"
 13458      65724E75 
 13458      6D427974 
 13458      657300
 13459              	.LASF220:
 13460 0854 43595F42 		.ascii	"CY_BLE_EVT_REMOVE_DEVICE_FROM_RPA_LIST_COMPLETE\000"
 13460      4C455F45 
 13460      56545F52 
 13460      454D4F56 
 13460      455F4445 
 13461              	.LASF535:
 13462 0884 7076506F 		.ascii	"pvPortMalloc\000"
 13462      72744D61 
 13462      6C6C6F63 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 345


 13462      00
 13463              	.LASF499:
 13464 0891 78537573 		.ascii	"xSuspendedTaskList\000"
 13464      70656E64 
 13464      65645461 
 13464      736B4C69 
 13464      737400
 13465              	.LASF475:
 13466 08a4 78436C65 		.ascii	"xClearCountOnExit\000"
 13466      6172436F 
 13466      756E744F 
 13466      6E457869 
 13466      7400
 13467              	.LASF3:
 13468 08b6 7369676E 		.ascii	"signed char\000"
 13468      65642063 
 13468      68617200 
 13469              	.LASF267:
 13470 08c2 43595F42 		.ascii	"CY_BLE_EVT_GAPC_DIRECT_ADV_REPORT\000"
 13470      4C455F45 
 13470      56545F47 
 13470      4150435F 
 13470      44495245 
 13471              	.LASF18:
 13472 08e4 75696E74 		.ascii	"uint8_t\000"
 13472      385F7400 
 13473              	.LASF176:
 13474 08ec 70657269 		.ascii	"period0\000"
 13474      6F643000 
 13475              	.LASF177:
 13476 08f4 70657269 		.ascii	"period1\000"
 13476      6F643100 
 13477              	.LASF486:
 13478 08fc 75634F72 		.ascii	"ucOriginalNotifyState\000"
 13478      6967696E 
 13478      616C4E6F 
 13478      74696679 
 13478      53746174 
 13479              	.LASF103:
 13480 0912 63707573 		.ascii	"cpussRomCtl\000"
 13480      73526F6D 
 13480      43746C00 
 13481              	.LASF145:
 13482 091e 736C6176 		.ascii	"slaveTxBufferIdx\000"
 13482      65547842 
 13482      75666665 
 13482      72496478 
 13482      00
 13483              	.LASF310:
 13484 092f 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_RX_CREDIT_IND\000"
 13484      4C455F45 
 13484      56545F4C 
 13484      32434150 
 13484      5F434246 
 13485              	.LASF297:
 13486 0953 43595F42 		.ascii	"CY_BLE_EVT_GATTS_HANDLE_VALUE_CNF\000"
 13486      4C455F45 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 346


 13486      56545F47 
 13486      41545453 
 13486      5F48414E 
 13487              	.LASF160:
 13488 0975 72785269 		.ascii	"rxRingBufHead\000"
 13488      6E674275 
 13488      66486561 
 13488      6400
 13489              	.LASF147:
 13490 0983 736C6176 		.ascii	"slaveRxBuffer\000"
 13490      65527842 
 13490      75666665 
 13490      7200
 13491              	.LASF480:
 13492 0991 70756C4E 		.ascii	"pulNotificationValue\000"
 13492      6F746966 
 13492      69636174 
 13492      696F6E56 
 13492      616C7565 
 13493              	.LASF6:
 13494 09a6 756E7369 		.ascii	"unsigned char\000"
 13494      676E6564 
 13494      20636861 
 13494      7200
 13495              	.LASF506:
 13496 09b4 784E756D 		.ascii	"xNumOfOverflows\000"
 13496      4F664F76 
 13496      6572666C 
 13496      6F777300 
 13497              	.LASF152:
 13498 09c4 63795F73 		.ascii	"cy_stc_scb_i2c_context_t\000"
 13498      74635F73 
 13498      63625F69 
 13498      32635F63 
 13498      6F6E7465 
 13499              	.LASF382:
 13500 09dd 78526574 		.ascii	"xReturn\000"
 13500      75726E00 
 13501              	.LASF269:
 13502 09e5 43595F42 		.ascii	"CY_BLE_EVT_GAP_DEVICE_ADDR_GEN_COMPLETE\000"
 13502      4C455F45 
 13502      56545F47 
 13502      41505F44 
 13502      45564943 
 13503              	.LASF344:
 13504 0a0d 4D696E69 		.ascii	"MiniListItem_t\000"
 13504      4C697374 
 13504      4974656D 
 13504      5F7400
 13505              	.LASF381:
 13506 0a1c 76506F72 		.ascii	"vPortSetBASEPRI\000"
 13506      74536574 
 13506      42415345 
 13506      50524900 
 13507              	.LASF327:
 13508 0a2c 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_CHAR_DISCOVERING\000"
 13508      4C455F43 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 347


 13508      4F4E4E5F 
 13508      53544154 
 13508      455F434C 
 13509              	.LASF284:
 13510 0a56 43595F42 		.ascii	"CY_BLE_EVT_GATTC_FIND_INFO_RSP\000"
 13510      4C455F45 
 13510      56545F47 
 13510      41545443 
 13510      5F46494E 
 13511              	.LASF252:
 13512 0a75 43595F42 		.ascii	"CY_BLE_EVT_GAP_PASSKEY_ENTRY_REQUEST\000"
 13512      4C455F45 
 13512      56545F47 
 13512      41505F50 
 13512      4153534B 
 13513              	.LASF384:
 13514 0a9a 70727652 		.ascii	"prvResetNextTaskUnblockTime\000"
 13514      65736574 
 13514      4E657874 
 13514      5461736B 
 13514      556E626C 
 13515              	.LASF477:
 13516 0ab6 78546173 		.ascii	"xTaskNotifyWait\000"
 13516      6B4E6F74 
 13516      69667957 
 13516      61697400 
 13517              	.LASF387:
 13518 0ac6 70727649 		.ascii	"prvInitialiseNewTask\000"
 13518      6E697469 
 13518      616C6973 
 13518      654E6577 
 13518      5461736B 
 13519              	.LASF98:
 13520 0adb 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 13520      73547269 
 13520      6D52616D 
 13520      43746C4F 
 13520      66667365 
 13521              	.LASF515:
 13522 0af1 63795F62 		.ascii	"cy_ble_connHandle\000"
 13522      6C655F63 
 13522      6F6E6E48 
 13522      616E646C 
 13522      6500
 13523              	.LASF315:
 13524 0b03 61747449 		.ascii	"attId\000"
 13524      6400
 13525              	.LASF359:
 13526 0b09 7854696D 		.ascii	"xTimeOnEntering\000"
 13526      654F6E45 
 13526      6E746572 
 13526      696E6700 
 13527              	.LASF504:
 13528 0b19 75785065 		.ascii	"uxPendedTicks\000"
 13528      6E646564 
 13528      5469636B 
 13528      7300
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 348


 13529              	.LASF112:
 13530 0b27 5F426F6F 		.ascii	"_Bool\000"
 13530      6C00
 13531              	.LASF30:
 13532 0b2d 70617373 		.ascii	"passBase\000"
 13532      42617365 
 13532      00
 13533              	.LASF485:
 13534 0b36 70756C50 		.ascii	"pulPreviousNotificationValue\000"
 13534      72657669 
 13534      6F75734E 
 13534      6F746966 
 13534      69636174 
 13535              	.LASF99:
 13536 0b53 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 13536      73547269 
 13536      6D526F6D 
 13536      43746C4F 
 13536      66667365 
 13537              	.LASF367:
 13538 0b69 7078546F 		.ascii	"pxTopOfStack\000"
 13538      704F6653 
 13538      7461636B 
 13538      00
 13539              	.LASF503:
 13540 0b76 78536368 		.ascii	"xSchedulerRunning\000"
 13540      6564756C 
 13540      65725275 
 13540      6E6E696E 
 13540      6700
 13541              	.LASF452:
 13542 0b88 78576169 		.ascii	"xWaitIndefinitely\000"
 13542      74496E64 
 13542      6566696E 
 13542      6974656C 
 13542      7900
 13543              	.LASF398:
 13544 0b9a 70727654 		.ascii	"prvTaskIsTaskSuspended\000"
 13544      61736B49 
 13544      73546173 
 13544      6B537573 
 13544      70656E64 
 13545              	.LASF17:
 13546 0bb1 63686172 		.ascii	"char\000"
 13546      00
 13547              	.LASF299:
 13548 0bb6 43595F42 		.ascii	"CY_BLE_EVT_GATTC_STOP_CMD_COMPLETE\000"
 13548      4C455F45 
 13548      56545F47 
 13548      41545443 
 13548      5F53544F 
 13549              	.LASF540:
 13550 0bd9 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 13550      6C696361 
 13550      74696F6E 
 13550      53746163 
 13550      6B4F7665 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 349


 13551              	.LASF388:
 13552 0bf7 70785461 		.ascii	"pxTaskCode\000"
 13552      736B436F 
 13552      646500
 13553              	.LASF343:
 13554 0c02 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 13554      495F4C49 
 13554      53545F49 
 13554      54454D00 
 13555              	.LASF223:
 13556 0c12 43595F42 		.ascii	"CY_BLE_EVT_GET_PHY_COMPLETE\000"
 13556      4C455F45 
 13556      56545F47 
 13556      45545F50 
 13556      48595F43 
 13557              	.LASF225:
 13558 0c2e 43595F42 		.ascii	"CY_BLE_EVT_SET_PHY_COMPLETE\000"
 13558      4C455F45 
 13558      56545F53 
 13558      45545F50 
 13558      48595F43 
 13559              	.LASF240:
 13560 0c4a 43595F42 		.ascii	"CY_BLE_EVT_AES_CCM_DECRYPT_COMPLETE\000"
 13560      4C455F45 
 13560      56545F41 
 13560      45535F43 
 13560      434D5F44 
 13561              	.LASF175:
 13562 0c6e 72756E4D 		.ascii	"runMode\000"
 13562      6F646500 
 13563              	.LASF163:
 13564 0c76 72784275 		.ascii	"rxBufSize\000"
 13564      6653697A 
 13564      6500
 13565              	.LASF9:
 13566 0c80 5F5F7569 		.ascii	"__uint16_t\000"
 13566      6E743136 
 13566      5F7400
 13567              	.LASF172:
 13568 0c8b 636C6F63 		.ascii	"clockPrescaler\000"
 13568      6B507265 
 13568      7363616C 
 13568      657200
 13569              	.LASF355:
 13570 0c9a 65536574 		.ascii	"eSetValueWithoutOverwrite\000"
 13570      56616C75 
 13570      65576974 
 13570      686F7574 
 13570      4F766572 
 13571              	.LASF528:
 13572 0cb4 7078506F 		.ascii	"pxPortInitialiseStack\000"
 13572      7274496E 
 13572      69746961 
 13572      6C697365 
 13572      53746163 
 13573              	.LASF266:
 13574 0cca 43595F42 		.ascii	"CY_BLE_EVT_GAP_ENHANCE_CONN_COMPLETE\000"
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 350


 13574      4C455F45 
 13574      56545F47 
 13574      41505F45 
 13574      4E48414E 
 13575              	.LASF302:
 13576 0cef 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CONN_PARAM_UPDATE_REQ\000"
 13576      4C455F45 
 13576      56545F4C 
 13576      32434150 
 13576      5F434F4E 
 13577              	.LASF412:
 13578 0d16 76546173 		.ascii	"vTaskDelete\000"
 13578      6B44656C 
 13578      65746500 
 13579              	.LASF508:
 13580 0d22 784E6578 		.ascii	"xNextTaskUnblockTime\000"
 13580      74546173 
 13580      6B556E62 
 13580      6C6F636B 
 13580      54696D65 
 13581              	.LASF46:
 13582 0d37 63707573 		.ascii	"cpussIpc0Irq\000"
 13582      73497063 
 13582      30497271 
 13582      00
 13583              	.LASF341:
 13584 0d44 7076436F 		.ascii	"pvContainer\000"
 13584      6E746169 
 13584      6E657200 
 13585              	.LASF111:
 13586 0d50 646F7562 		.ascii	"double\000"
 13586      6C6500
 13587              	.LASF123:
 13588 0d57 73746172 		.ascii	"startDst\000"
 13588      74447374 
 13588      00
 13589              	.LASF473:
 13590 0d60 75785461 		.ascii	"uxTaskResetEventItemValue\000"
 13590      736B5265 
 13590      73657445 
 13590      76656E74 
 13590      4974656D 
 13591              	.LASF420:
 13592 0d7a 78546173 		.ascii	"xTaskResumeFromISR\000"
 13592      6B526573 
 13592      756D6546 
 13592      726F6D49 
 13592      535200
 13593              	.LASF510:
 13594 0d8d 75785363 		.ascii	"uxSchedulerSuspended\000"
 13594      68656475 
 13594      6C657253 
 13594      75737065 
 13594      6E646564 
 13595              	.LASF442:
 13596 0da2 70756C53 		.ascii	"pulStack\000"
 13596      7461636B 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 351


 13596      00
 13597              	.LASF26:
 13598 0dab 75646242 		.ascii	"udbBase\000"
 13598      61736500 
 13599              	.LASF290:
 13600 0db3 43595F42 		.ascii	"CY_BLE_EVT_GATTC_WRITE_RSP\000"
 13600      4C455F45 
 13600      56545F47 
 13600      41545443 
 13600      5F575249 
 13601              	.LASF93:
 13602 0dce 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 13602      73436D30 
 13602      436C6F63 
 13602      6B43746C 
 13602      4F666673 
 13603              	.LASF496:
 13604 0de5 7850656E 		.ascii	"xPendingReadyList\000"
 13604      64696E67 
 13604      52656164 
 13604      794C6973 
 13604      7400
 13605              	.LASF78:
 13606 0df7 70657269 		.ascii	"periTrGrOffset\000"
 13606      54724772 
 13606      4F666673 
 13606      657400
 13607              	.LASF146:
 13608 0e06 736C6176 		.ascii	"slaveTxBufferCnt\000"
 13608      65547842 
 13608      75666665 
 13608      72436E74 
 13608      00
 13609              	.LASF108:
 13610 0e17 6970634C 		.ascii	"ipcLockStatusOffset\000"
 13610      6F636B53 
 13610      74617475 
 13610      734F6666 
 13610      73657400 
 13611              	.LASF295:
 13612 0e2b 43595F42 		.ascii	"CY_BLE_EVT_GATTC_HANDLE_VALUE_NTF\000"
 13612      4C455F45 
 13612      56545F47 
 13612      41545443 
 13612      5F48414E 
 13613              	.LASF265:
 13614 0e4d 43595F42 		.ascii	"CY_BLE_EVT_GAP_OOB_GENERATED_NOTIFICATION\000"
 13614      4C455F45 
 13614      56545F47 
 13614      41505F4F 
 13614      4F425F47 
 13615              	.LASF248:
 13616 0e77 43595F42 		.ascii	"CY_BLE_EVT_SET_CONN_PRIORITY_COMPLETE\000"
 13616      4C455F45 
 13616      56545F53 
 13616      45545F43 
 13616      4F4E4E5F 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 352


 13617              	.LASF170:
 13618 0e9d 63795F73 		.ascii	"cy_stc_tcpwm_pwm_config\000"
 13618      74635F74 
 13618      6370776D 
 13618      5F70776D 
 13618      5F636F6E 
 13619              	.LASF374:
 13620 0eb5 756C4E6F 		.ascii	"ulNotifiedValue\000"
 13620      74696669 
 13620      65645661 
 13620      6C756500 
 13621              	.LASF224:
 13622 0ec5 43595F42 		.ascii	"CY_BLE_EVT_SET_DEFAULT_PHY_COMPLETE\000"
 13622      4C455F45 
 13622      56545F53 
 13622      45545F44 
 13622      45464155 
 13623              	.LASF102:
 13624 0ee9 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 13624      73436D34 
 13624      4E6D6943 
 13624      746C4F66 
 13624      66736574 
 13625              	.LASF443:
 13626 0efe 756C4368 		.ascii	"ulCheckValue\000"
 13626      65636B56 
 13626      616C7565 
 13626      00
 13627              	.LASF122:
 13628 0f0b 63795F73 		.ascii	"cy_stc_rtc_dst_format_t\000"
 13628      74635F72 
 13628      74635F64 
 13628      73745F66 
 13628      6F726D61 
 13629              	.LASF441:
 13630 0f23 76546173 		.ascii	"vTaskSwitchContext\000"
 13630      6B537769 
 13630      74636843 
 13630      6F6E7465 
 13630      787400
 13631              	.LASF97:
 13632 0f36 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 13632      73436D34 
 13632      50777243 
 13632      746C4F66 
 13632      66736574 
 13633              	.LASF422:
 13634 0f4b 76546173 		.ascii	"vTaskStartScheduler\000"
 13634      6B537461 
 13634      72745363 
 13634      68656475 
 13634      6C657200 
 13635              	.LASF126:
 13636 0f5f 43595F53 		.ascii	"CY_SCB_I2C_ACK\000"
 13636      43425F49 
 13636      32435F41 
 13636      434B00
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 353


 13637              	.LASF544:
 13638 0f6e 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 13638      72745261 
 13638      69736542 
 13638      41534550 
 13638      524900
 13639              	.LASF445:
 13640 0f81 7078436F 		.ascii	"pxConstList\000"
 13640      6E73744C 
 13640      69737400 
 13641              	.LASF69:
 13642 0f8d 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 13642      6843746C 
 13642      4D61696E 
 13642      57733446 
 13642      72657100 
 13643              	.LASF392:
 13644 0fa1 70784372 		.ascii	"pxCreatedTask\000"
 13644      65617465 
 13644      64546173 
 13644      6B00
 13645              	.LASF419:
 13646 0faf 78546173 		.ascii	"xTaskToResume\000"
 13646      6B546F52 
 13646      6573756D 
 13646      6500
 13647              	.LASF277:
 13648 0fbd 43595F42 		.ascii	"CY_BLE_EVT_GATTC_ERROR_RSP\000"
 13648      4C455F45 
 13648      56545F47 
 13648      41545443 
 13648      5F455252 
 13649              	.LASF292:
 13650 0fd8 43595F42 		.ascii	"CY_BLE_EVT_GATTS_PREP_WRITE_REQ\000"
 13650      4C455F45 
 13650      56545F47 
 13650      41545453 
 13650      5F505245 
 13651              	.LASF311:
 13652 0ff8 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_TX_CREDIT_IND\000"
 13652      4C455F45 
 13652      56545F4C 
 13652      32434150 
 13652      5F434246 
 13653              	.LASF48:
 13654 101c 63707573 		.ascii	"cpussNotConnectedIrq\000"
 13654      734E6F74 
 13654      436F6E6E 
 13654      65637465 
 13654      64497271 
 13655              	.LASF185:
 13656 1031 6B696C6C 		.ascii	"killMode\000"
 13656      4D6F6465 
 13656      00
 13657              	.LASF90:
 13658 103a 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 13658      50727443 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 354


 13658      6667496E 
 13658      4F666673 
 13658      657400
 13659              	.LASF25:
 13660 104d 70657269 		.ascii	"periBase\000"
 13660      42617365 
 13660      00
 13661              	.LASF305:
 13662 1056 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_CONN_IND\000"
 13662      4C455F45 
 13662      56545F4C 
 13662      32434150 
 13662      5F434246 
 13663              	.LASF425:
 13664 1075 78546963 		.ascii	"xTicks\000"
 13664      6B7300
 13665              	.LASF362:
 13666 107c 70764261 		.ascii	"pvBaseAddress\000"
 13666      73654164 
 13666      64726573 
 13666      7300
 13667              	.LASF500:
 13668 108a 75784375 		.ascii	"uxCurrentNumberOfTasks\000"
 13668      7272656E 
 13668      744E756D 
 13668      6265724F 
 13668      66546173 
 13669              	.LASF413:
 13670 10a1 76546173 		.ascii	"vTaskPrioritySet\000"
 13670      6B507269 
 13670      6F726974 
 13670      79536574 
 13670      00
 13671              	.LASF81:
 13672 10b2 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 13672      44697643 
 13672      6D645479 
 13672      70655365 
 13672      6C506F73 
 13673              	.LASF232:
 13674 10c7 43595F42 		.ascii	"CY_BLE_EVT_GET_RSSI_COMPLETE\000"
 13674      4C455F45 
 13674      56545F47 
 13674      45545F52 
 13674      5353495F 
 13675              	.LASF358:
 13676 10e4 784F7665 		.ascii	"xOverflowCount\000"
 13676      72666C6F 
 13676      77436F75 
 13676      6E7400
 13677              	.LASF183:
 13678 10f3 696E7665 		.ascii	"invertPWMOut\000"
 13678      72745057 
 13678      4D4F7574 
 13678      00
 13679              	.LASF458:
 13680 1100 70785469 		.ascii	"pxTimeOut\000"
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 355


 13680      6D654F75 
 13680      7400
 13681              	.LASF45:
 13682 110a 63707573 		.ascii	"cpussFlashPaSize\000"
 13682      73466C61 
 13682      73685061 
 13682      53697A65 
 13682      00
 13683              	.LASF150:
 13684 111b 63624576 		.ascii	"cbEvents\000"
 13684      656E7473 
 13684      00
 13685              	.LASF282:
 13686 1124 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_BY_GROUP_TYPE_RSP\000"
 13686      4C455F45 
 13686      56545F47 
 13686      41545443 
 13686      5F524541 
 13687              	.LASF14:
 13688 114c 6C6F6E67 		.ascii	"long unsigned int\000"
 13688      20756E73 
 13688      69676E65 
 13688      6420696E 
 13688      7400
 13689              	.LASF464:
 13690 115e 76546173 		.ascii	"vTaskMissedYield\000"
 13690      6B4D6973 
 13690      73656459 
 13690      69656C64 
 13690      00
 13691              	.LASF538:
 13692 116f 78506F72 		.ascii	"xPortStartScheduler\000"
 13692      74537461 
 13692      72745363 
 13692      68656475 
 13692      6C657200 
 13693              	.LASF116:
 13694 1183 666F726D 		.ascii	"format\000"
 13694      617400
 13695              	.LASF261:
 13696 118a 43595F42 		.ascii	"CY_BLE_EVT_GAPC_SCAN_START_STOP\000"
 13696      4C455F45 
 13696      56545F47 
 13696      4150435F 
 13696      5343414E 
 13697              	.LASF509:
 13698 11aa 7849646C 		.ascii	"xIdleTaskHandle\000"
 13698      65546173 
 13698      6B48616E 
 13698      646C6500 
 13699              	.LASF457:
 13700 11ba 76546173 		.ascii	"vTaskSetTimeOutState\000"
 13700      6B536574 
 13700      54696D65 
 13700      4F757453 
 13700      74617465 
 13701              	.LASF55:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 356


 13702 11cf 65704D6F 		.ascii	"epMonitorNr\000"
 13702      6E69746F 
 13702      724E7200 
 13703              	.LASF128:
 13704 11db 63795F65 		.ascii	"cy_en_scb_i2c_command_t\000"
 13704      6E5F7363 
 13704      625F6932 
 13704      635F636F 
 13704      6D6D616E 
 13705              	.LASF216:
 13706 11f3 43595F42 		.ascii	"CY_BLE_EVT_SET_RPA_TO_COMPLETE\000"
 13706      4C455F45 
 13706      56545F53 
 13706      45545F52 
 13706      50415F54 
 13707              	.LASF106:
 13708 1212 63707573 		.ascii	"cpussRam2Ctl0\000"
 13708      7352616D 
 13708      3243746C 
 13708      3000
 13709              	.LASF167:
 13710 1220 74784C65 		.ascii	"txLeftToTransmit\000"
 13710      6674546F 
 13710      5472616E 
 13710      736D6974 
 13710      00
 13711              	.LASF33:
 13712 1231 63707573 		.ascii	"cpussVersion\000"
 13712      73566572 
 13712      73696F6E 
 13712      00
 13713              	.LASF427:
 13714 123e 70635461 		.ascii	"pcTaskGetName\000"
 13714      736B4765 
 13714      744E616D 
 13714      6500
 13715              	.LASF198:
 13716 124c 43595F42 		.ascii	"CY_BLE_EVT_STACK_ON\000"
 13716      4C455F45 
 13716      56545F53 
 13716      5441434B 
 13716      5F4F4E00 
 13717              	.LASF492:
 13718 1260 7844656C 		.ascii	"xDelayedTaskList1\000"
 13718      61796564 
 13718      5461736B 
 13718      4C697374 
 13718      3100
 13719              	.LASF304:
 13720 1272 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_COMMAND_REJ\000"
 13720      4C455F45 
 13720      56545F4C 
 13720      32434150 
 13720      5F434F4D 
 13721              	.LASF361:
 13722 128f 784D454D 		.ascii	"xMEMORY_REGION\000"
 13722      4F52595F 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 357


 13722      52454749 
 13722      4F4E00
 13723              	.LASF47:
 13724 129e 63707573 		.ascii	"cpussFmIrq\000"
 13724      73466D49 
 13724      727100
 13725              	.LASF141:
 13726 12a9 736C6176 		.ascii	"slaveStatus\000"
 13726      65537461 
 13726      74757300 
 13727              	.LASF279:
 13728 12b5 43595F42 		.ascii	"CY_BLE_EVT_GATT_DISCONNECT_IND\000"
 13728      4C455F45 
 13728      56545F47 
 13728      4154545F 
 13728      44495343 
 13729              	.LASF178:
 13730 12d4 656E6162 		.ascii	"enablePeriodSwap\000"
 13730      6C655065 
 13730      72696F64 
 13730      53776170 
 13730      00
 13731              	.LASF71:
 13732 12e5 64774368 		.ascii	"dwChSize\000"
 13732      53697A65 
 13732      00
 13733              	.LASF460:
 13734 12ee 78546173 		.ascii	"xTaskCheckForTimeOut\000"
 13734      6B436865 
 13734      636B466F 
 13734      7254696D 
 13734      654F7574 
 13735              	.LASF285:
 13736 1303 43595F42 		.ascii	"CY_BLE_EVT_GATTC_FIND_BY_TYPE_VALUE_RSP\000"
 13736      4C455F45 
 13736      56545F47 
 13736      41545443 
 13736      5F46494E 
 13737              	.LASF440:
 13738 132b 78546963 		.ascii	"xTicksToDelay\000"
 13738      6B73546F 
 13738      44656C61 
 13738      7900
 13739              	.LASF522:
 13740 1339 5254435F 		.ascii	"RTC_rtcDstStatus\000"
 13740      72746344 
 13740      73745374 
 13740      61747573 
 13740      00
 13741              	.LASF286:
 13742 134a 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_RSP\000"
 13742      4C455F45 
 13742      56545F47 
 13742      41545443 
 13742      5F524541 
 13743              	.LASF53:
 13744 1364 736D6966 		.ascii	"smifDeviceNr\000"
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 358


 13744      44657669 
 13744      63654E72 
 13744      00
 13745              	.LASF241:
 13746 1371 43595F42 		.ascii	"CY_BLE_EVT_SET_SLAVE_LATENCY_MODE_COMPLETE\000"
 13746      4C455F45 
 13746      56545F53 
 13746      45545F53 
 13746      4C415645 
 13747              	.LASF325:
 13748 139c 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_SRVC_DISCOVERING\000"
 13748      4C455F43 
 13748      4F4E4E5F 
 13748      53544154 
 13748      455F434C 
 13749              	.LASF237:
 13750 13c6 43595F42 		.ascii	"CY_BLE_EVT_RANDOM_NUM_GEN_COMPLETE\000"
 13750      4C455F45 
 13750      56545F52 
 13750      414E444F 
 13750      4D5F4E55 
 13751              	.LASF85:
 13752 13e9 70657269 		.ascii	"periDiv16CtlOffset\000"
 13752      44697631 
 13752      3643746C 
 13752      4F666673 
 13752      657400
 13753              	.LASF61:
 13754 13fc 666C6173 		.ascii	"flashPipeRequired\000"
 13754      68506970 
 13754      65526571 
 13754      75697265 
 13754      6400
 13755              	.LASF100:
 13756 140e 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 13756      73537973 
 13756      5469636B 
 13756      43746C4F 
 13756      66667365 
 13757              	.LASF182:
 13758 1424 696E7465 		.ascii	"interruptSources\000"
 13758      72727570 
 13758      74536F75 
 13758      72636573 
 13758      00
 13759              	.LASF448:
 13760 1435 76546173 		.ascii	"vTaskPlaceOnEventList\000"
 13760      6B506C61 
 13760      63654F6E 
 13760      4576656E 
 13760      744C6973 
 13761              	.LASF144:
 13762 144b 736C6176 		.ascii	"slaveTxBufferSize\000"
 13762      65547842 
 13762      75666665 
 13762      7253697A 
 13762      6500
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 359


 13763              	.LASF347:
 13764 145d 7078496E 		.ascii	"pxIndex\000"
 13764      64657800 
 13765              	.LASF399:
 13766 1465 70727649 		.ascii	"prvIdleTask\000"
 13766      646C6554 
 13766      61736B00 
 13767              	.LASF23:
 13768 1471 63707573 		.ascii	"cpussBase\000"
 13768      73426173 
 13768      6500
 13769              	.LASF27:
 13770 147b 70726F74 		.ascii	"protBase\000"
 13770      42617365 
 13770      00
 13771              	.LASF186:
 13772 1484 73776170 		.ascii	"swapInputMode\000"
 13772      496E7075 
 13772      744D6F64 
 13772      6500
 13773              	.LASF39:
 13774 1492 69706356 		.ascii	"ipcVersion\000"
 13774      65727369 
 13774      6F6E00
 13775              	.LASF201:
 13776 149d 43595F42 		.ascii	"CY_BLE_EVT_MEMORY_REQUEST\000"
 13776      4C455F45 
 13776      56545F4D 
 13776      454D4F52 
 13776      595F5245 
 13777              	.LASF13:
 13778 14b7 5F5F7569 		.ascii	"__uint32_t\000"
 13778      6E743332 
 13778      5F7400
 13779              	.LASF421:
 13780 14c2 75785361 		.ascii	"uxSavedInterruptStatus\000"
 13780      76656449 
 13780      6E746572 
 13780      72757074 
 13780      53746174 
 13781              	.LASF54:
 13782 14d9 70617373 		.ascii	"passSarChannels\000"
 13782      53617243 
 13782      68616E6E 
 13782      656C7300 
 13783              	.LASF1:
 13784 14e9 6C6F6E67 		.ascii	"long long int\000"
 13784      206C6F6E 
 13784      6720696E 
 13784      7400
 13785              	.LASF143:
 13786 14f7 736C6176 		.ascii	"slaveTxBuffer\000"
 13786      65547842 
 13786      75666665 
 13786      7200
 13787              	.LASF169:
 13788 1505 63795F73 		.ascii	"cy_stc_scb_uart_context_t\000"
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 360


 13788      74635F73 
 13788      63625F75 
 13788      6172745F 
 13788      636F6E74 
 13789              	.LASF308:
 13790 151f 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DISCONN_CNF\000"
 13790      4C455F45 
 13790      56545F4C 
 13790      32434150 
 13790      5F434246 
 13791              	.LASF417:
 13792 1541 78596965 		.ascii	"xYieldRequired\000"
 13792      6C645265 
 13792      71756972 
 13792      656400
 13793              	.LASF470:
 13794 1550 70765265 		.ascii	"pvReturn\000"
 13794      7475726E 
 13794      00
 13795              	.LASF330:
 13796 1559 63795F65 		.ascii	"cy_en_ble_conn_state_t\000"
 13796      6E5F626C 
 13796      655F636F 
 13796      6E6E5F73 
 13796      74617465 
 13797              	.LASF109:
 13798 1570 63795F73 		.ascii	"cy_stc_device_t\000"
 13798      74635F64 
 13798      65766963 
 13798      655F7400 
 13799              	.LASF226:
 13800 1580 43595F42 		.ascii	"CY_BLE_EVT_PHY_UPDATE_COMPLETE\000"
 13800      4C455F45 
 13800      56545F50 
 13800      48595F55 
 13800      50444154 
 13801              	.LASF390:
 13802 159f 756C5374 		.ascii	"ulStackDepth\000"
 13802      61636B44 
 13802      65707468 
 13802      00
 13803              	.LASF91:
 13804 15ac 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 13804      50727443 
 13804      66674F75 
 13804      744F6666 
 13804      73657400 
 13805              	.LASF34:
 13806 15c0 63727970 		.ascii	"cryptoVersion\000"
 13806      746F5665 
 13806      7273696F 
 13806      6E00
 13807              	.LASF309:
 13808 15ce 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DATA_READ\000"
 13808      4C455F45 
 13808      56545F4C 
 13808      32434150 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 361


 13808      5F434246 
 13809              	.LASF456:
 13810 15ee 70784576 		.ascii	"pxEventListItem\000"
 13810      656E744C 
 13810      69737449 
 13810      74656D00 
 13811              	.LASF336:
 13812 15fe 784C4953 		.ascii	"xLIST_ITEM\000"
 13812      545F4954 
 13812      454D00
 13813              	.LASF62:
 13814 1609 666C6173 		.ascii	"flashWriteDelay\000"
 13814      68577269 
 13814      74654465 
 13814      6C617900 
 13815              	.LASF60:
 13816 1619 666C6173 		.ascii	"flashRwwRequired\000"
 13816      68527777 
 13816      52657175 
 13816      69726564 
 13816      00
 13817              	.LASF68:
 13818 162a 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 13818      6843746C 
 13818      4D61696E 
 13818      57733346 
 13818      72657100 
 13819              	.LASF164:
 13820 163e 72784275 		.ascii	"rxBufIdx\000"
 13820      66496478 
 13820      00
 13821              	.LASF86:
 13822 1647 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 13822      44697631 
 13822      365F3543 
 13822      746C4F66 
 13822      66736574 
 13823              	.LASF512:
 13824 165c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 13824      52784275 
 13824      66666572 
 13824      00
 13825              	.LASF363:
 13826 1669 756C4C65 		.ascii	"ulLengthInBytes\000"
 13826      6E677468 
 13826      496E4279 
 13826      74657300 
 13827              	.LASF212:
 13828 1679 43595F42 		.ascii	"CY_BLE_EVT_GET_DATA_LENGTH_COMPLETE\000"
 13828      4C455F45 
 13828      56545F47 
 13828      45545F44 
 13828      4154415F 
 13829              	.LASF491:
 13830 169d 70785265 		.ascii	"pxReadyTasksLists\000"
 13830      61647954 
 13830      61736B73 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 362


 13830      4C697374 
 13830      7300
 13831              	.LASF110:
 13832 16af 666C6F61 		.ascii	"float\000"
 13832      7400
 13833              	.LASF274:
 13834 16b5 43595F42 		.ascii	"CY_BLE_EVT_GAP_CONN_ESTB\000"
 13834      4C455F45 
 13834      56545F47 
 13834      41505F43 
 13834      4F4E4E5F 
 13835              	.LASF251:
 13836 16ce 43595F42 		.ascii	"CY_BLE_EVT_GAP_AUTH_REQ\000"
 13836      4C455F45 
 13836      56545F47 
 13836      41505F41 
 13836      5554485F 
 13837              	.LASF42:
 13838 16e6 63707573 		.ascii	"cpussIpcNr\000"
 13838      73497063 
 13838      4E7200
 13839              	.LASF403:
 13840 16f1 7854696D 		.ascii	"xTimeToWake\000"
 13840      65546F57 
 13840      616B6500 
 13841              	.LASF138:
 13842 16fd 6D617374 		.ascii	"masterBufferSize\000"
 13842      65724275 
 13842      66666572 
 13842      53697A65 
 13842      00
 13843              	.LASF0:
 13844 170e 756E7369 		.ascii	"unsigned int\000"
 13844      676E6564 
 13844      20696E74 
 13844      00
 13845              	.LASF323:
 13846 171b 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_DISCONNECTED_DISCOVERED\000"
 13846      4C455F43 
 13846      4F4E4E5F 
 13846      53544154 
 13846      455F434C 
 13847              	.LASF541:
 13848 174c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 13848      43313120 
 13848      352E342E 
 13848      31203230 
 13848      31363036 
 13849 177f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 13849      20726576 
 13849      6973696F 
 13849      6E203233 
 13849      37373135 
 13850 17b2 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 13850      70202D6D 
 13850      6670753D 
 13850      66707634 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 363


 13850      2D73702D 
 13851 17e5 65637469 		.ascii	"ections -ffat-lto-objects\000"
 13851      6F6E7320 
 13851      2D666661 
 13851      742D6C74 
 13851      6F2D6F62 
 13852              	.LASF171:
 13853 17ff 70776D4D 		.ascii	"pwmMode\000"
 13853      6F646500 
 13854              	.LASF340:
 13855 1807 70764F77 		.ascii	"pvOwner\000"
 13855      6E657200 
 13856              	.LASF322:
 13857 180f 43595F42 		.ascii	"CY_BLE_CONN_STATE_DISCONNECTED\000"
 13857      4C455F43 
 13857      4F4E4E5F 
 13857      53544154 
 13857      455F4449 
 13858              	.LASF385:
 13859 182e 70727644 		.ascii	"prvDeleteTCB\000"
 13859      656C6574 
 13859      65544342 
 13859      00
 13860              	.LASF36:
 13861 183b 666C6173 		.ascii	"flashcVersion\000"
 13861      68635665 
 13861      7273696F 
 13861      6E00
 13862              	.LASF532:
 13863 1849 76506F72 		.ascii	"vPortExitCritical\000"
 13863      74457869 
 13863      74437269 
 13863      74696361 
 13863      6C00
 13864              	.LASF181:
 13865 185b 656E6162 		.ascii	"enableCompareSwap\000"
 13865      6C65436F 
 13865      6D706172 
 13865      65537761 
 13865      7000
 13866              	.LASF346:
 13867 186d 75784E75 		.ascii	"uxNumberOfItems\000"
 13867      6D626572 
 13867      4F664974 
 13867      656D7300 
 13868              	.LASF193:
 13869 187d 6B696C6C 		.ascii	"killInput\000"
 13869      496E7075 
 13869      7400
 13870              	.LASF264:
 13871 1887 43595F42 		.ascii	"CY_BLE_EVT_GAP_KEYPRESS_NOTIFICATION\000"
 13871      4C455F45 
 13871      56545F47 
 13871      41505F4B 
 13871      45595052 
 13872              	.LASF463:
 13873 18ac 76546173 		.ascii	"vTaskSuspendAll\000"
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 364


 13873      6B537573 
 13873      70656E64 
 13873      416C6C00 
 13874              	.LASF454:
 13875 18bc 7078556E 		.ascii	"pxUnblockedTCB\000"
 13875      626C6F63 
 13875      6B656454 
 13875      434200
 13876              	.LASF88:
 13877 18cb 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 13877      50727449 
 13877      6E747243 
 13877      66674F66 
 13877      66736574 
 13878              	.LASF105:
 13879 18e0 63707573 		.ascii	"cpussRam1Ctl0\000"
 13879      7352616D 
 13879      3143746C 
 13879      3000
 13880              	.LASF326:
 13881 18ee 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_INCL_DISCOVERING\000"
 13881      4C455F43 
 13881      4F4E4E5F 
 13881      53544154 
 13881      455F434C 
 13882              	.LASF195:
 13883 1918 636F756E 		.ascii	"countInput\000"
 13883      74496E70 
 13883      757400
 13884              	.LASF350:
 13885 1923 5461736B 		.ascii	"TaskHandle_t\000"
 13885      48616E64 
 13885      6C655F74 
 13885      00
 13886              	.LASF278:
 13887 1930 43595F42 		.ascii	"CY_BLE_EVT_GATT_CONNECT_IND\000"
 13887      4C455F45 
 13887      56545F47 
 13887      4154545F 
 13887      434F4E4E 
 13888              	.LASF52:
 13889 194c 70657269 		.ascii	"periClockNr\000"
 13889      436C6F63 
 13889      6B4E7200 
 13890              	.LASF349:
 13891 1958 4C697374 		.ascii	"List_t\000"
 13891      5F7400
 13892              	.LASF317:
 13893 195f 43595F42 		.ascii	"CY_BLE_ADV_STATE_STOPPED\000"
 13893      4C455F41 
 13893      44565F53 
 13893      54415445 
 13893      5F53544F 
 13894              	.LASF401:
 13895 1978 78546963 		.ascii	"xTicksToWait\000"
 13895      6B73546F 
 13895      57616974 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 365


 13895      00
 13896              	.LASF12:
 13897 1985 6C6F6E67 		.ascii	"long int\000"
 13897      20696E74 
 13897      00
 13898              	.LASF432:
 13899 198e 78546173 		.ascii	"xTaskResumeAll\000"
 13899      6B526573 
 13899      756D6541 
 13899      6C6C00
 13900              	.LASF321:
 13901 199d 63795F65 		.ascii	"cy_en_ble_adv_state_t\000"
 13901      6E5F626C 
 13901      655F6164 
 13901      765F7374 
 13901      6174655F 
 13902              	.LASF96:
 13903 19b3 63707573 		.ascii	"cpussCm0StatusOffset\000"
 13903      73436D30 
 13903      53746174 
 13903      75734F66 
 13903      66736574 
 13904              	.LASF407:
 13905 19c8 78546173 		.ascii	"xTaskCreate\000"
 13905      6B437265 
 13905      61746500 
 13906              	.LASF249:
 13907 19d4 43595F42 		.ascii	"CY_BLE_EVT_HCI_PKT_RCVD\000"
 13907      4C455F45 
 13907      56545F48 
 13907      43495F50 
 13907      4B545F52 
 13908              	.LASF238:
 13909 19ec 43595F42 		.ascii	"CY_BLE_EVT_AES_ENCRYPT_COMPLETE\000"
 13909      4C455F45 
 13909      56545F41 
 13909      45535F45 
 13909      4E435259 
 13910              	.LASF453:
 13911 1a0c 78546173 		.ascii	"xTaskRemoveFromEventList\000"
 13911      6B52656D 
 13911      6F766546 
 13911      726F6D45 
 13911      76656E74 
 13912              	.LASF148:
 13913 1a25 736C6176 		.ascii	"slaveRxBufferSize\000"
 13913      65527842 
 13913      75666665 
 13913      7253697A 
 13913      6500
 13914              	.LASF197:
 13915 1a37 43595F42 		.ascii	"CY_BLE_EVT_INVALID\000"
 13915      4C455F45 
 13915      56545F49 
 13915      4E56414C 
 13915      494400
 13916              	.LASF479:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 366


 13917 1a4a 756C4269 		.ascii	"ulBitsToClearOnExit\000"
 13917      7473546F 
 13917      436C6561 
 13917      724F6E45 
 13917      78697400 
 13918              	.LASF348:
 13919 1a5e 784C6973 		.ascii	"xListEnd\000"
 13919      74456E64 
 13919      00
 13920              	.LASF129:
 13921 1a67 63795F63 		.ascii	"cy_cb_scb_i2c_handle_events_t\000"
 13921      625F7363 
 13921      625F6932 
 13921      635F6861 
 13921      6E646C65 
 13922              	.LASF291:
 13923 1a85 43595F42 		.ascii	"CY_BLE_EVT_GATTS_WRITE_CMD_REQ\000"
 13923      4C455F45 
 13923      56545F47 
 13923      41545453 
 13923      5F575249 
 13924              	.LASF404:
 13925 1aa4 78436F6E 		.ascii	"xConstTickCount\000"
 13925      73745469 
 13925      636B436F 
 13925      756E7400 
 13926              	.LASF75:
 13927 1ab4 64775374 		.ascii	"dwStatusChIdxMsk\000"
 13927      61747573 
 13927      43684964 
 13927      784D736B 
 13927      00
 13928              	.LASF247:
 13929 1ac5 43595F42 		.ascii	"CY_BLE_EVT_SET_CE_LENGTH_COMPLETE\000"
 13929      4C455F45 
 13929      56545F53 
 13929      45545F43 
 13929      455F4C45 
 13930              	.LASF159:
 13931 1ae7 72785269 		.ascii	"rxRingBufSize\000"
 13931      6E674275 
 13931      6653697A 
 13931      6500
 13932              	.LASF467:
 13933 1af5 78496E64 		.ascii	"xIndex\000"
 13933      657800
 13934              	.LASF64:
 13935 1afc 666C6173 		.ascii	"flashEraseDelay\000"
 13935      68457261 
 13935      73654465 
 13935      6C617900 
 13936              	.LASF527:
 13937 1b0c 764C6973 		.ascii	"vListInitialiseItem\000"
 13937      74496E69 
 13937      7469616C 
 13937      69736549 
 13937      74656D00 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 367


 13938              	.LASF408:
 13939 1b20 75785461 		.ascii	"uxTaskPriorityGet\000"
 13939      736B5072 
 13939      696F7269 
 13939      74794765 
 13939      7400
 13940              	.LASF250:
 13941 1b32 43595F42 		.ascii	"CY_BLE_EVT_GAPC_SCAN_PROGRESS_RESULT\000"
 13941      4C455F45 
 13941      56545F47 
 13941      4150435F 
 13941      5343414E 
 13942              	.LASF378:
 13943 1b57 756C4E65 		.ascii	"ulNewBASEPRI\000"
 13943      77424153 
 13943      45505249 
 13943      00
 13944              	.LASF543:
 13945 1b64 433A5C55 		.ascii	"C:\\Users\\yomat\\Documents\\PSoC Creator\\AFE_DevI"
 13945      73657273 
 13945      5C796F6D 
 13945      61745C44 
 13945      6F63756D 
 13946 1b92 74656D31 		.ascii	"tem1\\AFE DevItem1.cydsn\000"
 13946      5C414645 
 13946      20446576 
 13946      4974656D 
 13946      312E6379 
 13947              	.LASF438:
 13948 1baa 7853686F 		.ascii	"xShouldDelay\000"
 13948      756C6444 
 13948      656C6179 
 13948      00
 13949              	.LASF254:
 13950 1bb7 43595F42 		.ascii	"CY_BLE_EVT_GAP_AUTH_COMPLETE\000"
 13950      4C455F45 
 13950      56545F47 
 13950      41505F41 
 13950      5554485F 
 13951              	.LASF149:
 13952 1bd4 736C6176 		.ascii	"slaveRxBufferIdx\000"
 13952      65527842 
 13952      75666665 
 13952      72496478 
 13952      00
 13953              	.LASF2:
 13954 1be5 6C6F6E67 		.ascii	"long double\000"
 13954      20646F75 
 13954      626C6500 
 13955              	.LASF353:
 13956 1bf1 65496E63 		.ascii	"eIncrement\000"
 13956      72656D65 
 13956      6E7400
 13957              	.LASF446:
 13958 1bfc 76546173 		.ascii	"vTaskSuspend\000"
 13958      6B537573 
 13958      70656E64 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 368


 13958      00
 13959              	.LASF354:
 13960 1c09 65536574 		.ascii	"eSetValueWithOverwrite\000"
 13960      56616C75 
 13960      65576974 
 13960      684F7665 
 13960      72777269 
 13961              	.LASF416:
 13962 1c20 75785072 		.ascii	"uxPriorityUsedOnEntry\000"
 13962      696F7269 
 13962      74795573 
 13962      65644F6E 
 13962      456E7472 
 13963              	.LASF153:
 13964 1c36 63795F63 		.ascii	"cy_cb_scb_uart_handle_events_t\000"
 13964      625F7363 
 13964      625F7561 
 13964      72745F68 
 13964      616E646C 
 13965              	.LASF210:
 13966 1c55 43595F42 		.ascii	"CY_BLE_EVT_SET_DATA_LENGTH_COMPLETE\000"
 13966      4C455F45 
 13966      56545F53 
 13966      45545F44 
 13966      4154415F 
 13967              	.LASF372:
 13968 1c79 70635461 		.ascii	"pcTaskName\000"
 13968      736B4E61 
 13968      6D6500
 13969              	.LASF293:
 13970 1c84 43595F42 		.ascii	"CY_BLE_EVT_GATTS_EXEC_WRITE_REQ\000"
 13970      4C455F45 
 13970      56545F47 
 13970      41545453 
 13970      5F455845 
 13971              	.LASF50:
 13972 1ca4 73727373 		.ascii	"srssNumPll\000"
 13972      4E756D50 
 13972      6C6C00
 13973              	.LASF519:
 13974 1caf 4932435F 		.ascii	"I2C_1_context\000"
 13974      315F636F 
 13974      6E746578 
 13974      7400
 13975              	.LASF366:
 13976 1cbd 74736B54 		.ascii	"tskTaskControlBlock\000"
 13976      61736B43 
 13976      6F6E7472 
 13976      6F6C426C 
 13976      6F636B00 
 13977              	.LASF437:
 13978 1cd1 7854696D 		.ascii	"xTimeIncrement\000"
 13978      65496E63 
 13978      72656D65 
 13978      6E7400
 13979              	.LASF484:
 13980 1ce0 65416374 		.ascii	"eAction\000"
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 369


 13980      696F6E00 
 13981              	.LASF439:
 13982 1ce8 76546173 		.ascii	"vTaskDelay\000"
 13982      6B44656C 
 13982      617900
 13983              	.LASF368:
 13984 1cf3 78537461 		.ascii	"xStateListItem\000"
 13984      74654C69 
 13984      73744974 
 13984      656D00
 13985              	.LASF101:
 13986 1d02 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 13986      73436D30 
 13986      4E6D6943 
 13986      746C4F66 
 13986      66736574 
 13987              	.LASF262:
 13988 1d17 43595F42 		.ascii	"CY_BLE_EVT_GAP_KEYINFO_EXCHNGE_CMPLT\000"
 13988      4C455F45 
 13988      56545F47 
 13988      41505F4B 
 13988      4559494E 
 13989              	.LASF174:
 13990 1d3c 64656164 		.ascii	"deadTimeClocks\000"
 13990      54696D65 
 13990      436C6F63 
 13990      6B7300
 13991              	.LASF217:
 13992 1d4b 43595F42 		.ascii	"CY_BLE_EVT_SET_RPA_ENABLE_COMPLETE\000"
 13992      4C455F45 
 13992      56545F53 
 13992      45545F52 
 13992      50415F45 
 13993              	.LASF444:
 13994 1d6e 7578546F 		.ascii	"uxTopPriority\000"
 13994      70507269 
 13994      6F726974 
 13994      7900
 13995              	.LASF67:
 13996 1d7c 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 13996      6843746C 
 13996      4D61696E 
 13996      57733246 
 13996      72657100 
 13997              	.LASF260:
 13998 1d90 43595F42 		.ascii	"CY_BLE_EVT_GAP_CONNECTION_UPDATE_COMPLETE\000"
 13998      4C455F45 
 13998      56545F47 
 13998      41505F43 
 13998      4F4E4E45 
 13999              	.LASF132:
 14000 1dba 75736554 		.ascii	"useTxFifo\000"
 14000      78466966 
 14000      6F00
 14001              	.LASF253:
 14002 1dc4 43595F42 		.ascii	"CY_BLE_EVT_GAP_PASSKEY_DISPLAY_REQUEST\000"
 14002      4C455F45 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 370


 14002      56545F47 
 14002      41505F50 
 14002      4153534B 
 14003              	.LASF15:
 14004 1deb 6C6F6E67 		.ascii	"long long unsigned int\000"
 14004      206C6F6E 
 14004      6720756E 
 14004      7369676E 
 14004      65642069 
 14005              	.LASF530:
 14006 1e02 76506F72 		.ascii	"vPortEnterCritical\000"
 14006      74456E74 
 14006      65724372 
 14006      69746963 
 14006      616C00
 14007              	.LASF483:
 14008 1e15 756C5661 		.ascii	"ulValue\000"
 14008      6C756500 
 14009              	.LASF209:
 14010 1e1d 43595F42 		.ascii	"CY_BLE_EVT_LE_PING_AUTH_TIMEOUT\000"
 14010      4C455F45 
 14010      56545F4C 
 14010      455F5049 
 14010      4E475F41 
 14011              	.LASF20:
 14012 1e3d 75696E74 		.ascii	"uint16_t\000"
 14012      31365F74 
 14012      00
 14013              	.LASF239:
 14014 1e46 43595F42 		.ascii	"CY_BLE_EVT_AES_CCM_ENCRYPT_COMPLETE\000"
 14014      4C455F45 
 14014      56545F41 
 14014      45535F43 
 14014      434D5F45 
 14015              	.LASF465:
 14016 1e6a 76546173 		.ascii	"vTaskSetThreadLocalStoragePointer\000"
 14016      6B536574 
 14016      54687265 
 14016      61644C6F 
 14016      63616C53 
 14017              	.LASF113:
 14018 1e8c 43595F52 		.ascii	"CY_RTC_DST_RELATIVE\000"
 14018      54435F44 
 14018      53545F52 
 14018      454C4154 
 14018      49564500 
 14019              	.LASF271:
 14020 1ea0 43595F42 		.ascii	"CY_BLE_EVT_GAP_RESOLVE_DEVICE_COMPLETE\000"
 14020      4C455F45 
 14020      56545F47 
 14020      41505F52 
 14020      45534F4C 
 14021              	.LASF429:
 14022 1ec7 78546173 		.ascii	"xTaskIncrementTick\000"
 14022      6B496E63 
 14022      72656D65 
 14022      6E745469 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 371


 14022      636B00
 14023              	.LASF281:
 14024 1eda 43595F42 		.ascii	"CY_BLE_EVT_GATTC_XCHNG_MTU_RSP\000"
 14024      4C455F45 
 14024      56545F47 
 14024      41545443 
 14024      5F584348 
 14025              	.LASF468:
 14026 1ef9 70765661 		.ascii	"pvValue\000"
 14026      6C756500 
 14027              	.LASF49:
 14028 1f01 73727373 		.ascii	"srssNumClkpath\000"
 14028      4E756D43 
 14028      6C6B7061 
 14028      746800
 14029              	.LASF307:
 14030 1f10 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DISCONN_IND\000"
 14030      4C455F45 
 14030      56545F4C 
 14030      32434150 
 14030      5F434246 
 14031              	.LASF472:
 14032 1f32 78546173 		.ascii	"xTaskGetSchedulerState\000"
 14032      6B476574 
 14032      53636865 
 14032      64756C65 
 14032      72537461 
 14033              	.LASF214:
 14034 1f49 43595F42 		.ascii	"CY_BLE_EVT_GET_PEER_RPA_COMPLETE\000"
 14034      4C455F45 
 14034      56545F47 
 14034      45545F50 
 14034      4545525F 
 14035              	.LASF400:
 14036 1f6a 70727641 		.ascii	"prvAddCurrentTaskToDelayedList\000"
 14036      64644375 
 14036      7272656E 
 14036      74546173 
 14036      6B546F44 
 14037              	.LASF334:
 14038 1f89 55426173 		.ascii	"UBaseType_t\000"
 14038      65547970 
 14038      655F7400 
 14039              	.LASF339:
 14040 1f95 70785072 		.ascii	"pxPrevious\000"
 14040      6576696F 
 14040      757300
 14041              	.LASF373:
 14042 1fa0 70765468 		.ascii	"pvThreadLocalStoragePointers\000"
 14042      72656164 
 14042      4C6F6361 
 14042      6C53746F 
 14042      72616765 
 14043              	.LASF435:
 14044 1fbd 76546173 		.ascii	"vTaskDelayUntil\000"
 14044      6B44656C 
 14044      6179556E 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 372


 14044      74696C00 
 14045              	.LASF165:
 14046 1fcd 74784275 		.ascii	"txBuf\000"
 14046      6600
 14047              	.LASF276:
 14048 1fd3 43595F42 		.ascii	"CY_BLE_EVT_GAP_ADV_TX\000"
 14048      4C455F45 
 14048      56545F47 
 14048      41505F41 
 14048      44565F54 
 14049              	.LASF423:
 14050 1fe9 76546173 		.ascii	"vTaskEndScheduler\000"
 14050      6B456E64 
 14050      53636865 
 14050      64756C65 
 14050      7200
 14051              	.LASF320:
 14052 1ffb 43595F42 		.ascii	"CY_BLE_ADV_STATE_STOP_INITIATED\000"
 14052      4C455F41 
 14052      44565F53 
 14052      54415445 
 14052      5F53544F 
 14053              	.LASF335:
 14054 201b 5469636B 		.ascii	"TickType_t\000"
 14054      54797065 
 14054      5F7400
 14055              	.LASF312:
 14056 2026 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DATA_WRITE_IND\000"
 14056      4C455F45 
 14056      56545F4C 
 14056      32434150 
 14056      5F434246 
 14057              	.LASF94:
 14058 204b 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 14058      73436D34 
 14058      436C6F63 
 14058      6B43746C 
 14058      4F666673 
 14059              	.LASF397:
 14060 2062 70727643 		.ascii	"prvCheckTasksWaitingTermination\000"
 14060      6865636B 
 14060      5461736B 
 14060      73576169 
 14060      74696E67 
 14061              	.LASF21:
 14062 2082 696E7433 		.ascii	"int32_t\000"
 14062      325F7400 
 14063              	.LASF44:
 14064 208a 63707573 		.ascii	"cpussDwChNr\000"
 14064      73447743 
 14064      684E7200 
 14065              	.LASF375:
 14066 2096 75634E6F 		.ascii	"ucNotifyState\000"
 14066      74696679 
 14066      53746174 
 14066      6500
 14067              	.LASF87:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 373


 14068 20a4 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 14068      44697632 
 14068      345F3543 
 14068      746C4F66 
 14068      66736574 
 14069              	.LASF104:
 14070 20b9 63707573 		.ascii	"cpussRam0Ctl0\000"
 14070      7352616D 
 14070      3043746C 
 14070      3000
 14071              	.LASF526:
 14072 20c7 6D656D73 		.ascii	"memset\000"
 14072      657400
 14073              	.LASF436:
 14074 20ce 70785072 		.ascii	"pxPreviousWakeTime\000"
 14074      6576696F 
 14074      75735761 
 14074      6B655469 
 14074      6D6500
 14075              	.LASF430:
 14076 20e1 78537769 		.ascii	"xSwitchRequired\000"
 14076      74636852 
 14076      65717569 
 14076      72656400 
 14077              	.LASF7:
 14078 20f1 5F5F696E 		.ascii	"__int16_t\000"
 14078      7431365F 
 14078      7400
 14079              	.LASF490:
 14080 20fb 78546173 		.ascii	"xTaskNotifyStateClear\000"
 14080      6B4E6F74 
 14080      69667953 
 14080      74617465 
 14080      436C6561 
 14081              	.LASF268:
 14082 2111 43595F42 		.ascii	"CY_BLE_EVT_GAP_SMP_NEGOTIATED_AUTH_INFO\000"
 14082      4C455F45 
 14082      56545F47 
 14082      41505F53 
 14082      4D505F4E 
 14083              	.LASF502:
 14084 2139 7578546F 		.ascii	"uxTopReadyPriority\000"
 14084      70526561 
 14084      64795072 
 14084      696F7269 
 14084      747900
 14085              	.LASF80:
 14086 214c 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 14086      44697643 
 14086      6D644469 
 14086      7653656C 
 14086      4D736B00 
 14087              	.LASF303:
 14088 2160 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CONN_PARAM_UPDATE_RSP\000"
 14088      4C455F45 
 14088      56545F4C 
 14088      32434150 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 374


 14088      5F434F4E 
 14089              	.LASF424:
 14090 2187 78546173 		.ascii	"xTaskGetTickCount\000"
 14090      6B476574 
 14090      5469636B 
 14090      436F756E 
 14090      7400
 14091              	.LASF35:
 14092 2199 64775665 		.ascii	"dwVersion\000"
 14092      7273696F 
 14092      6E00
 14093              	.LASF379:
 14094 21a3 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 14094      6967696E 
 14094      616C4241 
 14094      53455052 
 14094      4900
 14095              	.LASF433:
 14096 21b5 78416C72 		.ascii	"xAlreadyYielded\000"
 14096      65616479 
 14096      5969656C 
 14096      64656400 
 14097              	.LASF287:
 14098 21c5 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_BLOB_RSP\000"
 14098      4C455F45 
 14098      56545F47 
 14098      41545443 
 14098      5F524541 
 14099              	.LASF29:
 14100 21e4 6770696F 		.ascii	"gpioBase\000"
 14100      42617365 
 14100      00
 14101              	.LASF58:
 14102 21ed 70726F74 		.ascii	"protBusMasterMask\000"
 14102      4275734D 
 14102      61737465 
 14102      724D6173 
 14102      6B00
 14103              	.LASF57:
 14104 21ff 73797350 		.ascii	"sysPmSimoPresent\000"
 14104      6D53696D 
 14104      6F507265 
 14104      73656E74 
 14104      00
 14105              	.LASF300:
 14106 2210 43595F42 		.ascii	"CY_BLE_EVT_GATTS_READ_CHAR_VAL_ACCESS_REQ\000"
 14106      4C455F45 
 14106      56545F47 
 14106      41545453 
 14106      5F524541 
 14107              	.LASF431:
 14108 223a 70785465 		.ascii	"pxTemp\000"
 14108      6D7000
 14109              	.LASF121:
 14110 2241 6D6F6E74 		.ascii	"month\000"
 14110      6800
 14111              	.LASF43:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 375


 14112 2247 63707573 		.ascii	"cpussIpcIrqNr\000"
 14112      73497063 
 14112      4972714E 
 14112      7200
 14113              	.LASF511:
 14114 2255 63795F64 		.ascii	"cy_device\000"
 14114      65766963 
 14114      6500
 14115              	.LASF360:
 14116 225f 54696D65 		.ascii	"TimeOut_t\000"
 14116      4F75745F 
 14116      7400
 14117              	.LASF316:
 14118 2269 63795F73 		.ascii	"cy_stc_ble_conn_handle_t\000"
 14118      74635F62 
 14118      6C655F63 
 14118      6F6E6E5F 
 14118      68616E64 
 14119              	.LASF487:
 14120 2282 78546173 		.ascii	"xTaskGenericNotifyFromISR\000"
 14120      6B47656E 
 14120      65726963 
 14120      4E6F7469 
 14120      66794672 
 14121              	.LASF352:
 14122 229c 65536574 		.ascii	"eSetBits\000"
 14122      42697473 
 14122      00
 14123              	.LASF256:
 14124 22a5 43595F42 		.ascii	"CY_BLE_EVT_GAPP_ADVERTISEMENT_START_STOP\000"
 14124      4C455F45 
 14124      56545F47 
 14124      4150505F 
 14124      41445645 
 14125              	.LASF190:
 14126 22ce 73746172 		.ascii	"startInputMode\000"
 14126      74496E70 
 14126      75744D6F 
 14126      646500
 14127              	.LASF157:
 14128 22dd 72785374 		.ascii	"rxStatus\000"
 14128      61747573 
 14128      00
 14129              	.LASF137:
 14130 22e6 6D617374 		.ascii	"masterBuffer\000"
 14130      65724275 
 14130      66666572 
 14130      00
 14131              	.LASF151:
 14132 22f3 63624164 		.ascii	"cbAddr\000"
 14132      647200
 14133              	.LASF324:
 14134 22fa 43595F42 		.ascii	"CY_BLE_CONN_STATE_CONNECTED\000"
 14134      4C455F43 
 14134      4F4E4E5F 
 14134      53544154 
 14134      455F434F 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 376


 14135              	.LASF471:
 14136 2316 78546173 		.ascii	"xTaskGetCurrentTaskHandle\000"
 14136      6B476574 
 14136      43757272 
 14136      656E7454 
 14136      61736B48 
 14137              	.LASF533:
 14138 2330 75784C69 		.ascii	"uxListRemove\000"
 14138      73745265 
 14138      6D6F7665 
 14138      00
 14139              	.LASF494:
 14140 233d 70784465 		.ascii	"pxDelayedTaskList\000"
 14140      6C617965 
 14140      64546173 
 14140      6B4C6973 
 14140      7400
 14141              	.LASF488:
 14142 234f 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 14142      67686572 
 14142      5072696F 
 14142      72697479 
 14142      5461736B 
 14143              	.LASF206:
 14144 2369 43595F42 		.ascii	"CY_BLE_EVT_READ_AUTH_PAYLOAD_TO_COMPLETE\000"
 14144      4C455F45 
 14144      56545F52 
 14144      4541445F 
 14144      41555448 
 14145              	.LASF537:
 14146 2392 7854696D 		.ascii	"xTimerCreateTimerTask\000"
 14146      65724372 
 14146      65617465 
 14146      54696D65 
 14146      72546173 
 14147              	.LASF41:
 14148 23a8 70726F74 		.ascii	"protVersion\000"
 14148      56657273 
 14148      696F6E00 
 14149              	.LASF207:
 14150 23b4 43595F42 		.ascii	"CY_BLE_EVT_GET_CHANNEL_MAP_COMPLETE\000"
 14150      4C455F45 
 14150      56545F47 
 14150      45545F43 
 14150      48414E4E 
 14151              	.LASF495:
 14152 23d8 70784F76 		.ascii	"pxOverflowDelayedTaskList\000"
 14152      6572666C 
 14152      6F774465 
 14152      6C617965 
 14152      64546173 
 14153              	.LASF168:
 14154 23f2 696E6974 		.ascii	"initKey\000"
 14154      4B657900 
 14155              	.LASF40:
 14156 23fa 70657269 		.ascii	"periVersion\000"
 14156      56657273 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 377


 14156      696F6E00 
 14157              	.LASF8:
 14158 2406 73686F72 		.ascii	"short int\000"
 14158      7420696E 
 14158      7400
 14159              	.LASF242:
 14160 2410 43595F42 		.ascii	"CY_BLE_EVT_STACK_SHUTDOWN_COMPLETE\000"
 14160      4C455F45 
 14160      56545F53 
 14160      5441434B 
 14160      5F534855 
 14161              	.LASF521:
 14162 2433 50574D5F 		.ascii	"PWM_AFE_config\000"
 14162      4146455F 
 14162      636F6E66 
 14162      696700
 14163              	.LASF233:
 14164 2442 43595F42 		.ascii	"CY_BLE_EVT_GET_TX_PWR_COMPLETE\000"
 14164      4C455F45 
 14164      56545F47 
 14164      45545F54 
 14164      585F5057 
 14165              	.LASF114:
 14166 2461 43595F52 		.ascii	"CY_RTC_DST_FIXED\000"
 14166      54435F44 
 14166      53545F46 
 14166      49584544 
 14166      00
 14167              	.LASF462:
 14168 2472 78456C61 		.ascii	"xElapsedTime\000"
 14168      70736564 
 14168      54696D65 
 14168      00
 14169              	.LASF19:
 14170 247f 696E7431 		.ascii	"int16_t\000"
 14170      365F7400 
 14171              	.LASF66:
 14172 2487 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 14172      6843746C 
 14172      4D61696E 
 14172      57733146 
 14172      72657100 
 14173              	.LASF428:
 14174 249b 78546173 		.ascii	"xTaskToQuery\000"
 14174      6B546F51 
 14174      75657279 
 14174      00
 14175              	.LASF380:
 14176 24a8 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 14176      74526169 
 14176      73654241 
 14176      53455052 
 14176      4900
 14177              	.LASF298:
 14178 24ba 43595F42 		.ascii	"CY_BLE_EVT_GATTS_DATA_SIGNED_CMD_REQ\000"
 14178      4C455F45 
 14178      56545F47 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 378


 14178      41545453 
 14178      5F444154 
 14179              	.LASF257:
 14180 24df 43595F42 		.ascii	"CY_BLE_EVT_GAP_DEVICE_CONNECTED\000"
 14180      4C455F45 
 14180      56545F47 
 14180      41505F44 
 14180      45564943 
 14181              	.LASF244:
 14182 24ff 43595F42 		.ascii	"CY_BLE_EVT_RADIO_VOLTAGE_LEVEL\000"
 14182      4C455F45 
 14182      56545F52 
 14182      4144494F 
 14182      5F564F4C 
 14183              	.LASF139:
 14184 251e 6D617374 		.ascii	"masterBufferIdx\000"
 14184      65724275 
 14184      66666572 
 14184      49647800 
 14185              	.LASF497:
 14186 252e 78546173 		.ascii	"xTasksWaitingTermination\000"
 14186      6B735761 
 14186      6974696E 
 14186      67546572 
 14186      6D696E61 
 14187              	.LASF516:
 14188 2547 63795F62 		.ascii	"cy_ble_connState\000"
 14188      6C655F63 
 14188      6F6E6E53 
 14188      74617465 
 14188      00
 14189              	.LASF125:
 14190 2558 63795F73 		.ascii	"cy_stc_rtc_dst_t\000"
 14190      74635F72 
 14190      74635F64 
 14190      73745F74 
 14190      00
 14191              	.LASF134:
 14192 2569 6D617374 		.ascii	"masterStatus\000"
 14192      65725374 
 14192      61747573 
 14192      00
 14193              	.LASF63:
 14194 2576 666C6173 		.ascii	"flashProgramDelay\000"
 14194      6850726F 
 14194      6772616D 
 14194      44656C61 
 14194      7900
 14195              	.LASF342:
 14196 2588 4C697374 		.ascii	"ListItem_t\000"
 14196      4974656D 
 14196      5F7400
 14197              	.LASF117:
 14198 2593 686F7572 		.ascii	"hour\000"
 14198      00
 14199              	.LASF115:
 14200 2598 63795F65 		.ascii	"cy_en_rtc_dst_format_t\000"
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 379


 14200      6E5F7274 
 14200      635F6473 
 14200      745F666F 
 14200      726D6174 
 14201              	.LASF476:
 14202 25af 756C5265 		.ascii	"ulReturn\000"
 14202      7475726E 
 14202      00
 14203              	.LASF119:
 14204 25b8 7765656B 		.ascii	"weekOfMonth\000"
 14204      4F664D6F 
 14204      6E746800 
 14205              	.LASF545:
 14206 25c4 756C4E65 		.ascii	"ulNewMaskValue\000"
 14206      774D6173 
 14206      6B56616C 
 14206      756500
 14207              	.LASF37:
 14208 25d3 6770696F 		.ascii	"gpioVersion\000"
 14208      56657273 
 14208      696F6E00 
 14209              	.LASF92:
 14210 25df 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 14210      50727443 
 14210      66675369 
 14210      6F4F6666 
 14210      73657400 
 14211              	.LASF523:
 14212 25f3 5254435F 		.ascii	"RTC_dstConfig\000"
 14212      64737443 
 14212      6F6E6669 
 14212      6700
 14213              	.LASF377:
 14214 2601 5443425F 		.ascii	"TCB_t\000"
 14214      7400
 14215              	.LASF514:
 14216 2607 63795F62 		.ascii	"cy_ble_advState\000"
 14216      6C655F61 
 14216      64765374 
 14216      61746500 
 14217              	.LASF142:
 14218 2617 736C6176 		.ascii	"slaveRdBufEmpty\000"
 14218      65526442 
 14218      7566456D 
 14218      70747900 
 14219              	.LASF192:
 14220 2627 6B696C6C 		.ascii	"killInputMode\000"
 14220      496E7075 
 14220      744D6F64 
 14220      6500
 14221              	.LASF245:
 14222 2635 43595F42 		.ascii	"CY_BLE_EVT_AES_CMAC_GEN_COMPLETE\000"
 14222      4C455F45 
 14222      56545F41 
 14222      45535F43 
 14222      4D41435F 
 14223              	.LASF56:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 380


 14224 2656 75646250 		.ascii	"udbPresent\000"
 14224      72657365 
 14224      6E7400
 14225              	.LASF391:
 14226 2661 70765061 		.ascii	"pvParameters\000"
 14226      72616D65 
 14226      74657273 
 14226      00
 14227              	.LASF213:
 14228 266e 43595F42 		.ascii	"CY_BLE_EVT_DATA_LENGTH_CHANGE\000"
 14228      4C455F45 
 14228      56545F44 
 14228      4154415F 
 14228      4C454E47 
 14229              	.LASF520:
 14230 268c 4932435F 		.ascii	"I2C_2_context\000"
 14230      325F636F 
 14230      6E746578 
 14230      7400
 14231              	.LASF231:
 14232 269a 43595F42 		.ascii	"CY_BLE_EVT_GET_DEVICE_ADDR_COMPLETE\000"
 14232      4C455F45 
 14232      56545F47 
 14232      45545F44 
 14232      45564943 
 14233              	.LASF410:
 14234 26be 75785461 		.ascii	"uxTaskPriorityGetFromISR\000"
 14234      736B5072 
 14234      696F7269 
 14234      74794765 
 14234      7446726F 
 14235              	.LASF22:
 14236 26d7 75696E74 		.ascii	"uint32_t\000"
 14236      33325F74 
 14236      00
 14237              	.LASF531:
 14238 26e0 764C6973 		.ascii	"vListInsertEnd\000"
 14238      74496E73 
 14238      65727445 
 14238      6E6400
 14239              	.LASF482:
 14240 26ef 78546173 		.ascii	"xTaskToNotify\000"
 14240      6B546F4E 
 14240      6F746966 
 14240      7900
 14241              	.LASF518:
 14242 26fd 55415254 		.ascii	"UART_context\000"
 14242      5F636F6E 
 14242      74657874 
 14242      00
 14243              	.LASF513:
 14244 270a 63795F52 		.ascii	"cy_RTC_daysInMonthTbl\000"
 14244      54435F64 
 14244      61797349 
 14244      6E4D6F6E 
 14244      74685462 
 14245              	.LASF394:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 381


 14246 2720 78526567 		.ascii	"xRegions\000"
 14246      696F6E73 
 14246      00
 14247              	.LASF135:
 14248 2729 6D617374 		.ascii	"masterPause\000"
 14248      65725061 
 14248      75736500 
 14249              	.LASF356:
 14250 2735 654E6F74 		.ascii	"eNotifyAction\000"
 14250      69667941 
 14250      6374696F 
 14250      6E00
 14251              	.LASF478:
 14252 2743 756C4269 		.ascii	"ulBitsToClearOnEntry\000"
 14252      7473546F 
 14252      436C6561 
 14252      724F6E45 
 14252      6E747279 
 14253              	.LASF136:
 14254 2758 6D617374 		.ascii	"masterRdDir\000"
 14254      65725264 
 14254      44697200 
 14255              	.LASF332:
 14256 2764 53746163 		.ascii	"StackType_t\000"
 14256      6B547970 
 14256      655F7400 
 14257              	.LASF536:
 14258 2770 76506F72 		.ascii	"vPortValidateInterruptPriority\000"
 14258      7456616C 
 14258      69646174 
 14258      65496E74 
 14258      65727275 
 14259              	.LASF127:
 14260 278f 43595F53 		.ascii	"CY_SCB_I2C_NAK\000"
 14260      43425F49 
 14260      32435F4E 
 14260      414B00
 14261              	.LASF72:
 14262 279e 64774368 		.ascii	"dwChCtlPrioPos\000"
 14262      43746C50 
 14262      72696F50 
 14262      6F7300
 14263              	.LASF31:
 14264 27ad 69706342 		.ascii	"ipcBase\000"
 14264      61736500 
 14265              	.LASF95:
 14266 27b5 63707573 		.ascii	"cpussCm4StatusOffset\000"
 14266      73436D34 
 14266      53746174 
 14266      75734F66 
 14266      66736574 
 14267              	.LASF406:
 14268 27ca 78546173 		.ascii	"xTaskToDelete\000"
 14268      6B546F44 
 14268      656C6574 
 14268      6500
 14269              	.LASF73:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 382


 14270 27d8 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 14270      43746C50 
 14270      7265656D 
 14270      70746162 
 14270      6C65506F 
 14271              	.LASF10:
 14272 27ee 73686F72 		.ascii	"short unsigned int\000"
 14272      7420756E 
 14272      7369676E 
 14272      65642069 
 14272      6E7400
 14273              	.LASF263:
 14274 2801 43595F42 		.ascii	"CY_BLE_EVT_GAP_NUMERIC_COMPARISON_REQUEST\000"
 14274      4C455F45 
 14274      56545F47 
 14274      41505F4E 
 14274      554D4552 
 14275              	.LASF273:
 14276 282b 43595F42 		.ascii	"CY_BLE_EVT_GAP_CREATE_CONN_CANCEL_COMPLETE\000"
 14276      4C455F45 
 14276      56545F47 
 14276      41505F43 
 14276      52454154 
 14277              	.LASF258:
 14278 2856 43595F42 		.ascii	"CY_BLE_EVT_GAP_DEVICE_DISCONNECTED\000"
 14278      4C455F45 
 14278      56545F47 
 14278      41505F44 
 14278      45564943 
 14279              	.LASF539:
 14280 2879 76506F72 		.ascii	"vPortEndScheduler\000"
 14280      74456E64 
 14280      53636865 
 14280      64756C65 
 14280      7200
 14281              	.LASF395:
 14282 288b 70727649 		.ascii	"prvInitialiseTaskLists\000"
 14282      6E697469 
 14282      616C6973 
 14282      65546173 
 14282      6B4C6973 
 14283              	.LASF243:
 14284 28a2 43595F42 		.ascii	"CY_BLE_EVT_RADIO_TEMPERATURE\000"
 14284      4C455F45 
 14284      56545F52 
 14284      4144494F 
 14284      5F54454D 
 14285              	.LASF83:
 14286 28bf 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 14286      44697643 
 14286      6D645061 
 14286      54797065 
 14286      53656C50 
 14287              	.LASF275:
 14288 28d6 43595F42 		.ascii	"CY_BLE_EVT_GAPP_UPDATE_ADV_SCAN_DATA_COMPLETE\000"
 14288      4C455F45 
 14288      56545F47 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 383


 14288      4150505F 
 14288      55504441 
 14289              	.LASF107:
 14290 2904 69706353 		.ascii	"ipcStructSize\000"
 14290      74727563 
 14290      7453697A 
 14290      6500
 14291              	.LASF493:
 14292 2912 7844656C 		.ascii	"xDelayedTaskList2\000"
 14292      61796564 
 14292      5461736B 
 14292      4C697374 
 14292      3200
 14293              	.LASF525:
 14294 2924 76506F72 		.ascii	"vPortFree\000"
 14294      74467265 
 14294      6500
 14295              	.LASF203:
 14296 292e 43595F42 		.ascii	"CY_BLE_EVT_FLASH_CORRUPT\000"
 14296      4C455F45 
 14296      56545F46 
 14296      4C415348 
 14296      5F434F52 
 14297              	.LASF76:
 14298 2947 70657269 		.ascii	"periTrCmdOffset\000"
 14298      5472436D 
 14298      644F6666 
 14298      73657400 
 14299              	.LASF11:
 14300 2957 5F5F696E 		.ascii	"__int32_t\000"
 14300      7433325F 
 14300      7400
 14301              	.LASF184:
 14302 2961 696E7665 		.ascii	"invertPWMOutN\000"
 14302      72745057 
 14302      4D4F7574 
 14302      4E00
 14303              	.LASF351:
 14304 296f 654E6F41 		.ascii	"eNoAction\000"
 14304      6374696F 
 14304      6E00
 14305              	.LASF120:
 14306 2979 6461794F 		.ascii	"dayOfWeek\000"
 14306      66576565 
 14306      6B00
 14307              	.LASF489:
 14308 2983 76546173 		.ascii	"vTaskNotifyGiveFromISR\000"
 14308      6B4E6F74 
 14308      69667947 
 14308      69766546 
 14308      726F6D49 
 14309              	.LASF364:
 14310 299a 756C5061 		.ascii	"ulParameters\000"
 14310      72616D65 
 14310      74657273 
 14310      00
 14311              	.LASF215:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 384


 14312 29a7 43595F42 		.ascii	"CY_BLE_EVT_GET_LOCAL_RPA_COMPLETE\000"
 14312      4C455F45 
 14312      56545F47 
 14312      45545F4C 
 14312      4F43414C 
 14313              	.LASF189:
 14314 29c9 72656C6F 		.ascii	"reloadInput\000"
 14314      6164496E 
 14314      70757400 
 14315              	.LASF161:
 14316 29d5 72785269 		.ascii	"rxRingBufTail\000"
 14316      6E674275 
 14316      66546169 
 14316      6C00
 14317              	.LASF474:
 14318 29e3 756C5461 		.ascii	"ulTaskNotifyTake\000"
 14318      736B4E6F 
 14318      74696679 
 14318      54616B65 
 14318      00
 14319              	.LASF234:
 14320 29f4 43595F42 		.ascii	"CY_BLE_EVT_SET_TX_PWR_COMPLETE\000"
 14320      4C455F45 
 14320      56545F53 
 14320      45545F54 
 14320      585F5057 
 14321              	.LASF158:
 14322 2a13 72785269 		.ascii	"rxRingBuf\000"
 14322      6E674275 
 14322      6600
 14323              	.LASF466:
 14324 2a1d 78546173 		.ascii	"xTaskToSet\000"
 14324      6B546F53 
 14324      657400
 14325              	.LASF154:
 14326 2a28 63795F73 		.ascii	"cy_stc_scb_i2c_context\000"
 14326      74635F73 
 14326      63625F69 
 14326      32635F63 
 14326      6F6E7465 
 14327              	.LASF222:
 14328 2a3f 43595F42 		.ascii	"CY_BLE_EVT_REMOVE_DEVICE_FROM_WHITE_LIST_COMPLETE\000"
 14328      4C455F45 
 14328      56545F52 
 14328      454D4F56 
 14328      455F4445 
 14329              	.LASF219:
 14330 2a71 43595F42 		.ascii	"CY_BLE_EVT_ADD_DEVICE_TO_RPA_LIST_COMPLETE\000"
 14330      4C455F45 
 14330      56545F41 
 14330      44445F44 
 14330      45564943 
 14331              	.LASF211:
 14332 2a9c 43595F42 		.ascii	"CY_BLE_EVT_SET_SUGGESTED_DATA_LENGTH_COMPLETE\000"
 14332      4C455F45 
 14332      56545F53 
 14332      45545F53 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccgivN1n.s 			page 385


 14332      55474745 
 14333              	.LASF337:
 14334 2aca 78497465 		.ascii	"xItemValue\000"
 14334      6D56616C 
 14334      756500
 14335              	.LASF191:
 14336 2ad5 73746172 		.ascii	"startInput\000"
 14336      74496E70 
 14336      757400
 14337              	.LASF383:
 14338 2ae0 70785443 		.ascii	"pxTCB\000"
 14338      4200
 14339              	.LASF65:
 14340 2ae6 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 14340      6843746C 
 14340      4D61696E 
 14340      57733046 
 14340      72657100 
 14341              	.LASF370:
 14342 2afa 75785072 		.ascii	"uxPriority\000"
 14342      696F7269 
 14342      747900
 14343              	.LASF38:
 14344 2b05 6873696F 		.ascii	"hsiomVersion\000"
 14344      6D566572 
 14344      73696F6E 
 14344      00
 14345              	.LASF270:
 14346 2b12 43595F42 		.ascii	"CY_BLE_EVT_GAP_KEYS_GEN_COMPLETE\000"
 14346      4C455F45 
 14346      56545F47 
 14346      41505F4B 
 14346      4559535F 
 14347              	.LASF455:
 14348 2b33 76546173 		.ascii	"vTaskRemoveFromUnorderedEventList\000"
 14348      6B52656D 
 14348      6F766546 
 14348      726F6D55 
 14348      6E6F7264 
 14349              	.LASF130:
 14350 2b55 63795F63 		.ascii	"cy_cb_scb_i2c_handle_addr_t\000"
 14350      625F7363 
 14350      625F6932 
 14350      635F6861 
 14350      6E646C65 
 14351              	.LASF70:
 14352 2b71 64774368 		.ascii	"dwChOffset\000"
 14352      4F666673 
 14352      657400
 14353              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
