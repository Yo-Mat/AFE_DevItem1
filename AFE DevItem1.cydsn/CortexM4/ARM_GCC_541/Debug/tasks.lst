ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"tasks.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  24              		.type	prvTaskIsTaskSuspended, %function
  25              	prvTaskIsTaskSuspended:
  26              	.LFB735:
  27              		.file 1 "Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\10.0.1\\Source\\tasks.c"
   1:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
   2:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * FreeRTOS Kernel V10.0.1
   3:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
   5:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * subject to the following conditions:
  11:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  12:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * copies or substantial portions of the Software.
  14:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  15:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  22:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * http://www.FreeRTOS.org
  23:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * http://aws.amazon.com/freertos
  24:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  25:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * 1 tab == 4 spaces!
  26:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
  27:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  28:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Standard includes. */
  29:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include <stdlib.h>
  30:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include <string.h>
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 2


  31:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  32:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** task.h is included from an application file. */
  35:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  37:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* FreeRTOS includes. */
  38:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "FreeRTOS.h"
  39:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "task.h"
  40:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "timers.h"
  41:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "stack_macros.h"
  42:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  43:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  44:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  45:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** header files above, but not in this file, in order to generate the correct
  46:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** privileged Vs unprivileged linkage and placement. */
  47:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  48:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  49:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** functions but without including stdio.h here. */
  51:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#include <stdio.h>
  57:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  59:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	performed just because a higher priority task has been woken. */
  62:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else
  64:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
  66:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  67:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  72:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
  73:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
  76:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  78:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Sometimes the FreeRTOSConfig.h settings only allow a task to be created using
  79:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** dynamically allocated RAM, in which case when any task is deleted it is known
  80:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** that both the task's stack and TCB need to be freed.  Sometimes the
  81:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** FreeRTOSConfig.h settings only allow a task to be created using statically
  82:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** allocated RAM, in which case when any task is deleted it is known that neither
  83:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** the task's stack or TCB should be freed.  Sometimes the FreeRTOSConfig.h
  84:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** settings allow a task to be created using either statically or dynamically
  85:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** allocated RAM, in which case a member of the TCB is used to record whether the
  86:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** stack and/or TCB were allocated statically or dynamically, so when a task is
  87:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** deleted the RAM that was allocated dynamically is freed again and no attempt is
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 3


  88:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** made to free the RAM that was allocated statically.
  89:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is only true if it is possible for a
  90:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** task to be created using either statically or dynamically allocated RAM.  Note
  91:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** that if portUSING_MPU_WRAPPERS is 1 then a protected task can be created with
  92:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** a statically allocated stack and a dynamically allocated TCB.
  93:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** !!!NOTE!!! If the definition of tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is
  94:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** changed then the definition of StaticTask_t must also be updated. */
  95:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE	( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( c
  96:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  97:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  98:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  99:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
 101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** value so the high water mark can be determined.  If none of the following are
 102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
 103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
 104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
 105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else
 106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
 107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
 113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
 114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
 115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
 116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * global, rather than file scope.
 121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define static
 124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	microcontroller architecture. */
 137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	state task. */
 140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																									\
 142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																								\
 144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 4


 145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}																								\
 146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																									\
 152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																										\
 154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																								\
 157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			--uxTopPriority;																			\
 159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}																								\
 160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																										\
 161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	being used. */
 172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	architecture being used. */
 180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																								\
 188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																									\
 190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 5


 202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																									\
 203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																								\
 205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}																								\
 207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** count overflows. */
 215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {																									\
 217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	List_t *pxTemp;																					\
 218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																									\
 219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																									\
 222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xNumOfOverflows++;																				\
 226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? ( TCB_t * ) pxCurrentTCB : ( T
 249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** to its original value when it is released. */
 258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 6


 259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else
 261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * (the task's run time environment, including register values)
 268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** typedef struct tskTaskControlBlock
 270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 7


 316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		struct	_reent xNewLib_reent;
 322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* See the comments above the definition of
 330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated for
 332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint8_t ucDelayAborted;
 337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** } tskTCB;
 340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** typedef tskTCB TCB_t;
 344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** which static variables must be declared volatile. */
 347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
 351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Other file private variables. --------------------------------*/
 372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 8


 373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
 374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
 375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** accessed from a critical section. */
 391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*lint -restore */
 401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	extern void vApplicationTickHook( void );
 414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* File private functions. --------------------------------*/
 424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /**
 426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * is in any other state.
 429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 9


 430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * automatically upon the creation of the first task.
 439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * creation of the first user task.
 446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * including the stack pointed to by the TCB.
 458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * and its TCB deleted.
 472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * either the current or the overflow delayed task list.
 478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * a suspended list, etc.).
 485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 10


 487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * NORMAL APPLICATION CODE.
 488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGED_FUNCTION;
 513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * set to a value other than 1.
 524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * will exit the Blocked state.
 534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*
 540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	 * human readable tables of task information.
 542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	 */
 543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 11


 544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * dynamically to fill in the structure's members.
 550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
 553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const uint32_t ulStackDepth,
 554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									void * const pvParameters,
 555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									UBaseType_t uxPriority,
 556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TCB_t *pxNewTCB,
 558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * under the control of the scheduler.
 563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * called by the function.
 570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const uint32_t ulStackDepth,
 584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									void * const pvParameters,
 585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									UBaseType_t uxPriority,
 586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xReturn;
 591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			structure. */
 600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 12


 601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configASSERT_DEFINED */
 604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			function - use them. */
 610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 Unusual cast is ok as the structures are desig
 611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = NULL;
 627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			not static allocation is being used. */
 650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Store the stack location in the TCB. */
 653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 13


 658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->pcName,
 665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
 666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->pvParameters,
 667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->uxPriority,
 668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxCreatedTask, pxNewTCB,
 669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->xRegions );
 670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
 673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			not static allocation is being used. */
 695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxNewTCB != NULL )
 698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Store the stack location in the TCB. */
 700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this task had a statically allocated stack in case it is
 706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
 710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->pcName,
 713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
 714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->pvParameters,
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 14


 715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->xRegions );
 718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
 721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							void * const pvParameters,
 736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							UBaseType_t uxPriority,
 737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
 741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the TCB then the stack. */
 745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			allocation is being used. */
 750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxNewTCB != NULL )
 753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				be deleted later if required. */
 757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vPortFree( pxNewTCB );
 763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxNewTCB = NULL;
 764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StackType_t *pxStack;
 770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 15


 772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) 
 773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxStack != NULL )
 775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Allocate space for the TCB. */
 777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the cas
 778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxNewTCB != NULL )
 780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Store the stack location in the TCB. */
 782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
 785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					it again. */
 788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vPortFree( pxStack );
 789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
 792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB = NULL;
 794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxNewTCB != NULL )
 799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
 811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const uint32_t ulStackDepth,
 826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									void * const pvParameters,
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									UBaseType_t uxPriority,
 828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 16


 829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TCB_t *pxNewTCB,
 830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const MemoryRegion_t * const xRegions )
 831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** StackType_t *pxTopOfStack;
 833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t x;
 834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		BaseType_t xRunPrivileged;
 838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	by the port. */
 861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Also record the stack's high address, which may assist
 872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			debugging. */
 873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		performed. */
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 17


 886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Store the task name in the TCB. */
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configMAX_TASK_NAME_LEN characters just in case the memory after the
 897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		string is not accessible (extremely unlikely). */
 898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pcName[ x ] == 0x00 )
 899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			break;
 901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Ensure the name string is terminated in the case that the string length
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	was greater or equal to configMAX_TASK_NAME_LEN. */
 910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	remove the privilege bit if one is present. */
 914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
 919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Event lists are always in priority order. */
 939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 18


 943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else
 965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xRegions;
 968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
 990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
 997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 19


1000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
1001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
1002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
1003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the top of stack variable is updated. */
1004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
1005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivi
1007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
1009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
1011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( ( void * ) pxCreatedTask != NULL )
1015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
1021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
1025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
1029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	updated. */
1031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
1032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxCurrentNumberOfTasks++;
1034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB == NULL )
1035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the suspended state - make this the current task. */
1038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
1039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
1043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				initialisation required.  We will not recover if this call
1044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				fails, but we will report the failure. */
1045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvInitialiseTaskLists();
1046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
1055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			current task if it is the highest priority task to be created
1056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			so far. */
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 20


1057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
1058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
1062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxTaskNumber++;
1075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
1089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		then it should run now. */
1094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
1104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
1108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 21


1114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			being deleted. */
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Remove task from the ready list. */
1123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Is the task waiting on an event also? */
1133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			not return. */
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxTaskNumber++;
1147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task itself, as a context switch to another task is required.
1152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				check the termination list and free up any memory allocated by
1154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				after which it is not possible to yield away from this task -
1165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				required. */
1167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 22


1171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
1173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the task that has just been deleted. */
1176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
1180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been deleted. */
1185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
1191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TickType_t xTimeToWake;
1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
1214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			block. */
1217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The tick count has overflowed since this function was
1225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 23


1228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xShouldDelay = pdTRUE;
1232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				tick time is less than the wake time. */
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xShouldDelay = pdTRUE;
1246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		have put ourselves to sleep. */
1273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portYIELD_WITHIN_API();
1276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 24


1285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSuspendAll();
1297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_DELAY();
1299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A task that is removed from the event list while the
1301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is resumed.
1304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				executing task. */
1307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		have put ourselves to sleep. */
1318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portYIELD_WITHIN_API();
1321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) )
1332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eTaskState eReturn;
1336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	List_t *pxStateList;
1337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTCB );
1340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 25


1342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			eReturn = eRunning;
1345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
1349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
1353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
1355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				lists. */
1358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				eReturn = eBlocked;
1359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					list.  Is it genuinely suspended or is it block
1366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					indefinitely? */
1367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						eReturn = eSuspended;
1370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						eReturn = eBlocked;
1374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					all. */
1384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					eReturn = eDeleted;
1385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				Ready (including pending ready) state. */
1392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				eReturn = eReady;
1393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return eReturn;
1397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 26


1399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask )
1405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn;
1408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the that
1412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			called uxTaskPriorityGet() that is being queried. */
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
1419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask )
1427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
1446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task that is being queried. */
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 27


1456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
1459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Ensure the new priority is valid. */
1475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task that is being changed. */
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#else
1497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The priority change may have readied a task of higher
1505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				priority than the calling task. */
1506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The priority of a task other than the currently
1511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						running task is being raised.  Is the priority being
1512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						raised above that of the running task? */
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 28


1513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
1515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							xYieldRequired = pdTRUE;
1516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
1517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						else
1518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
1519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
1521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The priority of the running task is being raised,
1525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						but the running task must already be the highest
1526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						priority task able to run so no yield is required. */
1527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Setting the priority of the running task down means
1532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					there may now be another task of higher priority that
1533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					is ready to execute. */
1534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xYieldRequired = pdTRUE;
1535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Setting the priority of any other task down does not
1539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					require a yield as the running task must be above the
1540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					new priority of the task being modified. */
1541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				before its uxPriority member is changed so the
1545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Only change the priority being used if the task is not
1551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					currently using an inherited priority. */
1552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The base priority gets set whatever. */
1562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#else
1565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
1569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 29


1570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				being used for anything else. */
1572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				nothing more than change its priority variable. However, if
1583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				in the list appropriate to its new priority. */
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task is currently in its ready list - remove before
1588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* It is known that the task is in its ready list so
1593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						there is no need to check again and the port level
1594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						reset macro can be called directly. */
1595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				optimised task selection is not being used. */
1619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 30


1627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			being suspended. */
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			suspended list. */
1644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Is the task waiting on an event also? */
1654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					now suspended, so no notification was received. */
1671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
1672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task that is now in the Suspended state. */
1682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
1683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 31


1684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
1687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The current task has just been suspended. */
1698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
1700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				must be adjusted to point to a different task. */
1706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
1707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					be set to point to it no matter what its relative priority
1711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					is. */
1712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB = NULL;
1713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vTaskSwitchContext();
1717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
  28              		.loc 1 1732 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
1733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
1734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 32


1735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		section. */
1738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTask );
  34              		.loc 1 1740 0
  35 0000 0246     		mov	r2, r0
  36 0002 40B9     		cbnz	r0, .L2
  37              	.LBB94:
  38              	.LBB95:
  39              		.file 2 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h"
   1:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*
   2:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
   5:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * subject to the following conditions:
  11:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  12:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  15:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  22:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  25:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  */
  27:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  28:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  29:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define PORTMACRO_H
  31:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  32:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifdef __cplusplus
  33:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** extern "C" {
  34:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
  35:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  36:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * Port specific definitions.
  38:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  39:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * given hardware and compiler.
  41:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  42:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * These settings should not be altered.
  43:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  */
  45:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 33


  46:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Type definitions. */
  47:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portCHAR		char
  48:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portFLOAT		float
  49:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portDOUBLE		double
  50:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portLONG		long
  51:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSHORT		short
  52:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  55:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** typedef long BaseType_t;
  57:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  59:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #else
  63:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  66:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
  70:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  72:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Architecture specifics. */
  73:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  78:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD() 															\
  80:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {																				\
  81:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 																				\
  84:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
  89:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  90:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  96:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Critical section management. */
  97:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 34


 103:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 106:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 108:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 114:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 115:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 116:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifdef configASSERT
 117:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 118:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 119:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
 120:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 121:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 122:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portNOP()
 123:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 124:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portINLINE	__inline
 125:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 126:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 127:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 128:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
 129:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 130:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 131:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 132:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 133:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** BaseType_t xReturn;
 134:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 135:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 136:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 137:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 138:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 139:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	{
 140:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		xReturn = pdFALSE;
 141:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	}
 142:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	else
 143:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	{
 144:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		xReturn = pdTRUE;
 145:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	}
 146:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 147:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	return xReturn;
 148:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
 149:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 150:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 151:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 152:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 153:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 154:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 155:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile
  40              		.loc 2 156 0
  41              		.syntax unified
  42              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 35


  43 0004 4FF02003 			mov r3, #32												
  44 0008 83F31188 		msr basepri, r3											
  45 000c BFF36F8F 		isb														
  46 0010 BFF34F8F 		dsb														
  47              	
  48              	@ 0 "" 2
  49              	.LVL1:
  50              		.thumb
  51              		.syntax unified
  52              	.L3:
  53 0014 FEE7     		b	.L3
  54              	.L2:
  55              	.LBE95:
  56              	.LBE94:
1741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  57              		.loc 1 1743 0
  58 0016 4169     		ldr	r1, [r0, #20]
  59 0018 0A4B     		ldr	r3, .L12
  60 001a 9942     		cmp	r1, r3
  61 001c 01D1     		bne	.L7
  62 001e 0123     		movs	r3, #1
  63 0020 00E0     		b	.L4
  64              	.L7:
  65 0022 0023     		movs	r3, #0
  66              	.L4:
  67              		.loc 1 1743 0 is_stmt 0 discriminator 4
  68 0024 43B1     		cbz	r3, .L8
1744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
  69              		.loc 1 1746 0 is_stmt 1
  70 0026 926A     		ldr	r2, [r2, #40]
  71 0028 0749     		ldr	r1, .L12+4
  72 002a 8A42     		cmp	r2, r1
  73 002c 06D0     		beq	.L9
1747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
  74              		.loc 1 1750 0
  75 002e 02B1     		cbz	r2, .L6
  76 0030 0023     		movs	r3, #0
  77              	.L6:
  78              		.loc 1 1750 0 is_stmt 0 discriminator 4
  79 0032 2BB9     		cbnz	r3, .L11
1733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  80              		.loc 1 1733 0 is_stmt 1
  81 0034 0020     		movs	r0, #0
  82              	.LVL2:
  83 0036 7047     		bx	lr
  84              	.LVL3:
  85              	.L8:
  86 0038 0020     		movs	r0, #0
  87              	.LVL4:
  88 003a 7047     		bx	lr
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 36


  89              	.LVL5:
  90              	.L9:
  91 003c 0020     		movs	r0, #0
  92              	.LVL6:
  93 003e 7047     		bx	lr
  94              	.LVL7:
  95              	.L11:
1751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xReturn = pdTRUE;
  96              		.loc 1 1752 0
  97 0040 0120     		movs	r0, #1
  98              	.LVL8:
1753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
1770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
  99              		.loc 1 1770 0
 100 0042 7047     		bx	lr
 101              	.L13:
 102              		.align	2
 103              	.L12:
 104 0044 00000000 		.word	.LANCHOR0
 105 0048 14000000 		.word	.LANCHOR0+20
 106              		.cfi_endproc
 107              	.LFE735:
 108              		.size	prvTaskIsTaskSuspended, .-prvTaskIsTaskSuspended
 109              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 110              		.align	2
 111              		.thumb
 112              		.thumb_func
 113              		.type	prvResetNextTaskUnblockTime, %function
 114              	prvResetNextTaskUnblockTime:
 115              	.LFB763:
1771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 37


1781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToResume );
1783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		currently executing task. */
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
1787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
1789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					suspended because this is inside a critical section. */
1796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A higher priority task may have just been resumed. */
1800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						but will leave the lists in the correct state for the
1804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						next yield. */
1805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
1818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToResume );
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 38


1838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
1854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					suspended list to the ready list directly. */
1868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldRequired = pdTRUE;
1871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					unsuspended. */
1885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 39


1895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xYieldRequired;
1896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskStartScheduler( void )
1902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
1903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
1904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		address of the RAM then create the idle task. */
1914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												configIDLE_TASK_NAME,
1917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												ulIdleTaskStackSize,
1918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
1919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												pxIdleTaskStackBuffer,
1921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
1926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFAIL;
1930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else
1933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
1935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
1936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								configIDLE_TASK_NAME,
1937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								configMINIMAL_STACK_SIZE,
1938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								( void * ) NULL,
1939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
1941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
1943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
1945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xReturn == pdPASS )
1947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
1949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 40


1952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_TIMERS */
1956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( xReturn == pdPASS )
1958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
1960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
1961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the only macro called by the function. */
1962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
1963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			freertos_tasks_c_additions_init();
1965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
1967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
1969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
1970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
1971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
1972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		starts to run. */
1973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portDISABLE_INTERRUPTS();
1974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
1976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
1978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			structure specific to the task that will run first. */
1979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
1980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
1982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
1984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
1985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
1986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
1988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
1989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
1990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
1991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
1992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		FreeRTOSConfig.h file. */
1993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
1994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
1996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portable interface. */
1997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
1998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
2000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			function will not return. */
2001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
2005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
2008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 41


2009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		or the timer task. */
2012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) xIdleTaskHandle;
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskEndScheduler( void )
2022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portDISABLE_INTERRUPTS();
2027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
2028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vPortEndScheduler();
2029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskSuspendAll( void )
2033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required as the variable is of type
2035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	http://goo.gl/wu4acr */
2038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	++uxSchedulerSuspended;
2039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TickType_t xReturn;
2047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
2052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		running. */
2053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
2061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 42


2066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
2067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
2070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
2075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = 0;
2079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
2084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			processed. */
2085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = 0;
2086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			idle priority.  This path can only be reached if
2091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = 0;
2093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB = NULL;
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
2120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		--uxSchedulerSuspended;
2122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 43


2123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				appropriate ready list. */
2129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
2132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					task then a yield must be performed. */
2138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
2141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB != NULL )
2149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					which may have prevented the next unblock time from being
2152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					important for low power tickless implementations, where
2154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					state. */
2156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				time. */
2163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
2165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxPendedCounts > ( UBaseType_t ) 0U )
2167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						do
2169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
2170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
2172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								xYieldPending = pdTRUE;
2173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
2174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							else
2175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
2176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
2178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							--uxPendedCounts;
2179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 44


2180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						uxPendedTicks = 0;
2182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#endif
2196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
2199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
2210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xAlreadyYielded;
2212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTicks;
2218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTicks = xTickCount;
2223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xTicks;
2227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xReturn;
2233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 45


2237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
2249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = xTickCount;
2254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xReturn;
2258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t. */
2265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB;
2272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	queried. */
2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTCB );
2277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t x;
2287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	char cNextChar;
2288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 46


2294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			do
2296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
2298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Check each character in the name looking for a match or
2300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mismatch. */
2301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Characters didn't match. */
2308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
2309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else if( cNextChar == 0x00 )
2311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Both strings terminated, a match must have been
2313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						found. */
2314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxReturn = pxNextTCB;
2315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
2316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxReturn != NULL )
2324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The handle has been found. */
2326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
2327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return pxReturn;
2337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t* pxTCB;
2348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 47


2351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
2353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Search the ready lists. */
2355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			do
2356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxQueue--;
2358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB != NULL )
2361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Found the handle. */
2363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
2364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Search the delayed lists. */
2369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == NULL )
2370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == NULL )
2375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB == NULL )
2382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Search the suspended list. */
2384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
2388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB == NULL )
2392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Search the deleted list. */
2394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
2398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xTaskResumeAll();
2400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return ( TaskHandle_t ) pxTCB;
2402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 48


2408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
2414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task in the Ready state. */
2420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				do
2421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxQueue--;
2423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task in the Blocked state. */
2429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					each task in the Suspended state. */
2444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#else
2455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#endif
2457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#else
2460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						*pulTotalRunTime = 0;
2464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 49


2465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xTaskResumeAll();
2474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxTask;
2476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xIdleTaskHandle;
2489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 1. */
2498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		each stepped tick. */
2505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount += xTicksToJump;
2507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB = ( TCB_t * ) xTask;
2518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
2519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTCB );
2521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 50


2522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
2523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			it is actually in the Blocked state. */
2526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
2529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				scheduler is suspended. */
2533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is used. */
2539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskENTER_CRITICAL();
2540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskEXIT_CRITICAL();
2552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				switch if preemption is turned off. */
2558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					performed if the unblocked task has a priority that is
2562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					equal to or higher than the currently executing task. */
2563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						is unsuspended. */
2567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
2568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFAIL;
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 51


2579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xTaskResumeAll();
2582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t * pxTCB;
2592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xItemValue;
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tasks to be unblocked. */
2598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		block. */
2603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		delayed lists if it wraps to 0. */
2607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount = xConstTickCount;
2608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
2610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		look any further down the list. */
2622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			for( ;; )
2625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					to the maximum possible value so it is extremely
2630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					unlikely that the
2631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					next time through. */
2633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
2635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 52


2636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
2637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					at which the task at the head of the delayed list must
2641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					be removed from the Blocked state. */
2642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
2643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						item value is the time at which the task at the head
2649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						state -	so record the item value in
2651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xNextTaskUnblockTime. */
2652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
2654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					it from the event list. */
2665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					list. */
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					context switch if preemption is turned off. */
2680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Preemption is on, but a context switch should
2683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						only be performed if the unblocked task has a
2684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						priority that is equal to or higher than the
2685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						currently executing task. */
2686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
2688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
2690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						else
2691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
2692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 53


2693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
2694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
2721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vApplicationTickHook();
2723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
2732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		++uxPendedTicks;
2734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		scheduler is locked. */
2737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vApplicationTickHook();
2740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
2742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xYieldPending != pdFALSE )
2747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xSwitchRequired = pdTRUE;
2749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 54


2750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xSwitchRequired;
2758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *xTCB;
2766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		getting set. */
2769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask == NULL )
2770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the value can be accessed from an interrupt. */
2780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
2781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
2783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *xTCB;
2793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHookFunction_t xReturn;
2794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
2796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask == NULL )
2797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the value can be accessed from an interrupt. */
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 55


2807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
2808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xTCB->pxTaskTag;
2810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
2812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *xTCB;
2824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
2825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask == NULL )
2828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFAIL;
2843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskSwitchContext( void )
2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		switch. */
2857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdTRUE;
2858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
2860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdFALSE;
2862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
2863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 56


2864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#else
2869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Add the amount of time the task has been running to the
2873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				accumulated time so far.  The time the task started running was
2874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				stored in ulTaskSwitchedInTime.  Note that there is no overflow
2875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				protection here so count values are only valid until the timer
2876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				overflows.  The guard against negative values is to protect
2877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				against suspect run time stat counter implementations - which
2878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				are provided by the application, not the kernel. */
2879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ulTotalRunTime > ulTaskSwitchedInTime )
2880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
2884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				ulTaskSwitchedInTime = ulTotalRunTime;
2888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
2890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Check for stack overflow, if configured. */
2892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																									\
2893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const uint32_t * const pulStack = ( uint32_t * ) pxCurrentTCB->pxStack;							\
2894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const uint32_t ulCheckValue = ( uint32_t ) 0xa5a5a5a5;											\
2895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																											\
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ( pulStack[ 0 ] != ulCheckValue ) ||												\
2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 1 ] != ulCheckValue ) ||												\
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 2 ] != ulCheckValue ) ||												\
2899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 3 ] != ulCheckValue ) )												\
2900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{																								\
2901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vApplicationStackOverflowHook( ( TaskHandle_t ) pxCurrentTCB, pxCurrentTCB->pcTaskName );	\
2902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}																								\
2903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
2906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		optimised asm code. */
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK();
2908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			structure specific to this task. */
2914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 57


2921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
2924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
2926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
2927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
2929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
2930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
2931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
2932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
2941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the event groups implementation. */
2944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
2945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
2947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
2948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	task that is not in the Blocked state. */
2949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
2950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
2952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
2953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
2954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
2955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the task level). */
2956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TIMERS == 1 )
2963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
2965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxEventList );
2967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This function should not be called by application code hence the
2969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
2971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		it should be called with the scheduler suspended. */
2972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
2975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
2976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
2977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		can be used in place of vListInsert. */
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 58


2978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
2981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
2982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
2983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
2984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
2986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
2989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
2990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TIMERS */
2993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
2996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
2998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
2999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
3001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	called from a critical section within an ISR. */
3002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
3004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
3005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the delayed list, and add it to the ready list.
3006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
3008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
3009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
3010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
3012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxEventList is not empty. */
3013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
3014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
3016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
3021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
3023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pending until the scheduler is resumed. */
3026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		it should force a context switch now. */
3034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = pdTRUE;
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 59


3035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdTRUE;
3039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
3041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = pdFALSE;
3043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
3046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
3049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
3050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
3051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
3052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
3053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
3054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
3055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvResetNextTaskUnblockTime();
3056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
3058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xReturn;
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
3066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the event flags implementation. */
3069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
3070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Store the new item value in the event list. */
3072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	event flags. */
3076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_LIST_ITEM_OWNER( pxEventListItem );
3077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
3079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	lists. */
3083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
3085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		a context switch is required.  This function is called with the
3090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 60


3092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdTRUE;
3093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
3100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
3101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
3103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
3104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
3106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
3112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
3120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
3122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTicksToWait );
3123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
3125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != pdFALSE )
3132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				but has the same result. */
3135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
3137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				specified is the maximum block time then the task should block
3146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				indefinitely, and therefore never time out. */
3147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFALSE;
3148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 61


3149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The tick count is greater than the time at which
3155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			was called. */
3159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdTRUE;
3160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
3162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
3165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
3166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFALSE;
3167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			*pxTicksToWait = 0;
3171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdTRUE;
3172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
3175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xReturn;
3177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskMissedYield( void )
3181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xYieldPending = pdTRUE;
3183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn;
3191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask != NULL )
3194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = 0U;
3201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
3204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 62


3206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask != NULL )
3216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
3225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * -----------------------------------------------------------
3226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The Idle task.
3227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * ----------------------------------------------------------
3228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
3229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
3232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
3234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
3235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop warnings. */
3238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) pvParameters;
3239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	any. */
3246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTASK_CALLS_SECURE_FUNCTIONS();
3247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for( ;; )
3249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			see if any other task has become available.  If we are using
3258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			will automatically get the processor anyway. */
3260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskYIELD();
3261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 63


3263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			to run then the idle task should yield before the end of the
3269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			timeslice.
3270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			A critical region is not required here as we are just reading from
3272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskYIELD();
3278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			allows the application designer to add background functionality
3292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			without the overhead of a separate task.
3293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vApplicationIdleHook();
3296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		user defined low power mode	implementations require
3302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			test of the expected idle time is performed without the
3310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			valid. */
3312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vTaskSuspendAll();
3317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					time can be sampled again, and this time its value can
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 64


3320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					be used. */
3321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if the application does not want
3326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
3336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) xTaskResumeAll();
3341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			eReturn = eAbortSleep;
3364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			eReturn = eAbortSleep;
3369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			interrupts. */
3376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 65


3377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return eReturn;
3387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvReturn = NULL;
3413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = NULL;
3423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return pvReturn;
3426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 66


3434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the calling task. */
3439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseTaskLists( void )
3448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxPriority;
3450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	using list2. */
3474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
3475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		TCB_t *pxTCB;
3487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent vTaskSuspendAll()
3489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		being called too often in the idle task. */
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 67


3491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
3493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
3495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
3497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
3498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
3500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvDeleteTCB( pxTCB );
3502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
3528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
3538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		state is just set to whatever is passed in. */
3546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( eState != eInvalid )
3547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 68


3548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
3549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
3551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
3555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If the task is in the suspended list then there is a
3559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					chance it is actually just blocked indefinitely - so really
3560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					it should be reported as being in the Blocked state. */
3561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( eState == eSuspended )
3562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						vTaskSuspendAll();
3564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
3565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
3567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
3568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
3569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
3570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						( void ) xTaskResumeAll();
3571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#else
3590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
3594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 69


3605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTask = 0;
3610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
3614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			do
3620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
3622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxTask++;
3624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxTask;
3632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
3638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulCount = 0U;
3642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ulCount++;
3647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return ( uint16_t ) ulCount;
3652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) ) */
3655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 70


3662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t *pucEndOfStack;
3663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn;
3664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
3672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
3680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		want to allocate and clean RAM statically. */
3692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		to the task to free any memory allocated at the application level. */
3696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the stack and TCB. */
3706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTCB );
3708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated 
3710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			check what was statically allocated before trying to free the
3713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			memory. */
3714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				must be freed. */
3718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 71


3719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vPortFree( pxTCB );
3720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				only memory that must be freed. */
3725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vPortFree( pxTCB );
3726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				nothing needs to be freed. */
3731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
3732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 116              		.loc 1 3742 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
3743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB;
3744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 121              		.loc 1 3745 0
 122 0000 094B     		ldr	r3, .L19
 123 0002 9B6A     		ldr	r3, [r3, #40]
 124 0004 1B68     		ldr	r3, [r3]
 125 0006 0BB9     		cbnz	r3, .L18
 126 0008 0123     		movs	r3, #1
 127 000a 00E0     		b	.L15
 128              	.L18:
 129 000c 0023     		movs	r3, #0
 130              	.L15:
 131              		.loc 1 3745 0 is_stmt 0 discriminator 4
 132 000e 23B1     		cbz	r3, .L16
3746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		there is an item in the delayed list. */
3751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 133              		.loc 1 3751 0 is_stmt 1
 134 0010 4FF0FF32 		mov	r2, #-1
 135 0014 044B     		ldr	r3, .L19
 136 0016 DA62     		str	r2, [r3, #44]
 137 0018 7047     		bx	lr
 138              	.L16:
3752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 72


3753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
3754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from the Blocked state. */
3759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 139              		.loc 1 3759 0
 140 001a 034B     		ldr	r3, .L19
 141 001c 9A6A     		ldr	r2, [r3, #40]
 142 001e D268     		ldr	r2, [r2, #12]
 143 0020 D268     		ldr	r2, [r2, #12]
 144              	.LVL9:
3760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 145              		.loc 1 3760 0
 146 0022 5268     		ldr	r2, [r2, #4]
 147              	.LVL10:
 148 0024 DA62     		str	r2, [r3, #44]
 149 0026 7047     		bx	lr
 150              	.L20:
 151              		.align	2
 152              	.L19:
 153 0028 00000000 		.word	.LANCHOR0
 154              		.cfi_endproc
 155              	.LFE763:
 156              		.size	prvResetNextTaskUnblockTime, .-prvResetNextTaskUnblockTime
 157              		.section	.text.prvDeleteTCB,"ax",%progbits
 158              		.align	2
 159              		.thumb
 160              		.thumb_func
 161              		.type	prvDeleteTCB, %function
 162              	prvDeleteTCB:
 163              	.LFB762:
3688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 164              		.loc 1 3688 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              	.LVL11:
 169 0000 10B5     		push	{r4, lr}
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 4, -8
 172              		.cfi_offset 14, -4
 173 0002 0446     		mov	r4, r0
3706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTCB );
 174              		.loc 1 3706 0
 175 0004 006B     		ldr	r0, [r0, #48]
 176              	.LVL12:
 177 0006 FFF7FEFF 		bl	vPortFree
 178              	.LVL13:
3707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 179              		.loc 1 3707 0
 180 000a 2046     		mov	r0, r4
 181 000c FFF7FEFF 		bl	vPortFree
 182              	.LVL14:
 183 0010 10BD     		pop	{r4, pc}
 184              		.cfi_endproc
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 73


 185              	.LFE762:
 186              		.size	prvDeleteTCB, .-prvDeleteTCB
 187 0012 00BF     		.section	.text.prvInitialiseNewTask,"ax",%progbits
 188              		.align	2
 189              		.thumb
 190              		.thumb_func
 191              		.type	prvInitialiseNewTask, %function
 192              	prvInitialiseNewTask:
 193              	.LFB726:
 831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** StackType_t *pxTopOfStack;
 194              		.loc 1 831 0
 195              		.cfi_startproc
 196              		@ args = 16, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              	.LVL15:
 199 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 200              		.cfi_def_cfa_offset 32
 201              		.cfi_offset 4, -32
 202              		.cfi_offset 5, -28
 203              		.cfi_offset 6, -24
 204              		.cfi_offset 7, -20
 205              		.cfi_offset 8, -16
 206              		.cfi_offset 9, -12
 207              		.cfi_offset 10, -8
 208              		.cfi_offset 14, -4
 209 0004 8246     		mov	r10, r0
 210 0006 8946     		mov	r9, r1
 211 0008 1546     		mov	r5, r2
 212 000a 9846     		mov	r8, r3
 213 000c 089F     		ldr	r7, [sp, #32]
 214 000e 099E     		ldr	r6, [sp, #36]
 215 0010 0A9C     		ldr	r4, [sp, #40]
 853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 216              		.loc 1 853 0
 217 0012 9200     		lsls	r2, r2, #2
 218              	.LVL16:
 219 0014 A521     		movs	r1, #165
 220              	.LVL17:
 221 0016 206B     		ldr	r0, [r4, #48]
 222              	.LVL18:
 223 0018 FFF7FEFF 		bl	memset
 224              	.LVL19:
 863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 225              		.loc 1 863 0
 226 001c 236B     		ldr	r3, [r4, #48]
 227 001e 05F18042 		add	r2, r5, #1073741824
 228 0022 013A     		subs	r2, r2, #1
 229 0024 03EB8205 		add	r5, r3, r2, lsl #2
 230              	.LVL20:
 864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 231              		.loc 1 864 0
 232 0028 25F00705 		bic	r5, r5, #7
 233              	.LVL21:
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 234              		.loc 1 891 0
 235 002c 0023     		movs	r3, #0
 236 002e 08E0     		b	.L24
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 74


 237              	.LVL22:
 238              	.L26:
 893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 239              		.loc 1 893 0
 240 0030 19F80310 		ldrb	r1, [r9, r3]	@ zero_extendqisi2
 241 0034 E218     		adds	r2, r4, r3
 242 0036 82F83410 		strb	r1, [r2, #52]
 898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 243              		.loc 1 898 0
 244 003a 19F80320 		ldrb	r2, [r9, r3]	@ zero_extendqisi2
 245 003e 12B1     		cbz	r2, .L25
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 246              		.loc 1 891 0 discriminator 2
 247 0040 0133     		adds	r3, r3, #1
 248              	.LVL23:
 249              	.L24:
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 250              		.loc 1 891 0 is_stmt 0 discriminator 1
 251 0042 0F2B     		cmp	r3, #15
 252 0044 F4D9     		bls	.L26
 253              	.L25:
 910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 254              		.loc 1 910 0 is_stmt 1
 255 0046 0023     		movs	r3, #0
 256              	.LVL24:
 257 0048 84F84330 		strb	r3, [r4, #67]
 914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 258              		.loc 1 914 0
 259 004c 062F     		cmp	r7, #6
 260 004e 00D9     		bls	.L27
 916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 261              		.loc 1 916 0
 262 0050 0627     		movs	r7, #6
 263              	.L27:
 264              	.LVL25:
 923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 265              		.loc 1 923 0
 266 0052 E762     		str	r7, [r4, #44]
 931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 267              		.loc 1 931 0
 268 0054 201D     		adds	r0, r4, #4
 269 0056 FFF7FEFF 		bl	vListInitialiseItem
 270              	.LVL26:
 932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 271              		.loc 1 932 0
 272 005a 04F11800 		add	r0, r4, #24
 273 005e FFF7FEFF 		bl	vListInitialiseItem
 274              	.LVL27:
 936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 275              		.loc 1 936 0
 276 0062 2461     		str	r4, [r4, #16]
 939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 277              		.loc 1 939 0
 278 0064 C7F10703 		rsb	r3, r7, #7
 279 0068 A361     		str	r3, [r4, #24]
 940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 280              		.loc 1 940 0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 75


 281 006a 6462     		str	r4, [r4, #36]
 282              	.LVL28:
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 283              		.loc 1 973 0
 284 006c 0023     		movs	r3, #0
 285 006e 06E0     		b	.L28
 286              	.LVL29:
 287              	.L29:
 975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 288              		.loc 1 975 0 discriminator 3
 289 0070 03F11002 		add	r2, r3, #16
 290 0074 04EB8202 		add	r2, r4, r2, lsl #2
 291 0078 0021     		movs	r1, #0
 292 007a 5160     		str	r1, [r2, #4]
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 293              		.loc 1 973 0 discriminator 3
 294 007c 0133     		adds	r3, r3, #1
 295              	.LVL30:
 296              	.L28:
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 297              		.loc 1 973 0 is_stmt 0 discriminator 1
 298 007e 042B     		cmp	r3, #4
 299 0080 F6D9     		bls	.L29
 982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 300              		.loc 1 982 0 is_stmt 1
 301 0082 0023     		movs	r3, #0
 302              	.LVL31:
 303 0084 A365     		str	r3, [r4, #88]
 983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 304              		.loc 1 983 0
 305 0086 84F85C30 		strb	r3, [r4, #92]
1010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 306              		.loc 1 1010 0
 307 008a 4246     		mov	r2, r8
 308 008c 5146     		mov	r1, r10
 309 008e 2846     		mov	r0, r5
 310 0090 FFF7FEFF 		bl	pxPortInitialiseStack
 311              	.LVL32:
 312 0094 2060     		str	r0, [r4]
1014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 313              		.loc 1 1014 0
 314 0096 06B1     		cbz	r6, .L23
1018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 315              		.loc 1 1018 0
 316 0098 3460     		str	r4, [r6]
 317              	.L23:
 318 009a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 319              		.cfi_endproc
 320              	.LFE726:
 321              		.size	prvInitialiseNewTask, .-prvInitialiseNewTask
 322 009e 00BF     		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 323              		.align	2
 324              		.thumb
 325              		.thumb_func
 326              		.type	prvInitialiseTaskLists, %function
 327              	prvInitialiseTaskLists:
 328              	.LFB760:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 76


3448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxPriority;
 329              		.loc 1 3448 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333 0000 70B5     		push	{r4, r5, r6, lr}
 334              		.cfi_def_cfa_offset 16
 335              		.cfi_offset 4, -16
 336              		.cfi_offset 5, -12
 337              		.cfi_offset 6, -8
 338              		.cfi_offset 14, -4
 339              	.LVL33:
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 340              		.loc 1 3451 0
 341 0002 0024     		movs	r4, #0
 342 0004 07E0     		b	.L34
 343              	.LVL34:
 344              	.L35:
3453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 345              		.loc 1 3453 0 discriminator 3
 346 0006 04EB8402 		add	r2, r4, r4, lsl #2
 347 000a 9300     		lsls	r3, r2, #2
 348 000c 1048     		ldr	r0, .L37
 349 000e 1844     		add	r0, r0, r3
 350 0010 FFF7FEFF 		bl	vListInitialise
 351              	.LVL35:
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 352              		.loc 1 3451 0 discriminator 3
 353 0014 0134     		adds	r4, r4, #1
 354              	.LVL36:
 355              	.L34:
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 356              		.loc 1 3451 0 is_stmt 0 discriminator 1
 357 0016 062C     		cmp	r4, #6
 358 0018 F5D9     		bls	.L35
3456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 359              		.loc 1 3456 0 is_stmt 1
 360 001a 0E4C     		ldr	r4, .L37+4
 361              	.LVL37:
 362 001c 04F1BC06 		add	r6, r4, #188
 363 0020 3046     		mov	r0, r6
 364 0022 FFF7FEFF 		bl	vListInitialise
 365              	.LVL38:
3457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 366              		.loc 1 3457 0
 367 0026 04F1D005 		add	r5, r4, #208
 368 002a 2846     		mov	r0, r5
 369 002c FFF7FEFF 		bl	vListInitialise
 370              	.LVL39:
3458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 371              		.loc 1 3458 0
 372 0030 04F11400 		add	r0, r4, #20
 373 0034 FFF7FEFF 		bl	vListInitialise
 374              	.LVL40:
3462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 375              		.loc 1 3462 0
 376 0038 04F1E400 		add	r0, r4, #228
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 77


 377 003c FFF7FEFF 		bl	vListInitialise
 378              	.LVL41:
3468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 379              		.loc 1 3468 0
 380 0040 2046     		mov	r0, r4
 381 0042 FFF7FEFF 		bl	vListInitialise
 382              	.LVL42:
3474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 383              		.loc 1 3474 0
 384 0046 A662     		str	r6, [r4, #40]
3475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 385              		.loc 1 3475 0
 386 0048 C4F8F850 		str	r5, [r4, #248]
 387 004c 70BD     		pop	{r4, r5, r6, pc}
 388              	.L38:
 389 004e 00BF     		.align	2
 390              	.L37:
 391 0050 30000000 		.word	.LANCHOR0+48
 392 0054 00000000 		.word	.LANCHOR0
 393              		.cfi_endproc
 394              	.LFE760:
 395              		.size	prvInitialiseTaskLists, .-prvInitialiseTaskLists
 396              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 397              		.align	2
 398              		.thumb
 399              		.thumb_func
 400              		.type	prvAddNewTaskToReadyList, %function
 401              	prvAddNewTaskToReadyList:
 402              	.LFB727:
1028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 403              		.loc 1 1028 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              	.LVL43:
 408 0000 38B5     		push	{r3, r4, r5, lr}
 409              		.cfi_def_cfa_offset 16
 410              		.cfi_offset 3, -16
 411              		.cfi_offset 4, -12
 412              		.cfi_offset 5, -8
 413              		.cfi_offset 14, -4
 414 0002 0446     		mov	r4, r0
1031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 415              		.loc 1 1031 0
 416 0004 FFF7FEFF 		bl	vPortEnterCritical
 417              	.LVL44:
1033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 418              		.loc 1 1033 0
 419 0008 264B     		ldr	r3, .L45
 420 000a D3F8FC20 		ldr	r2, [r3, #252]
 421 000e 0132     		adds	r2, r2, #1
 422 0010 C3F8FC20 		str	r2, [r3, #252]
1034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 423              		.loc 1 1034 0
 424 0014 D3F80031 		ldr	r3, [r3, #256]
 425 0018 4BB9     		cbnz	r3, .L40
1038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 78


 426              		.loc 1 1038 0
 427 001a 224B     		ldr	r3, .L45
 428 001c C3F80041 		str	r4, [r3, #256]
1040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 429              		.loc 1 1040 0
 430 0020 D3F8FC30 		ldr	r3, [r3, #252]
 431 0024 012B     		cmp	r3, #1
 432 0026 10D1     		bne	.L41
1045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 433              		.loc 1 1045 0
 434 0028 FFF7FEFF 		bl	prvInitialiseTaskLists
 435              	.LVL45:
 436 002c 0DE0     		b	.L41
 437              	.L40:
1057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 438              		.loc 1 1057 0
 439 002e 1D4B     		ldr	r3, .L45
 440 0030 D3F80431 		ldr	r3, [r3, #260]
 441 0034 4BB9     		cbnz	r3, .L41
1059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 442              		.loc 1 1059 0
 443 0036 1B4B     		ldr	r3, .L45
 444 0038 D3F80031 		ldr	r3, [r3, #256]
 445 003c DA6A     		ldr	r2, [r3, #44]
 446 003e E36A     		ldr	r3, [r4, #44]
 447 0040 9A42     		cmp	r2, r3
 448 0042 02D8     		bhi	.L41
1061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 449              		.loc 1 1061 0
 450 0044 174B     		ldr	r3, .L45
 451 0046 C3F80041 		str	r4, [r3, #256]
 452              	.L41:
1074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 453              		.loc 1 1074 0
 454 004a 164A     		ldr	r2, .L45
 455 004c D2F80831 		ldr	r3, [r2, #264]
 456 0050 0133     		adds	r3, r3, #1
 457 0052 C2F80831 		str	r3, [r2, #264]
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 458              		.loc 1 1084 0
 459 0056 E36A     		ldr	r3, [r4, #44]
 460 0058 D2F80C21 		ldr	r2, [r2, #268]
 461 005c 9342     		cmp	r3, r2
 462 005e 02D9     		bls	.L42
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 463              		.loc 1 1084 0 is_stmt 0 discriminator 1
 464 0060 104A     		ldr	r2, .L45
 465 0062 C2F80C31 		str	r3, [r2, #268]
 466              	.L42:
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 467              		.loc 1 1084 0 discriminator 3
 468 0066 0F4D     		ldr	r5, .L45
 469 0068 05F13000 		add	r0, r5, #48
 470 006c 03EB8303 		add	r3, r3, r3, lsl #2
 471 0070 9A00     		lsls	r2, r3, #2
 472 0072 211D     		adds	r1, r4, #4
 473 0074 1044     		add	r0, r0, r2
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 79


 474 0076 FFF7FEFF 		bl	vListInsertEnd
 475              	.LVL46:
1088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 476              		.loc 1 1088 0 is_stmt 1 discriminator 3
 477 007a FFF7FEFF 		bl	vPortExitCritical
 478              	.LVL47:
1090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 479              		.loc 1 1090 0 discriminator 3
 480 007e D5F80431 		ldr	r3, [r5, #260]
 481 0082 6BB1     		cbz	r3, .L39
1094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 482              		.loc 1 1094 0
 483 0084 D5F80031 		ldr	r3, [r5, #256]
 484 0088 DA6A     		ldr	r2, [r3, #44]
 485 008a E36A     		ldr	r3, [r4, #44]
 486 008c 9A42     		cmp	r2, r3
 487 008e 07D2     		bcs	.L39
1096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 488              		.loc 1 1096 0
 489 0090 4FF08052 		mov	r2, #268435456
 490 0094 044B     		ldr	r3, .L45+4
 491 0096 1A60     		str	r2, [r3]
 492              		.syntax unified
 493              	@ 1096 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 494 0098 BFF34F8F 		dsb
 495              	@ 0 "" 2
 496              	@ 1096 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 497 009c BFF36F8F 		isb
 498              	@ 0 "" 2
 499              		.thumb
 500              		.syntax unified
 501              	.L39:
 502 00a0 38BD     		pop	{r3, r4, r5, pc}
 503              	.LVL48:
 504              	.L46:
 505 00a2 00BF     		.align	2
 506              	.L45:
 507 00a4 00000000 		.word	.LANCHOR0
 508 00a8 04ED00E0 		.word	-536810236
 509              		.cfi_endproc
 510              	.LFE727:
 511              		.size	prvAddNewTaskToReadyList, .-prvAddNewTaskToReadyList
 512              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 513              		.align	2
 514              		.thumb
 515              		.thumb_func
 516              		.type	prvCheckTasksWaitingTermination, %function
 517              	prvCheckTasksWaitingTermination:
 518              	.LFB761:
3480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 519              		.loc 1 3480 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 0
 522              		@ frame_needed = 0, uses_anonymous_args = 0
 523 0000 38B5     		push	{r3, r4, r5, lr}
 524              		.cfi_def_cfa_offset 16
 525              		.cfi_offset 3, -16
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 80


 526              		.cfi_offset 4, -12
 527              		.cfi_offset 5, -8
 528              		.cfi_offset 14, -4
 529              	.LBB96:
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 530              		.loc 1 3490 0
 531 0002 17E0     		b	.L48
 532              	.L49:
3492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 533              		.loc 1 3492 0
 534 0004 FFF7FEFF 		bl	vPortEnterCritical
 535              	.LVL49:
3494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 536              		.loc 1 3494 0
 537 0008 0D4C     		ldr	r4, .L51
 538 000a D4F8F030 		ldr	r3, [r4, #240]
 539 000e DD68     		ldr	r5, [r3, #12]
 540              	.LVL50:
3495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 541              		.loc 1 3495 0
 542 0010 281D     		adds	r0, r5, #4
 543 0012 FFF7FEFF 		bl	uxListRemove
 544              	.LVL51:
3496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 545              		.loc 1 3496 0
 546 0016 D4F8FC30 		ldr	r3, [r4, #252]
 547 001a 013B     		subs	r3, r3, #1
 548 001c C4F8FC30 		str	r3, [r4, #252]
3497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 549              		.loc 1 3497 0
 550 0020 D4F81031 		ldr	r3, [r4, #272]
 551 0024 013B     		subs	r3, r3, #1
 552 0026 C4F81031 		str	r3, [r4, #272]
3499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 553              		.loc 1 3499 0
 554 002a FFF7FEFF 		bl	vPortExitCritical
 555              	.LVL52:
3501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 556              		.loc 1 3501 0
 557 002e 2846     		mov	r0, r5
 558 0030 FFF7FEFF 		bl	prvDeleteTCB
 559              	.LVL53:
 560              	.L48:
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 561              		.loc 1 3490 0
 562 0034 024B     		ldr	r3, .L51
 563 0036 D3F81031 		ldr	r3, [r3, #272]
 564 003a 002B     		cmp	r3, #0
 565 003c E2D1     		bne	.L49
 566              	.LBE96:
3505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 567              		.loc 1 3505 0
 568 003e 38BD     		pop	{r3, r4, r5, pc}
 569              	.L52:
 570              		.align	2
 571              	.L51:
 572 0040 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 81


 573              		.cfi_endproc
 574              	.LFE761:
 575              		.size	prvCheckTasksWaitingTermination, .-prvCheckTasksWaitingTermination
 576              		.section	.text.prvIdleTask,"ax",%progbits
 577              		.align	2
 578              		.thumb
 579              		.thumb_func
 580              		.type	prvIdleTask, %function
 581              	prvIdleTask:
 582              	.LFB757:
3236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop warnings. */
 583              		.loc 1 3236 0
 584              		.cfi_startproc
 585              		@ Volatile: function does not return.
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588              	.LVL54:
 589 0000 08B5     		push	{r3, lr}
 590              		.cfi_def_cfa_offset 8
 591              		.cfi_offset 3, -8
 592              		.cfi_offset 14, -4
 593              	.LVL55:
 594              	.L54:
3252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 595              		.loc 1 3252 0
 596 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 597              	.LVL56:
3275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 598              		.loc 1 3275 0
 599 0006 064B     		ldr	r3, .L57
 600 0008 1B6B     		ldr	r3, [r3, #48]
 601 000a 012B     		cmp	r3, #1
 602 000c F9D9     		bls	.L54
3277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 603              		.loc 1 3277 0
 604 000e 4FF08052 		mov	r2, #268435456
 605 0012 044B     		ldr	r3, .L57+4
 606 0014 1A60     		str	r2, [r3]
 607              		.syntax unified
 608              	@ 3277 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 609 0016 BFF34F8F 		dsb
 610              	@ 0 "" 2
 611              	@ 3277 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 612 001a BFF36F8F 		isb
 613              	@ 0 "" 2
 614              		.thumb
 615              		.syntax unified
 616 001e F0E7     		b	.L54
 617              	.L58:
 618              		.align	2
 619              	.L57:
 620 0020 00000000 		.word	.LANCHOR0
 621 0024 04ED00E0 		.word	-536810236
 622              		.cfi_endproc
 623              	.LFE757:
 624              		.size	prvIdleTask, .-prvIdleTask
 625              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 82


 626              		.align	2
 627              		.thumb
 628              		.thumb_func
 629              		.type	prvAddCurrentTaskToDelayedList, %function
 630              	prvAddCurrentTaskToDelayedList:
 631              	.LFB773:
3761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xReturn;
3770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* A critical section is not required as this is not called from
3772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		individual execution thread. */
3774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = pxCurrentTCB;
3775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
3787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
3801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
3808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 83


3812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
3815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
3819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		needed as interrupts can no longer use mutexes? */
3820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
3826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
3829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				not being used for anything else. */
3830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
3831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
3833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
3840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				to be moved into a new list. */
3841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
3842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority );
3846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
3848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
3855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Just inherit the priority. */
3859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
3863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Inheritance occurred. */
3865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
3866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 84


3869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
3870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The base priority of the mutex holder is lower than the
3872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority of the task attempting to take the mutex, but the
3873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					current priority of the mutex holder is not lower than the
3874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority of the task attempting to take the mutex.
3875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					Therefore the mutex holder must have already inherited a
3876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority, but inheritance would have occurred if that had
3877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					not been the case. */
3878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xReturn = pdTRUE;
3879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
3895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
3900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
3907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
3908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
3909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			be the running state task. */
3910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
3911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
3913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
3915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task? */
3916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
3917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
3919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
3920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
3922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
3923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
3924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					holding task then it must be the running state task.  Remove
3925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the holding task from the ready list. */
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 85


3926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
3931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
3936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					new	ready list. */
3937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
3938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
3939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
3941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					any other purpose if this task is running, and it must be
3942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					running to give back the mutex. */
3943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
3947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					This is only actually required in the corner case whereby
3948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
3949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					in an order different to that in which they were taken.
3950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					If a context switch did not occur when the first mutex was
3951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
3952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					switch should occur when the last mutex is returned whether
3953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					a task is waiting on it or not. */
3954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xReturn = pdTRUE;
3955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
3975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
3980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 86


3983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
3984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
3988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			one mutex. */
3989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Determine the priority to which the priority of the task that
3992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
3993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			holding task's base priority and the priority of the highest
3994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			priority task that is waiting to obtain the mutex. */
3995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
3996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
3998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
4002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Does the priority need to change? */
4005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
4006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
4008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				simplification in the priority inheritance implementation.  If
4009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
4010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
4011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
4012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If a task has timed out because it already holds the
4014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
4015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					its own priority. */
4016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
4017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Disinherit the priority, remembering the previous
4019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority to facilitate determining the subject task's
4020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					state. */
4021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
4023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
4024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Only reset the event list item value if the value is not
4026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					being used for anything else. */
4027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
4028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
4030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If the running task is not the task that holds the mutex
4037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					then the task that holds the mutex could be in either the
4038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					from its current state list if it is in the Ready state as
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 87


4040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the task's priority is going to change and there is one
4041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					Ready list per priority. */
4042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
4043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						else
4049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
4054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
4077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskEnterCritical( void )
4082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portDISABLE_INTERRUPTS();
4084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
4090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
4091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
4093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
4094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			critical section. */
4095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 88


4097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portASSERT_IF_IN_ISR();
4098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskExitCritical( void )
4112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
4118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portENABLE_INTERRUPTS();
4122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	size_t x;
4147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Start by copying the entire string. */
4149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
4150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		printed out. */
4153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 89


4154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pcBuffer[ x ] = ' ';
4156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Terminate. */
4159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pcBuffer[ x ] = 0x00;
4160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Return the new end of string. */
4162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return &( pcBuffer[ x ] );
4163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	char cStatus;
4175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/*
4177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * PLEASE NOTE:
4178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * scheduler.
4182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
4185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * displays task names, states and stack usage.
4186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
4188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
4191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * snprintf() implementation!).
4194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * through a call to vTaskList().
4198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 */
4199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		function is executing. */
4206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		equate to NULL. */
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 90


4211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Generate the (binary) data. */
4216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					default:			/* Should not get here, but it is included
4239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										to prevent static checking errors. */
4240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										cStatus = 0x00;
4241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				can be printed in tabular form more easily. */
4246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Write the rest of the string. */
4249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
4251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
4265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 91


4268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
4279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/*
4281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * PLEASE NOTE:
4282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * scheduler.
4286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * in both absolute and percentage terms.
4291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * a full snprintf() implementation!).
4299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 */
4304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		function is executing. */
4310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		equate to NULL. */
4315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Generate the (binary) data. */
4320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* For percentage calculations. */
4323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ulTotalTime /= 100UL;
4324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 92


4325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Avoid divide by zero errors. */
4326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ulTotalTime > 0 )
4327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Write the task name to the string, padding with
4337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					spaces so it can be printed in tabular form more
4338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					easily. */
4339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#else
4348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							printf() library can be used. */
4351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#endif
4354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* If the percentage is zero here then the task has
4358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						consumed less than 1% of the total run time. */
4359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#else
4364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							printf() library can be used. */
4367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#endif
4370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer );
4373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 93


4382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
4395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t uxReturn;
4396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	queues and semaphores. */
4401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return uxReturn;
4404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
4405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvTaskIncrementMutexHeldCount( void )
4410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return pxCurrentTCB;
4419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
4422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulReturn;
4429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 94


4439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					section (some will yield immediately, others wait until the
4445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					critical section exits) - but it is not something that
4446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					application code should ever do. */
4447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portYIELD_WITHIN_API();
4448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ulReturn != 0UL )
4467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
4475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return ulReturn;
4487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 95


4496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
4497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				clear the value to zero. */
4506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					section (some will yield immediately, others wait until the
4518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					critical section exits) - but it is not something that
4519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					application code should ever do. */
4520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portYIELD_WITHIN_API();
4521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pulNotificationValue != NULL )
4539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Output the current notification value, which may or may not
4541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				have changed. */
4542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			unblocked because of a timeout. */
4549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A notification was not received. */
4552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFALSE;
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 96


4553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A notification was already pending or a notification was
4557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				received while the task was waiting. */
4558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
4560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			switch( eAction )
4595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetBits	:
4597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eIncrement	:
4601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithOverwrite	:
4605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 97


4610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The value could not be written to the task. */
4616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xReturn = pdFAIL;
4617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eNoAction:
4621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task is being notified without its notify value being
4622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					updated. */
4623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY();
4627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			notification then unblock it now. */
4630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task should not have been on an event list. */
4636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					because it will automatically get reset to a new value when
4645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					tickless idling is used it might be more important to enter
4647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					earliest possible time. */
4650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
4653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The notified task has a priority above the currently
4657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					executing task so a yield is required. */
4658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 98


4667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
4683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
4704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			switch( eAction )
4720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetBits	:
4722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 99


4724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eIncrement	:
4726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithOverwrite	:
4730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The value could not be written to the task. */
4741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xReturn = pdFAIL;
4742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eNoAction :
4746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task is being notified without its notify value being
4747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					updated. */
4748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			notification then unblock it now. */
4755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task should not have been on an event list. */
4758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The notified task has a priority above the currently
4775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					executing task so a yield is required. */
4776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 100


4781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter to an ISR
4784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						safe FreeRTOS function. */
4785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
4786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
4805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
4807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
4827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 101


4838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			semaphore. */
4839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
4840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
4842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			notification then unblock it now. */
4845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task should not have been on an event list. */
4848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The notified task has a priority above the currently
4865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					executing task so a yield is required. */
4866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter in an ISR
4874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						safe FreeRTOS function. */
4875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
4876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
4894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 102


4895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
4896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
4897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
4899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		its notification state cleared. */
4900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
4901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
4905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
4908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFAIL;
4912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
4924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 632              		.loc 1 4924 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 636              	.LVL57:
 637 0000 70B5     		push	{r4, r5, r6, lr}
 638              		.cfi_def_cfa_offset 16
 639              		.cfi_offset 4, -16
 640              		.cfi_offset 5, -12
 641              		.cfi_offset 6, -8
 642              		.cfi_offset 14, -4
 643 0002 0446     		mov	r4, r0
 644 0004 0E46     		mov	r6, r1
4925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTimeToWake;
4926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 645              		.loc 1 4926 0
 646 0006 174B     		ldr	r3, .L64
 647 0008 D3F81451 		ldr	r5, [r3, #276]
 648              	.LVL58:
4927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
4929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
4931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
4932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		when the task leaves the Blocked state. */
4933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
4934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 103


4935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
4936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
4938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	as the same list item is used for both lists. */
4939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 649              		.loc 1 4939 0
 650 000c D3F80001 		ldr	r0, [r3, #256]
 651              	.LVL59:
 652 0010 0430     		adds	r0, r0, #4
 653 0012 FFF7FEFF 		bl	uxListRemove
 654              	.LVL60:
4940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
4942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		check, and the port reset macro can be called directly. */
4943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
4944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
4946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
4948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
4951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 655              		.loc 1 4952 0
 656 0016 B4F1FF3F 		cmp	r4, #-1
 657 001a 07D1     		bne	.L60
 658              		.loc 1 4952 0 is_stmt 0 discriminator 1
 659 001c 36B1     		cbz	r6, .L60
4953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
4955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
4956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			indefinitely. */
4957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 660              		.loc 1 4957 0 is_stmt 1
 661 001e 1148     		ldr	r0, .L64
 662 0020 D0F80011 		ldr	r1, [r0, #256]
 663 0024 0431     		adds	r1, r1, #4
 664 0026 FFF7FEFF 		bl	vListInsertEnd
 665              	.LVL61:
 666 002a 70BD     		pop	{r4, r5, r6, pc}
 667              	.LVL62:
 668              	.L60:
4958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
4962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
4963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			kernel will manage it correctly. */
4964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 669              		.loc 1 4964 0
 670 002c 2C44     		add	r4, r4, r5
 671              	.LVL63:
4965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
4967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 672              		.loc 1 4967 0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 104


 673 002e 0D4B     		ldr	r3, .L64
 674 0030 D3F80031 		ldr	r3, [r3, #256]
 675 0034 5C60     		str	r4, [r3, #4]
4968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 676              		.loc 1 4969 0
 677 0036 A542     		cmp	r5, r4
 678 0038 08D9     		bls	.L62
4970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
4972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				list. */
4973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 679              		.loc 1 4973 0
 680 003a 0A4B     		ldr	r3, .L64
 681 003c D3F8F800 		ldr	r0, [r3, #248]
 682 0040 D3F80011 		ldr	r1, [r3, #256]
 683 0044 0431     		adds	r1, r1, #4
 684 0046 FFF7FEFF 		bl	vListInsert
 685              	.LVL64:
 686 004a 70BD     		pop	{r4, r5, r6, pc}
 687              	.LVL65:
 688              	.L62:
4974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
4978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is used. */
4979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 689              		.loc 1 4979 0
 690 004c 054D     		ldr	r5, .L64
 691              	.LVL66:
 692 004e A86A     		ldr	r0, [r5, #40]
 693 0050 D5F80011 		ldr	r1, [r5, #256]
 694 0054 0431     		adds	r1, r1, #4
 695 0056 FFF7FEFF 		bl	vListInsert
 696              	.LVL67:
4980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
4982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
4983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				needs to be updated too. */
4984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
 697              		.loc 1 4984 0
 698 005a EB6A     		ldr	r3, [r5, #44]
 699 005c 9C42     		cmp	r4, r3
 700 005e 00D2     		bcs	.L59
4985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
 701              		.loc 1 4986 0
 702 0060 EC62     		str	r4, [r5, #44]
 703              	.L59:
 704 0062 70BD     		pop	{r4, r5, r6, pc}
 705              	.LVL68:
 706              	.L65:
 707              		.align	2
 708              	.L64:
 709 0064 00000000 		.word	.LANCHOR0
 710              		.cfi_endproc
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 105


 711              	.LFE773:
 712              		.size	prvAddCurrentTaskToDelayedList, .-prvAddCurrentTaskToDelayedList
 713              		.section	.text.xTaskCreate,"ax",%progbits
 714              		.align	2
 715              		.global	xTaskCreate
 716              		.thumb
 717              		.thumb_func
 718              		.type	xTaskCreate, %function
 719              	xTaskCreate:
 720              	.LFB725:
 738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 721              		.loc 1 738 0
 722              		.cfi_startproc
 723              		@ args = 8, pretend = 0, frame = 0
 724              		@ frame_needed = 0, uses_anonymous_args = 0
 725              	.LVL69:
 726 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 727              		.cfi_def_cfa_offset 28
 728              		.cfi_offset 4, -28
 729              		.cfi_offset 5, -24
 730              		.cfi_offset 6, -20
 731              		.cfi_offset 7, -16
 732              		.cfi_offset 8, -12
 733              		.cfi_offset 9, -8
 734              		.cfi_offset 14, -4
 735 0004 85B0     		sub	sp, sp, #20
 736              		.cfi_def_cfa_offset 48
 737 0006 0646     		mov	r6, r0
 738 0008 0F46     		mov	r7, r1
 739 000a 1546     		mov	r5, r2
 740 000c 9846     		mov	r8, r3
 741              	.LBB97:
 772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 742              		.loc 1 772 0
 743 000e 9000     		lsls	r0, r2, #2
 744              	.LVL70:
 745 0010 FFF7FEFF 		bl	pvPortMalloc
 746              	.LVL71:
 774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 747              		.loc 1 774 0
 748 0014 60B1     		cbz	r0, .L70
 749 0016 8146     		mov	r9, r0
 777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 750              		.loc 1 777 0
 751 0018 6020     		movs	r0, #96
 752              	.LVL72:
 753 001a FFF7FEFF 		bl	pvPortMalloc
 754              	.LVL73:
 779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 755              		.loc 1 779 0
 756 001e 0446     		mov	r4, r0
 757 0020 10B1     		cbz	r0, .L68
 782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 758              		.loc 1 782 0
 759 0022 C0F83090 		str	r9, [r0, #48]
 760 0026 04E0     		b	.L67
 761              	.L68:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 106


 788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 762              		.loc 1 788 0
 763 0028 4846     		mov	r0, r9
 764              	.LVL74:
 765 002a FFF7FEFF 		bl	vPortFree
 766              	.LVL75:
 767 002e 00E0     		b	.L67
 768              	.LVL76:
 769              	.L70:
 793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 770              		.loc 1 793 0
 771 0030 0024     		movs	r4, #0
 772              	.LVL77:
 773              	.L67:
 774              	.LBE97:
 798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 775              		.loc 1 798 0
 776 0032 8CB1     		cbz	r4, .L71
 808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 777              		.loc 1 808 0
 778 0034 0023     		movs	r3, #0
 779 0036 0393     		str	r3, [sp, #12]
 780 0038 0294     		str	r4, [sp, #8]
 781 003a 0D9B     		ldr	r3, [sp, #52]
 782 003c 0193     		str	r3, [sp, #4]
 783 003e 0C9B     		ldr	r3, [sp, #48]
 784 0040 0093     		str	r3, [sp]
 785 0042 4346     		mov	r3, r8
 786 0044 2A46     		mov	r2, r5
 787 0046 3946     		mov	r1, r7
 788 0048 3046     		mov	r0, r6
 789 004a FFF7FEFF 		bl	prvInitialiseNewTask
 790              	.LVL78:
 809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
 791              		.loc 1 809 0
 792 004e 2046     		mov	r0, r4
 793 0050 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 794              	.LVL79:
 810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 795              		.loc 1 810 0
 796 0054 0120     		movs	r0, #1
 797 0056 01E0     		b	.L69
 798              	.LVL80:
 799              	.L71:
 814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 800              		.loc 1 814 0
 801 0058 4FF0FF30 		mov	r0, #-1
 802              	.L69:
 803              	.LVL81:
 818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 804              		.loc 1 818 0
 805 005c 05B0     		add	sp, sp, #20
 806              		.cfi_def_cfa_offset 28
 807              		@ sp needed
 808 005e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 809              		.cfi_endproc
 810              	.LFE725:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 107


 811              		.size	xTaskCreate, .-xTaskCreate
 812 0062 00BF     		.section	.text.vTaskDelete,"ax",%progbits
 813              		.align	2
 814              		.global	vTaskDelete
 815              		.thumb
 816              		.thumb_func
 817              		.type	vTaskDelete, %function
 818              	vTaskDelete:
 819              	.LFB728:
1113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 820              		.loc 1 1113 0
 821              		.cfi_startproc
 822              		@ args = 0, pretend = 0, frame = 0
 823              		@ frame_needed = 0, uses_anonymous_args = 0
 824              	.LVL82:
 825 0000 70B5     		push	{r4, r5, r6, lr}
 826              		.cfi_def_cfa_offset 16
 827              		.cfi_offset 4, -16
 828              		.cfi_offset 5, -12
 829              		.cfi_offset 6, -8
 830              		.cfi_offset 14, -4
 831 0002 0446     		mov	r4, r0
1116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 832              		.loc 1 1116 0
 833 0004 FFF7FEFF 		bl	vPortEnterCritical
 834              	.LVL83:
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 835              		.loc 1 1120 0
 836 0008 14B9     		cbnz	r4, .L74
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 837              		.loc 1 1120 0 is_stmt 0 discriminator 1
 838 000a 274B     		ldr	r3, .L82
 839 000c D3F80041 		ldr	r4, [r3, #256]
 840              	.LVL84:
 841              	.L74:
1123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 842              		.loc 1 1123 0 is_stmt 1 discriminator 4
 843 0010 261D     		adds	r6, r4, #4
 844 0012 3046     		mov	r0, r6
 845 0014 FFF7FEFF 		bl	uxListRemove
 846              	.LVL85:
1133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 847              		.loc 1 1133 0 discriminator 4
 848 0018 A36A     		ldr	r3, [r4, #40]
 849 001a 1BB1     		cbz	r3, .L75
1135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 850              		.loc 1 1135 0
 851 001c 04F11800 		add	r0, r4, #24
 852 0020 FFF7FEFF 		bl	uxListRemove
 853              	.LVL86:
 854              	.L75:
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 855              		.loc 1 1146 0
 856 0024 204B     		ldr	r3, .L82
 857 0026 D3F80821 		ldr	r2, [r3, #264]
 858 002a 0132     		adds	r2, r2, #1
 859 002c C3F80821 		str	r2, [r3, #264]
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 108


1148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 860              		.loc 1 1148 0
 861 0030 D3F80031 		ldr	r3, [r3, #256]
 862 0034 9C42     		cmp	r4, r3
 863 0036 0BD1     		bne	.L76
1155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 864              		.loc 1 1155 0
 865 0038 1B4D     		ldr	r5, .L82
 866 003a 3146     		mov	r1, r6
 867 003c 05F1E400 		add	r0, r5, #228
 868 0040 FFF7FEFF 		bl	vListInsertEnd
 869              	.LVL87:
1160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 870              		.loc 1 1160 0
 871 0044 D5F81031 		ldr	r3, [r5, #272]
 872 0048 0133     		adds	r3, r3, #1
 873 004a C5F81031 		str	r3, [r5, #272]
 874 004e 0AE0     		b	.L77
 875              	.L76:
1171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 876              		.loc 1 1171 0
 877 0050 154A     		ldr	r2, .L82
 878 0052 D2F8FC30 		ldr	r3, [r2, #252]
 879 0056 013B     		subs	r3, r3, #1
 880 0058 C2F8FC30 		str	r3, [r2, #252]
1172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 881              		.loc 1 1172 0
 882 005c 2046     		mov	r0, r4
 883 005e FFF7FEFF 		bl	prvDeleteTCB
 884              	.LVL88:
1176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 885              		.loc 1 1176 0
 886 0062 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 887              	.LVL89:
 888              	.L77:
1181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 889              		.loc 1 1181 0
 890 0066 FFF7FEFF 		bl	vPortExitCritical
 891              	.LVL90:
1185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 892              		.loc 1 1185 0
 893 006a 0F4B     		ldr	r3, .L82
 894 006c D3F80431 		ldr	r3, [r3, #260]
 895 0070 CBB1     		cbz	r3, .L73
1187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 896              		.loc 1 1187 0
 897 0072 0D4B     		ldr	r3, .L82
 898 0074 D3F80031 		ldr	r3, [r3, #256]
 899 0078 9C42     		cmp	r4, r3
 900 007a 14D1     		bne	.L73
1189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
 901              		.loc 1 1189 0
 902 007c 0A4B     		ldr	r3, .L82
 903 007e D3F81831 		ldr	r3, [r3, #280]
 904 0082 43B1     		cbz	r3, .L79
 905              	.LBB98:
 906              	.LBB99:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 109


 907              		.loc 2 156 0
 908              		.syntax unified
 909              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 910 0084 4FF02003 			mov r3, #32												
 911 0088 83F31188 		msr basepri, r3											
 912 008c BFF36F8F 		isb														
 913 0090 BFF34F8F 		dsb														
 914              	
 915              	@ 0 "" 2
 916              	.LVL91:
 917              		.thumb
 918              		.syntax unified
 919              	.L80:
 920 0094 FEE7     		b	.L80
 921              	.L79:
 922              	.LBE99:
 923              	.LBE98:
1190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 924              		.loc 1 1190 0
 925 0096 4FF08052 		mov	r2, #268435456
 926 009a 044B     		ldr	r3, .L82+4
 927 009c 1A60     		str	r2, [r3]
 928              		.syntax unified
 929              	@ 1190 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 930 009e BFF34F8F 		dsb
 931              	@ 0 "" 2
 932              	@ 1190 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 933 00a2 BFF36F8F 		isb
 934              	@ 0 "" 2
 935              		.thumb
 936              		.syntax unified
 937              	.L73:
 938 00a6 70BD     		pop	{r4, r5, r6, pc}
 939              	.LVL92:
 940              	.L83:
 941              		.align	2
 942              	.L82:
 943 00a8 00000000 		.word	.LANCHOR0
 944 00ac 04ED00E0 		.word	-536810236
 945              		.cfi_endproc
 946              	.LFE728:
 947              		.size	vTaskDelete, .-vTaskDelete
 948              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 949              		.align	2
 950              		.global	uxTaskPriorityGet
 951              		.thumb
 952              		.thumb_func
 953              		.type	uxTaskPriorityGet, %function
 954              	uxTaskPriorityGet:
 955              	.LFB731:
1405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 956              		.loc 1 1405 0
 957              		.cfi_startproc
 958              		@ args = 0, pretend = 0, frame = 0
 959              		@ frame_needed = 0, uses_anonymous_args = 0
 960              	.LVL93:
 961 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 110


 962              		.cfi_def_cfa_offset 8
 963              		.cfi_offset 4, -8
 964              		.cfi_offset 14, -4
 965 0002 0446     		mov	r4, r0
1409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 966              		.loc 1 1409 0
 967 0004 FFF7FEFF 		bl	vPortEnterCritical
 968              	.LVL94:
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 969              		.loc 1 1413 0
 970 0008 14B9     		cbnz	r4, .L85
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 971              		.loc 1 1413 0 is_stmt 0 discriminator 1
 972 000a 044B     		ldr	r3, .L87
 973 000c D3F80041 		ldr	r4, [r3, #256]
 974              	.LVL95:
 975              	.L85:
1414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 976              		.loc 1 1414 0 is_stmt 1 discriminator 4
 977 0010 E46A     		ldr	r4, [r4, #44]
 978              	.LVL96:
1416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 979              		.loc 1 1416 0 discriminator 4
 980 0012 FFF7FEFF 		bl	vPortExitCritical
 981              	.LVL97:
1419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 982              		.loc 1 1419 0 discriminator 4
 983 0016 2046     		mov	r0, r4
 984 0018 10BD     		pop	{r4, pc}
 985              	.LVL98:
 986              	.L88:
 987 001a 00BF     		.align	2
 988              	.L87:
 989 001c 00000000 		.word	.LANCHOR0
 990              		.cfi_endproc
 991              	.LFE731:
 992              		.size	uxTaskPriorityGet, .-uxTaskPriorityGet
 993              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 994              		.align	2
 995              		.global	uxTaskPriorityGetFromISR
 996              		.thumb
 997              		.thumb_func
 998              		.type	uxTaskPriorityGetFromISR, %function
 999              	uxTaskPriorityGetFromISR:
 1000              	.LFB732:
1427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 1001              		.loc 1 1427 0
 1002              		.cfi_startproc
 1003              		@ args = 0, pretend = 0, frame = 0
 1004              		@ frame_needed = 0, uses_anonymous_args = 0
 1005              	.LVL99:
 1006 0000 10B5     		push	{r4, lr}
 1007              		.cfi_def_cfa_offset 8
 1008              		.cfi_offset 4, -8
 1009              		.cfi_offset 14, -4
 1010 0002 0446     		mov	r4, r0
1447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 111


 1011              		.loc 1 1447 0
 1012 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1013              	.LVL100:
 1014              	.LBB100:
 1015              	.LBB101:
 157:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 158:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 159:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 160:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	isb														\n" \
 161:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	dsb														\n" \
 162:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 163:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	);
 164:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
 165:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 166:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 167:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 168:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 169:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 170:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 171:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile
 1016              		.loc 2 172 0
 1017              		.syntax unified
 1018              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1019 0008 EFF31183 			mrs r3, basepri											
 1020 000c 4FF02002 		mov r2, #32												
 1021 0010 82F31188 		msr basepri, r2											
 1022 0014 BFF36F8F 		isb														
 1023 0018 BFF34F8F 		dsb														
 1024              	
 1025              	@ 0 "" 2
 1026              		.thumb
 1027              		.syntax unified
 1028              	.LBE101:
 1029              	.LBE100:
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1030              		.loc 1 1453 0
 1031 001c 14B9     		cbnz	r4, .L90
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1032              		.loc 1 1453 0 is_stmt 0 discriminator 1
 1033 001e 034A     		ldr	r2, .L92
 1034 0020 D2F80041 		ldr	r4, [r2, #256]
 1035              	.LVL101:
 1036              	.L90:
1454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1037              		.loc 1 1454 0 is_stmt 1 discriminator 4
 1038 0024 E06A     		ldr	r0, [r4, #44]
 1039              	.LVL102:
 1040              	.LBB102:
 1041              	.LBB103:
 173:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 174:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 175:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 176:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 177:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	isb														\n" \
 178:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	dsb														\n" \
 179:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 112


 180:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	);
 181:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 182:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 183:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	warnings. */
 184:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 185:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
 186:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 187:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 188:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 189:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 190:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile
 1042              		.loc 2 190 0 discriminator 4
 1043              		.syntax unified
 1044              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1045 0026 83F31188 			msr basepri, r3	
 1046              	@ 0 "" 2
 1047              	.LVL103:
 1048              		.thumb
 1049              		.syntax unified
 1050              	.LBE103:
 1051              	.LBE102:
1459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1052              		.loc 1 1459 0 discriminator 4
 1053 002a 10BD     		pop	{r4, pc}
 1054              	.LVL104:
 1055              	.L93:
 1056              		.align	2
 1057              	.L92:
 1058 002c 00000000 		.word	.LANCHOR0
 1059              		.cfi_endproc
 1060              	.LFE732:
 1061              		.size	uxTaskPriorityGetFromISR, .-uxTaskPriorityGetFromISR
 1062              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1063              		.align	2
 1064              		.global	vTaskPrioritySet
 1065              		.thumb
 1066              		.thumb_func
 1067              		.type	vTaskPrioritySet, %function
 1068              	vTaskPrioritySet:
 1069              	.LFB733:
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 1070              		.loc 1 1467 0
 1071              		.cfi_startproc
 1072              		@ args = 0, pretend = 0, frame = 0
 1073              		@ frame_needed = 0, uses_anonymous_args = 0
 1074              	.LVL105:
1472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1075              		.loc 1 1472 0
 1076 0000 0629     		cmp	r1, #6
 1077 0002 08D9     		bls	.L95
 1078              	.LBB104:
 1079              	.LBB105:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1080              		.loc 2 156 0
 1081              		.syntax unified
 1082              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1083 0004 4FF02003 			mov r3, #32												
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 113


 1084 0008 83F31188 		msr basepri, r3											
 1085 000c BFF36F8F 		isb														
 1086 0010 BFF34F8F 		dsb														
 1087              	
 1088              	@ 0 "" 2
 1089              	.LVL106:
 1090              		.thumb
 1091              		.syntax unified
 1092              	.L96:
 1093 0014 FEE7     		b	.L96
 1094              	.L95:
 1095              	.LBE105:
 1096              	.LBE104:
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 1097              		.loc 1 1467 0
 1098 0016 70B5     		push	{r4, r5, r6, lr}
 1099              		.cfi_def_cfa_offset 16
 1100              		.cfi_offset 4, -16
 1101              		.cfi_offset 5, -12
 1102              		.cfi_offset 6, -8
 1103              		.cfi_offset 14, -4
 1104 0018 0446     		mov	r4, r0
 1105 001a 0D46     		mov	r5, r1
1475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1106              		.loc 1 1475 0
 1107 001c 0629     		cmp	r1, #6
 1108 001e 00D9     		bls	.L97
1477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1109              		.loc 1 1477 0
 1110 0020 0625     		movs	r5, #6
 1111              	.L97:
 1112              	.LVL107:
1484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1113              		.loc 1 1484 0
 1114 0022 FFF7FEFF 		bl	vPortEnterCritical
 1115              	.LVL108:
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1116              		.loc 1 1488 0
 1117 0026 14B9     		cbnz	r4, .L98
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1118              		.loc 1 1488 0 is_stmt 0 discriminator 1
 1119 0028 294B     		ldr	r3, .L112
 1120 002a D3F80041 		ldr	r4, [r3, #256]
 1121              	.LVL109:
 1122              	.L98:
1498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 1123              		.loc 1 1498 0 is_stmt 1 discriminator 4
 1124 002e E36A     		ldr	r3, [r4, #44]
 1125              	.LVL110:
1502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 1126              		.loc 1 1502 0 discriminator 4
 1127 0030 9D42     		cmp	r5, r3
 1128 0032 4AD0     		beq	.L99
1506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1129              		.loc 1 1506 0
 1130 0034 0CD9     		bls	.L100
1508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 114


 1131              		.loc 1 1508 0
 1132 0036 264A     		ldr	r2, .L112
 1133 0038 D2F80021 		ldr	r2, [r2, #256]
 1134 003c 9442     		cmp	r4, r2
 1135 003e 0ED0     		beq	.L107
1513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
 1136              		.loc 1 1513 0
 1137 0040 234A     		ldr	r2, .L112
 1138 0042 D2F80021 		ldr	r2, [r2, #256]
 1139 0046 D26A     		ldr	r2, [r2, #44]
 1140 0048 9542     		cmp	r5, r2
 1141 004a 0AD2     		bcs	.L108
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1142              		.loc 1 1470 0
 1143 004c 0026     		movs	r6, #0
 1144 004e 0BE0     		b	.L101
 1145              	.L100:
1529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1146              		.loc 1 1529 0
 1147 0050 1F4A     		ldr	r2, .L112
 1148 0052 D2F80021 		ldr	r2, [r2, #256]
 1149 0056 9442     		cmp	r4, r2
 1150 0058 05D0     		beq	.L109
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1151              		.loc 1 1470 0
 1152 005a 0026     		movs	r6, #0
 1153 005c 04E0     		b	.L101
 1154              	.L107:
 1155 005e 0026     		movs	r6, #0
 1156 0060 02E0     		b	.L101
 1157              	.L108:
1515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
 1158              		.loc 1 1515 0
 1159 0062 0126     		movs	r6, #1
 1160 0064 00E0     		b	.L101
 1161              	.L109:
1534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1162              		.loc 1 1534 0
 1163 0066 0126     		movs	r6, #1
 1164              	.L101:
 1165              	.LVL111:
1566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1166              		.loc 1 1566 0
 1167 0068 E562     		str	r5, [r4, #44]
1572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1168              		.loc 1 1572 0
 1169 006a A269     		ldr	r2, [r4, #24]
 1170 006c 002A     		cmp	r2, #0
 1171 006e 02DB     		blt	.L102
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1172              		.loc 1 1574 0
 1173 0070 C5F10705 		rsb	r5, r5, #7
 1174              	.LVL112:
 1175 0074 A561     		str	r5, [r4, #24]
 1176              	.L102:
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1177              		.loc 1 1585 0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 115


 1178 0076 6169     		ldr	r1, [r4, #20]
 1179 0078 03EB8303 		add	r3, r3, r3, lsl #2
 1180              	.LVL113:
 1181 007c 9A00     		lsls	r2, r3, #2
 1182 007e 154B     		ldr	r3, .L112+4
 1183 0080 1A44     		add	r2, r2, r3
 1184 0082 9142     		cmp	r1, r2
 1185 0084 01D1     		bne	.L110
 1186 0086 0123     		movs	r3, #1
 1187 0088 00E0     		b	.L103
 1188              	.L110:
 1189 008a 0023     		movs	r3, #0
 1190              	.L103:
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1191              		.loc 1 1585 0 is_stmt 0 discriminator 4
 1192 008c A3B1     		cbz	r3, .L104
1590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1193              		.loc 1 1590 0 is_stmt 1
 1194 008e 251D     		adds	r5, r4, #4
 1195 0090 2846     		mov	r0, r5
 1196 0092 FFF7FEFF 		bl	uxListRemove
 1197              	.LVL114:
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1198              		.loc 1 1601 0
 1199 0096 E36A     		ldr	r3, [r4, #44]
 1200 0098 0D4A     		ldr	r2, .L112
 1201 009a D2F80C21 		ldr	r2, [r2, #268]
 1202 009e 9342     		cmp	r3, r2
 1203 00a0 02D9     		bls	.L105
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1204              		.loc 1 1601 0 is_stmt 0 discriminator 1
 1205 00a2 0B4A     		ldr	r2, .L112
 1206 00a4 C2F80C31 		str	r3, [r2, #268]
 1207              	.L105:
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1208              		.loc 1 1601 0 discriminator 3
 1209 00a8 03EB8303 		add	r3, r3, r3, lsl #2
 1210 00ac 9A00     		lsls	r2, r3, #2
 1211 00ae 2946     		mov	r1, r5
 1212 00b0 0848     		ldr	r0, .L112+4
 1213 00b2 1044     		add	r0, r0, r2
 1214 00b4 FFF7FEFF 		bl	vListInsertEnd
 1215              	.LVL115:
 1216              	.L104:
1608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1217              		.loc 1 1608 0 is_stmt 1
 1218 00b8 3EB1     		cbz	r6, .L99
1610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1219              		.loc 1 1610 0
 1220 00ba 4FF08052 		mov	r2, #268435456
 1221 00be 064B     		ldr	r3, .L112+8
 1222 00c0 1A60     		str	r2, [r3]
 1223              		.syntax unified
 1224              	@ 1610 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1225 00c2 BFF34F8F 		dsb
 1226              	@ 0 "" 2
 1227              	@ 1610 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 116


 1228 00c6 BFF36F8F 		isb
 1229              	@ 0 "" 2
 1230              	.LVL116:
 1231              		.thumb
 1232              		.syntax unified
 1233              	.L99:
1622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1234              		.loc 1 1622 0
 1235 00ca FFF7FEFF 		bl	vPortExitCritical
 1236              	.LVL117:
 1237 00ce 70BD     		pop	{r4, r5, r6, pc}
 1238              	.LVL118:
 1239              	.L113:
 1240              		.align	2
 1241              	.L112:
 1242 00d0 00000000 		.word	.LANCHOR0
 1243 00d4 30000000 		.word	.LANCHOR0+48
 1244 00d8 04ED00E0 		.word	-536810236
 1245              		.cfi_endproc
 1246              	.LFE733:
 1247              		.size	vTaskPrioritySet, .-vTaskPrioritySet
 1248              		.section	.text.vTaskResume,"ax",%progbits
 1249              		.align	2
 1250              		.global	vTaskResume
 1251              		.thumb
 1252              		.thumb_func
 1253              		.type	vTaskResume, %function
 1254              	vTaskResume:
 1255              	.LFB736:
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1256              		.loc 1 1778 0
 1257              		.cfi_startproc
 1258              		@ args = 0, pretend = 0, frame = 0
 1259              		@ frame_needed = 0, uses_anonymous_args = 0
 1260              	.LVL119:
1782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1261              		.loc 1 1782 0
 1262 0000 40B9     		cbnz	r0, .L115
 1263              	.LBB106:
 1264              	.LBB107:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1265              		.loc 2 156 0
 1266              		.syntax unified
 1267              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1268 0002 4FF02003 			mov r3, #32												
 1269 0006 83F31188 		msr basepri, r3											
 1270 000a BFF36F8F 		isb														
 1271 000e BFF34F8F 		dsb														
 1272              	
 1273              	@ 0 "" 2
 1274              	.LVL120:
 1275              		.thumb
 1276              		.syntax unified
 1277              	.L116:
 1278 0012 FEE7     		b	.L116
 1279              	.L115:
 1280              	.LBE107:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 117


 1281              	.LBE106:
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1282              		.loc 1 1778 0
 1283 0014 70B5     		push	{r4, r5, r6, lr}
 1284              		.cfi_def_cfa_offset 16
 1285              		.cfi_offset 4, -16
 1286              		.cfi_offset 5, -12
 1287              		.cfi_offset 6, -8
 1288              		.cfi_offset 14, -4
 1289 0016 0446     		mov	r4, r0
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1290              		.loc 1 1786 0
 1291 0018 88B3     		cbz	r0, .L114
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1292              		.loc 1 1786 0 is_stmt 0 discriminator 1
 1293 001a 194B     		ldr	r3, .L121
 1294 001c D3F80031 		ldr	r3, [r3, #256]
 1295 0020 9842     		cmp	r0, r3
 1296 0022 2CD0     		beq	.L114
1788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 1297              		.loc 1 1788 0 is_stmt 1
 1298 0024 FFF7FEFF 		bl	vPortEnterCritical
 1299              	.LVL121:
1790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1300              		.loc 1 1790 0
 1301 0028 2046     		mov	r0, r4
 1302 002a FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1303              	.LVL122:
 1304 002e 20B3     		cbz	r0, .L118
1796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1305              		.loc 1 1796 0
 1306 0030 261D     		adds	r6, r4, #4
 1307 0032 3046     		mov	r0, r6
 1308 0034 FFF7FEFF 		bl	uxListRemove
 1309              	.LVL123:
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1310              		.loc 1 1797 0
 1311 0038 E36A     		ldr	r3, [r4, #44]
 1312 003a 114A     		ldr	r2, .L121
 1313 003c D2F80C21 		ldr	r2, [r2, #268]
 1314 0040 9342     		cmp	r3, r2
 1315 0042 02D9     		bls	.L119
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1316              		.loc 1 1797 0 is_stmt 0 discriminator 1
 1317 0044 0E4A     		ldr	r2, .L121
 1318 0046 C2F80C31 		str	r3, [r2, #268]
 1319              	.L119:
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1320              		.loc 1 1797 0 discriminator 3
 1321 004a 0D4D     		ldr	r5, .L121
 1322 004c 05F13000 		add	r0, r5, #48
 1323 0050 03EB8303 		add	r3, r3, r3, lsl #2
 1324 0054 9A00     		lsls	r2, r3, #2
 1325 0056 3146     		mov	r1, r6
 1326 0058 1044     		add	r0, r0, r2
 1327 005a FFF7FEFF 		bl	vListInsertEnd
 1328              	.LVL124:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 118


1800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1329              		.loc 1 1800 0 is_stmt 1 discriminator 3
 1330 005e E26A     		ldr	r2, [r4, #44]
 1331 0060 D5F80031 		ldr	r3, [r5, #256]
 1332 0064 DB6A     		ldr	r3, [r3, #44]
 1333 0066 9A42     		cmp	r2, r3
 1334 0068 07D3     		bcc	.L118
1805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1335              		.loc 1 1805 0
 1336 006a 4FF08052 		mov	r2, #268435456
 1337 006e 054B     		ldr	r3, .L121+4
 1338 0070 1A60     		str	r2, [r3]
 1339              		.syntax unified
 1340              	@ 1805 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1341 0072 BFF34F8F 		dsb
 1342              	@ 0 "" 2
 1343              	@ 1805 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1344 0076 BFF36F8F 		isb
 1345              	@ 0 "" 2
 1346              		.thumb
 1347              		.syntax unified
 1348              	.L118:
1817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1349              		.loc 1 1817 0
 1350 007a FFF7FEFF 		bl	vPortExitCritical
 1351              	.LVL125:
 1352              	.L114:
 1353 007e 70BD     		pop	{r4, r5, r6, pc}
 1354              	.LVL126:
 1355              	.L122:
 1356              		.align	2
 1357              	.L121:
 1358 0080 00000000 		.word	.LANCHOR0
 1359 0084 04ED00E0 		.word	-536810236
 1360              		.cfi_endproc
 1361              	.LFE736:
 1362              		.size	vTaskResume, .-vTaskResume
 1363              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1364              		.align	2
 1365              		.global	xTaskResumeFromISR
 1366              		.thumb
 1367              		.thumb_func
 1368              		.type	xTaskResumeFromISR, %function
 1369              	xTaskResumeFromISR:
 1370              	.LFB737:
1832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1371              		.loc 1 1832 0
 1372              		.cfi_startproc
 1373              		@ args = 0, pretend = 0, frame = 0
 1374              		@ frame_needed = 0, uses_anonymous_args = 0
 1375              	.LVL127:
 1376 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1377              		.cfi_def_cfa_offset 24
 1378              		.cfi_offset 3, -24
 1379              		.cfi_offset 4, -20
 1380              		.cfi_offset 5, -16
 1381              		.cfi_offset 6, -12
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 119


 1382              		.cfi_offset 7, -8
 1383              		.cfi_offset 14, -4
 1384              	.LVL128:
1837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1385              		.loc 1 1837 0
 1386 0002 40B9     		cbnz	r0, .L124
 1387              	.LBB108:
 1388              	.LBB109:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1389              		.loc 2 156 0
 1390              		.syntax unified
 1391              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1392 0004 4FF02003 			mov r3, #32												
 1393 0008 83F31188 		msr basepri, r3											
 1394 000c BFF36F8F 		isb														
 1395 0010 BFF34F8F 		dsb														
 1396              	
 1397              	@ 0 "" 2
 1398              	.LVL129:
 1399              		.thumb
 1400              		.syntax unified
 1401              	.L125:
 1402 0014 FEE7     		b	.L125
 1403              	.L124:
 1404 0016 0446     		mov	r4, r0
 1405              	.LBE109:
 1406              	.LBE108:
1855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1407              		.loc 1 1855 0
 1408 0018 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1409              	.LVL130:
 1410              	.LBB110:
 1411              	.LBB111:
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1412              		.loc 2 172 0
 1413              		.syntax unified
 1414              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1415 001c EFF31187 			mrs r7, basepri											
 1416 0020 4FF02003 		mov r3, #32												
 1417 0024 83F31188 		msr basepri, r3											
 1418 0028 BFF36F8F 		isb														
 1419 002c BFF34F8F 		dsb														
 1420              	
 1421              	@ 0 "" 2
 1422              		.thumb
 1423              		.syntax unified
 1424              	.LBE111:
 1425              	.LBE110:
1859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 1426              		.loc 1 1859 0
 1427 0030 2046     		mov	r0, r4
 1428 0032 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1429              	.LVL131:
 1430 0036 50B3     		cbz	r0, .L130
1864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1431              		.loc 1 1864 0
 1432 0038 174B     		ldr	r3, .L133
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 120


 1433 003a D3F81831 		ldr	r3, [r3, #280]
 1434 003e FBB9     		cbnz	r3, .L127
1868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1435              		.loc 1 1868 0
 1436 0040 E26A     		ldr	r2, [r4, #44]
 1437 0042 154B     		ldr	r3, .L133
 1438 0044 D3F80031 		ldr	r3, [r3, #256]
 1439 0048 DB6A     		ldr	r3, [r3, #44]
 1440 004a 9A42     		cmp	r2, r3
 1441 004c 01D2     		bcs	.L131
1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1442              		.loc 1 1833 0
 1443 004e 0025     		movs	r5, #0
 1444 0050 00E0     		b	.L128
 1445              	.L131:
1870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1446              		.loc 1 1870 0
 1447 0052 0125     		movs	r5, #1
 1448              	.L128:
 1449              	.LVL132:
1877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1450              		.loc 1 1877 0
 1451 0054 261D     		adds	r6, r4, #4
 1452 0056 3046     		mov	r0, r6
 1453 0058 FFF7FEFF 		bl	uxListRemove
 1454              	.LVL133:
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1455              		.loc 1 1878 0
 1456 005c E36A     		ldr	r3, [r4, #44]
 1457 005e 0E4A     		ldr	r2, .L133
 1458 0060 D2F80C21 		ldr	r2, [r2, #268]
 1459 0064 9342     		cmp	r3, r2
 1460 0066 02D9     		bls	.L129
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1461              		.loc 1 1878 0 is_stmt 0 discriminator 1
 1462 0068 0B4A     		ldr	r2, .L133
 1463 006a C2F80C31 		str	r3, [r2, #268]
 1464              	.L129:
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1465              		.loc 1 1878 0 discriminator 3
 1466 006e 03EB8303 		add	r3, r3, r3, lsl #2
 1467 0072 9A00     		lsls	r2, r3, #2
 1468 0074 3146     		mov	r1, r6
 1469 0076 0948     		ldr	r0, .L133+4
 1470 0078 1044     		add	r0, r0, r2
 1471 007a FFF7FEFF 		bl	vListInsertEnd
 1472              	.LVL134:
 1473 007e 07E0     		b	.L126
 1474              	.LVL135:
 1475              	.L127:
1885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1476              		.loc 1 1885 0 is_stmt 1
 1477 0080 04F11801 		add	r1, r4, #24
 1478 0084 0648     		ldr	r0, .L133+8
 1479 0086 FFF7FEFF 		bl	vListInsertEnd
 1480              	.LVL136:
1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 121


 1481              		.loc 1 1833 0
 1482 008a 0025     		movs	r5, #0
 1483 008c 00E0     		b	.L126
 1484              	.L130:
 1485 008e 0025     		movs	r5, #0
 1486              	.LVL137:
 1487              	.L126:
 1488              	.LBB112:
 1489              	.LBB113:
 1490              		.loc 2 190 0
 1491              		.syntax unified
 1492              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1493 0090 87F31188 			msr basepri, r7	
 1494              	@ 0 "" 2
 1495              	.LVL138:
 1496              		.thumb
 1497              		.syntax unified
 1498              	.LBE113:
 1499              	.LBE112:
1896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1500              		.loc 1 1896 0
 1501 0094 2846     		mov	r0, r5
 1502 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1503              	.LVL139:
 1504              	.L134:
 1505              		.align	2
 1506              	.L133:
 1507 0098 00000000 		.word	.LANCHOR0
 1508 009c 30000000 		.word	.LANCHOR0+48
 1509 00a0 14000000 		.word	.LANCHOR0+20
 1510              		.cfi_endproc
 1511              	.LFE737:
 1512              		.size	xTaskResumeFromISR, .-xTaskResumeFromISR
 1513              		.section	.text.vTaskStartScheduler,"ax",%progbits
 1514              		.align	2
 1515              		.global	vTaskStartScheduler
 1516              		.thumb
 1517              		.thumb_func
 1518              		.type	vTaskStartScheduler, %function
 1519              	vTaskStartScheduler:
 1520              	.LFB738:
1902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
 1521              		.loc 1 1902 0
 1522              		.cfi_startproc
 1523              		@ args = 0, pretend = 0, frame = 0
 1524              		@ frame_needed = 0, uses_anonymous_args = 0
 1525 0000 00B5     		push	{lr}
 1526              		.cfi_def_cfa_offset 4
 1527              		.cfi_offset 14, -4
 1528 0002 83B0     		sub	sp, sp, #12
 1529              		.cfi_def_cfa_offset 16
1935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								configIDLE_TASK_NAME,
 1530              		.loc 1 1935 0
 1531 0004 194B     		ldr	r3, .L141
 1532 0006 0193     		str	r3, [sp, #4]
 1533 0008 0023     		movs	r3, #0
 1534 000a 0093     		str	r3, [sp]
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 122


 1535 000c 8022     		movs	r2, #128
 1536 000e 1849     		ldr	r1, .L141+4
 1537 0010 1848     		ldr	r0, .L141+8
 1538 0012 FFF7FEFF 		bl	xTaskCreate
 1539              	.LVL140:
1946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1540              		.loc 1 1946 0
 1541 0016 0128     		cmp	r0, #1
 1542 0018 01D1     		bne	.L136
1948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1543              		.loc 1 1948 0
 1544 001a FFF7FEFF 		bl	xTimerCreateTimerTask
 1545              	.LVL141:
 1546              	.L136:
1957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 1547              		.loc 1 1957 0
 1548 001e 0128     		cmp	r0, #1
 1549 0020 14D1     		bne	.L137
 1550              	.LBB114:
 1551              	.LBB115:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1552              		.loc 2 156 0
 1553              		.syntax unified
 1554              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1555 0022 4FF02003 			mov r3, #32												
 1556 0026 83F31188 		msr basepri, r3											
 1557 002a BFF36F8F 		isb														
 1558 002e BFF34F8F 		dsb														
 1559              	
 1560              	@ 0 "" 2
 1561              		.thumb
 1562              		.syntax unified
 1563              	.LBE115:
 1564              	.LBE114:
1983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 1565              		.loc 1 1983 0
 1566 0032 114B     		ldr	r3, .L141+12
 1567 0034 4FF0FF32 		mov	r2, #-1
 1568 0038 DA62     		str	r2, [r3, #44]
1984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 1569              		.loc 1 1984 0
 1570 003a 0122     		movs	r2, #1
 1571 003c C3F80421 		str	r2, [r3, #260]
1985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1572              		.loc 1 1985 0
 1573 0040 0022     		movs	r2, #0
 1574 0042 C3F81421 		str	r2, [r3, #276]
1997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1575              		.loc 1 1997 0
 1576 0046 FFF7FEFF 		bl	xPortStartScheduler
 1577              	.LVL142:
 1578 004a 0BE0     		b	.L135
 1579              	.LVL143:
 1580              	.L137:
2012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1581              		.loc 1 2012 0
 1582 004c B0F1FF3F 		cmp	r0, #-1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 123


 1583 0050 08D1     		bne	.L135
 1584              	.LBB116:
 1585              	.LBB117:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1586              		.loc 2 156 0
 1587              		.syntax unified
 1588              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1589 0052 4FF02003 			mov r3, #32												
 1590 0056 83F31188 		msr basepri, r3											
 1591 005a BFF36F8F 		isb														
 1592 005e BFF34F8F 		dsb														
 1593              	
 1594              	@ 0 "" 2
 1595              	.LVL144:
 1596              		.thumb
 1597              		.syntax unified
 1598              	.L139:
 1599 0062 FEE7     		b	.L139
 1600              	.LVL145:
 1601              	.L135:
 1602              	.LBE117:
 1603              	.LBE116:
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1604              		.loc 1 2018 0
 1605 0064 03B0     		add	sp, sp, #12
 1606              		.cfi_def_cfa_offset 4
 1607              		@ sp needed
 1608 0066 5DF804FB 		ldr	pc, [sp], #4
 1609              	.L142:
 1610 006a 00BF     		.align	2
 1611              	.L141:
 1612 006c 1C010000 		.word	.LANCHOR0+284
 1613 0070 00000000 		.word	.LC0
 1614 0074 00000000 		.word	prvIdleTask
 1615 0078 00000000 		.word	.LANCHOR0
 1616              		.cfi_endproc
 1617              	.LFE738:
 1618              		.size	vTaskStartScheduler, .-vTaskStartScheduler
 1619              		.section	.text.vTaskEndScheduler,"ax",%progbits
 1620              		.align	2
 1621              		.global	vTaskEndScheduler
 1622              		.thumb
 1623              		.thumb_func
 1624              		.type	vTaskEndScheduler, %function
 1625              	vTaskEndScheduler:
 1626              	.LFB739:
2022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 1627              		.loc 1 2022 0
 1628              		.cfi_startproc
 1629              		@ args = 0, pretend = 0, frame = 0
 1630              		@ frame_needed = 0, uses_anonymous_args = 0
 1631 0000 08B5     		push	{r3, lr}
 1632              		.cfi_def_cfa_offset 8
 1633              		.cfi_offset 3, -8
 1634              		.cfi_offset 14, -4
 1635              	.LBB118:
 1636              	.LBB119:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 124


 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1637              		.loc 2 156 0
 1638              		.syntax unified
 1639              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1640 0002 4FF02003 			mov r3, #32												
 1641 0006 83F31188 		msr basepri, r3											
 1642 000a BFF36F8F 		isb														
 1643 000e BFF34F8F 		dsb														
 1644              	
 1645              	@ 0 "" 2
 1646              		.thumb
 1647              		.syntax unified
 1648              	.LBE119:
 1649              	.LBE118:
2027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vPortEndScheduler();
 1650              		.loc 1 2027 0
 1651 0012 0022     		movs	r2, #0
 1652 0014 024B     		ldr	r3, .L145
 1653 0016 C3F80421 		str	r2, [r3, #260]
2028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 1654              		.loc 1 2028 0
 1655 001a FFF7FEFF 		bl	vPortEndScheduler
 1656              	.LVL146:
 1657 001e 08BD     		pop	{r3, pc}
 1658              	.L146:
 1659              		.align	2
 1660              	.L145:
 1661 0020 00000000 		.word	.LANCHOR0
 1662              		.cfi_endproc
 1663              	.LFE739:
 1664              		.size	vTaskEndScheduler, .-vTaskEndScheduler
 1665              		.section	.text.vTaskSuspendAll,"ax",%progbits
 1666              		.align	2
 1667              		.global	vTaskSuspendAll
 1668              		.thumb
 1669              		.thumb_func
 1670              		.type	vTaskSuspendAll, %function
 1671              	vTaskSuspendAll:
 1672              	.LFB740:
2033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 1673              		.loc 1 2033 0
 1674              		.cfi_startproc
 1675              		@ args = 0, pretend = 0, frame = 0
 1676              		@ frame_needed = 0, uses_anonymous_args = 0
 1677              		@ link register save eliminated.
2038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 1678              		.loc 1 2038 0
 1679 0000 034A     		ldr	r2, .L148
 1680 0002 D2F81831 		ldr	r3, [r2, #280]
 1681 0006 0133     		adds	r3, r3, #1
 1682 0008 C2F81831 		str	r3, [r2, #280]
 1683 000c 7047     		bx	lr
 1684              	.L149:
 1685 000e 00BF     		.align	2
 1686              	.L148:
 1687 0010 00000000 		.word	.LANCHOR0
 1688              		.cfi_endproc
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 125


 1689              	.LFE740:
 1690              		.size	vTaskSuspendAll, .-vTaskSuspendAll
 1691              		.section	.text.xTaskGetTickCount,"ax",%progbits
 1692              		.align	2
 1693              		.global	xTaskGetTickCount
 1694              		.thumb
 1695              		.thumb_func
 1696              		.type	xTaskGetTickCount, %function
 1697              	xTaskGetTickCount:
 1698              	.LFB742:
2216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTicks;
 1699              		.loc 1 2216 0
 1700              		.cfi_startproc
 1701              		@ args = 0, pretend = 0, frame = 0
 1702              		@ frame_needed = 0, uses_anonymous_args = 0
 1703              		@ link register save eliminated.
2222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1704              		.loc 1 2222 0
 1705 0000 014B     		ldr	r3, .L151
 1706 0002 D3F81401 		ldr	r0, [r3, #276]
 1707              	.LVL147:
2227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1708              		.loc 1 2227 0
 1709 0006 7047     		bx	lr
 1710              	.L152:
 1711              		.align	2
 1712              	.L151:
 1713 0008 00000000 		.word	.LANCHOR0
 1714              		.cfi_endproc
 1715              	.LFE742:
 1716              		.size	xTaskGetTickCount, .-xTaskGetTickCount
 1717              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 1718              		.align	2
 1719              		.global	xTaskGetTickCountFromISR
 1720              		.thumb
 1721              		.thumb_func
 1722              		.type	xTaskGetTickCountFromISR, %function
 1723              	xTaskGetTickCountFromISR:
 1724              	.LFB743:
2231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xReturn;
 1725              		.loc 1 2231 0
 1726              		.cfi_startproc
 1727              		@ args = 0, pretend = 0, frame = 0
 1728              		@ frame_needed = 0, uses_anonymous_args = 0
 1729 0000 08B5     		push	{r3, lr}
 1730              		.cfi_def_cfa_offset 8
 1731              		.cfi_offset 3, -8
 1732              		.cfi_offset 14, -4
2249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1733              		.loc 1 2249 0
 1734 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1735              	.LVL148:
2253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1736              		.loc 1 2253 0
 1737 0006 024B     		ldr	r3, .L155
 1738 0008 D3F81401 		ldr	r0, [r3, #276]
 1739              	.LVL149:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 126


2258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1740              		.loc 1 2258 0
 1741 000c 08BD     		pop	{r3, pc}
 1742              	.L156:
 1743 000e 00BF     		.align	2
 1744              	.L155:
 1745 0010 00000000 		.word	.LANCHOR0
 1746              		.cfi_endproc
 1747              	.LFE743:
 1748              		.size	xTaskGetTickCountFromISR, .-xTaskGetTickCountFromISR
 1749              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 1750              		.align	2
 1751              		.global	uxTaskGetNumberOfTasks
 1752              		.thumb
 1753              		.thumb_func
 1754              		.type	uxTaskGetNumberOfTasks, %function
 1755              	uxTaskGetNumberOfTasks:
 1756              	.LFB744:
2262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 1757              		.loc 1 2262 0
 1758              		.cfi_startproc
 1759              		@ args = 0, pretend = 0, frame = 0
 1760              		@ frame_needed = 0, uses_anonymous_args = 0
 1761              		@ link register save eliminated.
2265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 1762              		.loc 1 2265 0
 1763 0000 014B     		ldr	r3, .L158
 1764 0002 D3F8FC00 		ldr	r0, [r3, #252]
2266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1765              		.loc 1 2266 0
 1766 0006 7047     		bx	lr
 1767              	.L159:
 1768              		.align	2
 1769              	.L158:
 1770 0008 00000000 		.word	.LANCHOR0
 1771              		.cfi_endproc
 1772              	.LFE744:
 1773              		.size	uxTaskGetNumberOfTasks, .-uxTaskGetNumberOfTasks
 1774              		.section	.text.pcTaskGetName,"ax",%progbits
 1775              		.align	2
 1776              		.global	pcTaskGetName
 1777              		.thumb
 1778              		.thumb_func
 1779              		.type	pcTaskGetName, %function
 1780              	pcTaskGetName:
 1781              	.LFB745:
2270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB;
 1782              		.loc 1 2270 0
 1783              		.cfi_startproc
 1784              		@ args = 0, pretend = 0, frame = 0
 1785              		@ frame_needed = 0, uses_anonymous_args = 0
 1786              		@ link register save eliminated.
 1787              	.LVL150:
2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTCB );
 1788              		.loc 1 2275 0
 1789 0000 0346     		mov	r3, r0
 1790 0002 10B9     		cbnz	r0, .L161
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 127


2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTCB );
 1791              		.loc 1 2275 0 is_stmt 0 discriminator 1
 1792 0004 074B     		ldr	r3, .L164
 1793 0006 D3F80031 		ldr	r3, [r3, #256]
 1794              	.LVL151:
 1795              	.L161:
2276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1796              		.loc 1 2276 0 is_stmt 1 discriminator 4
 1797 000a 43B9     		cbnz	r3, .L162
 1798              	.LBB120:
 1799              	.LBB121:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1800              		.loc 2 156 0
 1801              		.syntax unified
 1802              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1803 000c 4FF02003 			mov r3, #32												
 1804 0010 83F31188 		msr basepri, r3											
 1805 0014 BFF36F8F 		isb														
 1806 0018 BFF34F8F 		dsb														
 1807              	
 1808              	@ 0 "" 2
 1809              	.LVL152:
 1810              		.thumb
 1811              		.syntax unified
 1812              	.L163:
 1813 001c FEE7     		b	.L163
 1814              	.LVL153:
 1815              	.L162:
 1816              	.LBE121:
 1817              	.LBE120:
2278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1818              		.loc 1 2278 0
 1819 001e 03F13400 		add	r0, r3, #52
 1820 0022 7047     		bx	lr
 1821              	.L165:
 1822              		.align	2
 1823              	.L164:
 1824 0024 00000000 		.word	.LANCHOR0
 1825              		.cfi_endproc
 1826              	.LFE745:
 1827              		.size	pcTaskGetName, .-pcTaskGetName
 1828              		.section	.text.xTaskIncrementTick,"ax",%progbits
 1829              		.align	2
 1830              		.global	xTaskIncrementTick
 1831              		.thumb
 1832              		.thumb_func
 1833              		.type	xTaskIncrementTick, %function
 1834              	xTaskIncrementTick:
 1835              	.LFB746:
2590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t * pxTCB;
 1836              		.loc 1 2590 0
 1837              		.cfi_startproc
 1838              		@ args = 0, pretend = 0, frame = 0
 1839              		@ frame_needed = 0, uses_anonymous_args = 0
 1840 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1841              		.cfi_def_cfa_offset 24
 1842              		.cfi_offset 4, -24
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 128


 1843              		.cfi_offset 5, -20
 1844              		.cfi_offset 6, -16
 1845              		.cfi_offset 7, -12
 1846              		.cfi_offset 8, -8
 1847              		.cfi_offset 14, -4
 1848              	.LVL154:
2599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 1849              		.loc 1 2599 0
 1850 0004 3C4B     		ldr	r3, .L186
 1851 0006 D3F81831 		ldr	r3, [r3, #280]
 1852 000a 002B     		cmp	r3, #0
 1853 000c 65D1     		bne	.L167
 1854              	.LBB122:
2603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1855              		.loc 1 2603 0
 1856 000e 3A4B     		ldr	r3, .L186
 1857 0010 D3F81441 		ldr	r4, [r3, #276]
 1858 0014 0134     		adds	r4, r4, #1
 1859              	.LVL155:
2607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1860              		.loc 1 2607 0
 1861 0016 C3F81441 		str	r4, [r3, #276]
2609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1862              		.loc 1 2609 0
 1863 001a CCB9     		cbnz	r4, .L168
 1864              	.LBB123:
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1865              		.loc 1 2611 0
 1866 001c 9B6A     		ldr	r3, [r3, #40]
 1867 001e 1B68     		ldr	r3, [r3]
 1868 0020 43B1     		cbz	r3, .L169
 1869              	.LBB124:
 1870              	.LBB125:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1871              		.loc 2 156 0
 1872              		.syntax unified
 1873              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1874 0022 4FF02003 			mov r3, #32												
 1875 0026 83F31188 		msr basepri, r3											
 1876 002a BFF36F8F 		isb														
 1877 002e BFF34F8F 		dsb														
 1878              	
 1879              	@ 0 "" 2
 1880              	.LVL156:
 1881              		.thumb
 1882              		.syntax unified
 1883              	.L170:
 1884 0032 FEE7     		b	.L170
 1885              	.L169:
 1886              	.LBE125:
 1887              	.LBE124:
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1888              		.loc 1 2611 0 discriminator 2
 1889 0034 304B     		ldr	r3, .L186
 1890 0036 9A6A     		ldr	r2, [r3, #40]
 1891              	.LVL157:
 1892 0038 D3F8F810 		ldr	r1, [r3, #248]
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 129


 1893 003c 9962     		str	r1, [r3, #40]
 1894 003e C3F8F820 		str	r2, [r3, #248]
 1895 0042 D3F82021 		ldr	r2, [r3, #288]
 1896              	.LVL158:
 1897 0046 0132     		adds	r2, r2, #1
 1898 0048 C3F82021 		str	r2, [r3, #288]
 1899              	.LVL159:
 1900 004c FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1901              	.LVL160:
 1902              	.L168:
 1903              	.LBE123:
2622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1904              		.loc 1 2622 0
 1905 0050 294B     		ldr	r3, .L186
 1906 0052 DB6A     		ldr	r3, [r3, #44]
 1907 0054 9C42     		cmp	r4, r3
 1908 0056 03D2     		bcs	.L181
 1909              	.LBE122:
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1910              		.loc 1 2593 0
 1911 0058 0026     		movs	r6, #0
 1912 005a 45E0     		b	.L172
 1913              	.LVL161:
 1914              	.L183:
 1915              	.LBB126:
2688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
 1916              		.loc 1 2688 0
 1917 005c 0126     		movs	r6, #1
 1918              	.LVL162:
 1919 005e 00E0     		b	.L171
 1920              	.LVL163:
 1921              	.L181:
 1922 0060 0026     		movs	r6, #0
 1923              	.LVL164:
 1924              	.L171:
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1925              		.loc 1 2626 0
 1926 0062 254B     		ldr	r3, .L186
 1927 0064 9B6A     		ldr	r3, [r3, #40]
 1928 0066 1B68     		ldr	r3, [r3]
 1929 0068 0BB9     		cbnz	r3, .L182
 1930 006a 0123     		movs	r3, #1
 1931 006c 00E0     		b	.L173
 1932              	.L182:
 1933 006e 0023     		movs	r3, #0
 1934              	.L173:
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1935              		.loc 1 2626 0 is_stmt 0 discriminator 4
 1936 0070 23B1     		cbz	r3, .L174
2633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 1937              		.loc 1 2633 0 is_stmt 1
 1938 0072 4FF0FF32 		mov	r2, #-1
 1939 0076 204B     		ldr	r3, .L186
 1940 0078 DA62     		str	r2, [r3, #44]
2634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1941              		.loc 1 2634 0
 1942 007a 35E0     		b	.L172
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 130


 1943              	.L174:
2642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 1944              		.loc 1 2642 0
 1945 007c 1E4B     		ldr	r3, .L186
 1946 007e 9B6A     		ldr	r3, [r3, #40]
 1947 0080 DB68     		ldr	r3, [r3, #12]
 1948 0082 DD68     		ldr	r5, [r3, #12]
 1949              	.LVL165:
2643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1950              		.loc 1 2643 0
 1951 0084 6B68     		ldr	r3, [r5, #4]
 1952              	.LVL166:
2645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1953              		.loc 1 2645 0
 1954 0086 9C42     		cmp	r4, r3
 1955 0088 02D2     		bcs	.L175
2652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
 1956              		.loc 1 2652 0
 1957 008a 1B4A     		ldr	r2, .L186
 1958 008c D362     		str	r3, [r2, #44]
2653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1959              		.loc 1 2653 0
 1960 008e 2BE0     		b	.L172
 1961              	.L175:
2661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1962              		.loc 1 2661 0
 1963 0090 05F10408 		add	r8, r5, #4
 1964 0094 4046     		mov	r0, r8
 1965 0096 FFF7FEFF 		bl	uxListRemove
 1966              	.LVL167:
2665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1967              		.loc 1 2665 0
 1968 009a AB6A     		ldr	r3, [r5, #40]
 1969 009c 1BB1     		cbz	r3, .L176
2667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1970              		.loc 1 2667 0
 1971 009e 05F11800 		add	r0, r5, #24
 1972 00a2 FFF7FEFF 		bl	uxListRemove
 1973              	.LVL168:
 1974              	.L176:
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1975              		.loc 1 2676 0
 1976 00a6 EB6A     		ldr	r3, [r5, #44]
 1977 00a8 134A     		ldr	r2, .L186
 1978 00aa D2F80C21 		ldr	r2, [r2, #268]
 1979 00ae 9342     		cmp	r3, r2
 1980 00b0 02D9     		bls	.L177
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1981              		.loc 1 2676 0 is_stmt 0 discriminator 1
 1982 00b2 114A     		ldr	r2, .L186
 1983 00b4 C2F80C31 		str	r3, [r2, #268]
 1984              	.L177:
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1985              		.loc 1 2676 0 discriminator 3
 1986 00b8 0F4F     		ldr	r7, .L186
 1987 00ba 07F13000 		add	r0, r7, #48
 1988 00be 03EB8303 		add	r3, r3, r3, lsl #2
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 131


 1989 00c2 9A00     		lsls	r2, r3, #2
 1990 00c4 4146     		mov	r1, r8
 1991 00c6 1044     		add	r0, r0, r2
 1992 00c8 FFF7FEFF 		bl	vListInsertEnd
 1993              	.LVL169:
2686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
 1994              		.loc 1 2686 0 is_stmt 1 discriminator 3
 1995 00cc EA6A     		ldr	r2, [r5, #44]
 1996 00ce D7F80031 		ldr	r3, [r7, #256]
 1997 00d2 DB6A     		ldr	r3, [r3, #44]
 1998 00d4 9A42     		cmp	r2, r3
 1999 00d6 C1D2     		bcs	.L183
 2000 00d8 C3E7     		b	.L171
 2001              	.LVL170:
 2002              	.L167:
 2003              	.LBE126:
2733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2004              		.loc 1 2733 0
 2005 00da 074A     		ldr	r2, .L186
 2006 00dc D2F82431 		ldr	r3, [r2, #292]
 2007 00e0 0133     		adds	r3, r3, #1
 2008 00e2 C2F82431 		str	r3, [r2, #292]
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2009              		.loc 1 2593 0
 2010 00e6 0026     		movs	r6, #0
 2011              	.LVL171:
 2012              	.L172:
2746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2013              		.loc 1 2746 0
 2014 00e8 034B     		ldr	r3, .L186
 2015 00ea D3F82831 		ldr	r3, [r3, #296]
 2016 00ee 03B1     		cbz	r3, .L180
2748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2017              		.loc 1 2748 0
 2018 00f0 0126     		movs	r6, #1
 2019              	.LVL172:
 2020              	.L180:
2758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 2021              		.loc 1 2758 0
 2022 00f2 3046     		mov	r0, r6
 2023 00f4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2024              	.LVL173:
 2025              	.L187:
 2026              		.align	2
 2027              	.L186:
 2028 00f8 00000000 		.word	.LANCHOR0
 2029              		.cfi_endproc
 2030              	.LFE746:
 2031              		.size	xTaskIncrementTick, .-xTaskIncrementTick
 2032              		.section	.text.xTaskResumeAll,"ax",%progbits
 2033              		.align	2
 2034              		.global	xTaskResumeAll
 2035              		.thumb
 2036              		.thumb_func
 2037              		.type	xTaskResumeAll, %function
 2038              	xTaskResumeAll:
 2039              	.LFB741:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 132


2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB = NULL;
 2040              		.loc 1 2106 0
 2041              		.cfi_startproc
 2042              		@ args = 0, pretend = 0, frame = 0
 2043              		@ frame_needed = 0, uses_anonymous_args = 0
 2044              	.LVL174:
2112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2045              		.loc 1 2112 0
 2046 0000 394B     		ldr	r3, .L204
 2047 0002 D3F81831 		ldr	r3, [r3, #280]
 2048 0006 43B9     		cbnz	r3, .L189
 2049              	.LBB127:
 2050              	.LBB128:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2051              		.loc 2 156 0
 2052              		.syntax unified
 2053              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2054 0008 4FF02003 			mov r3, #32												
 2055 000c 83F31188 		msr basepri, r3											
 2056 0010 BFF36F8F 		isb														
 2057 0014 BFF34F8F 		dsb														
 2058              	
 2059              	@ 0 "" 2
 2060              	.LVL175:
 2061              		.thumb
 2062              		.syntax unified
 2063              	.L190:
 2064 0018 FEE7     		b	.L190
 2065              	.L189:
 2066              	.LBE128:
 2067              	.LBE127:
2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB = NULL;
 2068              		.loc 1 2106 0
 2069 001a 70B5     		push	{r4, r5, r6, lr}
 2070              		.cfi_def_cfa_offset 16
 2071              		.cfi_offset 4, -16
 2072              		.cfi_offset 5, -12
 2073              		.cfi_offset 6, -8
 2074              		.cfi_offset 14, -4
2119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 2075              		.loc 1 2119 0
 2076 001c FFF7FEFF 		bl	vPortEnterCritical
 2077              	.LVL176:
2121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2078              		.loc 1 2121 0
 2079 0020 314B     		ldr	r3, .L204
 2080 0022 D3F81821 		ldr	r2, [r3, #280]
 2081 0026 013A     		subs	r2, r2, #1
 2082 0028 C3F81821 		str	r2, [r3, #280]
2123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2083              		.loc 1 2123 0
 2084 002c D3F81831 		ldr	r3, [r3, #280]
 2085 0030 002B     		cmp	r3, #0
 2086 0032 52D1     		bne	.L200
2125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2087              		.loc 1 2125 0
 2088 0034 2C4B     		ldr	r3, .L204
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 133


 2089 0036 D3F8FC30 		ldr	r3, [r3, #252]
 2090 003a 3BBB     		cbnz	r3, .L201
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2091              		.loc 1 2108 0
 2092 003c 0024     		movs	r4, #0
 2093 003e 4FE0     		b	.L191
 2094              	.LVL177:
 2095              	.L195:
2131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2096              		.loc 1 2131 0
 2097 0040 294D     		ldr	r5, .L204
 2098 0042 2B6A     		ldr	r3, [r5, #32]
 2099 0044 DC68     		ldr	r4, [r3, #12]
 2100              	.LVL178:
2132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2101              		.loc 1 2132 0
 2102 0046 04F11800 		add	r0, r4, #24
 2103 004a FFF7FEFF 		bl	uxListRemove
 2104              	.LVL179:
2133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2105              		.loc 1 2133 0
 2106 004e 261D     		adds	r6, r4, #4
 2107 0050 3046     		mov	r0, r6
 2108 0052 FFF7FEFF 		bl	uxListRemove
 2109              	.LVL180:
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2110              		.loc 1 2134 0
 2111 0056 E36A     		ldr	r3, [r4, #44]
 2112 0058 D5F80C21 		ldr	r2, [r5, #268]
 2113 005c 9342     		cmp	r3, r2
 2114 005e 01D9     		bls	.L193
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2115              		.loc 1 2134 0 is_stmt 0 discriminator 1
 2116 0060 C5F80C31 		str	r3, [r5, #268]
 2117              	.L193:
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2118              		.loc 1 2134 0 discriminator 3
 2119 0064 204D     		ldr	r5, .L204
 2120 0066 05F13000 		add	r0, r5, #48
 2121 006a 03EB8303 		add	r3, r3, r3, lsl #2
 2122 006e 9A00     		lsls	r2, r3, #2
 2123 0070 3146     		mov	r1, r6
 2124 0072 1044     		add	r0, r0, r2
 2125 0074 FFF7FEFF 		bl	vListInsertEnd
 2126              	.LVL181:
2138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 2127              		.loc 1 2138 0 is_stmt 1 discriminator 3
 2128 0078 E26A     		ldr	r2, [r4, #44]
 2129 007a D5F80031 		ldr	r3, [r5, #256]
 2130 007e DB6A     		ldr	r3, [r3, #44]
 2131 0080 9A42     		cmp	r2, r3
 2132 0082 04D3     		bcc	.L192
2140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 2133              		.loc 1 2140 0
 2134 0084 0122     		movs	r2, #1
 2135 0086 C5F82821 		str	r2, [r5, #296]
 2136 008a 00E0     		b	.L192
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 134


 2137              	.LVL182:
 2138              	.L201:
 2139 008c 0024     		movs	r4, #0
 2140              	.LVL183:
 2141              	.L192:
2129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2142              		.loc 1 2129 0
 2143 008e 164B     		ldr	r3, .L204
 2144 0090 5B69     		ldr	r3, [r3, #20]
 2145 0092 002B     		cmp	r3, #0
 2146 0094 D4D1     		bne	.L195
2148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2147              		.loc 1 2148 0
 2148 0096 0CB1     		cbz	r4, .L196
2156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2149              		.loc 1 2156 0
 2150 0098 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2151              	.LVL184:
 2152              	.L196:
 2153              	.LBB129:
2164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2154              		.loc 1 2164 0
 2155 009c 124B     		ldr	r3, .L204
 2156 009e D3F82441 		ldr	r4, [r3, #292]
 2157              	.LVL185:
2166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 2158              		.loc 1 2166 0
 2159 00a2 64B1     		cbz	r4, .L197
 2160              	.L199:
2170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
 2161              		.loc 1 2170 0
 2162 00a4 FFF7FEFF 		bl	xTaskIncrementTick
 2163              	.LVL186:
 2164 00a8 18B1     		cbz	r0, .L198
2172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
 2165              		.loc 1 2172 0
 2166 00aa 0122     		movs	r2, #1
 2167 00ac 0E4B     		ldr	r3, .L204
 2168 00ae C3F82821 		str	r2, [r3, #296]
 2169              	.L198:
 2170              	.LVL187:
2179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2171              		.loc 1 2179 0
 2172 00b2 013C     		subs	r4, r4, #1
 2173              	.LVL188:
 2174 00b4 F6D1     		bne	.L199
2181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 2175              		.loc 1 2181 0
 2176 00b6 0022     		movs	r2, #0
 2177 00b8 0B4B     		ldr	r3, .L204
 2178 00ba C3F82421 		str	r2, [r3, #292]
 2179              	.L197:
 2180              	.LBE129:
2189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2181              		.loc 1 2189 0
 2182 00be 0A4B     		ldr	r3, .L204
 2183 00c0 D3F82831 		ldr	r3, [r3, #296]
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 135


 2184 00c4 5BB1     		cbz	r3, .L202
 2185              	.LVL189:
2196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2186              		.loc 1 2196 0
 2187 00c6 4FF08052 		mov	r2, #268435456
 2188 00ca 084B     		ldr	r3, .L204+4
 2189 00cc 1A60     		str	r2, [r3]
 2190              		.syntax unified
 2191              	@ 2196 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2192 00ce BFF34F8F 		dsb
 2193              	@ 0 "" 2
 2194              	@ 2196 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2195 00d2 BFF36F8F 		isb
 2196              	@ 0 "" 2
2193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 2197              		.loc 1 2193 0
 2198              		.thumb
 2199              		.syntax unified
 2200 00d6 0124     		movs	r4, #1
 2201              	.LVL190:
 2202 00d8 02E0     		b	.L191
 2203              	.LVL191:
 2204              	.L200:
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2205              		.loc 1 2108 0
 2206 00da 0024     		movs	r4, #0
 2207 00dc 00E0     		b	.L191
 2208              	.LVL192:
 2209              	.L202:
 2210 00de 0024     		movs	r4, #0
 2211              	.LVL193:
 2212              	.L191:
2209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2213              		.loc 1 2209 0
 2214 00e0 FFF7FEFF 		bl	vPortExitCritical
 2215              	.LVL194:
2212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 2216              		.loc 1 2212 0
 2217 00e4 2046     		mov	r0, r4
 2218 00e6 70BD     		pop	{r4, r5, r6, pc}
 2219              	.LVL195:
 2220              	.L205:
 2221              		.align	2
 2222              	.L204:
 2223 00e8 00000000 		.word	.LANCHOR0
 2224 00ec 04ED00E0 		.word	-536810236
 2225              		.cfi_endproc
 2226              	.LFE741:
 2227              		.size	xTaskResumeAll, .-xTaskResumeAll
 2228              		.section	.text.vTaskDelayUntil,"ax",%progbits
 2229              		.align	2
 2230              		.global	vTaskDelayUntil
 2231              		.thumb
 2232              		.thumb_func
 2233              		.type	vTaskDelayUntil, %function
 2234              	vTaskDelayUntil:
 2235              	.LFB729:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 136


1205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TickType_t xTimeToWake;
 2236              		.loc 1 1205 0
 2237              		.cfi_startproc
 2238              		@ args = 0, pretend = 0, frame = 0
 2239              		@ frame_needed = 0, uses_anonymous_args = 0
 2240              	.LVL196:
 2241 0000 38B5     		push	{r3, r4, r5, lr}
 2242              		.cfi_def_cfa_offset 16
 2243              		.cfi_offset 3, -16
 2244              		.cfi_offset 4, -12
 2245              		.cfi_offset 5, -8
 2246              		.cfi_offset 14, -4
 2247              	.LVL197:
1209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 2248              		.loc 1 1209 0
 2249 0002 40B9     		cbnz	r0, .L207
 2250              	.LBB130:
 2251              	.LBB131:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2252              		.loc 2 156 0
 2253              		.syntax unified
 2254              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2255 0004 4FF02003 			mov r3, #32												
 2256 0008 83F31188 		msr basepri, r3											
 2257 000c BFF36F8F 		isb														
 2258 0010 BFF34F8F 		dsb														
 2259              	
 2260              	@ 0 "" 2
 2261              	.LVL198:
 2262              		.thumb
 2263              		.syntax unified
 2264              	.L208:
 2265 0014 FEE7     		b	.L208
 2266              	.L207:
 2267 0016 0546     		mov	r5, r0
 2268              	.LBE131:
 2269              	.LBE130:
1210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 2270              		.loc 1 1210 0
 2271 0018 41B9     		cbnz	r1, .L209
 2272              	.LBB132:
 2273              	.LBB133:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2274              		.loc 2 156 0
 2275              		.syntax unified
 2276              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2277 001a 4FF02003 			mov r3, #32												
 2278 001e 83F31188 		msr basepri, r3											
 2279 0022 BFF36F8F 		isb														
 2280 0026 BFF34F8F 		dsb														
 2281              	
 2282              	@ 0 "" 2
 2283              	.LVL199:
 2284              		.thumb
 2285              		.syntax unified
 2286              	.L210:
 2287 002a FEE7     		b	.L210
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 137


 2288              	.L209:
 2289              	.LBE133:
 2290              	.LBE132:
1211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2291              		.loc 1 1211 0
 2292 002c 1D4B     		ldr	r3, .L222
 2293 002e D3F81831 		ldr	r3, [r3, #280]
 2294 0032 43B1     		cbz	r3, .L211
 2295              	.LBB134:
 2296              	.LBB135:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2297              		.loc 2 156 0
 2298              		.syntax unified
 2299              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2300 0034 4FF02003 			mov r3, #32												
 2301 0038 83F31188 		msr basepri, r3											
 2302 003c BFF36F8F 		isb														
 2303 0040 BFF34F8F 		dsb														
 2304              	
 2305              	@ 0 "" 2
 2306              	.LVL200:
 2307              		.thumb
 2308              		.syntax unified
 2309              	.L212:
 2310 0044 FEE7     		b	.L212
 2311              	.L211:
 2312 0046 0C46     		mov	r4, r1
 2313              	.LBE135:
 2314              	.LBE134:
1213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2315              		.loc 1 1213 0
 2316 0048 FFF7FEFF 		bl	vTaskSuspendAll
 2317              	.LVL201:
 2318              	.LBB136:
1217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2319              		.loc 1 1217 0
 2320 004c 154B     		ldr	r3, .L222
 2321 004e D3F81401 		ldr	r0, [r3, #276]
 2322              	.LVL202:
1220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2323              		.loc 1 1220 0
 2324 0052 2A68     		ldr	r2, [r5]
 2325 0054 A318     		adds	r3, r4, r2
 2326              	.LVL203:
1222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2327              		.loc 1 1222 0
 2328 0056 9042     		cmp	r0, r2
 2329 0058 05D2     		bcs	.L213
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2330              		.loc 1 1229 0
 2331 005a 9A42     		cmp	r2, r3
 2332 005c 09D9     		bls	.L217
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2333              		.loc 1 1229 0 is_stmt 0 discriminator 1
 2334 005e 9842     		cmp	r0, r3
 2335 0060 09D3     		bcc	.L218
 2336              	.LBE136:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 138


1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2337              		.loc 1 1207 0 is_stmt 1
 2338 0062 0022     		movs	r2, #0
 2339 0064 0CE0     		b	.L214
 2340              	.L213:
 2341              	.LBB137:
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2342              		.loc 1 1243 0
 2343 0066 9A42     		cmp	r2, r3
 2344 0068 07D8     		bhi	.L219
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2345              		.loc 1 1243 0 is_stmt 0 discriminator 1
 2346 006a 9842     		cmp	r0, r3
 2347 006c 07D3     		bcc	.L220
 2348              	.LBE137:
1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2349              		.loc 1 1207 0 is_stmt 1
 2350 006e 0022     		movs	r2, #0
 2351 0070 06E0     		b	.L214
 2352              	.L217:
 2353 0072 0022     		movs	r2, #0
 2354 0074 04E0     		b	.L214
 2355              	.L218:
 2356              	.LBB138:
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2357              		.loc 1 1231 0
 2358 0076 0122     		movs	r2, #1
 2359 0078 02E0     		b	.L214
 2360              	.L219:
1245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2361              		.loc 1 1245 0
 2362 007a 0122     		movs	r2, #1
 2363 007c 00E0     		b	.L214
 2364              	.L220:
 2365 007e 0122     		movs	r2, #1
 2366              	.L214:
 2367              	.LVL204:
1254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2368              		.loc 1 1254 0
 2369 0080 2B60     		str	r3, [r5]
1256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2370              		.loc 1 1256 0
 2371 0082 1AB1     		cbz	r2, .L215
1262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2372              		.loc 1 1262 0
 2373 0084 0021     		movs	r1, #0
 2374 0086 181A     		subs	r0, r3, r0
 2375              	.LVL205:
 2376 0088 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2377              	.LVL206:
 2378              	.L215:
 2379              	.LBE138:
1269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2380              		.loc 1 1269 0
 2381 008c FFF7FEFF 		bl	xTaskResumeAll
 2382              	.LVL207:
1273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 139


 2383              		.loc 1 1273 0
 2384 0090 38B9     		cbnz	r0, .L206
1275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2385              		.loc 1 1275 0
 2386 0092 4FF08052 		mov	r2, #268435456
 2387 0096 044B     		ldr	r3, .L222+4
 2388 0098 1A60     		str	r2, [r3]
 2389              		.syntax unified
 2390              	@ 1275 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2391 009a BFF34F8F 		dsb
 2392              	@ 0 "" 2
 2393              	@ 1275 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2394 009e BFF36F8F 		isb
 2395              	@ 0 "" 2
 2396              		.thumb
 2397              		.syntax unified
 2398              	.L206:
 2399 00a2 38BD     		pop	{r3, r4, r5, pc}
 2400              	.LVL208:
 2401              	.L223:
 2402              		.align	2
 2403              	.L222:
 2404 00a4 00000000 		.word	.LANCHOR0
 2405 00a8 04ED00E0 		.word	-536810236
 2406              		.cfi_endproc
 2407              	.LFE729:
 2408              		.size	vTaskDelayUntil, .-vTaskDelayUntil
 2409              		.section	.text.vTaskDelay,"ax",%progbits
 2410              		.align	2
 2411              		.global	vTaskDelay
 2412              		.thumb
 2413              		.thumb_func
 2414              		.type	vTaskDelay, %function
 2415              	vTaskDelay:
 2416              	.LFB730:
1289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2417              		.loc 1 1289 0
 2418              		.cfi_startproc
 2419              		@ args = 0, pretend = 0, frame = 0
 2420              		@ frame_needed = 0, uses_anonymous_args = 0
 2421              	.LVL209:
 2422 0000 10B5     		push	{r4, lr}
 2423              		.cfi_def_cfa_offset 8
 2424              		.cfi_offset 4, -8
 2425              		.cfi_offset 14, -4
 2426              	.LVL210:
1293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2427              		.loc 1 1293 0
 2428 0002 B0B1     		cbz	r0, .L229
 2429 0004 0446     		mov	r4, r0
1295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSuspendAll();
 2430              		.loc 1 1295 0
 2431 0006 104B     		ldr	r3, .L231
 2432 0008 D3F81831 		ldr	r3, [r3, #280]
 2433 000c 43B1     		cbz	r3, .L226
 2434              	.LBB139:
 2435              	.LBB140:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 140


 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2436              		.loc 2 156 0
 2437              		.syntax unified
 2438              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2439 000e 4FF02003 			mov r3, #32												
 2440 0012 83F31188 		msr basepri, r3											
 2441 0016 BFF36F8F 		isb														
 2442 001a BFF34F8F 		dsb														
 2443              	
 2444              	@ 0 "" 2
 2445              	.LVL211:
 2446              		.thumb
 2447              		.syntax unified
 2448              	.L227:
 2449 001e FEE7     		b	.L227
 2450              	.L226:
 2451              	.LBE140:
 2452              	.LBE139:
1296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2453              		.loc 1 1296 0
 2454 0020 FFF7FEFF 		bl	vTaskSuspendAll
 2455              	.LVL212:
1307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2456              		.loc 1 1307 0
 2457 0024 0021     		movs	r1, #0
 2458 0026 2046     		mov	r0, r4
 2459 0028 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2460              	.LVL213:
1309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2461              		.loc 1 1309 0
 2462 002c FFF7FEFF 		bl	xTaskResumeAll
 2463              	.LVL214:
 2464 0030 00E0     		b	.L225
 2465              	.LVL215:
 2466              	.L229:
1290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2467              		.loc 1 1290 0
 2468 0032 0020     		movs	r0, #0
 2469              	.LVL216:
 2470              	.L225:
1318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2471              		.loc 1 1318 0
 2472 0034 38B9     		cbnz	r0, .L224
1320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2473              		.loc 1 1320 0
 2474 0036 4FF08052 		mov	r2, #268435456
 2475 003a 044B     		ldr	r3, .L231+4
 2476 003c 1A60     		str	r2, [r3]
 2477              		.syntax unified
 2478              	@ 1320 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2479 003e BFF34F8F 		dsb
 2480              	@ 0 "" 2
 2481              	@ 1320 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2482 0042 BFF36F8F 		isb
 2483              	@ 0 "" 2
 2484              		.thumb
 2485              		.syntax unified
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 141


 2486              	.L224:
 2487 0046 10BD     		pop	{r4, pc}
 2488              	.L232:
 2489              		.align	2
 2490              	.L231:
 2491 0048 00000000 		.word	.LANCHOR0
 2492 004c 04ED00E0 		.word	-536810236
 2493              		.cfi_endproc
 2494              	.LFE730:
 2495              		.size	vTaskDelay, .-vTaskDelay
 2496              		.section	.text.vTaskSwitchContext,"ax",%progbits
 2497              		.align	2
 2498              		.global	vTaskSwitchContext
 2499              		.thumb
 2500              		.thumb_func
 2501              		.type	vTaskSwitchContext, %function
 2502              	vTaskSwitchContext:
 2503              	.LFB747:
2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2504              		.loc 1 2852 0
 2505              		.cfi_startproc
 2506              		@ args = 0, pretend = 0, frame = 0
 2507              		@ frame_needed = 0, uses_anonymous_args = 0
2853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 2508              		.loc 1 2853 0
 2509 0000 304B     		ldr	r3, .L244
 2510 0002 D3F81831 		ldr	r3, [r3, #280]
 2511 0006 23B1     		cbz	r3, .L234
2857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 2512              		.loc 1 2857 0
 2513 0008 0122     		movs	r2, #1
 2514 000a 2E4B     		ldr	r3, .L244
 2515 000c C3F82821 		str	r2, [r3, #296]
 2516 0010 7047     		bx	lr
 2517              	.L234:
2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2518              		.loc 1 2852 0
 2519 0012 10B5     		push	{r4, lr}
 2520              		.cfi_def_cfa_offset 8
 2521              		.cfi_offset 4, -8
 2522              		.cfi_offset 14, -4
2861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 2523              		.loc 1 2861 0
 2524 0014 2B4B     		ldr	r3, .L244
 2525 0016 0022     		movs	r2, #0
 2526 0018 C3F82821 		str	r2, [r3, #296]
 2527              	.LBB141:
2893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const uint32_t ulCheckValue = ( uint32_t ) 0xa5a5a5a5;											\
 2528              		.loc 1 2893 0
 2529 001c D3F80031 		ldr	r3, [r3, #256]
 2530 0020 1B6B     		ldr	r3, [r3, #48]
 2531              	.LVL217:
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 1 ] != ulCheckValue ) ||												\
 2532              		.loc 1 2896 0
 2533 0022 1A68     		ldr	r2, [r3]
 2534 0024 B2F1A53F 		cmp	r2, #-1515870811
 2535 0028 0BD1     		bne	.L236
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 142


2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 2 ] != ulCheckValue ) ||												\
 2536              		.loc 1 2897 0 discriminator 1
 2537 002a 5A68     		ldr	r2, [r3, #4]
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 1 ] != ulCheckValue ) ||												\
 2538              		.loc 1 2896 0 discriminator 1
 2539 002c B2F1A53F 		cmp	r2, #-1515870811
 2540 0030 07D1     		bne	.L236
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 3 ] != ulCheckValue ) )												\
 2541              		.loc 1 2898 0
 2542 0032 9A68     		ldr	r2, [r3, #8]
2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 2 ] != ulCheckValue ) ||												\
 2543              		.loc 1 2897 0
 2544 0034 B2F1A53F 		cmp	r2, #-1515870811
 2545 0038 03D1     		bne	.L236
2899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{																								\
 2546              		.loc 1 2899 0
 2547 003a DB68     		ldr	r3, [r3, #12]
 2548              	.LVL218:
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 3 ] != ulCheckValue ) )												\
 2549              		.loc 1 2898 0
 2550 003c B3F1A53F 		cmp	r3, #-1515870811
 2551 0040 07D0     		beq	.L237
 2552              	.L236:
2901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}																								\
 2553              		.loc 1 2901 0
 2554 0042 204B     		ldr	r3, .L244
 2555 0044 D3F80001 		ldr	r0, [r3, #256]
 2556 0048 D3F80011 		ldr	r1, [r3, #256]
 2557 004c 3431     		adds	r1, r1, #52
 2558 004e FFF7FEFF 		bl	vApplicationStackOverflowHook
 2559              	.LVL219:
 2560              	.L237:
 2561              	.LBE141:
 2562              	.LBB142:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2563              		.loc 1 2907 0
 2564 0052 1C4B     		ldr	r3, .L244
 2565 0054 D3F80C31 		ldr	r3, [r3, #268]
 2566              	.LVL220:
 2567 0058 0AE0     		b	.L238
 2568              	.L241:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2569              		.loc 1 2907 0 is_stmt 0 discriminator 5
 2570 005a 43B9     		cbnz	r3, .L239
 2571              	.LBB143:
 2572              	.LBB144:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2573              		.loc 2 156 0 is_stmt 1
 2574              		.syntax unified
 2575              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2576 005c 4FF02003 			mov r3, #32												
 2577 0060 83F31188 		msr basepri, r3											
 2578 0064 BFF36F8F 		isb														
 2579 0068 BFF34F8F 		dsb														
 2580              	
 2581              	@ 0 "" 2
 2582              	.LVL221:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 143


 2583              		.thumb
 2584              		.syntax unified
 2585              	.L240:
 2586 006c FEE7     		b	.L240
 2587              	.LVL222:
 2588              	.L239:
 2589              	.LBE144:
 2590              	.LBE143:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2591              		.loc 1 2907 0 discriminator 3
 2592 006e 013B     		subs	r3, r3, #1
 2593              	.LVL223:
 2594              	.L238:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2595              		.loc 1 2907 0 is_stmt 0 discriminator 4
 2596 0070 03EB8301 		add	r1, r3, r3, lsl #2
 2597 0074 8A00     		lsls	r2, r1, #2
 2598 0076 1349     		ldr	r1, .L244
 2599 0078 0A44     		add	r2, r2, r1
 2600 007a 126B     		ldr	r2, [r2, #48]
 2601 007c 002A     		cmp	r2, #0
 2602 007e ECD0     		beq	.L241
 2603              	.LVL224:
 2604              	.LBB145:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2605              		.loc 1 2907 0 discriminator 6
 2606 0080 0846     		mov	r0, r1
 2607 0082 9900     		lsls	r1, r3, #2
 2608 0084 CC18     		adds	r4, r1, r3
 2609 0086 A200     		lsls	r2, r4, #2
 2610 0088 0244     		add	r2, r2, r0
 2611 008a 546B     		ldr	r4, [r2, #52]
 2612 008c 6468     		ldr	r4, [r4, #4]
 2613 008e 5463     		str	r4, [r2, #52]
 2614 0090 3030     		adds	r0, r0, #48
 2615 0092 1944     		add	r1, r1, r3
 2616 0094 8A00     		lsls	r2, r1, #2
 2617 0096 0832     		adds	r2, r2, #8
 2618 0098 0244     		add	r2, r2, r0
 2619 009a 9442     		cmp	r4, r2
 2620 009c 06D1     		bne	.L242
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2621              		.loc 1 2907 0 discriminator 7
 2622 009e 6068     		ldr	r0, [r4, #4]
 2623 00a0 03EB8301 		add	r1, r3, r3, lsl #2
 2624 00a4 8A00     		lsls	r2, r1, #2
 2625 00a6 0749     		ldr	r1, .L244
 2626 00a8 0A44     		add	r2, r2, r1
 2627 00aa 5063     		str	r0, [r2, #52]
 2628              	.L242:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2629              		.loc 1 2907 0 discriminator 9
 2630 00ac 0549     		ldr	r1, .L244
 2631 00ae 03EB8300 		add	r0, r3, r3, lsl #2
 2632 00b2 8200     		lsls	r2, r0, #2
 2633 00b4 0A44     		add	r2, r2, r1
 2634 00b6 526B     		ldr	r2, [r2, #52]
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 144


 2635 00b8 D268     		ldr	r2, [r2, #12]
 2636 00ba C1F80021 		str	r2, [r1, #256]
 2637              	.LBE145:
 2638 00be C1F80C31 		str	r3, [r1, #268]
 2639 00c2 10BD     		pop	{r4, pc}
 2640              	.L245:
 2641              		.align	2
 2642              	.L244:
 2643 00c4 00000000 		.word	.LANCHOR0
 2644              	.LBE142:
 2645              		.cfi_endproc
 2646              	.LFE747:
 2647              		.size	vTaskSwitchContext, .-vTaskSwitchContext
 2648              		.section	.text.vTaskSuspend,"ax",%progbits
 2649              		.align	2
 2650              		.global	vTaskSuspend
 2651              		.thumb
 2652              		.thumb_func
 2653              		.type	vTaskSuspend, %function
 2654              	vTaskSuspend:
 2655              	.LFB734:
1631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 2656              		.loc 1 1631 0 is_stmt 1
 2657              		.cfi_startproc
 2658              		@ args = 0, pretend = 0, frame = 0
 2659              		@ frame_needed = 0, uses_anonymous_args = 0
 2660              	.LVL225:
 2661 0000 38B5     		push	{r3, r4, r5, lr}
 2662              		.cfi_def_cfa_offset 16
 2663              		.cfi_offset 3, -16
 2664              		.cfi_offset 4, -12
 2665              		.cfi_offset 5, -8
 2666              		.cfi_offset 14, -4
 2667 0002 0446     		mov	r4, r0
1634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2668              		.loc 1 1634 0
 2669 0004 FFF7FEFF 		bl	vPortEnterCritical
 2670              	.LVL226:
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2671              		.loc 1 1638 0
 2672 0008 14B9     		cbnz	r4, .L247
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2673              		.loc 1 1638 0 is_stmt 0 discriminator 1
 2674 000a 294B     		ldr	r3, .L257
 2675 000c D3F80041 		ldr	r4, [r3, #256]
 2676              	.LVL227:
 2677              	.L247:
1644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2678              		.loc 1 1644 0 is_stmt 1 discriminator 4
 2679 0010 251D     		adds	r5, r4, #4
 2680 0012 2846     		mov	r0, r5
 2681 0014 FFF7FEFF 		bl	uxListRemove
 2682              	.LVL228:
1654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2683              		.loc 1 1654 0 discriminator 4
 2684 0018 A36A     		ldr	r3, [r4, #40]
 2685 001a 1BB1     		cbz	r3, .L248
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 145


1656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2686              		.loc 1 1656 0
 2687 001c 04F11800 		add	r0, r4, #24
 2688 0020 FFF7FEFF 		bl	uxListRemove
 2689              	.LVL229:
 2690              	.L248:
1663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2691              		.loc 1 1663 0
 2692 0024 2946     		mov	r1, r5
 2693 0026 2248     		ldr	r0, .L257
 2694 0028 FFF7FEFF 		bl	vListInsertEnd
 2695              	.LVL230:
1667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2696              		.loc 1 1667 0
 2697 002c 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 2698 0030 DBB2     		uxtb	r3, r3
 2699 0032 012B     		cmp	r3, #1
 2700 0034 02D1     		bne	.L249
1671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2701              		.loc 1 1671 0
 2702 0036 0023     		movs	r3, #0
 2703 0038 84F85C30 		strb	r3, [r4, #92]
 2704              	.L249:
1676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2705              		.loc 1 1676 0
 2706 003c FFF7FEFF 		bl	vPortExitCritical
 2707              	.LVL231:
1678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2708              		.loc 1 1678 0
 2709 0040 1B4B     		ldr	r3, .L257
 2710 0042 D3F80431 		ldr	r3, [r3, #260]
 2711 0046 2BB1     		cbz	r3, .L250
1682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2712              		.loc 1 1682 0
 2713 0048 FFF7FEFF 		bl	vPortEnterCritical
 2714              	.LVL232:
1684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2715              		.loc 1 1684 0
 2716 004c FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2717              	.LVL233:
1686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2718              		.loc 1 1686 0
 2719 0050 FFF7FEFF 		bl	vPortExitCritical
 2720              	.LVL234:
 2721              	.L250:
1693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2722              		.loc 1 1693 0
 2723 0054 164B     		ldr	r3, .L257
 2724 0056 D3F80031 		ldr	r3, [r3, #256]
 2725 005a 9C42     		cmp	r4, r3
 2726 005c 26D1     		bne	.L246
1695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2727              		.loc 1 1695 0
 2728 005e 144B     		ldr	r3, .L257
 2729 0060 D3F80431 		ldr	r3, [r3, #260]
 2730 0064 ABB1     		cbz	r3, .L252
1698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 146


 2731              		.loc 1 1698 0
 2732 0066 124B     		ldr	r3, .L257
 2733 0068 D3F81831 		ldr	r3, [r3, #280]
 2734 006c 43B1     		cbz	r3, .L253
 2735              	.LBB146:
 2736              	.LBB147:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2737              		.loc 2 156 0
 2738              		.syntax unified
 2739              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2740 006e 4FF02003 			mov r3, #32												
 2741 0072 83F31188 		msr basepri, r3											
 2742 0076 BFF36F8F 		isb														
 2743 007a BFF34F8F 		dsb														
 2744              	
 2745              	@ 0 "" 2
 2746              	.LVL235:
 2747              		.thumb
 2748              		.syntax unified
 2749              	.L254:
 2750 007e FEE7     		b	.L254
 2751              	.L253:
 2752              	.LBE147:
 2753              	.LBE146:
1699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2754              		.loc 1 1699 0
 2755 0080 4FF08052 		mov	r2, #268435456
 2756 0084 0B4B     		ldr	r3, .L257+4
 2757 0086 1A60     		str	r2, [r3]
 2758              		.syntax unified
 2759              	@ 1699 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2760 0088 BFF34F8F 		dsb
 2761              	@ 0 "" 2
 2762              	@ 1699 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2763 008c BFF36F8F 		isb
 2764              	@ 0 "" 2
 2765              		.thumb
 2766              		.syntax unified
 2767 0090 38BD     		pop	{r3, r4, r5, pc}
 2768              	.LVL236:
 2769              	.L252:
1706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2770              		.loc 1 1706 0
 2771 0092 074B     		ldr	r3, .L257
 2772 0094 1A68     		ldr	r2, [r3]
 2773 0096 D3F8FC30 		ldr	r3, [r3, #252]
 2774 009a 9A42     		cmp	r2, r3
 2775 009c 04D1     		bne	.L255
1712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2776              		.loc 1 1712 0
 2777 009e 0022     		movs	r2, #0
 2778 00a0 034B     		ldr	r3, .L257
 2779 00a2 C3F80021 		str	r2, [r3, #256]
 2780 00a6 38BD     		pop	{r3, r4, r5, pc}
 2781              	.LVL237:
 2782              	.L255:
1716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 147


 2783              		.loc 1 1716 0
 2784 00a8 FFF7FEFF 		bl	vTaskSwitchContext
 2785              	.LVL238:
 2786              	.L246:
 2787 00ac 38BD     		pop	{r3, r4, r5, pc}
 2788              	.LVL239:
 2789              	.L258:
 2790 00ae 00BF     		.align	2
 2791              	.L257:
 2792 00b0 00000000 		.word	.LANCHOR0
 2793 00b4 04ED00E0 		.word	-536810236
 2794              		.cfi_endproc
 2795              	.LFE734:
 2796              		.size	vTaskSuspend, .-vTaskSuspend
 2797              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 2798              		.align	2
 2799              		.global	vTaskPlaceOnEventList
 2800              		.thumb
 2801              		.thumb_func
 2802              		.type	vTaskPlaceOnEventList, %function
 2803              	vTaskPlaceOnEventList:
 2804              	.LFB748:
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 2805              		.loc 1 2922 0
 2806              		.cfi_startproc
 2807              		@ args = 0, pretend = 0, frame = 0
 2808              		@ frame_needed = 0, uses_anonymous_args = 0
 2809              	.LVL240:
2923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2810              		.loc 1 2923 0
 2811 0000 40B9     		cbnz	r0, .L260
 2812              	.LBB148:
 2813              	.LBB149:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2814              		.loc 2 156 0
 2815              		.syntax unified
 2816              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2817 0002 4FF02003 			mov r3, #32												
 2818 0006 83F31188 		msr basepri, r3											
 2819 000a BFF36F8F 		isb														
 2820 000e BFF34F8F 		dsb														
 2821              	
 2822              	@ 0 "" 2
 2823              	.LVL241:
 2824              		.thumb
 2825              		.syntax unified
 2826              	.L261:
 2827 0012 FEE7     		b	.L261
 2828              	.L260:
 2829              	.LBE149:
 2830              	.LBE148:
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 2831              		.loc 1 2922 0
 2832 0014 10B5     		push	{r4, lr}
 2833              		.cfi_def_cfa_offset 8
 2834              		.cfi_offset 4, -8
 2835              		.cfi_offset 14, -4
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 148


 2836 0016 0C46     		mov	r4, r1
2932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2837              		.loc 1 2932 0
 2838 0018 054B     		ldr	r3, .L263
 2839 001a D3F80011 		ldr	r1, [r3, #256]
 2840              	.LVL242:
 2841 001e 1831     		adds	r1, r1, #24
 2842 0020 FFF7FEFF 		bl	vListInsert
 2843              	.LVL243:
2934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 2844              		.loc 1 2934 0
 2845 0024 0121     		movs	r1, #1
 2846 0026 2046     		mov	r0, r4
 2847 0028 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2848              	.LVL244:
 2849 002c 10BD     		pop	{r4, pc}
 2850              	.LVL245:
 2851              	.L264:
 2852 002e 00BF     		.align	2
 2853              	.L263:
 2854 0030 00000000 		.word	.LANCHOR0
 2855              		.cfi_endproc
 2856              	.LFE748:
 2857              		.size	vTaskPlaceOnEventList, .-vTaskPlaceOnEventList
 2858              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 2859              		.align	2
 2860              		.global	vTaskPlaceOnUnorderedEventList
 2861              		.thumb
 2862              		.thumb_func
 2863              		.type	vTaskPlaceOnUnorderedEventList, %function
 2864              	vTaskPlaceOnUnorderedEventList:
 2865              	.LFB749:
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 2866              		.loc 1 2939 0
 2867              		.cfi_startproc
 2868              		@ args = 0, pretend = 0, frame = 0
 2869              		@ frame_needed = 0, uses_anonymous_args = 0
 2870              	.LVL246:
2940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2871              		.loc 1 2940 0
 2872 0000 40B9     		cbnz	r0, .L266
 2873              	.LBB150:
 2874              	.LBB151:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2875              		.loc 2 156 0
 2876              		.syntax unified
 2877              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2878 0002 4FF02003 			mov r3, #32												
 2879 0006 83F31188 		msr basepri, r3											
 2880 000a BFF36F8F 		isb														
 2881 000e BFF34F8F 		dsb														
 2882              	
 2883              	@ 0 "" 2
 2884              	.LVL247:
 2885              		.thumb
 2886              		.syntax unified
 2887              	.L267:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 149


 2888 0012 FEE7     		b	.L267
 2889              	.L266:
 2890 0014 0346     		mov	r3, r0
 2891              	.LBE151:
 2892              	.LBE150:
2944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2893              		.loc 1 2944 0
 2894 0016 1048     		ldr	r0, .L271
 2895              	.LVL248:
 2896 0018 D0F81801 		ldr	r0, [r0, #280]
 2897 001c 40B9     		cbnz	r0, .L268
 2898              	.LBB152:
 2899              	.LBB153:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2900              		.loc 2 156 0
 2901              		.syntax unified
 2902              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2903 001e 4FF02003 			mov r3, #32												
 2904 0022 83F31188 		msr basepri, r3											
 2905 0026 BFF36F8F 		isb														
 2906 002a BFF34F8F 		dsb														
 2907              	
 2908              	@ 0 "" 2
 2909              	.LVL249:
 2910              		.thumb
 2911              		.syntax unified
 2912              	.L269:
 2913 002e FEE7     		b	.L269
 2914              	.LVL250:
 2915              	.L268:
 2916              	.LBE153:
 2917              	.LBE152:
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 2918              		.loc 1 2939 0
 2919 0030 10B5     		push	{r4, lr}
 2920              		.cfi_def_cfa_offset 8
 2921              		.cfi_offset 4, -8
 2922              		.cfi_offset 14, -4
 2923 0032 1846     		mov	r0, r3
 2924 0034 1446     		mov	r4, r2
 2925 0036 0B46     		mov	r3, r1
 2926              	.LVL251:
2949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2927              		.loc 1 2949 0
 2928 0038 074A     		ldr	r2, .L271
 2929              	.LVL252:
 2930 003a D2F80011 		ldr	r1, [r2, #256]
 2931              	.LVL253:
 2932 003e 43F00043 		orr	r3, r3, #-2147483648
 2933              	.LVL254:
 2934 0042 8B61     		str	r3, [r1, #24]
2956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2935              		.loc 1 2956 0
 2936 0044 D2F80011 		ldr	r1, [r2, #256]
 2937 0048 1831     		adds	r1, r1, #24
 2938 004a FFF7FEFF 		bl	vListInsertEnd
 2939              	.LVL255:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 150


2958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 2940              		.loc 1 2958 0
 2941 004e 0121     		movs	r1, #1
 2942 0050 2046     		mov	r0, r4
 2943 0052 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2944              	.LVL256:
 2945 0056 10BD     		pop	{r4, pc}
 2946              	.LVL257:
 2947              	.L272:
 2948              		.align	2
 2949              	.L271:
 2950 0058 00000000 		.word	.LANCHOR0
 2951              		.cfi_endproc
 2952              	.LFE749:
 2953              		.size	vTaskPlaceOnUnorderedEventList, .-vTaskPlaceOnUnorderedEventList
 2954              		.section	.text.vTaskPlaceOnEventListRestricted,"ax",%progbits
 2955              		.align	2
 2956              		.global	vTaskPlaceOnEventListRestricted
 2957              		.thumb
 2958              		.thumb_func
 2959              		.type	vTaskPlaceOnEventListRestricted, %function
 2960              	vTaskPlaceOnEventListRestricted:
 2961              	.LFB750:
2965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxEventList );
 2962              		.loc 1 2965 0
 2963              		.cfi_startproc
 2964              		@ args = 0, pretend = 0, frame = 0
 2965              		@ frame_needed = 0, uses_anonymous_args = 0
 2966              	.LVL258:
 2967 0000 38B5     		push	{r3, r4, r5, lr}
 2968              		.cfi_def_cfa_offset 16
 2969              		.cfi_offset 3, -16
 2970              		.cfi_offset 4, -12
 2971              		.cfi_offset 5, -8
 2972              		.cfi_offset 14, -4
2966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2973              		.loc 1 2966 0
 2974 0002 40B9     		cbnz	r0, .L274
 2975              	.LBB154:
 2976              	.LBB155:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2977              		.loc 2 156 0
 2978              		.syntax unified
 2979              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2980 0004 4FF02003 			mov r3, #32												
 2981 0008 83F31188 		msr basepri, r3											
 2982 000c BFF36F8F 		isb														
 2983 0010 BFF34F8F 		dsb														
 2984              	
 2985              	@ 0 "" 2
 2986              	.LVL259:
 2987              		.thumb
 2988              		.syntax unified
 2989              	.L275:
 2990 0014 FEE7     		b	.L275
 2991              	.L274:
 2992 0016 0C46     		mov	r4, r1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 151


 2993 0018 1546     		mov	r5, r2
 2994              	.LBE155:
 2995              	.LBE154:
2978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2996              		.loc 1 2978 0
 2997 001a 074A     		ldr	r2, .L279
 2998              	.LVL260:
 2999 001c D2F80011 		ldr	r1, [r2, #256]
 3000              	.LVL261:
 3001 0020 1831     		adds	r1, r1, #24
 3002 0022 FFF7FEFF 		bl	vListInsertEnd
 3003              	.LVL262:
2983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3004              		.loc 1 2983 0
 3005 0026 0DB1     		cbz	r5, .L276
2985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3006              		.loc 1 2985 0
 3007 0028 4FF0FF34 		mov	r4, #-1
 3008              	.LVL263:
 3009              	.L276:
2989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3010              		.loc 1 2989 0
 3011 002c 2946     		mov	r1, r5
 3012 002e 2046     		mov	r0, r4
 3013 0030 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3014              	.LVL264:
 3015 0034 38BD     		pop	{r3, r4, r5, pc}
 3016              	.LVL265:
 3017              	.L280:
 3018 0036 00BF     		.align	2
 3019              	.L279:
 3020 0038 00000000 		.word	.LANCHOR0
 3021              		.cfi_endproc
 3022              	.LFE750:
 3023              		.size	vTaskPlaceOnEventListRestricted, .-vTaskPlaceOnEventListRestricted
 3024              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 3025              		.align	2
 3026              		.global	xTaskRemoveFromEventList
 3027              		.thumb
 3028              		.thumb_func
 3029              		.type	xTaskRemoveFromEventList, %function
 3030              	xTaskRemoveFromEventList:
 3031              	.LFB751:
2996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3032              		.loc 1 2996 0
 3033              		.cfi_startproc
 3034              		@ args = 0, pretend = 0, frame = 0
 3035              		@ frame_needed = 0, uses_anonymous_args = 0
 3036              	.LVL266:
 3037 0000 38B5     		push	{r3, r4, r5, lr}
 3038              		.cfi_def_cfa_offset 16
 3039              		.cfi_offset 3, -16
 3040              		.cfi_offset 4, -12
 3041              		.cfi_offset 5, -8
 3042              		.cfi_offset 14, -4
3013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3043              		.loc 1 3013 0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 152


 3044 0002 C368     		ldr	r3, [r0, #12]
 3045 0004 DC68     		ldr	r4, [r3, #12]
 3046              	.LVL267:
3014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3047              		.loc 1 3014 0
 3048 0006 44B9     		cbnz	r4, .L282
 3049              	.LBB156:
 3050              	.LBB157:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3051              		.loc 2 156 0
 3052              		.syntax unified
 3053              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3054 0008 4FF02003 			mov r3, #32												
 3055 000c 83F31188 		msr basepri, r3											
 3056 0010 BFF36F8F 		isb														
 3057 0014 BFF34F8F 		dsb														
 3058              	
 3059              	@ 0 "" 2
 3060              	.LVL268:
 3061              		.thumb
 3062              		.syntax unified
 3063              	.L283:
 3064 0018 FEE7     		b	.L283
 3065              	.L282:
 3066              	.LBE157:
 3067              	.LBE156:
3015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3068              		.loc 1 3015 0
 3069 001a 04F11805 		add	r5, r4, #24
 3070 001e 2846     		mov	r0, r5
 3071              	.LVL269:
 3072 0020 FFF7FEFF 		bl	uxListRemove
 3073              	.LVL270:
3017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3074              		.loc 1 3017 0
 3075 0024 154B     		ldr	r3, .L290
 3076 0026 D3F81831 		ldr	r3, [r3, #280]
 3077 002a ABB9     		cbnz	r3, .L284
3019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3078              		.loc 1 3019 0
 3079 002c 251D     		adds	r5, r4, #4
 3080 002e 2846     		mov	r0, r5
 3081 0030 FFF7FEFF 		bl	uxListRemove
 3082              	.LVL271:
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3083              		.loc 1 3020 0
 3084 0034 E36A     		ldr	r3, [r4, #44]
 3085 0036 114A     		ldr	r2, .L290
 3086 0038 D2F80C21 		ldr	r2, [r2, #268]
 3087 003c 9342     		cmp	r3, r2
 3088 003e 02D9     		bls	.L285
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3089              		.loc 1 3020 0 is_stmt 0 discriminator 1
 3090 0040 0E4A     		ldr	r2, .L290
 3091 0042 C2F80C31 		str	r3, [r2, #268]
 3092              	.L285:
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 153


 3093              		.loc 1 3020 0 discriminator 3
 3094 0046 03EB8303 		add	r3, r3, r3, lsl #2
 3095 004a 9A00     		lsls	r2, r3, #2
 3096 004c 2946     		mov	r1, r5
 3097 004e 0C48     		ldr	r0, .L290+4
 3098 0050 1044     		add	r0, r0, r2
 3099 0052 FFF7FEFF 		bl	vListInsertEnd
 3100              	.LVL272:
 3101 0056 03E0     		b	.L286
 3102              	.L284:
3026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3103              		.loc 1 3026 0 is_stmt 1
 3104 0058 2946     		mov	r1, r5
 3105 005a 0A48     		ldr	r0, .L290+8
 3106 005c FFF7FEFF 		bl	vListInsertEnd
 3107              	.LVL273:
 3108              	.L286:
3029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3109              		.loc 1 3029 0
 3110 0060 E26A     		ldr	r2, [r4, #44]
 3111 0062 064B     		ldr	r3, .L290
 3112 0064 D3F80031 		ldr	r3, [r3, #256]
 3113 0068 DB6A     		ldr	r3, [r3, #44]
 3114 006a 9A42     		cmp	r2, r3
 3115 006c 04D9     		bls	.L288
 3116              	.LVL274:
3038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3117              		.loc 1 3038 0
 3118 006e 0120     		movs	r0, #1
 3119 0070 024B     		ldr	r3, .L290
 3120 0072 C3F82801 		str	r0, [r3, #296]
 3121 0076 38BD     		pop	{r3, r4, r5, pc}
 3122              	.LVL275:
 3123              	.L288:
3042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3124              		.loc 1 3042 0
 3125 0078 0020     		movs	r0, #0
 3126              	.LVL276:
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 3127              		.loc 1 3060 0
 3128 007a 38BD     		pop	{r3, r4, r5, pc}
 3129              	.LVL277:
 3130              	.L291:
 3131              		.align	2
 3132              	.L290:
 3133 007c 00000000 		.word	.LANCHOR0
 3134 0080 30000000 		.word	.LANCHOR0+48
 3135 0084 14000000 		.word	.LANCHOR0+20
 3136              		.cfi_endproc
 3137              	.LFE751:
 3138              		.size	xTaskRemoveFromEventList, .-xTaskRemoveFromEventList
 3139              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 3140              		.align	2
 3141              		.global	vTaskRemoveFromUnorderedEventList
 3142              		.thumb
 3143              		.thumb_func
 3144              		.type	vTaskRemoveFromUnorderedEventList, %function
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 154


 3145              	vTaskRemoveFromUnorderedEventList:
 3146              	.LFB752:
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3147              		.loc 1 3064 0
 3148              		.cfi_startproc
 3149              		@ args = 0, pretend = 0, frame = 0
 3150              		@ frame_needed = 0, uses_anonymous_args = 0
 3151              	.LVL278:
3069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3152              		.loc 1 3069 0
 3153 0000 1F4B     		ldr	r3, .L300
 3154 0002 D3F81831 		ldr	r3, [r3, #280]
 3155 0006 43B9     		cbnz	r3, .L293
 3156              	.LBB158:
 3157              	.LBB159:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3158              		.loc 2 156 0
 3159              		.syntax unified
 3160              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3161 0008 4FF02003 			mov r3, #32												
 3162 000c 83F31188 		msr basepri, r3											
 3163 0010 BFF36F8F 		isb														
 3164 0014 BFF34F8F 		dsb														
 3165              	
 3166              	@ 0 "" 2
 3167              	.LVL279:
 3168              		.thumb
 3169              		.syntax unified
 3170              	.L294:
 3171 0018 FEE7     		b	.L294
 3172              	.L293:
 3173              	.LBE159:
 3174              	.LBE158:
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3175              		.loc 1 3064 0
 3176 001a 70B5     		push	{r4, r5, r6, lr}
 3177              		.cfi_def_cfa_offset 16
 3178              		.cfi_offset 4, -16
 3179              		.cfi_offset 5, -12
 3180              		.cfi_offset 6, -8
 3181              		.cfi_offset 14, -4
3072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3182              		.loc 1 3072 0
 3183 001c 41F00043 		orr	r3, r1, #-2147483648
 3184 0020 0360     		str	r3, [r0]
3076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3185              		.loc 1 3076 0
 3186 0022 C468     		ldr	r4, [r0, #12]
 3187              	.LVL280:
3077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3188              		.loc 1 3077 0
 3189 0024 44B9     		cbnz	r4, .L295
 3190              	.LBB160:
 3191              	.LBB161:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3192              		.loc 2 156 0
 3193              		.syntax unified
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 155


 3194              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3195 0026 4FF02003 			mov r3, #32												
 3196 002a 83F31188 		msr basepri, r3											
 3197 002e BFF36F8F 		isb														
 3198 0032 BFF34F8F 		dsb														
 3199              	
 3200              	@ 0 "" 2
 3201              	.LVL281:
 3202              		.thumb
 3203              		.syntax unified
 3204              	.L296:
 3205 0036 FEE7     		b	.L296
 3206              	.L295:
 3207              	.LBE161:
 3208              	.LBE160:
3078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3209              		.loc 1 3078 0
 3210 0038 FFF7FEFF 		bl	uxListRemove
 3211              	.LVL282:
3083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3212              		.loc 1 3083 0
 3213 003c 261D     		adds	r6, r4, #4
 3214 003e 3046     		mov	r0, r6
 3215 0040 FFF7FEFF 		bl	uxListRemove
 3216              	.LVL283:
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3217              		.loc 1 3084 0
 3218 0044 E36A     		ldr	r3, [r4, #44]
 3219 0046 0E4A     		ldr	r2, .L300
 3220 0048 D2F80C21 		ldr	r2, [r2, #268]
 3221 004c 9342     		cmp	r3, r2
 3222 004e 02D9     		bls	.L297
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3223              		.loc 1 3084 0 is_stmt 0 discriminator 1
 3224 0050 0B4A     		ldr	r2, .L300
 3225 0052 C2F80C31 		str	r3, [r2, #268]
 3226              	.L297:
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3227              		.loc 1 3084 0 discriminator 3
 3228 0056 0A4D     		ldr	r5, .L300
 3229 0058 05F13000 		add	r0, r5, #48
 3230 005c 03EB8303 		add	r3, r3, r3, lsl #2
 3231 0060 9A00     		lsls	r2, r3, #2
 3232 0062 3146     		mov	r1, r6
 3233 0064 1044     		add	r0, r0, r2
 3234 0066 FFF7FEFF 		bl	vListInsertEnd
 3235              	.LVL284:
3086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3236              		.loc 1 3086 0 is_stmt 1 discriminator 3
 3237 006a E26A     		ldr	r2, [r4, #44]
 3238 006c D5F80031 		ldr	r3, [r5, #256]
 3239 0070 DB6A     		ldr	r3, [r3, #44]
 3240 0072 9A42     		cmp	r2, r3
 3241 0074 02D9     		bls	.L292
3092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3242              		.loc 1 3092 0
 3243 0076 0122     		movs	r2, #1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 156


 3244 0078 C5F82821 		str	r2, [r5, #296]
 3245              	.L292:
 3246 007c 70BD     		pop	{r4, r5, r6, pc}
 3247              	.LVL285:
 3248              	.L301:
 3249 007e 00BF     		.align	2
 3250              	.L300:
 3251 0080 00000000 		.word	.LANCHOR0
 3252              		.cfi_endproc
 3253              	.LFE752:
 3254              		.size	vTaskRemoveFromUnorderedEventList, .-vTaskRemoveFromUnorderedEventList
 3255              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 3256              		.align	2
 3257              		.global	vTaskSetTimeOutState
 3258              		.thumb
 3259              		.thumb_func
 3260              		.type	vTaskSetTimeOutState, %function
 3261              	vTaskSetTimeOutState:
 3262              	.LFB753:
3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
 3263              		.loc 1 3098 0
 3264              		.cfi_startproc
 3265              		@ args = 0, pretend = 0, frame = 0
 3266              		@ frame_needed = 0, uses_anonymous_args = 0
 3267              	.LVL286:
3099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
 3268              		.loc 1 3099 0
 3269 0000 40B9     		cbnz	r0, .L303
 3270              	.LBB162:
 3271              	.LBB163:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3272              		.loc 2 156 0
 3273              		.syntax unified
 3274              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3275 0002 4FF02003 			mov r3, #32												
 3276 0006 83F31188 		msr basepri, r3											
 3277 000a BFF36F8F 		isb														
 3278 000e BFF34F8F 		dsb														
 3279              	
 3280              	@ 0 "" 2
 3281              	.LVL287:
 3282              		.thumb
 3283              		.syntax unified
 3284              	.L304:
 3285 0012 FEE7     		b	.L304
 3286              	.L303:
 3287              	.LBE163:
 3288              	.LBE162:
3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
 3289              		.loc 1 3098 0
 3290 0014 10B5     		push	{r4, lr}
 3291              		.cfi_def_cfa_offset 8
 3292              		.cfi_offset 4, -8
 3293              		.cfi_offset 14, -4
 3294 0016 0446     		mov	r4, r0
3100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3295              		.loc 1 3100 0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 157


 3296 0018 FFF7FEFF 		bl	vPortEnterCritical
 3297              	.LVL288:
3102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 3298              		.loc 1 3102 0
 3299 001c 044B     		ldr	r3, .L306
 3300 001e D3F82021 		ldr	r2, [r3, #288]
 3301 0022 2260     		str	r2, [r4]
3103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3302              		.loc 1 3103 0
 3303 0024 D3F81431 		ldr	r3, [r3, #276]
 3304 0028 6360     		str	r3, [r4, #4]
3105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 3305              		.loc 1 3105 0
 3306 002a FFF7FEFF 		bl	vPortExitCritical
 3307              	.LVL289:
 3308 002e 10BD     		pop	{r4, pc}
 3309              	.LVL290:
 3310              	.L307:
 3311              		.align	2
 3312              	.L306:
 3313 0030 00000000 		.word	.LANCHOR0
 3314              		.cfi_endproc
 3315              	.LFE753:
 3316              		.size	vTaskSetTimeOutState, .-vTaskSetTimeOutState
 3317              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 3318              		.align	2
 3319              		.global	vTaskInternalSetTimeOutState
 3320              		.thumb
 3321              		.thumb_func
 3322              		.type	vTaskInternalSetTimeOutState, %function
 3323              	vTaskInternalSetTimeOutState:
 3324              	.LFB754:
3110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
 3325              		.loc 1 3110 0
 3326              		.cfi_startproc
 3327              		@ args = 0, pretend = 0, frame = 0
 3328              		@ frame_needed = 0, uses_anonymous_args = 0
 3329              		@ link register save eliminated.
 3330              	.LVL291:
3112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3331              		.loc 1 3112 0
 3332 0000 034B     		ldr	r3, .L309
 3333 0002 D3F82021 		ldr	r2, [r3, #288]
 3334 0006 0260     		str	r2, [r0]
3113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 3335              		.loc 1 3113 0
 3336 0008 D3F81431 		ldr	r3, [r3, #276]
 3337 000c 4360     		str	r3, [r0, #4]
 3338 000e 7047     		bx	lr
 3339              	.L310:
 3340              		.align	2
 3341              	.L309:
 3342 0010 00000000 		.word	.LANCHOR0
 3343              		.cfi_endproc
 3344              	.LFE754:
 3345              		.size	vTaskInternalSetTimeOutState, .-vTaskInternalSetTimeOutState
 3346              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 158


 3347              		.align	2
 3348              		.global	xTaskCheckForTimeOut
 3349              		.thumb
 3350              		.thumb_func
 3351              		.type	xTaskCheckForTimeOut, %function
 3352              	xTaskCheckForTimeOut:
 3353              	.LFB755:
3118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
 3354              		.loc 1 3118 0
 3355              		.cfi_startproc
 3356              		@ args = 0, pretend = 0, frame = 0
 3357              		@ frame_needed = 0, uses_anonymous_args = 0
 3358              	.LVL292:
 3359 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3360              		.cfi_def_cfa_offset 24
 3361              		.cfi_offset 3, -24
 3362              		.cfi_offset 4, -20
 3363              		.cfi_offset 5, -16
 3364              		.cfi_offset 6, -12
 3365              		.cfi_offset 7, -8
 3366              		.cfi_offset 14, -4
3121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3367              		.loc 1 3121 0
 3368 0002 40B9     		cbnz	r0, .L312
 3369              	.LBB164:
 3370              	.LBB165:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3371              		.loc 2 156 0
 3372              		.syntax unified
 3373              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3374 0004 4FF02003 			mov r3, #32												
 3375 0008 83F31188 		msr basepri, r3											
 3376 000c BFF36F8F 		isb														
 3377 0010 BFF34F8F 		dsb														
 3378              	
 3379              	@ 0 "" 2
 3380              	.LVL293:
 3381              		.thumb
 3382              		.syntax unified
 3383              	.L313:
 3384 0014 FEE7     		b	.L313
 3385              	.L312:
 3386 0016 0546     		mov	r5, r0
 3387              	.LBE165:
 3388              	.LBE164:
3122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3389              		.loc 1 3122 0
 3390 0018 41B9     		cbnz	r1, .L314
 3391              	.LBB166:
 3392              	.LBB167:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3393              		.loc 2 156 0
 3394              		.syntax unified
 3395              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3396 001a 4FF02003 			mov r3, #32												
 3397 001e 83F31188 		msr basepri, r3											
 3398 0022 BFF36F8F 		isb														
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 159


 3399 0026 BFF34F8F 		dsb														
 3400              	
 3401              	@ 0 "" 2
 3402              	.LVL294:
 3403              		.thumb
 3404              		.syntax unified
 3405              	.L315:
 3406 002a FEE7     		b	.L315
 3407              	.L314:
 3408 002c 0C46     		mov	r4, r1
 3409              	.LBE167:
 3410              	.LBE166:
3124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3411              		.loc 1 3124 0
 3412 002e FFF7FEFF 		bl	vPortEnterCritical
 3413              	.LVL295:
 3414              	.LBB168:
3127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 3415              		.loc 1 3127 0
 3416 0032 124B     		ldr	r3, .L322
 3417 0034 D3F81401 		ldr	r0, [r3, #276]
 3418              	.LVL296:
3128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3419              		.loc 1 3128 0
 3420 0038 6968     		ldr	r1, [r5, #4]
 3421 003a 421A     		subs	r2, r0, r1
 3422              	.LVL297:
3142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3423              		.loc 1 3142 0
 3424 003c 2368     		ldr	r3, [r4]
 3425 003e B3F1FF3F 		cmp	r3, #-1
 3426 0042 14D0     		beq	.L319
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3427              		.loc 1 3152 0
 3428 0044 2F68     		ldr	r7, [r5]
 3429 0046 0D4E     		ldr	r6, .L322
 3430 0048 D6F82061 		ldr	r6, [r6, #288]
 3431 004c B742     		cmp	r7, r6
 3432 004e 01D0     		beq	.L317
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3433              		.loc 1 3152 0 is_stmt 0 discriminator 1
 3434 0050 8842     		cmp	r0, r1
 3435 0052 0ED2     		bcs	.L320
 3436              	.L317:
3161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3437              		.loc 1 3161 0 is_stmt 1
 3438 0054 9A42     		cmp	r2, r3
 3439 0056 06D2     		bcs	.L318
3164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 3440              		.loc 1 3164 0
 3441 0058 9B1A     		subs	r3, r3, r2
 3442 005a 2360     		str	r3, [r4]
3165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFALSE;
 3443              		.loc 1 3165 0
 3444 005c 2846     		mov	r0, r5
 3445              	.LVL298:
 3446 005e FFF7FEFF 		bl	vTaskInternalSetTimeOutState
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 160


 3447              	.LVL299:
3166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3448              		.loc 1 3166 0
 3449 0062 0024     		movs	r4, #0
 3450              	.LVL300:
 3451 0064 06E0     		b	.L316
 3452              	.LVL301:
 3453              	.L318:
3170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdTRUE;
 3454              		.loc 1 3170 0
 3455 0066 0023     		movs	r3, #0
 3456 0068 2360     		str	r3, [r4]
 3457              	.LVL302:
3171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3458              		.loc 1 3171 0
 3459 006a 0124     		movs	r4, #1
 3460              	.LVL303:
 3461 006c 02E0     		b	.L316
 3462              	.LVL304:
 3463              	.L319:
3147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3464              		.loc 1 3147 0
 3465 006e 0024     		movs	r4, #0
 3466              	.LVL305:
 3467 0070 00E0     		b	.L316
 3468              	.LVL306:
 3469              	.L320:
3159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3470              		.loc 1 3159 0
 3471 0072 0124     		movs	r4, #1
 3472              	.LVL307:
 3473              	.L316:
 3474              	.LBE168:
3174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3475              		.loc 1 3174 0
 3476 0074 FFF7FEFF 		bl	vPortExitCritical
 3477              	.LVL308:
3177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 3478              		.loc 1 3177 0
 3479 0078 2046     		mov	r0, r4
 3480 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3481              	.LVL309:
 3482              	.L323:
 3483              		.align	2
 3484              	.L322:
 3485 007c 00000000 		.word	.LANCHOR0
 3486              		.cfi_endproc
 3487              	.LFE755:
 3488              		.size	xTaskCheckForTimeOut, .-xTaskCheckForTimeOut
 3489              		.section	.text.vTaskMissedYield,"ax",%progbits
 3490              		.align	2
 3491              		.global	vTaskMissedYield
 3492              		.thumb
 3493              		.thumb_func
 3494              		.type	vTaskMissedYield, %function
 3495              	vTaskMissedYield:
 3496              	.LFB756:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 161


3181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xYieldPending = pdTRUE;
 3497              		.loc 1 3181 0
 3498              		.cfi_startproc
 3499              		@ args = 0, pretend = 0, frame = 0
 3500              		@ frame_needed = 0, uses_anonymous_args = 0
 3501              		@ link register save eliminated.
3182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 3502              		.loc 1 3182 0
 3503 0000 0122     		movs	r2, #1
 3504 0002 024B     		ldr	r3, .L325
 3505 0004 C3F82821 		str	r2, [r3, #296]
 3506 0008 7047     		bx	lr
 3507              	.L326:
 3508 000a 00BF     		.align	2
 3509              	.L325:
 3510 000c 00000000 		.word	.LANCHOR0
 3511              		.cfi_endproc
 3512              	.LFE756:
 3513              		.size	vTaskMissedYield, .-vTaskMissedYield
 3514              		.section	.text.vTaskSetThreadLocalStoragePointer,"ax",%progbits
 3515              		.align	2
 3516              		.global	vTaskSetThreadLocalStoragePointer
 3517              		.thumb
 3518              		.thumb_func
 3519              		.type	vTaskSetThreadLocalStoragePointer, %function
 3520              	vTaskSetThreadLocalStoragePointer:
 3521              	.LFB758:
3395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 3522              		.loc 1 3395 0
 3523              		.cfi_startproc
 3524              		@ args = 0, pretend = 0, frame = 0
 3525              		@ frame_needed = 0, uses_anonymous_args = 0
 3526              		@ link register save eliminated.
 3527              	.LVL310:
3398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3528              		.loc 1 3398 0
 3529 0000 0429     		cmp	r1, #4
 3530 0002 07DC     		bgt	.L327
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
 3531              		.loc 1 3400 0
 3532 0004 10B9     		cbnz	r0, .L329
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
 3533              		.loc 1 3400 0 is_stmt 0 discriminator 1
 3534 0006 044B     		ldr	r3, .L330
 3535 0008 D3F80001 		ldr	r0, [r3, #256]
 3536              	.LVL311:
 3537              	.L329:
3401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3538              		.loc 1 3401 0 is_stmt 1 discriminator 4
 3539 000c 1031     		adds	r1, r1, #16
 3540              	.LVL312:
 3541 000e 00EB8101 		add	r1, r0, r1, lsl #2
 3542              	.LVL313:
 3543 0012 4A60     		str	r2, [r1, #4]
 3544              	.LVL314:
 3545              	.L327:
 3546 0014 7047     		bx	lr
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 162


 3547              	.L331:
 3548 0016 00BF     		.align	2
 3549              	.L330:
 3550 0018 00000000 		.word	.LANCHOR0
 3551              		.cfi_endproc
 3552              	.LFE758:
 3553              		.size	vTaskSetThreadLocalStoragePointer, .-vTaskSetThreadLocalStoragePointer
 3554              		.section	.text.pvTaskGetThreadLocalStoragePointer,"ax",%progbits
 3555              		.align	2
 3556              		.global	pvTaskGetThreadLocalStoragePointer
 3557              		.thumb
 3558              		.thumb_func
 3559              		.type	pvTaskGetThreadLocalStoragePointer, %function
 3560              	pvTaskGetThreadLocalStoragePointer:
 3561              	.LFB759:
3411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvReturn = NULL;
 3562              		.loc 1 3411 0
 3563              		.cfi_startproc
 3564              		@ args = 0, pretend = 0, frame = 0
 3565              		@ frame_needed = 0, uses_anonymous_args = 0
 3566              		@ link register save eliminated.
 3567              	.LVL315:
3415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3568              		.loc 1 3415 0
 3569 0000 0429     		cmp	r1, #4
 3570 0002 08DC     		bgt	.L335
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
 3571              		.loc 1 3417 0
 3572 0004 10B9     		cbnz	r0, .L334
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
 3573              		.loc 1 3417 0 is_stmt 0 discriminator 1
 3574 0006 054B     		ldr	r3, .L336
 3575 0008 D3F80001 		ldr	r0, [r3, #256]
 3576              	.LVL316:
 3577              	.L334:
3418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3578              		.loc 1 3418 0 is_stmt 1 discriminator 4
 3579 000c 1031     		adds	r1, r1, #16
 3580              	.LVL317:
 3581 000e 00EB8100 		add	r0, r0, r1, lsl #2
 3582              	.LVL318:
 3583 0012 4068     		ldr	r0, [r0, #4]
 3584              	.LVL319:
 3585 0014 7047     		bx	lr
 3586              	.LVL320:
 3587              	.L335:
3422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3588              		.loc 1 3422 0
 3589 0016 0020     		movs	r0, #0
 3590              	.LVL321:
3426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3591              		.loc 1 3426 0
 3592 0018 7047     		bx	lr
 3593              	.L337:
 3594 001a 00BF     		.align	2
 3595              	.L336:
 3596 001c 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 163


 3597              		.cfi_endproc
 3598              	.LFE759:
 3599              		.size	pvTaskGetThreadLocalStoragePointer, .-pvTaskGetThreadLocalStoragePointer
 3600              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 3601              		.align	2
 3602              		.global	xTaskGetCurrentTaskHandle
 3603              		.thumb
 3604              		.thumb_func
 3605              		.type	xTaskGetCurrentTaskHandle, %function
 3606              	xTaskGetCurrentTaskHandle:
 3607              	.LFB764:
3768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xReturn;
 3608              		.loc 1 3768 0
 3609              		.cfi_startproc
 3610              		@ args = 0, pretend = 0, frame = 0
 3611              		@ frame_needed = 0, uses_anonymous_args = 0
 3612              		@ link register save eliminated.
3774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3613              		.loc 1 3774 0
 3614 0000 014B     		ldr	r3, .L339
 3615 0002 D3F80001 		ldr	r0, [r3, #256]
 3616              	.LVL322:
3777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3617              		.loc 1 3777 0
 3618 0006 7047     		bx	lr
 3619              	.L340:
 3620              		.align	2
 3621              	.L339:
 3622 0008 00000000 		.word	.LANCHOR0
 3623              		.cfi_endproc
 3624              	.LFE764:
 3625              		.size	xTaskGetCurrentTaskHandle, .-xTaskGetCurrentTaskHandle
 3626              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 3627              		.align	2
 3628              		.global	xTaskGetSchedulerState
 3629              		.thumb
 3630              		.thumb_func
 3631              		.type	xTaskGetSchedulerState, %function
 3632              	xTaskGetSchedulerState:
 3633              	.LFB765:
3785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
 3634              		.loc 1 3785 0
 3635              		.cfi_startproc
 3636              		@ args = 0, pretend = 0, frame = 0
 3637              		@ frame_needed = 0, uses_anonymous_args = 0
 3638              		@ link register save eliminated.
3788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3639              		.loc 1 3788 0
 3640 0000 064B     		ldr	r3, .L345
 3641 0002 D3F80431 		ldr	r3, [r3, #260]
 3642 0006 2BB1     		cbz	r3, .L343
3794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3643              		.loc 1 3794 0
 3644 0008 044B     		ldr	r3, .L345
 3645 000a D3F81831 		ldr	r3, [r3, #280]
 3646 000e 1BB9     		cbnz	r3, .L344
3796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 164


 3647              		.loc 1 3796 0
 3648 0010 0220     		movs	r0, #2
 3649 0012 7047     		bx	lr
 3650              	.L343:
3790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3651              		.loc 1 3790 0
 3652 0014 0120     		movs	r0, #1
 3653 0016 7047     		bx	lr
 3654              	.L344:
3800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3655              		.loc 1 3800 0
 3656 0018 0020     		movs	r0, #0
 3657              	.LVL323:
3805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3658              		.loc 1 3805 0
 3659 001a 7047     		bx	lr
 3660              	.L346:
 3661              		.align	2
 3662              	.L345:
 3663 001c 00000000 		.word	.LANCHOR0
 3664              		.cfi_endproc
 3665              	.LFE765:
 3666              		.size	xTaskGetSchedulerState, .-xTaskGetSchedulerState
 3667              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 3668              		.align	2
 3669              		.global	uxTaskResetEventItemValue
 3670              		.thumb
 3671              		.thumb_func
 3672              		.type	uxTaskResetEventItemValue, %function
 3673              	uxTaskResetEventItemValue:
 3674              	.LFB766:
4394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t uxReturn;
 3675              		.loc 1 4394 0
 3676              		.cfi_startproc
 3677              		@ args = 0, pretend = 0, frame = 0
 3678              		@ frame_needed = 0, uses_anonymous_args = 0
 3679              		@ link register save eliminated.
4397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3680              		.loc 1 4397 0
 3681 0000 064B     		ldr	r3, .L348
 3682 0002 D3F80021 		ldr	r2, [r3, #256]
 3683 0006 9069     		ldr	r0, [r2, #24]
 3684              	.LVL324:
4401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3685              		.loc 1 4401 0
 3686 0008 D3F80021 		ldr	r2, [r3, #256]
 3687 000c D3F80031 		ldr	r3, [r3, #256]
 3688 0010 DB6A     		ldr	r3, [r3, #44]
 3689 0012 C3F10703 		rsb	r3, r3, #7
 3690 0016 9361     		str	r3, [r2, #24]
4404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 3691              		.loc 1 4404 0
 3692 0018 7047     		bx	lr
 3693              	.L349:
 3694 001a 00BF     		.align	2
 3695              	.L348:
 3696 001c 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 165


 3697              		.cfi_endproc
 3698              	.LFE766:
 3699              		.size	uxTaskResetEventItemValue, .-uxTaskResetEventItemValue
 3700              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 3701              		.align	2
 3702              		.global	ulTaskNotifyTake
 3703              		.thumb
 3704              		.thumb_func
 3705              		.type	ulTaskNotifyTake, %function
 3706              	ulTaskNotifyTake:
 3707              	.LFB767:
4427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulReturn;
 3708              		.loc 1 4427 0
 3709              		.cfi_startproc
 3710              		@ args = 0, pretend = 0, frame = 0
 3711              		@ frame_needed = 0, uses_anonymous_args = 0
 3712              	.LVL325:
 3713 0000 38B5     		push	{r3, r4, r5, lr}
 3714              		.cfi_def_cfa_offset 16
 3715              		.cfi_offset 3, -16
 3716              		.cfi_offset 4, -12
 3717              		.cfi_offset 5, -8
 3718              		.cfi_offset 14, -4
 3719 0002 0546     		mov	r5, r0
 3720 0004 0C46     		mov	r4, r1
4430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3721              		.loc 1 4430 0
 3722 0006 FFF7FEFF 		bl	vPortEnterCritical
 3723              	.LVL326:
4433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3724              		.loc 1 4433 0
 3725 000a 1B4B     		ldr	r3, .L355
 3726 000c D3F80031 		ldr	r3, [r3, #256]
 3727 0010 9B6D     		ldr	r3, [r3, #88]
 3728 0012 93B9     		cbnz	r3, .L351
4436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3729              		.loc 1 4436 0
 3730 0014 184B     		ldr	r3, .L355
 3731 0016 D3F80031 		ldr	r3, [r3, #256]
 3732 001a 0122     		movs	r2, #1
 3733 001c 83F85C20 		strb	r2, [r3, #92]
4438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 3734              		.loc 1 4438 0
 3735 0020 5CB1     		cbz	r4, .L351
4440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 3736              		.loc 1 4440 0
 3737 0022 1146     		mov	r1, r2
 3738 0024 2046     		mov	r0, r4
 3739 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3740              	.LVL327:
4447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3741              		.loc 1 4447 0
 3742 002a 4FF08052 		mov	r2, #268435456
 3743 002e 134B     		ldr	r3, .L355+4
 3744 0030 1A60     		str	r2, [r3]
 3745              		.syntax unified
 3746              	@ 4447 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 166


 3747 0032 BFF34F8F 		dsb
 3748              	@ 0 "" 2
 3749              	@ 4447 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 3750 0036 BFF36F8F 		isb
 3751              	@ 0 "" 2
 3752              		.thumb
 3753              		.syntax unified
 3754              	.L351:
4459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3755              		.loc 1 4459 0
 3756 003a FFF7FEFF 		bl	vPortExitCritical
 3757              	.LVL328:
4461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3758              		.loc 1 4461 0
 3759 003e FFF7FEFF 		bl	vPortEnterCritical
 3760              	.LVL329:
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3761              		.loc 1 4464 0
 3762 0042 0D4B     		ldr	r3, .L355
 3763 0044 D3F80031 		ldr	r3, [r3, #256]
 3764 0048 9C6D     		ldr	r4, [r3, #88]
 3765              	.LVL330:
4466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3766              		.loc 1 4466 0
 3767 004a 5CB1     		cbz	r4, .L352
4468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 3768              		.loc 1 4468 0
 3769 004c 2DB1     		cbz	r5, .L353
4470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3770              		.loc 1 4470 0
 3771 004e 0A4B     		ldr	r3, .L355
 3772 0050 D3F80031 		ldr	r3, [r3, #256]
 3773 0054 0022     		movs	r2, #0
 3774 0056 9A65     		str	r2, [r3, #88]
 3775 0058 04E0     		b	.L352
 3776              	.L353:
4474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3777              		.loc 1 4474 0
 3778 005a 074B     		ldr	r3, .L355
 3779 005c D3F80031 		ldr	r3, [r3, #256]
 3780 0060 621E     		subs	r2, r4, #1
 3781 0062 9A65     		str	r2, [r3, #88]
 3782              	.L352:
4482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3783              		.loc 1 4482 0
 3784 0064 044B     		ldr	r3, .L355
 3785 0066 D3F80031 		ldr	r3, [r3, #256]
 3786 006a 0022     		movs	r2, #0
 3787 006c 83F85C20 		strb	r2, [r3, #92]
4484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3788              		.loc 1 4484 0
 3789 0070 FFF7FEFF 		bl	vPortExitCritical
 3790              	.LVL331:
4487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3791              		.loc 1 4487 0
 3792 0074 2046     		mov	r0, r4
 3793 0076 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 167


 3794              	.LVL332:
 3795              	.L356:
 3796              		.align	2
 3797              	.L355:
 3798 0078 00000000 		.word	.LANCHOR0
 3799 007c 04ED00E0 		.word	-536810236
 3800              		.cfi_endproc
 3801              	.LFE767:
 3802              		.size	ulTaskNotifyTake, .-ulTaskNotifyTake
 3803              		.section	.text.xTaskNotifyWait,"ax",%progbits
 3804              		.align	2
 3805              		.global	xTaskNotifyWait
 3806              		.thumb
 3807              		.thumb_func
 3808              		.type	xTaskNotifyWait, %function
 3809              	xTaskNotifyWait:
 3810              	.LFB768:
4495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
 3811              		.loc 1 4495 0
 3812              		.cfi_startproc
 3813              		@ args = 0, pretend = 0, frame = 0
 3814              		@ frame_needed = 0, uses_anonymous_args = 0
 3815              	.LVL333:
 3816 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3817              		.cfi_def_cfa_offset 24
 3818              		.cfi_offset 3, -24
 3819              		.cfi_offset 4, -20
 3820              		.cfi_offset 5, -16
 3821              		.cfi_offset 6, -12
 3822              		.cfi_offset 7, -8
 3823              		.cfi_offset 14, -4
 3824 0002 0746     		mov	r7, r0
 3825 0004 0D46     		mov	r5, r1
 3826 0006 1446     		mov	r4, r2
 3827 0008 1E46     		mov	r6, r3
4498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3828              		.loc 1 4498 0
 3829 000a FFF7FEFF 		bl	vPortEnterCritical
 3830              	.LVL334:
4501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3831              		.loc 1 4501 0
 3832 000e 234B     		ldr	r3, .L363
 3833 0010 D3F80031 		ldr	r3, [r3, #256]
 3834 0014 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3835 0018 DBB2     		uxtb	r3, r3
 3836 001a 022B     		cmp	r3, #2
 3837 001c 18D0     		beq	.L358
4506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3838              		.loc 1 4506 0
 3839 001e 1F4B     		ldr	r3, .L363
 3840 0020 D3F80021 		ldr	r2, [r3, #256]
 3841 0024 906D     		ldr	r0, [r2, #88]
 3842 0026 20EA0700 		bic	r0, r0, r7
 3843 002a 9065     		str	r0, [r2, #88]
4509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3844              		.loc 1 4509 0
 3845 002c D3F80031 		ldr	r3, [r3, #256]
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 168


 3846 0030 0122     		movs	r2, #1
 3847 0032 83F85C20 		strb	r2, [r3, #92]
4511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 3848              		.loc 1 4511 0
 3849 0036 5EB1     		cbz	r6, .L358
4513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 3850              		.loc 1 4513 0
 3851 0038 1146     		mov	r1, r2
 3852 003a 3046     		mov	r0, r6
 3853 003c FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3854              	.LVL335:
4520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3855              		.loc 1 4520 0
 3856 0040 4FF08052 		mov	r2, #268435456
 3857 0044 164B     		ldr	r3, .L363+4
 3858 0046 1A60     		str	r2, [r3]
 3859              		.syntax unified
 3860              	@ 4520 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 3861 0048 BFF34F8F 		dsb
 3862              	@ 0 "" 2
 3863              	@ 4520 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 3864 004c BFF36F8F 		isb
 3865              	@ 0 "" 2
 3866              		.thumb
 3867              		.syntax unified
 3868              	.L358:
4532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3869              		.loc 1 4532 0
 3870 0050 FFF7FEFF 		bl	vPortExitCritical
 3871              	.LVL336:
4534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3872              		.loc 1 4534 0
 3873 0054 FFF7FEFF 		bl	vPortEnterCritical
 3874              	.LVL337:
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3875              		.loc 1 4538 0
 3876 0058 24B1     		cbz	r4, .L359
4542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3877              		.loc 1 4542 0
 3878 005a 104B     		ldr	r3, .L363
 3879 005c D3F80031 		ldr	r3, [r3, #256]
 3880 0060 9B6D     		ldr	r3, [r3, #88]
 3881 0062 2360     		str	r3, [r4]
 3882              	.L359:
4549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3883              		.loc 1 4549 0
 3884 0064 0D4B     		ldr	r3, .L363
 3885 0066 D3F80031 		ldr	r3, [r3, #256]
 3886 006a 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3887 006e DBB2     		uxtb	r3, r3
 3888 0070 022B     		cmp	r3, #2
 3889 0072 08D1     		bne	.L361
4558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
 3890              		.loc 1 4558 0
 3891 0074 094B     		ldr	r3, .L363
 3892 0076 D3F80021 		ldr	r2, [r3, #256]
 3893 007a 936D     		ldr	r3, [r2, #88]
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 169


 3894 007c 23EA0505 		bic	r5, r3, r5
 3895              	.LVL338:
 3896 0080 9565     		str	r5, [r2, #88]
 3897              	.LVL339:
4559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3898              		.loc 1 4559 0
 3899 0082 0124     		movs	r4, #1
 3900              	.LVL340:
 3901 0084 00E0     		b	.L360
 3902              	.LVL341:
 3903              	.L361:
4552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3904              		.loc 1 4552 0
 3905 0086 0024     		movs	r4, #0
 3906              	.LVL342:
 3907              	.L360:
4562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3908              		.loc 1 4562 0
 3909 0088 044B     		ldr	r3, .L363
 3910 008a D3F80031 		ldr	r3, [r3, #256]
 3911 008e 0022     		movs	r2, #0
 3912 0090 83F85C20 		strb	r2, [r3, #92]
4564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3913              		.loc 1 4564 0
 3914 0094 FFF7FEFF 		bl	vPortExitCritical
 3915              	.LVL343:
4567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3916              		.loc 1 4567 0
 3917 0098 2046     		mov	r0, r4
 3918 009a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3919              	.LVL344:
 3920              	.L364:
 3921              		.align	2
 3922              	.L363:
 3923 009c 00000000 		.word	.LANCHOR0
 3924 00a0 04ED00E0 		.word	-536810236
 3925              		.cfi_endproc
 3926              	.LFE768:
 3927              		.size	xTaskNotifyWait, .-xTaskNotifyWait
 3928              		.section	.text.xTaskGenericNotify,"ax",%progbits
 3929              		.align	2
 3930              		.global	xTaskGenericNotify
 3931              		.thumb
 3932              		.thumb_func
 3933              		.type	xTaskGenericNotify, %function
 3934              	xTaskGenericNotify:
 3935              	.LFB769:
4575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
 3936              		.loc 1 4575 0
 3937              		.cfi_startproc
 3938              		@ args = 0, pretend = 0, frame = 0
 3939              		@ frame_needed = 0, uses_anonymous_args = 0
 3940              	.LVL345:
 3941 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3942              		.cfi_def_cfa_offset 24
 3943              		.cfi_offset 3, -24
 3944              		.cfi_offset 4, -20
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 170


 3945              		.cfi_offset 5, -16
 3946              		.cfi_offset 6, -12
 3947              		.cfi_offset 7, -8
 3948              		.cfi_offset 14, -4
 3949              	.LVL346:
4580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 3950              		.loc 1 4580 0
 3951 0002 40B9     		cbnz	r0, .L366
 3952              	.LBB169:
 3953              	.LBB170:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3954              		.loc 2 156 0
 3955              		.syntax unified
 3956              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3957 0004 4FF02003 			mov r3, #32												
 3958 0008 83F31188 		msr basepri, r3											
 3959 000c BFF36F8F 		isb														
 3960 0010 BFF34F8F 		dsb														
 3961              	
 3962              	@ 0 "" 2
 3963              	.LVL347:
 3964              		.thumb
 3965              		.syntax unified
 3966              	.L367:
 3967 0014 FEE7     		b	.L367
 3968              	.LVL348:
 3969              	.L366:
 3970 0016 0446     		mov	r4, r0
 3971 0018 1F46     		mov	r7, r3
 3972 001a 1546     		mov	r5, r2
 3973 001c 0E46     		mov	r6, r1
 3974              	.LVL349:
 3975              	.LBE170:
 3976              	.LBE169:
4583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3977              		.loc 1 4583 0
 3978 001e FFF7FEFF 		bl	vPortEnterCritical
 3979              	.LVL350:
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3980              		.loc 1 4585 0
 3981 0022 0FB1     		cbz	r7, .L368
4587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3982              		.loc 1 4587 0
 3983 0024 A36D     		ldr	r3, [r4, #88]
 3984 0026 3B60     		str	r3, [r7]
 3985              	.L368:
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3986              		.loc 1 4590 0
 3987 0028 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 3988 002c DBB2     		uxtb	r3, r3
 3989              	.LVL351:
4592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3990              		.loc 1 4592 0
 3991 002e 0222     		movs	r2, #2
 3992 0030 84F85C20 		strb	r2, [r4, #92]
4594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3993              		.loc 1 4594 0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 171


 3994 0034 6A1E     		subs	r2, r5, #1
 3995 0036 032A     		cmp	r2, #3
 3996 0038 15D8     		bhi	.L379
 3997 003a DFE802F0 		tbb	[pc, r2]
 3998              	.L371:
 3999 003e 02       		.byte	(.L370-.L371)/2
 4000 003f 07       		.byte	(.L372-.L371)/2
 4001 0040 0C       		.byte	(.L373-.L371)/2
 4002 0041 0F       		.byte	(.L374-.L371)/2
 4003              		.p2align 1
 4004              	.L370:
4597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4005              		.loc 1 4597 0
 4006 0042 A26D     		ldr	r2, [r4, #88]
 4007 0044 1643     		orrs	r6, r6, r2
 4008              	.LVL352:
 4009 0046 A665     		str	r6, [r4, #88]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4010              		.loc 1 4577 0
 4011 0048 0125     		movs	r5, #1
4598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4012              		.loc 1 4598 0
 4013 004a 0FE0     		b	.L369
 4014              	.LVL353:
 4015              	.L372:
4601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4016              		.loc 1 4601 0
 4017 004c A26D     		ldr	r2, [r4, #88]
 4018 004e 0132     		adds	r2, r2, #1
 4019 0050 A265     		str	r2, [r4, #88]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4020              		.loc 1 4577 0
 4021 0052 0125     		movs	r5, #1
4602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4022              		.loc 1 4602 0
 4023 0054 0AE0     		b	.L369
 4024              	.L373:
4605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4025              		.loc 1 4605 0
 4026 0056 A665     		str	r6, [r4, #88]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4027              		.loc 1 4577 0
 4028 0058 0125     		movs	r5, #1
4606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4029              		.loc 1 4606 0
 4030 005a 07E0     		b	.L369
 4031              	.L374:
4609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4032              		.loc 1 4609 0
 4033 005c 022B     		cmp	r3, #2
 4034 005e 04D0     		beq	.L380
4611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4035              		.loc 1 4611 0
 4036 0060 A665     		str	r6, [r4, #88]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4037              		.loc 1 4577 0
 4038 0062 0125     		movs	r5, #1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 172


 4039 0064 02E0     		b	.L369
 4040              	.L379:
 4041 0066 0125     		movs	r5, #1
 4042 0068 00E0     		b	.L369
 4043              	.L380:
4616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4044              		.loc 1 4616 0
 4045 006a 0025     		movs	r5, #0
 4046              	.LVL354:
 4047              	.L369:
4630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4048              		.loc 1 4630 0
 4049 006c 012B     		cmp	r3, #1
 4050 006e 2ED1     		bne	.L375
4632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 4051              		.loc 1 4632 0
 4052 0070 261D     		adds	r6, r4, #4
 4053 0072 3046     		mov	r0, r6
 4054 0074 FFF7FEFF 		bl	uxListRemove
 4055              	.LVL355:
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4056              		.loc 1 4633 0
 4057 0078 E36A     		ldr	r3, [r4, #44]
 4058 007a 174A     		ldr	r2, .L382
 4059 007c D2F80C21 		ldr	r2, [r2, #268]
 4060 0080 9342     		cmp	r3, r2
 4061 0082 02D9     		bls	.L376
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4062              		.loc 1 4633 0 is_stmt 0 discriminator 1
 4063 0084 144A     		ldr	r2, .L382
 4064 0086 C2F80C31 		str	r3, [r2, #268]
 4065              	.L376:
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4066              		.loc 1 4633 0 discriminator 3
 4067 008a 03EB8303 		add	r3, r3, r3, lsl #2
 4068 008e 9A00     		lsls	r2, r3, #2
 4069 0090 3146     		mov	r1, r6
 4070 0092 1248     		ldr	r0, .L382+4
 4071 0094 1044     		add	r0, r0, r2
 4072 0096 FFF7FEFF 		bl	vListInsertEnd
 4073              	.LVL356:
4636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4074              		.loc 1 4636 0 is_stmt 1 discriminator 3
 4075 009a A36A     		ldr	r3, [r4, #40]
 4076 009c 43B1     		cbz	r3, .L377
 4077              	.LBB171:
 4078              	.LBB172:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4079              		.loc 2 156 0
 4080              		.syntax unified
 4081              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4082 009e 4FF02003 			mov r3, #32												
 4083 00a2 83F31188 		msr basepri, r3											
 4084 00a6 BFF36F8F 		isb														
 4085 00aa BFF34F8F 		dsb														
 4086              	
 4087              	@ 0 "" 2
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 173


 4088              	.LVL357:
 4089              		.thumb
 4090              		.syntax unified
 4091              	.L378:
 4092 00ae FEE7     		b	.L378
 4093              	.L377:
 4094              	.LBE172:
 4095              	.LBE171:
4654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4096              		.loc 1 4654 0
 4097 00b0 E26A     		ldr	r2, [r4, #44]
 4098 00b2 094B     		ldr	r3, .L382
 4099 00b4 D3F80031 		ldr	r3, [r3, #256]
 4100 00b8 DB6A     		ldr	r3, [r3, #44]
 4101 00ba 9A42     		cmp	r2, r3
 4102 00bc 07D9     		bls	.L375
4658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4103              		.loc 1 4658 0
 4104 00be 4FF08052 		mov	r2, #268435456
 4105 00c2 074B     		ldr	r3, .L382+8
 4106 00c4 1A60     		str	r2, [r3]
 4107              		.syntax unified
 4108              	@ 4658 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 4109 00c6 BFF34F8F 		dsb
 4110              	@ 0 "" 2
 4111              	@ 4658 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 4112 00ca BFF36F8F 		isb
 4113              	@ 0 "" 2
 4114              		.thumb
 4115              		.syntax unified
 4116              	.L375:
4670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4117              		.loc 1 4670 0
 4118 00ce FFF7FEFF 		bl	vPortExitCritical
 4119              	.LVL358:
4673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4120              		.loc 1 4673 0
 4121 00d2 2846     		mov	r0, r5
 4122 00d4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4123              	.LVL359:
 4124              	.L383:
 4125 00d6 00BF     		.align	2
 4126              	.L382:
 4127 00d8 00000000 		.word	.LANCHOR0
 4128 00dc 30000000 		.word	.LANCHOR0+48
 4129 00e0 04ED00E0 		.word	-536810236
 4130              		.cfi_endproc
 4131              	.LFE769:
 4132              		.size	xTaskGenericNotify, .-xTaskGenericNotify
 4133              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 4134              		.align	2
 4135              		.global	xTaskGenericNotifyFromISR
 4136              		.thumb
 4137              		.thumb_func
 4138              		.type	xTaskGenericNotifyFromISR, %function
 4139              	xTaskGenericNotifyFromISR:
 4140              	.LFB770:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 174


4681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
 4141              		.loc 1 4681 0
 4142              		.cfi_startproc
 4143              		@ args = 4, pretend = 0, frame = 0
 4144              		@ frame_needed = 0, uses_anonymous_args = 0
 4145              	.LVL360:
 4146 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4147              		.cfi_def_cfa_offset 32
 4148              		.cfi_offset 3, -32
 4149              		.cfi_offset 4, -28
 4150              		.cfi_offset 5, -24
 4151              		.cfi_offset 6, -20
 4152              		.cfi_offset 7, -16
 4153              		.cfi_offset 8, -12
 4154              		.cfi_offset 9, -8
 4155              		.cfi_offset 14, -4
 4156 0004 089E     		ldr	r6, [sp, #32]
 4157              	.LVL361:
4687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4158              		.loc 1 4687 0
 4159 0006 40B9     		cbnz	r0, .L385
 4160              	.LBB173:
 4161              	.LBB174:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4162              		.loc 2 156 0
 4163              		.syntax unified
 4164              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4165 0008 4FF02003 			mov r3, #32												
 4166 000c 83F31188 		msr basepri, r3											
 4167 0010 BFF36F8F 		isb														
 4168 0014 BFF34F8F 		dsb														
 4169              	
 4170              	@ 0 "" 2
 4171              	.LVL362:
 4172              		.thumb
 4173              		.syntax unified
 4174              	.L386:
 4175 0018 FEE7     		b	.L386
 4176              	.LVL363:
 4177              	.L385:
 4178 001a 0446     		mov	r4, r0
 4179 001c 9946     		mov	r9, r3
 4180 001e 1546     		mov	r5, r2
 4181 0020 8846     		mov	r8, r1
 4182              	.LBE174:
 4183              	.LBE173:
4705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4184              		.loc 1 4705 0
 4185 0022 FFF7FEFF 		bl	vPortValidateInterruptPriority
 4186              	.LVL364:
 4187              	.LBB175:
 4188              	.LBB176:
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4189              		.loc 2 172 0
 4190              		.syntax unified
 4191              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4192 0026 EFF31187 			mrs r7, basepri											
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 175


 4193 002a 4FF02003 		mov r3, #32												
 4194 002e 83F31188 		msr basepri, r3											
 4195 0032 BFF36F8F 		isb														
 4196 0036 BFF34F8F 		dsb														
 4197              	
 4198              	@ 0 "" 2
 4199              		.thumb
 4200              		.syntax unified
 4201              	.LBE176:
 4202              	.LBE175:
4711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4203              		.loc 1 4711 0
 4204 003a B9F1000F 		cmp	r9, #0
 4205 003e 02D0     		beq	.L387
4713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4206              		.loc 1 4713 0
 4207 0040 A36D     		ldr	r3, [r4, #88]
 4208 0042 C9F80030 		str	r3, [r9]
 4209              	.L387:
4716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4210              		.loc 1 4716 0
 4211 0046 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 4212 004a DBB2     		uxtb	r3, r3
 4213              	.LVL365:
4717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4214              		.loc 1 4717 0
 4215 004c 0222     		movs	r2, #2
 4216 004e 84F85C20 		strb	r2, [r4, #92]
4719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4217              		.loc 1 4719 0
 4218 0052 6A1E     		subs	r2, r5, #1
 4219 0054 032A     		cmp	r2, #3
 4220 0056 18D8     		bhi	.L401
 4221 0058 DFE802F0 		tbb	[pc, r2]
 4222              	.L390:
 4223 005c 02       		.byte	(.L389-.L390)/2
 4224 005d 08       		.byte	(.L391-.L390)/2
 4225 005e 0D       		.byte	(.L392-.L390)/2
 4226 005f 11       		.byte	(.L393-.L390)/2
 4227              		.p2align 1
 4228              	.L389:
4722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4229              		.loc 1 4722 0
 4230 0060 A26D     		ldr	r2, [r4, #88]
 4231 0062 42EA0802 		orr	r2, r2, r8
 4232 0066 A265     		str	r2, [r4, #88]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4233              		.loc 1 4684 0
 4234 0068 0125     		movs	r5, #1
4723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4235              		.loc 1 4723 0
 4236 006a 11E0     		b	.L388
 4237              	.L391:
4726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4238              		.loc 1 4726 0
 4239 006c A26D     		ldr	r2, [r4, #88]
 4240 006e 0132     		adds	r2, r2, #1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 176


 4241 0070 A265     		str	r2, [r4, #88]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4242              		.loc 1 4684 0
 4243 0072 0125     		movs	r5, #1
4727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4244              		.loc 1 4727 0
 4245 0074 0CE0     		b	.L388
 4246              	.L392:
4730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4247              		.loc 1 4730 0
 4248 0076 C4F85880 		str	r8, [r4, #88]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4249              		.loc 1 4684 0
 4250 007a 0125     		movs	r5, #1
4731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4251              		.loc 1 4731 0
 4252 007c 08E0     		b	.L388
 4253              	.L393:
4734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4254              		.loc 1 4734 0
 4255 007e 022B     		cmp	r3, #2
 4256 0080 05D0     		beq	.L402
4736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4257              		.loc 1 4736 0
 4258 0082 C4F85880 		str	r8, [r4, #88]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4259              		.loc 1 4684 0
 4260 0086 0125     		movs	r5, #1
 4261 0088 02E0     		b	.L388
 4262              	.L401:
 4263 008a 0125     		movs	r5, #1
 4264 008c 00E0     		b	.L388
 4265              	.L402:
4741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4266              		.loc 1 4741 0
 4267 008e 0025     		movs	r5, #0
 4268              	.L388:
 4269              	.LVL366:
4755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4270              		.loc 1 4755 0
 4271 0090 012B     		cmp	r3, #1
 4272 0092 39D1     		bne	.L394
4758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4273              		.loc 1 4758 0
 4274 0094 A36A     		ldr	r3, [r4, #40]
 4275              	.LVL367:
 4276 0096 43B1     		cbz	r3, .L395
 4277              	.LBB177:
 4278              	.LBB178:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4279              		.loc 2 156 0
 4280              		.syntax unified
 4281              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4282 0098 4FF02003 			mov r3, #32												
 4283 009c 83F31188 		msr basepri, r3											
 4284 00a0 BFF36F8F 		isb														
 4285 00a4 BFF34F8F 		dsb														
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 177


 4286              	
 4287              	@ 0 "" 2
 4288              	.LVL368:
 4289              		.thumb
 4290              		.syntax unified
 4291              	.L396:
 4292 00a8 FEE7     		b	.L396
 4293              	.L395:
 4294              	.LBE178:
 4295              	.LBE177:
4760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4296              		.loc 1 4760 0
 4297 00aa 1A4B     		ldr	r3, .L404
 4298 00ac D3F81831 		ldr	r3, [r3, #280]
 4299 00b0 B3B9     		cbnz	r3, .L397
4762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4300              		.loc 1 4762 0
 4301 00b2 04F10408 		add	r8, r4, #4
 4302              	.LVL369:
 4303 00b6 4046     		mov	r0, r8
 4304 00b8 FFF7FEFF 		bl	uxListRemove
 4305              	.LVL370:
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4306              		.loc 1 4763 0
 4307 00bc E36A     		ldr	r3, [r4, #44]
 4308 00be 154A     		ldr	r2, .L404
 4309 00c0 D2F80C21 		ldr	r2, [r2, #268]
 4310 00c4 9342     		cmp	r3, r2
 4311 00c6 02D9     		bls	.L398
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4312              		.loc 1 4763 0 is_stmt 0 discriminator 1
 4313 00c8 124A     		ldr	r2, .L404
 4314 00ca C2F80C31 		str	r3, [r2, #268]
 4315              	.L398:
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4316              		.loc 1 4763 0 discriminator 3
 4317 00ce 03EB8303 		add	r3, r3, r3, lsl #2
 4318 00d2 9A00     		lsls	r2, r3, #2
 4319 00d4 4146     		mov	r1, r8
 4320 00d6 1048     		ldr	r0, .L404+4
 4321 00d8 1044     		add	r0, r0, r2
 4322 00da FFF7FEFF 		bl	vListInsertEnd
 4323              	.LVL371:
 4324 00de 04E0     		b	.L399
 4325              	.LVL372:
 4326              	.L397:
4769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4327              		.loc 1 4769 0 is_stmt 1
 4328 00e0 04F11801 		add	r1, r4, #24
 4329 00e4 0D48     		ldr	r0, .L404+8
 4330 00e6 FFF7FEFF 		bl	vListInsertEnd
 4331              	.LVL373:
 4332              	.L399:
4772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4333              		.loc 1 4772 0
 4334 00ea E26A     		ldr	r2, [r4, #44]
 4335 00ec 094B     		ldr	r3, .L404
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 178


 4336 00ee D3F80031 		ldr	r3, [r3, #256]
 4337 00f2 DB6A     		ldr	r3, [r3, #44]
 4338 00f4 9A42     		cmp	r2, r3
 4339 00f6 07D9     		bls	.L394
4776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4340              		.loc 1 4776 0
 4341 00f8 16B1     		cbz	r6, .L400
4778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4342              		.loc 1 4778 0
 4343 00fa 0123     		movs	r3, #1
 4344 00fc 3360     		str	r3, [r6]
 4345 00fe 03E0     		b	.L394
 4346              	.L400:
4785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4347              		.loc 1 4785 0
 4348 0100 0122     		movs	r2, #1
 4349 0102 044B     		ldr	r3, .L404
 4350 0104 C3F82821 		str	r2, [r3, #296]
 4351              	.L394:
 4352              	.LVL374:
 4353              	.LBB179:
 4354              	.LBB180:
 4355              		.loc 2 190 0
 4356              		.syntax unified
 4357              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4358 0108 87F31188 			msr basepri, r7	
 4359              	@ 0 "" 2
 4360              	.LVL375:
 4361              		.thumb
 4362              		.syntax unified
 4363              	.LBE180:
 4364              	.LBE179:
4797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4365              		.loc 1 4797 0
 4366 010c 2846     		mov	r0, r5
 4367 010e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4368              	.LVL376:
 4369              	.L405:
 4370 0112 00BF     		.align	2
 4371              	.L404:
 4372 0114 00000000 		.word	.LANCHOR0
 4373 0118 30000000 		.word	.LANCHOR0+48
 4374 011c 14000000 		.word	.LANCHOR0+20
 4375              		.cfi_endproc
 4376              	.LFE770:
 4377              		.size	xTaskGenericNotifyFromISR, .-xTaskGenericNotifyFromISR
 4378              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 4379              		.align	2
 4380              		.global	vTaskNotifyGiveFromISR
 4381              		.thumb
 4382              		.thumb_func
 4383              		.type	vTaskNotifyGiveFromISR, %function
 4384              	vTaskNotifyGiveFromISR:
 4385              	.LFB771:
4805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
 4386              		.loc 1 4805 0
 4387              		.cfi_startproc
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 179


 4388              		@ args = 0, pretend = 0, frame = 0
 4389              		@ frame_needed = 0, uses_anonymous_args = 0
 4390              	.LVL377:
 4391 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4392              		.cfi_def_cfa_offset 24
 4393              		.cfi_offset 3, -24
 4394              		.cfi_offset 4, -20
 4395              		.cfi_offset 5, -16
 4396              		.cfi_offset 6, -12
 4397              		.cfi_offset 7, -8
 4398              		.cfi_offset 14, -4
4810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4399              		.loc 1 4810 0
 4400 0002 40B9     		cbnz	r0, .L407
 4401              	.LBB181:
 4402              	.LBB182:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4403              		.loc 2 156 0
 4404              		.syntax unified
 4405              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4406 0004 4FF02003 			mov r3, #32												
 4407 0008 83F31188 		msr basepri, r3											
 4408 000c BFF36F8F 		isb														
 4409 0010 BFF34F8F 		dsb														
 4410              	
 4411              	@ 0 "" 2
 4412              	.LVL378:
 4413              		.thumb
 4414              		.syntax unified
 4415              	.L408:
 4416 0014 FEE7     		b	.L408
 4417              	.L407:
 4418 0016 0446     		mov	r4, r0
 4419 0018 0D46     		mov	r5, r1
 4420              	.LBE182:
 4421              	.LBE181:
4828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4422              		.loc 1 4828 0
 4423 001a FFF7FEFF 		bl	vPortValidateInterruptPriority
 4424              	.LVL379:
 4425              	.LBB183:
 4426              	.LBB184:
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4427              		.loc 2 172 0
 4428              		.syntax unified
 4429              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4430 001e EFF31186 			mrs r6, basepri											
 4431 0022 4FF02003 		mov r3, #32												
 4432 0026 83F31188 		msr basepri, r3											
 4433 002a BFF36F8F 		isb														
 4434 002e BFF34F8F 		dsb														
 4435              	
 4436              	@ 0 "" 2
 4437              		.thumb
 4438              		.syntax unified
 4439              	.LBE184:
 4440              	.LBE183:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 180


4834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4441              		.loc 1 4834 0
 4442 0032 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 4443 0036 DBB2     		uxtb	r3, r3
 4444              	.LVL380:
4835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4445              		.loc 1 4835 0
 4446 0038 0222     		movs	r2, #2
 4447 003a 84F85C20 		strb	r2, [r4, #92]
4839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4448              		.loc 1 4839 0
 4449 003e A26D     		ldr	r2, [r4, #88]
 4450 0040 0132     		adds	r2, r2, #1
 4451 0042 A265     		str	r2, [r4, #88]
4845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4452              		.loc 1 4845 0
 4453 0044 012B     		cmp	r3, #1
 4454 0046 38D1     		bne	.L409
4848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4455              		.loc 1 4848 0
 4456 0048 A36A     		ldr	r3, [r4, #40]
 4457              	.LVL381:
 4458 004a 43B1     		cbz	r3, .L410
 4459              	.LBB185:
 4460              	.LBB186:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4461              		.loc 2 156 0
 4462              		.syntax unified
 4463              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4464 004c 4FF02003 			mov r3, #32												
 4465 0050 83F31188 		msr basepri, r3											
 4466 0054 BFF36F8F 		isb														
 4467 0058 BFF34F8F 		dsb														
 4468              	
 4469              	@ 0 "" 2
 4470              	.LVL382:
 4471              		.thumb
 4472              		.syntax unified
 4473              	.L411:
 4474 005c FEE7     		b	.L411
 4475              	.L410:
 4476              	.LBE186:
 4477              	.LBE185:
4850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4478              		.loc 1 4850 0
 4479 005e 184B     		ldr	r3, .L417
 4480 0060 D3F81831 		ldr	r3, [r3, #280]
 4481 0064 ABB9     		cbnz	r3, .L412
4852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4482              		.loc 1 4852 0
 4483 0066 271D     		adds	r7, r4, #4
 4484 0068 3846     		mov	r0, r7
 4485 006a FFF7FEFF 		bl	uxListRemove
 4486              	.LVL383:
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4487              		.loc 1 4853 0
 4488 006e E36A     		ldr	r3, [r4, #44]
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 181


 4489 0070 134A     		ldr	r2, .L417
 4490 0072 D2F80C21 		ldr	r2, [r2, #268]
 4491 0076 9342     		cmp	r3, r2
 4492 0078 02D9     		bls	.L413
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4493              		.loc 1 4853 0 is_stmt 0 discriminator 1
 4494 007a 114A     		ldr	r2, .L417
 4495 007c C2F80C31 		str	r3, [r2, #268]
 4496              	.L413:
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4497              		.loc 1 4853 0 discriminator 3
 4498 0080 03EB8303 		add	r3, r3, r3, lsl #2
 4499 0084 9A00     		lsls	r2, r3, #2
 4500 0086 3946     		mov	r1, r7
 4501 0088 0E48     		ldr	r0, .L417+4
 4502 008a 1044     		add	r0, r0, r2
 4503 008c FFF7FEFF 		bl	vListInsertEnd
 4504              	.LVL384:
 4505 0090 04E0     		b	.L414
 4506              	.L412:
4859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4507              		.loc 1 4859 0 is_stmt 1
 4508 0092 04F11801 		add	r1, r4, #24
 4509 0096 0C48     		ldr	r0, .L417+8
 4510 0098 FFF7FEFF 		bl	vListInsertEnd
 4511              	.LVL385:
 4512              	.L414:
4862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4513              		.loc 1 4862 0
 4514 009c E26A     		ldr	r2, [r4, #44]
 4515 009e 084B     		ldr	r3, .L417
 4516 00a0 D3F80031 		ldr	r3, [r3, #256]
 4517 00a4 DB6A     		ldr	r3, [r3, #44]
 4518 00a6 9A42     		cmp	r2, r3
 4519 00a8 07D9     		bls	.L409
4866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4520              		.loc 1 4866 0
 4521 00aa 15B1     		cbz	r5, .L415
4868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4522              		.loc 1 4868 0
 4523 00ac 0123     		movs	r3, #1
 4524 00ae 2B60     		str	r3, [r5]
 4525 00b0 03E0     		b	.L409
 4526              	.L415:
4875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4527              		.loc 1 4875 0
 4528 00b2 0122     		movs	r2, #1
 4529 00b4 024B     		ldr	r3, .L417
 4530 00b6 C3F82821 		str	r2, [r3, #296]
 4531              	.L409:
 4532              	.LVL386:
 4533              	.LBB187:
 4534              	.LBB188:
 4535              		.loc 2 190 0
 4536              		.syntax unified
 4537              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4538 00ba 86F31188 			msr basepri, r6	
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 182


 4539              	@ 0 "" 2
 4540              	.LVL387:
 4541              		.thumb
 4542              		.syntax unified
 4543 00be F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4544              	.LVL388:
 4545              	.L418:
 4546              		.align	2
 4547              	.L417:
 4548 00c0 00000000 		.word	.LANCHOR0
 4549 00c4 30000000 		.word	.LANCHOR0+48
 4550 00c8 14000000 		.word	.LANCHOR0+20
 4551              	.LBE188:
 4552              	.LBE187:
 4553              		.cfi_endproc
 4554              	.LFE771:
 4555              		.size	vTaskNotifyGiveFromISR, .-vTaskNotifyGiveFromISR
 4556              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 4557              		.align	2
 4558              		.global	xTaskNotifyStateClear
 4559              		.thumb
 4560              		.thumb_func
 4561              		.type	xTaskNotifyStateClear, %function
 4562              	xTaskNotifyStateClear:
 4563              	.LFB772:
4894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 4564              		.loc 1 4894 0
 4565              		.cfi_startproc
 4566              		@ args = 0, pretend = 0, frame = 0
 4567              		@ frame_needed = 0, uses_anonymous_args = 0
 4568              	.LVL389:
 4569 0000 10B5     		push	{r4, lr}
 4570              		.cfi_def_cfa_offset 8
 4571              		.cfi_offset 4, -8
 4572              		.cfi_offset 14, -4
4900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4573              		.loc 1 4900 0
 4574 0002 0446     		mov	r4, r0
 4575 0004 10B9     		cbnz	r0, .L420
4900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4576              		.loc 1 4900 0 is_stmt 0 discriminator 1
 4577 0006 0A4B     		ldr	r3, .L424
 4578 0008 D3F80041 		ldr	r4, [r3, #256]
 4579              	.LVL390:
 4580              	.L420:
4902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 4581              		.loc 1 4902 0 is_stmt 1 discriminator 4
 4582 000c FFF7FEFF 		bl	vPortEnterCritical
 4583              	.LVL391:
4904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4584              		.loc 1 4904 0 discriminator 4
 4585 0010 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 4586 0014 DBB2     		uxtb	r3, r3
 4587 0016 022B     		cmp	r3, #2
 4588 0018 04D1     		bne	.L422
4906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
 4589              		.loc 1 4906 0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 183


 4590 001a 0023     		movs	r3, #0
 4591 001c 84F85C30 		strb	r3, [r4, #92]
 4592              	.LVL392:
4907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4593              		.loc 1 4907 0
 4594 0020 0124     		movs	r4, #1
 4595              	.LVL393:
 4596 0022 00E0     		b	.L421
 4597              	.LVL394:
 4598              	.L422:
4911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4599              		.loc 1 4911 0
 4600 0024 0024     		movs	r4, #0
 4601              	.LVL395:
 4602              	.L421:
4914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4603              		.loc 1 4914 0
 4604 0026 FFF7FEFF 		bl	vPortExitCritical
 4605              	.LVL396:
4917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4606              		.loc 1 4917 0
 4607 002a 2046     		mov	r0, r4
 4608 002c 10BD     		pop	{r4, pc}
 4609              	.LVL397:
 4610              	.L425:
 4611 002e 00BF     		.align	2
 4612              	.L424:
 4613 0030 00000000 		.word	.LANCHOR0
 4614              		.cfi_endproc
 4615              	.LFE772:
 4616              		.size	xTaskNotifyStateClear, .-xTaskNotifyStateClear
 4617              		.global	pxCurrentTCB
 4618              		.section	.rodata.str1.4,"aMS",%progbits,1
 4619              		.align	2
 4620              	.LC0:
 4621 0000 49444C45 		.ascii	"IDLE\000"
 4621      00
 4622              		.bss
 4623              		.align	2
 4624              		.set	.LANCHOR0,. + 0
 4625              		.type	xSuspendedTaskList, %object
 4626              		.size	xSuspendedTaskList, 20
 4627              	xSuspendedTaskList:
 4628 0000 00000000 		.space	20
 4628      00000000 
 4628      00000000 
 4628      00000000 
 4628      00000000 
 4629              		.type	xPendingReadyList, %object
 4630              		.size	xPendingReadyList, 20
 4631              	xPendingReadyList:
 4632 0014 00000000 		.space	20
 4632      00000000 
 4632      00000000 
 4632      00000000 
 4632      00000000 
 4633              		.type	pxDelayedTaskList, %object
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 184


 4634              		.size	pxDelayedTaskList, 4
 4635              	pxDelayedTaskList:
 4636 0028 00000000 		.space	4
 4637              		.type	xNextTaskUnblockTime, %object
 4638              		.size	xNextTaskUnblockTime, 4
 4639              	xNextTaskUnblockTime:
 4640 002c 00000000 		.space	4
 4641              		.type	pxReadyTasksLists, %object
 4642              		.size	pxReadyTasksLists, 140
 4643              	pxReadyTasksLists:
 4644 0030 00000000 		.space	140
 4644      00000000 
 4644      00000000 
 4644      00000000 
 4644      00000000 
 4645              		.type	xDelayedTaskList1, %object
 4646              		.size	xDelayedTaskList1, 20
 4647              	xDelayedTaskList1:
 4648 00bc 00000000 		.space	20
 4648      00000000 
 4648      00000000 
 4648      00000000 
 4648      00000000 
 4649              		.type	xDelayedTaskList2, %object
 4650              		.size	xDelayedTaskList2, 20
 4651              	xDelayedTaskList2:
 4652 00d0 00000000 		.space	20
 4652      00000000 
 4652      00000000 
 4652      00000000 
 4652      00000000 
 4653              		.type	xTasksWaitingTermination, %object
 4654              		.size	xTasksWaitingTermination, 20
 4655              	xTasksWaitingTermination:
 4656 00e4 00000000 		.space	20
 4656      00000000 
 4656      00000000 
 4656      00000000 
 4656      00000000 
 4657              		.type	pxOverflowDelayedTaskList, %object
 4658              		.size	pxOverflowDelayedTaskList, 4
 4659              	pxOverflowDelayedTaskList:
 4660 00f8 00000000 		.space	4
 4661              		.type	uxCurrentNumberOfTasks, %object
 4662              		.size	uxCurrentNumberOfTasks, 4
 4663              	uxCurrentNumberOfTasks:
 4664 00fc 00000000 		.space	4
 4665              		.type	pxCurrentTCB, %object
 4666              		.size	pxCurrentTCB, 4
 4667              	pxCurrentTCB:
 4668 0100 00000000 		.space	4
 4669              		.type	xSchedulerRunning, %object
 4670              		.size	xSchedulerRunning, 4
 4671              	xSchedulerRunning:
 4672 0104 00000000 		.space	4
 4673              		.type	uxTaskNumber, %object
 4674              		.size	uxTaskNumber, 4
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 185


 4675              	uxTaskNumber:
 4676 0108 00000000 		.space	4
 4677              		.type	uxTopReadyPriority, %object
 4678              		.size	uxTopReadyPriority, 4
 4679              	uxTopReadyPriority:
 4680 010c 00000000 		.space	4
 4681              		.type	uxDeletedTasksWaitingCleanUp, %object
 4682              		.size	uxDeletedTasksWaitingCleanUp, 4
 4683              	uxDeletedTasksWaitingCleanUp:
 4684 0110 00000000 		.space	4
 4685              		.type	xTickCount, %object
 4686              		.size	xTickCount, 4
 4687              	xTickCount:
 4688 0114 00000000 		.space	4
 4689              		.type	uxSchedulerSuspended, %object
 4690              		.size	uxSchedulerSuspended, 4
 4691              	uxSchedulerSuspended:
 4692 0118 00000000 		.space	4
 4693              		.type	xIdleTaskHandle, %object
 4694              		.size	xIdleTaskHandle, 4
 4695              	xIdleTaskHandle:
 4696 011c 00000000 		.space	4
 4697              		.type	xNumOfOverflows, %object
 4698              		.size	xNumOfOverflows, 4
 4699              	xNumOfOverflows:
 4700 0120 00000000 		.space	4
 4701              		.type	uxPendedTicks, %object
 4702              		.size	uxPendedTicks, 4
 4703              	uxPendedTicks:
 4704 0124 00000000 		.space	4
 4705              		.type	xYieldPending, %object
 4706              		.size	xYieldPending, 4
 4707              	xYieldPending:
 4708 0128 00000000 		.space	4
 4709              		.text
 4710              	.Letext0:
 4711              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 4712              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 4713              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 4714              		.file 6 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 4715              		.file 7 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/scb/cy_scb_i2c.h"
 4716              		.file 8 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/scb/cy_scb_uart.h"
 4717              		.file 9 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/tcpwm/cy_tcpwm_pwm.h"
 4718              		.file 10 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_stack.h"
 4719              		.file 11 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_stack_host_main.h"
 4720              		.file 12 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_gap.h"
 4721              		.file 13 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/projdefs.h"
 4722              		.file 14 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/list.h"
 4723              		.file 15 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/task.h"
 4724              		.file 16 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 4725              		.file 17 "Generated_Source\\PSoC6/UART.h"
 4726              		.file 18 "Generated_Source\\PSoC6/I2C_1.h"
 4727              		.file 19 "Generated_Source\\PSoC6/I2C_2.h"
 4728              		.file 20 "Generated_Source\\PSoC6/PWM_AFE.h"
 4729              		.file 21 "Generated_Source\\PSoC6/PWM.h"
 4730              		.file 22 "Generated_Source\\PSoC6/PWM_CYC.h"
 4731              		.file 23 "Generated_Source\\PSoC6/PWM_TIM.h"
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 186


 4732              		.file 24 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/portable.h"
 4733              		.file 25 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 4734              		.file 26 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/timers.h"
 4735              		.section	.debug_info,"",%progbits
 4736              	.Ldebug_info0:
 4737 0000 432F0000 		.4byte	0x2f43
 4738 0004 0400     		.2byte	0x4
 4739 0006 00000000 		.4byte	.Ldebug_abbrev0
 4740 000a 04       		.byte	0x4
 4741 000b 01       		.uleb128 0x1
 4742 000c 09170000 		.4byte	.LASF528
 4743 0010 0C       		.byte	0xc
 4744 0011 2E000000 		.4byte	.LASF529
 4745 0015 211B0000 		.4byte	.LASF530
 4746 0019 38000000 		.4byte	.Ldebug_ranges0+0x38
 4747 001d 00000000 		.4byte	0
 4748 0021 00000000 		.4byte	.Ldebug_line0
 4749 0025 02       		.uleb128 0x2
 4750 0026 A8000000 		.4byte	.LASF4
 4751 002a 03       		.byte	0x3
 4752 002b D8       		.byte	0xd8
 4753 002c 30000000 		.4byte	0x30
 4754 0030 03       		.uleb128 0x3
 4755 0031 04       		.byte	0x4
 4756 0032 07       		.byte	0x7
 4757 0033 CB160000 		.4byte	.LASF0
 4758 0037 04       		.uleb128 0x4
 4759 0038 04       		.byte	0x4
 4760 0039 05       		.byte	0x5
 4761 003a 696E7400 		.ascii	"int\000"
 4762 003e 03       		.uleb128 0x3
 4763 003f 08       		.byte	0x8
 4764 0040 05       		.byte	0x5
 4765 0041 A6140000 		.4byte	.LASF1
 4766 0045 03       		.uleb128 0x3
 4767 0046 08       		.byte	0x8
 4768 0047 04       		.byte	0x4
 4769 0048 A21B0000 		.4byte	.LASF2
 4770 004c 03       		.uleb128 0x3
 4771 004d 01       		.byte	0x1
 4772 004e 06       		.byte	0x6
 4773 004f A3080000 		.4byte	.LASF3
 4774 0053 02       		.uleb128 0x2
 4775 0054 48050000 		.4byte	.LASF5
 4776 0058 04       		.byte	0x4
 4777 0059 1D       		.byte	0x1d
 4778 005a 5E000000 		.4byte	0x5e
 4779 005e 03       		.uleb128 0x3
 4780 005f 01       		.byte	0x1
 4781 0060 08       		.byte	0x8
 4782 0061 93090000 		.4byte	.LASF6
 4783 0065 02       		.uleb128 0x2
 4784 0066 8B200000 		.4byte	.LASF7
 4785 006a 04       		.byte	0x4
 4786 006b 29       		.byte	0x29
 4787 006c 70000000 		.4byte	0x70
 4788 0070 03       		.uleb128 0x3
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 187


 4789 0071 02       		.byte	0x2
 4790 0072 05       		.byte	0x5
 4791 0073 9A230000 		.4byte	.LASF8
 4792 0077 02       		.uleb128 0x2
 4793 0078 670C0000 		.4byte	.LASF9
 4794 007c 04       		.byte	0x4
 4795 007d 2B       		.byte	0x2b
 4796 007e 82000000 		.4byte	0x82
 4797 0082 03       		.uleb128 0x3
 4798 0083 02       		.byte	0x2
 4799 0084 07       		.byte	0x7
 4800 0085 5F270000 		.4byte	.LASF10
 4801 0089 02       		.uleb128 0x2
 4802 008a C8280000 		.4byte	.LASF11
 4803 008e 04       		.byte	0x4
 4804 008f 3F       		.byte	0x3f
 4805 0090 94000000 		.4byte	0x94
 4806 0094 03       		.uleb128 0x3
 4807 0095 04       		.byte	0x4
 4808 0096 05       		.byte	0x5
 4809 0097 42190000 		.4byte	.LASF12
 4810 009b 02       		.uleb128 0x2
 4811 009c 74140000 		.4byte	.LASF13
 4812 00a0 04       		.byte	0x4
 4813 00a1 41       		.byte	0x41
 4814 00a2 A6000000 		.4byte	0xa6
 4815 00a6 03       		.uleb128 0x3
 4816 00a7 04       		.byte	0x4
 4817 00a8 07       		.byte	0x7
 4818 00a9 21110000 		.4byte	.LASF14
 4819 00ad 03       		.uleb128 0x3
 4820 00ae 08       		.byte	0x8
 4821 00af 07       		.byte	0x7
 4822 00b0 991D0000 		.4byte	.LASF15
 4823 00b4 03       		.uleb128 0x3
 4824 00b5 04       		.byte	0x4
 4825 00b6 07       		.byte	0x7
 4826 00b7 AF000000 		.4byte	.LASF16
 4827 00bb 05       		.uleb128 0x5
 4828 00bc 04       		.byte	0x4
 4829 00bd 06       		.uleb128 0x6
 4830 00be 04       		.byte	0x4
 4831 00bf C3000000 		.4byte	0xc3
 4832 00c3 03       		.uleb128 0x3
 4833 00c4 01       		.byte	0x1
 4834 00c5 08       		.byte	0x8
 4835 00c6 980B0000 		.4byte	.LASF17
 4836 00ca 06       		.uleb128 0x6
 4837 00cb 04       		.byte	0x4
 4838 00cc D0000000 		.4byte	0xd0
 4839 00d0 07       		.uleb128 0x7
 4840 00d1 C3000000 		.4byte	0xc3
 4841 00d5 02       		.uleb128 0x2
 4842 00d6 D1080000 		.4byte	.LASF18
 4843 00da 05       		.byte	0x5
 4844 00db 18       		.byte	0x18
 4845 00dc 53000000 		.4byte	0x53
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 188


 4846 00e0 02       		.uleb128 0x2
 4847 00e1 1C240000 		.4byte	.LASF19
 4848 00e5 05       		.byte	0x5
 4849 00e6 20       		.byte	0x20
 4850 00e7 65000000 		.4byte	0x65
 4851 00eb 02       		.uleb128 0x2
 4852 00ec EB1D0000 		.4byte	.LASF20
 4853 00f0 05       		.byte	0x5
 4854 00f1 24       		.byte	0x24
 4855 00f2 77000000 		.4byte	0x77
 4856 00f6 02       		.uleb128 0x2
 4857 00f7 1C200000 		.4byte	.LASF21
 4858 00fb 05       		.byte	0x5
 4859 00fc 2C       		.byte	0x2c
 4860 00fd 89000000 		.4byte	0x89
 4861 0101 02       		.uleb128 0x2
 4862 0102 5E260000 		.4byte	.LASF22
 4863 0106 05       		.byte	0x5
 4864 0107 30       		.byte	0x30
 4865 0108 9B000000 		.4byte	0x9b
 4866 010c 08       		.uleb128 0x8
 4867 010d 01010000 		.4byte	0x101
 4868 0111 08       		.uleb128 0x8
 4869 0112 D5000000 		.4byte	0xd5
 4870 0116 09       		.uleb128 0x9
 4871 0117 B8       		.byte	0xb8
 4872 0118 06       		.byte	0x6
 4873 0119 34       		.byte	0x34
 4874 011a 27050000 		.4byte	0x527
 4875 011e 0A       		.uleb128 0xa
 4876 011f 2E140000 		.4byte	.LASF23
 4877 0123 06       		.byte	0x6
 4878 0124 37       		.byte	0x37
 4879 0125 01010000 		.4byte	0x101
 4880 0129 00       		.byte	0
 4881 012a 0A       		.uleb128 0xa
 4882 012b 85030000 		.4byte	.LASF24
 4883 012f 06       		.byte	0x6
 4884 0130 38       		.byte	0x38
 4885 0131 01010000 		.4byte	0x101
 4886 0135 04       		.byte	0x4
 4887 0136 0A       		.uleb128 0xa
 4888 0137 22100000 		.4byte	.LASF25
 4889 013b 06       		.byte	0x6
 4890 013c 39       		.byte	0x39
 4891 013d 01010000 		.4byte	0x101
 4892 0141 08       		.byte	0x8
 4893 0142 0A       		.uleb128 0xa
 4894 0143 890D0000 		.4byte	.LASF26
 4895 0147 06       		.byte	0x6
 4896 0148 3A       		.byte	0x3a
 4897 0149 01010000 		.4byte	0x101
 4898 014d 0C       		.byte	0xc
 4899 014e 0A       		.uleb128 0xa
 4900 014f 38140000 		.4byte	.LASF27
 4901 0153 06       		.byte	0x6
 4902 0154 3B       		.byte	0x3b
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 189


 4903 0155 01010000 		.4byte	0x101
 4904 0159 10       		.byte	0x10
 4905 015a 0A       		.uleb128 0xa
 4906 015b F6010000 		.4byte	.LASF28
 4907 015f 06       		.byte	0x6
 4908 0160 3C       		.byte	0x3c
 4909 0161 01010000 		.4byte	0x101
 4910 0165 14       		.byte	0x14
 4911 0166 0A       		.uleb128 0xa
 4912 0167 7E210000 		.4byte	.LASF29
 4913 016b 06       		.byte	0x6
 4914 016c 3D       		.byte	0x3d
 4915 016d 01010000 		.4byte	0x101
 4916 0171 18       		.byte	0x18
 4917 0172 0A       		.uleb128 0xa
 4918 0173 140B0000 		.4byte	.LASF30
 4919 0177 06       		.byte	0x6
 4920 0178 3E       		.byte	0x3e
 4921 0179 01010000 		.4byte	0x101
 4922 017d 1C       		.byte	0x1c
 4923 017e 0A       		.uleb128 0xa
 4924 017f 1E270000 		.4byte	.LASF31
 4925 0183 06       		.byte	0x6
 4926 0184 3F       		.byte	0x3f
 4927 0185 01010000 		.4byte	0x101
 4928 0189 20       		.byte	0x20
 4929 018a 0A       		.uleb128 0xa
 4930 018b 9D000000 		.4byte	.LASF32
 4931 018f 06       		.byte	0x6
 4932 0190 40       		.byte	0x40
 4933 0191 01010000 		.4byte	0x101
 4934 0195 24       		.byte	0x24
 4935 0196 0A       		.uleb128 0xa
 4936 0197 FF110000 		.4byte	.LASF33
 4937 019b 06       		.byte	0x6
 4938 019c 43       		.byte	0x43
 4939 019d D5000000 		.4byte	0xd5
 4940 01a1 28       		.byte	0x28
 4941 01a2 0A       		.uleb128 0xa
 4942 01a3 7D150000 		.4byte	.LASF34
 4943 01a7 06       		.byte	0x6
 4944 01a8 44       		.byte	0x44
 4945 01a9 D5000000 		.4byte	0xd5
 4946 01ad 29       		.byte	0x29
 4947 01ae 0A       		.uleb128 0xa
 4948 01af 33210000 		.4byte	.LASF35
 4949 01b3 06       		.byte	0x6
 4950 01b4 45       		.byte	0x45
 4951 01b5 D5000000 		.4byte	0xd5
 4952 01b9 2A       		.byte	0x2a
 4953 01ba 0A       		.uleb128 0xa
 4954 01bb F8170000 		.4byte	.LASF36
 4955 01bf 06       		.byte	0x6
 4956 01c0 46       		.byte	0x46
 4957 01c1 D5000000 		.4byte	0xd5
 4958 01c5 2B       		.byte	0x2b
 4959 01c6 0A       		.uleb128 0xa
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 190


 4960 01c7 68250000 		.4byte	.LASF37
 4961 01cb 06       		.byte	0x6
 4962 01cc 47       		.byte	0x47
 4963 01cd D5000000 		.4byte	0xd5
 4964 01d1 2C       		.byte	0x2c
 4965 01d2 0A       		.uleb128 0xa
 4966 01d3 502A0000 		.4byte	.LASF38
 4967 01d7 06       		.byte	0x6
 4968 01d8 48       		.byte	0x48
 4969 01d9 D5000000 		.4byte	0xd5
 4970 01dd 2D       		.byte	0x2d
 4971 01de 0A       		.uleb128 0xa
 4972 01df 4F140000 		.4byte	.LASF39
 4973 01e3 06       		.byte	0x6
 4974 01e4 49       		.byte	0x49
 4975 01e5 D5000000 		.4byte	0xd5
 4976 01e9 2E       		.byte	0x2e
 4977 01ea 0A       		.uleb128 0xa
 4978 01eb 8E230000 		.4byte	.LASF40
 4979 01ef 06       		.byte	0x6
 4980 01f0 4A       		.byte	0x4a
 4981 01f1 D5000000 		.4byte	0xd5
 4982 01f5 2F       		.byte	0x2f
 4983 01f6 0A       		.uleb128 0xa
 4984 01f7 3C230000 		.4byte	.LASF41
 4985 01fb 06       		.byte	0x6
 4986 01fc 4B       		.byte	0x4b
 4987 01fd D5000000 		.4byte	0xd5
 4988 0201 30       		.byte	0x30
 4989 0202 0A       		.uleb128 0xa
 4990 0203 A3160000 		.4byte	.LASF42
 4991 0207 06       		.byte	0x6
 4992 0208 4E       		.byte	0x4e
 4993 0209 D5000000 		.4byte	0xd5
 4994 020d 31       		.byte	0x31
 4995 020e 0A       		.uleb128 0xa
 4996 020f DB210000 		.4byte	.LASF43
 4997 0213 06       		.byte	0x6
 4998 0214 4F       		.byte	0x4f
 4999 0215 D5000000 		.4byte	0xd5
 5000 0219 32       		.byte	0x32
 5001 021a 0A       		.uleb128 0xa
 5002 021b 24200000 		.4byte	.LASF44
 5003 021f 06       		.byte	0x6
 5004 0220 50       		.byte	0x50
 5005 0221 D5000000 		.4byte	0xd5
 5006 0225 33       		.byte	0x33
 5007 0226 0A       		.uleb128 0xa
 5008 0227 DF100000 		.4byte	.LASF45
 5009 022b 06       		.byte	0x6
 5010 022c 51       		.byte	0x51
 5011 022d D5000000 		.4byte	0xd5
 5012 0231 34       		.byte	0x34
 5013 0232 0A       		.uleb128 0xa
 5014 0233 1E0D0000 		.4byte	.LASF46
 5015 0237 06       		.byte	0x6
 5016 0238 52       		.byte	0x52
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 191


 5017 0239 E0000000 		.4byte	0xe0
 5018 023d 36       		.byte	0x36
 5019 023e 0A       		.uleb128 0xa
 5020 023f 6C120000 		.4byte	.LASF47
 5021 0243 06       		.byte	0x6
 5022 0244 53       		.byte	0x53
 5023 0245 E0000000 		.4byte	0xe0
 5024 0249 38       		.byte	0x38
 5025 024a 0A       		.uleb128 0xa
 5026 024b E20F0000 		.4byte	.LASF48
 5027 024f 06       		.byte	0x6
 5028 0250 54       		.byte	0x54
 5029 0251 E0000000 		.4byte	0xe0
 5030 0255 3A       		.byte	0x3a
 5031 0256 0A       		.uleb128 0xa
 5032 0257 9B1E0000 		.4byte	.LASF49
 5033 025b 06       		.byte	0x6
 5034 025c 55       		.byte	0x55
 5035 025d D5000000 		.4byte	0xd5
 5036 0261 3C       		.byte	0x3c
 5037 0262 0A       		.uleb128 0xa
 5038 0263 611C0000 		.4byte	.LASF50
 5039 0267 06       		.byte	0x6
 5040 0268 56       		.byte	0x56
 5041 0269 D5000000 		.4byte	0xd5
 5042 026d 3D       		.byte	0x3d
 5043 026e 0A       		.uleb128 0xa
 5044 026f A2030000 		.4byte	.LASF51
 5045 0273 06       		.byte	0x6
 5046 0274 57       		.byte	0x57
 5047 0275 D5000000 		.4byte	0xd5
 5048 0279 3E       		.byte	0x3e
 5049 027a 0A       		.uleb128 0xa
 5050 027b 09190000 		.4byte	.LASF52
 5051 027f 06       		.byte	0x6
 5052 0280 58       		.byte	0x58
 5053 0281 D5000000 		.4byte	0xd5
 5054 0285 3F       		.byte	0x3f
 5055 0286 0A       		.uleb128 0xa
 5056 0287 21130000 		.4byte	.LASF53
 5057 028b 06       		.byte	0x6
 5058 028c 59       		.byte	0x59
 5059 028d D5000000 		.4byte	0xd5
 5060 0291 40       		.byte	0x40
 5061 0292 0A       		.uleb128 0xa
 5062 0293 96140000 		.4byte	.LASF54
 5063 0297 06       		.byte	0x6
 5064 0298 5A       		.byte	0x5a
 5065 0299 D5000000 		.4byte	0xd5
 5066 029d 41       		.byte	0x41
 5067 029e 0A       		.uleb128 0xa
 5068 029f 9D110000 		.4byte	.LASF55
 5069 02a3 06       		.byte	0x6
 5070 02a4 5B       		.byte	0x5b
 5071 02a5 D5000000 		.4byte	0xd5
 5072 02a9 42       		.byte	0x42
 5073 02aa 0A       		.uleb128 0xa
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 192


 5074 02ab DD250000 		.4byte	.LASF56
 5075 02af 06       		.byte	0x6
 5076 02b0 5C       		.byte	0x5c
 5077 02b1 D5000000 		.4byte	0xd5
 5078 02b5 43       		.byte	0x43
 5079 02b6 0A       		.uleb128 0xa
 5080 02b7 99210000 		.4byte	.LASF57
 5081 02bb 06       		.byte	0x6
 5082 02bc 5D       		.byte	0x5d
 5083 02bd D5000000 		.4byte	0xd5
 5084 02c1 44       		.byte	0x44
 5085 02c2 0A       		.uleb128 0xa
 5086 02c3 87210000 		.4byte	.LASF58
 5087 02c7 06       		.byte	0x6
 5088 02c8 5E       		.byte	0x5e
 5089 02c9 01010000 		.4byte	0x101
 5090 02cd 48       		.byte	0x48
 5091 02ce 0A       		.uleb128 0xa
 5092 02cf 90010000 		.4byte	.LASF59
 5093 02d3 06       		.byte	0x6
 5094 02d4 5F       		.byte	0x5f
 5095 02d5 01010000 		.4byte	0x101
 5096 02d9 4C       		.byte	0x4c
 5097 02da 0A       		.uleb128 0xa
 5098 02db D6150000 		.4byte	.LASF60
 5099 02df 06       		.byte	0x6
 5100 02e0 60       		.byte	0x60
 5101 02e1 D5000000 		.4byte	0xd5
 5102 02e5 50       		.byte	0x50
 5103 02e6 0A       		.uleb128 0xa
 5104 02e7 B9130000 		.4byte	.LASF61
 5105 02eb 06       		.byte	0x6
 5106 02ec 61       		.byte	0x61
 5107 02ed D5000000 		.4byte	0xd5
 5108 02f1 51       		.byte	0x51
 5109 02f2 0A       		.uleb128 0xa
 5110 02f3 C6150000 		.4byte	.LASF62
 5111 02f7 06       		.byte	0x6
 5112 02f8 62       		.byte	0x62
 5113 02f9 D5000000 		.4byte	0xd5
 5114 02fd 52       		.byte	0x52
 5115 02fe 0A       		.uleb128 0xa
 5116 02ff 02250000 		.4byte	.LASF63
 5117 0303 06       		.byte	0x6
 5118 0304 63       		.byte	0x63
 5119 0305 D5000000 		.4byte	0xd5
 5120 0309 53       		.byte	0x53
 5121 030a 0A       		.uleb128 0xa
 5122 030b B91A0000 		.4byte	.LASF64
 5123 030f 06       		.byte	0x6
 5124 0310 64       		.byte	0x64
 5125 0311 D5000000 		.4byte	0xd5
 5126 0315 54       		.byte	0x54
 5127 0316 0A       		.uleb128 0xa
 5128 0317 312A0000 		.4byte	.LASF65
 5129 031b 06       		.byte	0x6
 5130 031c 65       		.byte	0x65
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 193


 5131 031d D5000000 		.4byte	0xd5
 5132 0321 55       		.byte	0x55
 5133 0322 0A       		.uleb128 0xa
 5134 0323 24240000 		.4byte	.LASF66
 5135 0327 06       		.byte	0x6
 5136 0328 66       		.byte	0x66
 5137 0329 D5000000 		.4byte	0xd5
 5138 032d 56       		.byte	0x56
 5139 032e 0A       		.uleb128 0xa
 5140 032f 2A1D0000 		.4byte	.LASF67
 5141 0333 06       		.byte	0x6
 5142 0334 67       		.byte	0x67
 5143 0335 D5000000 		.4byte	0xd5
 5144 0339 57       		.byte	0x57
 5145 033a 0A       		.uleb128 0xa
 5146 033b E7150000 		.4byte	.LASF68
 5147 033f 06       		.byte	0x6
 5148 0340 68       		.byte	0x68
 5149 0341 D5000000 		.4byte	0xd5
 5150 0345 58       		.byte	0x58
 5151 0346 0A       		.uleb128 0xa
 5152 0347 530F0000 		.4byte	.LASF69
 5153 034b 06       		.byte	0x6
 5154 034c 69       		.byte	0x69
 5155 034d D5000000 		.4byte	0xd5
 5156 0351 59       		.byte	0x59
 5157 0352 0A       		.uleb128 0xa
 5158 0353 BC2A0000 		.4byte	.LASF70
 5159 0357 06       		.byte	0x6
 5160 0358 6E       		.byte	0x6e
 5161 0359 EB000000 		.4byte	0xeb
 5162 035d 5A       		.byte	0x5a
 5163 035e 0A       		.uleb128 0xa
 5164 035f B3120000 		.4byte	.LASF71
 5165 0363 06       		.byte	0x6
 5166 0364 6F       		.byte	0x6f
 5167 0365 EB000000 		.4byte	0xeb
 5168 0369 5C       		.byte	0x5c
 5169 036a 0A       		.uleb128 0xa
 5170 036b 0F270000 		.4byte	.LASF72
 5171 036f 06       		.byte	0x6
 5172 0370 70       		.byte	0x70
 5173 0371 D5000000 		.4byte	0xd5
 5174 0375 5E       		.byte	0x5e
 5175 0376 0A       		.uleb128 0xa
 5176 0377 49270000 		.4byte	.LASF73
 5177 037b 06       		.byte	0x6
 5178 037c 71       		.byte	0x71
 5179 037d D5000000 		.4byte	0xd5
 5180 0381 5F       		.byte	0x5f
 5181 0382 0A       		.uleb128 0xa
 5182 0383 31040000 		.4byte	.LASF74
 5183 0387 06       		.byte	0x6
 5184 0388 72       		.byte	0x72
 5185 0389 D5000000 		.4byte	0xd5
 5186 038d 60       		.byte	0x60
 5187 038e 0A       		.uleb128 0xa
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 194


 5188 038f 711A0000 		.4byte	.LASF75
 5189 0393 06       		.byte	0x6
 5190 0394 73       		.byte	0x73
 5191 0395 01010000 		.4byte	0x101
 5192 0399 64       		.byte	0x64
 5193 039a 0A       		.uleb128 0xa
 5194 039b B8280000 		.4byte	.LASF76
 5195 039f 06       		.byte	0x6
 5196 03a0 76       		.byte	0x76
 5197 03a1 EB000000 		.4byte	0xeb
 5198 03a5 68       		.byte	0x68
 5199 03a6 0A       		.uleb128 0xa
 5200 03a7 00070000 		.4byte	.LASF77
 5201 03ab 06       		.byte	0x6
 5202 03ac 77       		.byte	0x77
 5203 03ad EB000000 		.4byte	0xeb
 5204 03b1 6A       		.byte	0x6a
 5205 03b2 0A       		.uleb128 0xa
 5206 03b3 D50D0000 		.4byte	.LASF78
 5207 03b7 06       		.byte	0x6
 5208 03b8 78       		.byte	0x78
 5209 03b9 EB000000 		.4byte	0xeb
 5210 03bd 6C       		.byte	0x6c
 5211 03be 0A       		.uleb128 0xa
 5212 03bf 34070000 		.4byte	.LASF79
 5213 03c3 06       		.byte	0x6
 5214 03c4 79       		.byte	0x79
 5215 03c5 EB000000 		.4byte	0xeb
 5216 03c9 6E       		.byte	0x6e
 5217 03ca 0A       		.uleb128 0xa
 5218 03cb E6200000 		.4byte	.LASF80
 5219 03cf 06       		.byte	0x6
 5220 03d0 7B       		.byte	0x7b
 5221 03d1 D5000000 		.4byte	0xd5
 5222 03d5 70       		.byte	0x70
 5223 03d6 0A       		.uleb128 0xa
 5224 03d7 87100000 		.4byte	.LASF81
 5225 03db 06       		.byte	0x6
 5226 03dc 7C       		.byte	0x7c
 5227 03dd D5000000 		.4byte	0xd5
 5228 03e1 71       		.byte	0x71
 5229 03e2 0A       		.uleb128 0xa
 5230 03e3 E0010000 		.4byte	.LASF82
 5231 03e7 06       		.byte	0x6
 5232 03e8 7D       		.byte	0x7d
 5233 03e9 D5000000 		.4byte	0xd5
 5234 03ed 72       		.byte	0x72
 5235 03ee 0A       		.uleb128 0xa
 5236 03ef 30280000 		.4byte	.LASF83
 5237 03f3 06       		.byte	0x6
 5238 03f4 7E       		.byte	0x7e
 5239 03f5 D5000000 		.4byte	0xd5
 5240 03f9 73       		.byte	0x73
 5241 03fa 0A       		.uleb128 0xa
 5242 03fb 22070000 		.4byte	.LASF84
 5243 03ff 06       		.byte	0x6
 5244 0400 80       		.byte	0x80
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 195


 5245 0401 EB000000 		.4byte	0xeb
 5246 0405 74       		.byte	0x74
 5247 0406 0A       		.uleb128 0xa
 5248 0407 A6130000 		.4byte	.LASF85
 5249 040b 06       		.byte	0x6
 5250 040c 81       		.byte	0x81
 5251 040d EB000000 		.4byte	0xeb
 5252 0411 76       		.byte	0x76
 5253 0412 0A       		.uleb128 0xa
 5254 0413 04160000 		.4byte	.LASF86
 5255 0417 06       		.byte	0x6
 5256 0418 82       		.byte	0x82
 5257 0419 EB000000 		.4byte	0xeb
 5258 041d 78       		.byte	0x78
 5259 041e 0A       		.uleb128 0xa
 5260 041f 3E200000 		.4byte	.LASF87
 5261 0423 06       		.byte	0x6
 5262 0424 83       		.byte	0x83
 5263 0425 EB000000 		.4byte	0xeb
 5264 0429 7A       		.byte	0x7a
 5265 042a 0A       		.uleb128 0xa
 5266 042b 88180000 		.4byte	.LASF88
 5267 042f 06       		.byte	0x6
 5268 0430 86       		.byte	0x86
 5269 0431 D5000000 		.4byte	0xd5
 5270 0435 7C       		.byte	0x7c
 5271 0436 0A       		.uleb128 0xa
 5272 0437 74030000 		.4byte	.LASF89
 5273 043b 06       		.byte	0x6
 5274 043c 87       		.byte	0x87
 5275 043d D5000000 		.4byte	0xd5
 5276 0441 7D       		.byte	0x7d
 5277 0442 0A       		.uleb128 0xa
 5278 0443 0F100000 		.4byte	.LASF90
 5279 0447 06       		.byte	0x6
 5280 0448 88       		.byte	0x88
 5281 0449 D5000000 		.4byte	0xd5
 5282 044d 7E       		.byte	0x7e
 5283 044e 0A       		.uleb128 0xa
 5284 044f 69150000 		.4byte	.LASF91
 5285 0453 06       		.byte	0x6
 5286 0454 89       		.byte	0x89
 5287 0455 D5000000 		.4byte	0xd5
 5288 0459 7F       		.byte	0x7f
 5289 045a 0A       		.uleb128 0xa
 5290 045b 74250000 		.4byte	.LASF92
 5291 045f 06       		.byte	0x6
 5292 0460 8A       		.byte	0x8a
 5293 0461 D5000000 		.4byte	0xd5
 5294 0465 80       		.byte	0x80
 5295 0466 0A       		.uleb128 0xa
 5296 0467 AC0D0000 		.4byte	.LASF93
 5297 046b 06       		.byte	0x6
 5298 046c 8D       		.byte	0x8d
 5299 046d 01010000 		.4byte	0x101
 5300 0471 84       		.byte	0x84
 5301 0472 0A       		.uleb128 0xa
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 196


 5302 0473 E51F0000 		.4byte	.LASF94
 5303 0477 06       		.byte	0x6
 5304 0478 8E       		.byte	0x8e
 5305 0479 01010000 		.4byte	0x101
 5306 047d 88       		.byte	0x88
 5307 047e 0A       		.uleb128 0xa
 5308 047f 26270000 		.4byte	.LASF95
 5309 0483 06       		.byte	0x6
 5310 0484 8F       		.byte	0x8f
 5311 0485 01010000 		.4byte	0x101
 5312 0489 8C       		.byte	0x8c
 5313 048a 0A       		.uleb128 0xa
 5314 048b 70190000 		.4byte	.LASF96
 5315 048f 06       		.byte	0x6
 5316 0490 90       		.byte	0x90
 5317 0491 01010000 		.4byte	0x101
 5318 0495 90       		.byte	0x90
 5319 0496 0A       		.uleb128 0xa
 5320 0497 FC0E0000 		.4byte	.LASF97
 5321 049b 06       		.byte	0x6
 5322 049c 91       		.byte	0x91
 5323 049d 01010000 		.4byte	0x101
 5324 04a1 94       		.byte	0x94
 5325 04a2 0A       		.uleb128 0xa
 5326 04a3 C80A0000 		.4byte	.LASF98
 5327 04a7 06       		.byte	0x6
 5328 04a8 92       		.byte	0x92
 5329 04a9 01010000 		.4byte	0x101
 5330 04ad 98       		.byte	0x98
 5331 04ae 0A       		.uleb128 0xa
 5332 04af 3A0B0000 		.4byte	.LASF99
 5333 04b3 06       		.byte	0x6
 5334 04b4 93       		.byte	0x93
 5335 04b5 01010000 		.4byte	0x101
 5336 04b9 9C       		.byte	0x9c
 5337 04ba 0A       		.uleb128 0xa
 5338 04bb CB130000 		.4byte	.LASF100
 5339 04bf 06       		.byte	0x6
 5340 04c0 94       		.byte	0x94
 5341 04c1 01010000 		.4byte	0x101
 5342 04c5 A0       		.byte	0xa0
 5343 04c6 0A       		.uleb128 0xa
 5344 04c7 BF1C0000 		.4byte	.LASF101
 5345 04cb 06       		.byte	0x6
 5346 04cc 95       		.byte	0x95
 5347 04cd EB000000 		.4byte	0xeb
 5348 04d1 A4       		.byte	0xa4
 5349 04d2 0A       		.uleb128 0xa
 5350 04d3 C70E0000 		.4byte	.LASF102
 5351 04d7 06       		.byte	0x6
 5352 04d8 96       		.byte	0x96
 5353 04d9 EB000000 		.4byte	0xeb
 5354 04dd A6       		.byte	0xa6
 5355 04de 0A       		.uleb128 0xa
 5356 04df FF080000 		.4byte	.LASF103
 5357 04e3 06       		.byte	0x6
 5358 04e4 97       		.byte	0x97
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 197


 5359 04e5 EB000000 		.4byte	0xeb
 5360 04e9 A8       		.byte	0xa8
 5361 04ea 0A       		.uleb128 0xa
 5362 04eb 53200000 		.4byte	.LASF104
 5363 04ef 06       		.byte	0x6
 5364 04f0 98       		.byte	0x98
 5365 04f1 EB000000 		.4byte	0xeb
 5366 04f5 AA       		.byte	0xaa
 5367 04f6 0A       		.uleb128 0xa
 5368 04f7 9D180000 		.4byte	.LASF105
 5369 04fb 06       		.byte	0x6
 5370 04fc 99       		.byte	0x99
 5371 04fd EB000000 		.4byte	0xeb
 5372 0501 AC       		.byte	0xac
 5373 0502 0A       		.uleb128 0xa
 5374 0503 E0110000 		.4byte	.LASF106
 5375 0507 06       		.byte	0x6
 5376 0508 9A       		.byte	0x9a
 5377 0509 EB000000 		.4byte	0xeb
 5378 050d AE       		.byte	0xae
 5379 050e 0A       		.uleb128 0xa
 5380 050f 75280000 		.4byte	.LASF107
 5381 0513 06       		.byte	0x6
 5382 0514 9D       		.byte	0x9d
 5383 0515 EB000000 		.4byte	0xeb
 5384 0519 B0       		.byte	0xb0
 5385 051a 0A       		.uleb128 0xa
 5386 051b F50D0000 		.4byte	.LASF108
 5387 051f 06       		.byte	0x6
 5388 0520 9E       		.byte	0x9e
 5389 0521 01010000 		.4byte	0x101
 5390 0525 B4       		.byte	0xb4
 5391 0526 00       		.byte	0
 5392 0527 02       		.uleb128 0x2
 5393 0528 2D150000 		.4byte	.LASF109
 5394 052c 06       		.byte	0x6
 5395 052d 9F       		.byte	0x9f
 5396 052e 16010000 		.4byte	0x116
 5397 0532 03       		.uleb128 0x3
 5398 0533 04       		.byte	0x4
 5399 0534 04       		.byte	0x4
 5400 0535 6C160000 		.4byte	.LASF110
 5401 0539 03       		.uleb128 0x3
 5402 053a 08       		.byte	0x8
 5403 053b 04       		.byte	0x4
 5404 053c 370D0000 		.4byte	.LASF111
 5405 0540 06       		.uleb128 0x6
 5406 0541 04       		.byte	0x4
 5407 0542 01010000 		.4byte	0x101
 5408 0546 03       		.uleb128 0x3
 5409 0547 01       		.byte	0x1
 5410 0548 02       		.byte	0x2
 5411 0549 0E0B0000 		.4byte	.LASF112
 5412 054d 0B       		.uleb128 0xb
 5413 054e 01       		.byte	0x1
 5414 054f 5E000000 		.4byte	0x5e
 5415 0553 07       		.byte	0x7
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 198


 5416 0554 2402     		.2byte	0x224
 5417 0556 67050000 		.4byte	0x567
 5418 055a 0C       		.uleb128 0xc
 5419 055b 250F0000 		.4byte	.LASF113
 5420 055f 00       		.byte	0
 5421 0560 0C       		.uleb128 0xc
 5422 0561 00270000 		.4byte	.LASF114
 5423 0565 01       		.byte	0x1
 5424 0566 00       		.byte	0
 5425 0567 0D       		.uleb128 0xd
 5426 0568 A9110000 		.4byte	.LASF115
 5427 056c 07       		.byte	0x7
 5428 056d 2702     		.2byte	0x227
 5429 056f 4D050000 		.4byte	0x54d
 5430 0573 0D       		.uleb128 0xd
 5431 0574 241A0000 		.4byte	.LASF116
 5432 0578 07       		.byte	0x7
 5433 0579 3902     		.2byte	0x239
 5434 057b 7F050000 		.4byte	0x57f
 5435 057f 06       		.uleb128 0x6
 5436 0580 04       		.byte	0x4
 5437 0581 85050000 		.4byte	0x585
 5438 0585 0E       		.uleb128 0xe
 5439 0586 90050000 		.4byte	0x590
 5440 058a 0F       		.uleb128 0xf
 5441 058b 01010000 		.4byte	0x101
 5442 058f 00       		.byte	0
 5443 0590 0D       		.uleb128 0xd
 5444 0591 A02A0000 		.4byte	.LASF117
 5445 0595 07       		.byte	0x7
 5446 0596 4402     		.2byte	0x244
 5447 0598 9C050000 		.4byte	0x59c
 5448 059c 06       		.uleb128 0x6
 5449 059d 04       		.byte	0x4
 5450 059e A2050000 		.4byte	0x5a2
 5451 05a2 10       		.uleb128 0x10
 5452 05a3 67050000 		.4byte	0x567
 5453 05a7 B1050000 		.4byte	0x5b1
 5454 05ab 0F       		.uleb128 0xf
 5455 05ac 01010000 		.4byte	0x101
 5456 05b0 00       		.byte	0
 5457 05b1 11       		.uleb128 0x11
 5458 05b2 73290000 		.4byte	.LASF141
 5459 05b6 4C       		.byte	0x4c
 5460 05b7 07       		.byte	0x7
 5461 05b8 C302     		.2byte	0x2c3
 5462 05ba D0060000 		.4byte	0x6d0
 5463 05be 12       		.uleb128 0x12
 5464 05bf A1050000 		.4byte	.LASF118
 5465 05c3 07       		.byte	0x7
 5466 05c4 C602     		.2byte	0x2c6
 5467 05c6 46050000 		.4byte	0x546
 5468 05ca 00       		.byte	0
 5469 05cb 12       		.uleb128 0x12
 5470 05cc 681D0000 		.4byte	.LASF119
 5471 05d0 07       		.byte	0x7
 5472 05d1 C702     		.2byte	0x2c7
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 199


 5473 05d3 46050000 		.4byte	0x546
 5474 05d7 01       		.byte	0x1
 5475 05d8 12       		.uleb128 0x12
 5476 05d9 57030000 		.4byte	.LASF120
 5477 05dd 07       		.byte	0x7
 5478 05de C902     		.2byte	0x2c9
 5479 05e0 0C010000 		.4byte	0x10c
 5480 05e4 04       		.byte	0x4
 5481 05e5 12       		.uleb128 0x12
 5482 05e6 F5240000 		.4byte	.LASF121
 5483 05ea 07       		.byte	0x7
 5484 05eb CB02     		.2byte	0x2cb
 5485 05ed 0C010000 		.4byte	0x10c
 5486 05f1 08       		.byte	0x8
 5487 05f2 12       		.uleb128 0x12
 5488 05f3 9A260000 		.4byte	.LASF122
 5489 05f7 07       		.byte	0x7
 5490 05f8 CC02     		.2byte	0x2cc
 5491 05fa 46050000 		.4byte	0x546
 5492 05fe 0C       		.byte	0xc
 5493 05ff 12       		.uleb128 0x12
 5494 0600 C9260000 		.4byte	.LASF123
 5495 0604 07       		.byte	0x7
 5496 0605 CD02     		.2byte	0x2cd
 5497 0607 46050000 		.4byte	0x546
 5498 060b 0D       		.byte	0xd
 5499 060c 12       		.uleb128 0x12
 5500 060d 7A220000 		.4byte	.LASF124
 5501 0611 07       		.byte	0x7
 5502 0612 CF02     		.2byte	0x2cf
 5503 0614 D0060000 		.4byte	0x6d0
 5504 0618 10       		.byte	0x10
 5505 0619 12       		.uleb128 0x12
 5506 061a BA160000 		.4byte	.LASF125
 5507 061e 07       		.byte	0x7
 5508 061f D002     		.2byte	0x2d0
 5509 0621 01010000 		.4byte	0x101
 5510 0625 14       		.byte	0x14
 5511 0626 12       		.uleb128 0x12
 5512 0627 BB240000 		.4byte	.LASF126
 5513 062b 07       		.byte	0x7
 5514 062c D102     		.2byte	0x2d1
 5515 062e 0C010000 		.4byte	0x10c
 5516 0632 18       		.byte	0x18
 5517 0633 12       		.uleb128 0x12
 5518 0634 32080000 		.4byte	.LASF127
 5519 0638 07       		.byte	0x7
 5520 0639 D202     		.2byte	0x2d2
 5521 063b 0C010000 		.4byte	0x10c
 5522 063f 1C       		.byte	0x1c
 5523 0640 12       		.uleb128 0x12
 5524 0641 77120000 		.4byte	.LASF128
 5525 0645 07       		.byte	0x7
 5526 0646 D402     		.2byte	0x2d4
 5527 0648 0C010000 		.4byte	0x10c
 5528 064c 20       		.byte	0x20
 5529 064d 12       		.uleb128 0x12
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 200


 5530 064e 9E250000 		.4byte	.LASF129
 5531 0652 07       		.byte	0x7
 5532 0653 D502     		.2byte	0x2d5
 5533 0655 D6060000 		.4byte	0x6d6
 5534 0659 24       		.byte	0x24
 5535 065a 12       		.uleb128 0x12
 5536 065b B4140000 		.4byte	.LASF130
 5537 065f 07       		.byte	0x7
 5538 0660 D702     		.2byte	0x2d7
 5539 0662 D0060000 		.4byte	0x6d0
 5540 0666 28       		.byte	0x28
 5541 0667 12       		.uleb128 0x12
 5542 0668 08140000 		.4byte	.LASF131
 5543 066c 07       		.byte	0x7
 5544 066d D802     		.2byte	0x2d8
 5545 066f 01010000 		.4byte	0x101
 5546 0673 2C       		.byte	0x2c
 5547 0674 12       		.uleb128 0x12
 5548 0675 0B090000 		.4byte	.LASF132
 5549 0679 07       		.byte	0x7
 5550 067a D902     		.2byte	0x2d9
 5551 067c 0C010000 		.4byte	0x10c
 5552 0680 30       		.byte	0x30
 5553 0681 12       		.uleb128 0x12
 5554 0682 E40D0000 		.4byte	.LASF133
 5555 0686 07       		.byte	0x7
 5556 0687 DA02     		.2byte	0x2da
 5557 0689 0C010000 		.4byte	0x10c
 5558 068d 34       		.byte	0x34
 5559 068e 12       		.uleb128 0x12
 5560 068f 70090000 		.4byte	.LASF134
 5561 0693 07       		.byte	0x7
 5562 0694 DC02     		.2byte	0x2dc
 5563 0696 D0060000 		.4byte	0x6d0
 5564 069a 38       		.byte	0x38
 5565 069b 12       		.uleb128 0x12
 5566 069c E2190000 		.4byte	.LASF135
 5567 06a0 07       		.byte	0x7
 5568 06a1 DD02     		.2byte	0x2dd
 5569 06a3 01010000 		.4byte	0x101
 5570 06a7 3C       		.byte	0x3c
 5571 06a8 12       		.uleb128 0x12
 5572 06a9 911B0000 		.4byte	.LASF136
 5573 06ad 07       		.byte	0x7
 5574 06ae DE02     		.2byte	0x2de
 5575 06b0 0C010000 		.4byte	0x10c
 5576 06b4 40       		.byte	0x40
 5577 06b5 12       		.uleb128 0x12
 5578 06b6 F0100000 		.4byte	.LASF137
 5579 06ba 07       		.byte	0x7
 5580 06bb E402     		.2byte	0x2e4
 5581 06bd 73050000 		.4byte	0x573
 5582 06c1 44       		.byte	0x44
 5583 06c2 12       		.uleb128 0x12
 5584 06c3 87220000 		.4byte	.LASF138
 5585 06c7 07       		.byte	0x7
 5586 06c8 EB02     		.2byte	0x2eb
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 201


 5587 06ca 90050000 		.4byte	0x590
 5588 06ce 48       		.byte	0x48
 5589 06cf 00       		.byte	0
 5590 06d0 06       		.uleb128 0x6
 5591 06d1 04       		.byte	0x4
 5592 06d2 D5000000 		.4byte	0xd5
 5593 06d6 08       		.uleb128 0x8
 5594 06d7 46050000 		.4byte	0x546
 5595 06db 0D       		.uleb128 0xd
 5596 06dc B1090000 		.4byte	.LASF139
 5597 06e0 07       		.byte	0x7
 5598 06e1 EE02     		.2byte	0x2ee
 5599 06e3 B1050000 		.4byte	0x5b1
 5600 06e7 0D       		.uleb128 0xd
 5601 06e8 F31B0000 		.4byte	.LASF140
 5602 06ec 08       		.byte	0x8
 5603 06ed D901     		.2byte	0x1d9
 5604 06ef 7F050000 		.4byte	0x57f
 5605 06f3 11       		.uleb128 0x11
 5606 06f4 06010000 		.4byte	.LASF142
 5607 06f8 38       		.byte	0x38
 5608 06f9 08       		.byte	0x8
 5609 06fa 7502     		.2byte	0x275
 5610 06fc B7070000 		.4byte	0x7b7
 5611 0700 12       		.uleb128 0x12
 5612 0701 33030000 		.4byte	.LASF143
 5613 0705 08       		.byte	0x8
 5614 0706 7802     		.2byte	0x278
 5615 0708 0C010000 		.4byte	0x10c
 5616 070c 00       		.byte	0
 5617 070d 12       		.uleb128 0x12
 5618 070e 71220000 		.4byte	.LASF144
 5619 0712 08       		.byte	0x8
 5620 0713 7902     		.2byte	0x279
 5621 0715 0C010000 		.4byte	0x10c
 5622 0719 04       		.byte	0x4
 5623 071a 12       		.uleb128 0x12
 5624 071b 5E290000 		.4byte	.LASF145
 5625 071f 08       		.byte	0x8
 5626 0720 7B02     		.2byte	0x27b
 5627 0722 BB000000 		.4byte	0xbb
 5628 0726 08       		.byte	0x8
 5629 0727 12       		.uleb128 0x12
 5630 0728 A41A0000 		.4byte	.LASF146
 5631 072c 08       		.byte	0x8
 5632 072d 7C02     		.2byte	0x27c
 5633 072f 01010000 		.4byte	0x101
 5634 0733 0C       		.byte	0xc
 5635 0734 12       		.uleb128 0x12
 5636 0735 62090000 		.4byte	.LASF147
 5637 0739 08       		.byte	0x8
 5638 073a 7D02     		.2byte	0x27d
 5639 073c 0C010000 		.4byte	0x10c
 5640 0740 10       		.byte	0x10
 5641 0741 12       		.uleb128 0x12
 5642 0742 20290000 		.4byte	.LASF148
 5643 0746 08       		.byte	0x8
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 202


 5644 0747 7E02     		.2byte	0x27e
 5645 0749 0C010000 		.4byte	0x10c
 5646 074d 14       		.byte	0x14
 5647 074e 12       		.uleb128 0x12
 5648 074f 5C010000 		.4byte	.LASF149
 5649 0753 08       		.byte	0x8
 5650 0754 8002     		.2byte	0x280
 5651 0756 BB000000 		.4byte	0xbb
 5652 075a 18       		.byte	0x18
 5653 075b 12       		.uleb128 0x12
 5654 075c 5D0C0000 		.4byte	.LASF150
 5655 0760 08       		.byte	0x8
 5656 0761 8102     		.2byte	0x281
 5657 0763 01010000 		.4byte	0x101
 5658 0767 1C       		.byte	0x1c
 5659 0768 12       		.uleb128 0x12
 5660 0769 FB150000 		.4byte	.LASF151
 5661 076d 08       		.byte	0x8
 5662 076e 8202     		.2byte	0x282
 5663 0770 0C010000 		.4byte	0x10c
 5664 0774 20       		.byte	0x20
 5665 0775 12       		.uleb128 0x12
 5666 0776 671F0000 		.4byte	.LASF152
 5667 077a 08       		.byte	0x8
 5668 077b 8402     		.2byte	0x284
 5669 077d BB000000 		.4byte	0xbb
 5670 0781 24       		.byte	0x24
 5671 0782 12       		.uleb128 0x12
 5672 0783 D7050000 		.4byte	.LASF153
 5673 0787 08       		.byte	0x8
 5674 0788 8502     		.2byte	0x285
 5675 078a 01010000 		.4byte	0x101
 5676 078e 28       		.byte	0x28
 5677 078f 12       		.uleb128 0x12
 5678 0790 EE110000 		.4byte	.LASF154
 5679 0794 08       		.byte	0x8
 5680 0795 8602     		.2byte	0x286
 5681 0797 0C010000 		.4byte	0x10c
 5682 079b 2C       		.byte	0x2c
 5683 079c 12       		.uleb128 0x12
 5684 079d F0100000 		.4byte	.LASF137
 5685 07a1 08       		.byte	0x8
 5686 07a2 8B02     		.2byte	0x28b
 5687 07a4 E7060000 		.4byte	0x6e7
 5688 07a8 30       		.byte	0x30
 5689 07a9 12       		.uleb128 0x12
 5690 07aa 86230000 		.4byte	.LASF155
 5691 07ae 08       		.byte	0x8
 5692 07af 8E02     		.2byte	0x28e
 5693 07b1 01010000 		.4byte	0x101
 5694 07b5 34       		.byte	0x34
 5695 07b6 00       		.byte	0
 5696 07b7 0D       		.uleb128 0xd
 5697 07b8 C2140000 		.4byte	.LASF156
 5698 07bc 08       		.byte	0x8
 5699 07bd 9102     		.2byte	0x291
 5700 07bf F3060000 		.4byte	0x6f3
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 203


 5701 07c3 13       		.uleb128 0x13
 5702 07c4 7B0E0000 		.4byte	.LASF157
 5703 07c8 64       		.byte	0x64
 5704 07c9 09       		.byte	0x9
 5705 07ca 2F       		.byte	0x2f
 5706 07cb FC080000 		.4byte	0x8fc
 5707 07cf 0A       		.uleb128 0xa
 5708 07d0 BC170000 		.4byte	.LASF158
 5709 07d4 09       		.byte	0x9
 5710 07d5 31       		.byte	0x31
 5711 07d6 01010000 		.4byte	0x101
 5712 07da 00       		.byte	0
 5713 07db 0A       		.uleb128 0xa
 5714 07dc 720C0000 		.4byte	.LASF159
 5715 07e0 09       		.byte	0x9
 5716 07e1 33       		.byte	0x33
 5717 07e2 01010000 		.4byte	0x101
 5718 07e6 04       		.byte	0x4
 5719 07e7 0A       		.uleb128 0xa
 5720 07e8 D0030000 		.4byte	.LASF160
 5721 07ec 09       		.byte	0x9
 5722 07ed 34       		.byte	0x34
 5723 07ee 01010000 		.4byte	0x101
 5724 07f2 08       		.byte	0x8
 5725 07f3 0A       		.uleb128 0xa
 5726 07f4 1F250000 		.4byte	.LASF161
 5727 07f8 09       		.byte	0x9
 5728 07f9 35       		.byte	0x35
 5729 07fa 01010000 		.4byte	0x101
 5730 07fe 0C       		.byte	0xc
 5731 07ff 0A       		.uleb128 0xa
 5732 0800 550C0000 		.4byte	.LASF162
 5733 0804 09       		.byte	0x9
 5734 0805 36       		.byte	0x36
 5735 0806 01010000 		.4byte	0x101
 5736 080a 10       		.byte	0x10
 5737 080b 0A       		.uleb128 0xa
 5738 080c D9080000 		.4byte	.LASF163
 5739 0810 09       		.byte	0x9
 5740 0811 37       		.byte	0x37
 5741 0812 01010000 		.4byte	0x101
 5742 0816 14       		.byte	0x14
 5743 0817 0A       		.uleb128 0xa
 5744 0818 E1080000 		.4byte	.LASF164
 5745 081c 09       		.byte	0x9
 5746 081d 38       		.byte	0x38
 5747 081e 01010000 		.4byte	0x101
 5748 0822 18       		.byte	0x18
 5749 0823 0A       		.uleb128 0xa
 5750 0824 A2120000 		.4byte	.LASF165
 5751 0828 09       		.byte	0x9
 5752 0829 39       		.byte	0x39
 5753 082a 46050000 		.4byte	0x546
 5754 082e 1C       		.byte	0x1c
 5755 082f 0A       		.uleb128 0xa
 5756 0830 90030000 		.4byte	.LASF166
 5757 0834 09       		.byte	0x9
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 204


 5758 0835 3A       		.byte	0x3a
 5759 0836 01010000 		.4byte	0x101
 5760 083a 20       		.byte	0x20
 5761 083b 0A       		.uleb128 0xa
 5762 083c 99030000 		.4byte	.LASF167
 5763 0840 09       		.byte	0x9
 5764 0841 3B       		.byte	0x3b
 5765 0842 01010000 		.4byte	0x101
 5766 0846 24       		.byte	0x24
 5767 0847 0A       		.uleb128 0xa
 5768 0848 18180000 		.4byte	.LASF168
 5769 084c 09       		.byte	0x9
 5770 084d 3C       		.byte	0x3c
 5771 084e 46050000 		.4byte	0x546
 5772 0852 28       		.byte	0x28
 5773 0853 0A       		.uleb128 0xa
 5774 0854 E1130000 		.4byte	.LASF169
 5775 0858 09       		.byte	0x9
 5776 0859 3E       		.byte	0x3e
 5777 085a 01010000 		.4byte	0x101
 5778 085e 2C       		.byte	0x2c
 5779 085f 0A       		.uleb128 0xa
 5780 0860 C8100000 		.4byte	.LASF170
 5781 0864 09       		.byte	0x9
 5782 0865 3F       		.byte	0x3f
 5783 0866 01010000 		.4byte	0x101
 5784 086a 30       		.byte	0x30
 5785 086b 0A       		.uleb128 0xa
 5786 086c D2280000 		.4byte	.LASF171
 5787 0870 09       		.byte	0x9
 5788 0871 40       		.byte	0x40
 5789 0872 01010000 		.4byte	0x101
 5790 0876 34       		.byte	0x34
 5791 0877 0A       		.uleb128 0xa
 5792 0878 06100000 		.4byte	.LASF172
 5793 087c 09       		.byte	0x9
 5794 087d 41       		.byte	0x41
 5795 087e 01010000 		.4byte	0x101
 5796 0882 38       		.byte	0x38
 5797 0883 0A       		.uleb128 0xa
 5798 0884 41140000 		.4byte	.LASF173
 5799 0888 09       		.byte	0x9
 5800 0889 42       		.byte	0x42
 5801 088a 01010000 		.4byte	0x101
 5802 088e 3C       		.byte	0x3c
 5803 088f 0A       		.uleb128 0xa
 5804 0890 CD050000 		.4byte	.LASF174
 5805 0894 09       		.byte	0x9
 5806 0895 44       		.byte	0x44
 5807 0896 01010000 		.4byte	0x101
 5808 089a 40       		.byte	0x40
 5809 089b 0A       		.uleb128 0xa
 5810 089c 12070000 		.4byte	.LASF175
 5811 08a0 09       		.byte	0x9
 5812 08a1 45       		.byte	0x45
 5813 08a2 01010000 		.4byte	0x101
 5814 08a6 44       		.byte	0x44
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 205


 5815 08a7 0A       		.uleb128 0xa
 5816 08a8 14290000 		.4byte	.LASF176
 5817 08ac 09       		.byte	0x9
 5818 08ad 47       		.byte	0x47
 5819 08ae 01010000 		.4byte	0x101
 5820 08b2 48       		.byte	0x48
 5821 08b3 0A       		.uleb128 0xa
 5822 08b4 62220000 		.4byte	.LASF177
 5823 08b8 09       		.byte	0x9
 5824 08b9 48       		.byte	0x48
 5825 08ba 01010000 		.4byte	0x101
 5826 08be 4C       		.byte	0x4c
 5827 08bf 0A       		.uleb128 0xa
 5828 08c0 202A0000 		.4byte	.LASF178
 5829 08c4 09       		.byte	0x9
 5830 08c5 4A       		.byte	0x4a
 5831 08c6 01010000 		.4byte	0x101
 5832 08ca 50       		.byte	0x50
 5833 08cb 0A       		.uleb128 0xa
 5834 08cc AE250000 		.4byte	.LASF179
 5835 08d0 09       		.byte	0x9
 5836 08d1 4B       		.byte	0x4b
 5837 08d2 01010000 		.4byte	0x101
 5838 08d6 54       		.byte	0x54
 5839 08d7 0A       		.uleb128 0xa
 5840 08d8 3A180000 		.4byte	.LASF180
 5841 08dc 09       		.byte	0x9
 5842 08dd 4D       		.byte	0x4d
 5843 08de 01010000 		.4byte	0x101
 5844 08e2 58       		.byte	0x58
 5845 08e3 0A       		.uleb128 0xa
 5846 08e4 22040000 		.4byte	.LASF181
 5847 08e8 09       		.byte	0x9
 5848 08e9 4E       		.byte	0x4e
 5849 08ea 01010000 		.4byte	0x101
 5850 08ee 5C       		.byte	0x5c
 5851 08ef 0A       		.uleb128 0xa
 5852 08f0 D5180000 		.4byte	.LASF182
 5853 08f4 09       		.byte	0x9
 5854 08f5 50       		.byte	0x50
 5855 08f6 01010000 		.4byte	0x101
 5856 08fa 60       		.byte	0x60
 5857 08fb 00       		.byte	0
 5858 08fc 02       		.uleb128 0x2
 5859 08fd 68040000 		.4byte	.LASF183
 5860 0901 09       		.byte	0x9
 5861 0902 51       		.byte	0x51
 5862 0903 C3070000 		.4byte	0x7c3
 5863 0907 0B       		.uleb128 0xb
 5864 0908 02       		.byte	0x2
 5865 0909 82000000 		.4byte	0x82
 5866 090d 0A       		.byte	0xa
 5867 090e 5401     		.2byte	0x154
 5868 0910 470C0000 		.4byte	0xc47
 5869 0914 0C       		.uleb128 0xc
 5870 0915 F4190000 		.4byte	.LASF184
 5871 0919 00       		.byte	0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 206


 5872 091a 14       		.uleb128 0x14
 5873 091b 1A120000 		.4byte	.LASF185
 5874 091f 0010     		.2byte	0x1000
 5875 0921 14       		.uleb128 0x14
 5876 0922 08080000 		.4byte	.LASF186
 5877 0926 0110     		.2byte	0x1001
 5878 0928 14       		.uleb128 0x14
 5879 0929 ED050000 		.4byte	.LASF187
 5880 092d 0210     		.2byte	0x1002
 5881 092f 14       		.uleb128 0x14
 5882 0930 5A140000 		.4byte	.LASF188
 5883 0934 0310     		.2byte	0x1003
 5884 0936 14       		.uleb128 0x14
 5885 0937 0F000000 		.4byte	.LASF189
 5886 093b 0410     		.2byte	0x1004
 5887 093d 14       		.uleb128 0x14
 5888 093e 9F280000 		.4byte	.LASF190
 5889 0942 0510     		.2byte	0x1005
 5890 0944 14       		.uleb128 0x14
 5891 0945 C9020000 		.4byte	.LASF191
 5892 0949 0020     		.2byte	0x2000
 5893 094b 14       		.uleb128 0x14
 5894 094c 01030000 		.4byte	.LASF192
 5895 0950 0120     		.2byte	0x2001
 5896 0952 14       		.uleb128 0x14
 5897 0953 FD220000 		.4byte	.LASF193
 5898 0957 0220     		.2byte	0x2002
 5899 0959 14       		.uleb128 0x14
 5900 095a 48230000 		.4byte	.LASF194
 5901 095e 0320     		.2byte	0x2003
 5902 0960 14       		.uleb128 0x14
 5903 0961 6B020000 		.4byte	.LASF195
 5904 0965 0420     		.2byte	0x2004
 5905 0967 14       		.uleb128 0x14
 5906 0968 CB1D0000 		.4byte	.LASF196
 5907 096c 0520     		.2byte	0x2005
 5908 096e 14       		.uleb128 0x14
 5909 096f 121C0000 		.4byte	.LASF197
 5910 0973 0620     		.2byte	0x2006
 5911 0975 14       		.uleb128 0x14
 5912 0976 E7290000 		.4byte	.LASF198
 5913 097a 0720     		.2byte	0x2007
 5914 097c 14       		.uleb128 0x14
 5915 097d 36160000 		.4byte	.LASF199
 5916 0981 0820     		.2byte	0x2008
 5917 0983 14       		.uleb128 0x14
 5918 0984 F5250000 		.4byte	.LASF200
 5919 0988 0920     		.2byte	0x2009
 5920 098a 14       		.uleb128 0x14
 5921 098b E31E0000 		.4byte	.LASF201
 5922 098f 0A20     		.2byte	0x200a
 5923 0991 14       		.uleb128 0x14
 5924 0992 2E250000 		.4byte	.LASF202
 5925 0996 0B20     		.2byte	0x200b
 5926 0998 14       		.uleb128 0x14
 5927 0999 C1110000 		.4byte	.LASF203
 5928 099d 0C20     		.2byte	0x200c
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 207


 5929 099f 14       		.uleb128 0x14
 5930 09a0 F91C0000 		.4byte	.LASF204
 5931 09a4 0D20     		.2byte	0x200d
 5932 09a6 14       		.uleb128 0x14
 5933 09a7 9D070000 		.4byte	.LASF205
 5934 09ab 0E20     		.2byte	0x200e
 5935 09ad 14       		.uleb128 0x14
 5936 09ae BC290000 		.4byte	.LASF206
 5937 09b2 0F20     		.2byte	0x200f
 5938 09b4 14       		.uleb128 0x14
 5939 09b5 41080000 		.4byte	.LASF207
 5940 09b9 1020     		.2byte	0x2010
 5941 09bb 14       		.uleb128 0x14
 5942 09bc 74050000 		.4byte	.LASF208
 5943 09c0 1120     		.2byte	0x2011
 5944 09c2 14       		.uleb128 0x14
 5945 09c3 8A290000 		.4byte	.LASF209
 5946 09c7 1220     		.2byte	0x2012
 5947 09c9 14       		.uleb128 0x14
 5948 09ca F90B0000 		.4byte	.LASF210
 5949 09ce 1320     		.2byte	0x2013
 5950 09d0 14       		.uleb128 0x14
 5951 09d1 A30E0000 		.4byte	.LASF211
 5952 09d5 1420     		.2byte	0x2014
 5953 09d7 14       		.uleb128 0x14
 5954 09d8 150C0000 		.4byte	.LASF212
 5955 09dc 1520     		.2byte	0x2015
 5956 09de 14       		.uleb128 0x14
 5957 09df 3D150000 		.4byte	.LASF213
 5958 09e3 1620     		.2byte	0x2016
 5959 09e5 14       		.uleb128 0x14
 5960 09e6 41070000 		.4byte	.LASF214
 5961 09ea 1720     		.2byte	0x2017
 5962 09ec 14       		.uleb128 0x14
 5963 09ed E9030000 		.4byte	.LASF215
 5964 09f1 0030     		.2byte	0x3000
 5965 09f3 14       		.uleb128 0x14
 5966 09f4 62010000 		.4byte	.LASF216
 5967 09f8 0130     		.2byte	0x3001
 5968 09fa 14       		.uleb128 0x14
 5969 09fb B8000000 		.4byte	.LASF217
 5970 09ff 0230     		.2byte	0x3002
 5971 0a01 14       		.uleb128 0x14
 5972 0a02 21260000 		.4byte	.LASF218
 5973 0a06 0330     		.2byte	0x3003
 5974 0a08 14       		.uleb128 0x14
 5975 0a09 9C100000 		.4byte	.LASF219
 5976 0a0d 0430     		.2byte	0x3004
 5977 0a0f 14       		.uleb128 0x14
 5978 0a10 E1230000 		.4byte	.LASF220
 5979 0a14 0530     		.2byte	0x3005
 5980 0a16 14       		.uleb128 0x14
 5981 0a17 3F290000 		.4byte	.LASF221
 5982 0a1b 0630     		.2byte	0x3006
 5983 0a1d 14       		.uleb128 0x14
 5984 0a1e 00020000 		.4byte	.LASF222
 5985 0a22 0730     		.2byte	0x3007
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 208


 5986 0a24 14       		.uleb128 0x14
 5987 0a25 9E010000 		.4byte	.LASF223
 5988 0a29 0830     		.2byte	0x3008
 5989 0a2b 14       		.uleb128 0x14
 5990 0a2c 83130000 		.4byte	.LASF224
 5991 0a30 0930     		.2byte	0x3009
 5992 0a32 14       		.uleb128 0x14
 5993 0a33 A9190000 		.4byte	.LASF225
 5994 0a37 0A30     		.2byte	0x300a
 5995 0a39 14       		.uleb128 0x14
 5996 0a3a F41D0000 		.4byte	.LASF226
 5997 0a3e 0B30     		.2byte	0x300b
 5998 0a40 14       		.uleb128 0x14
 5999 0a41 310C0000 		.4byte	.LASF227
 6000 0a45 0C30     		.2byte	0x300c
 6001 0a47 14       		.uleb128 0x14
 6002 0a48 2E130000 		.4byte	.LASF228
 6003 0a4c 1130     		.2byte	0x3011
 6004 0a4e 14       		.uleb128 0x14
 6005 0a4f AF230000 		.4byte	.LASF229
 6006 0a53 1230     		.2byte	0x3012
 6007 0a55 14       		.uleb128 0x14
 6008 0a56 13280000 		.4byte	.LASF230
 6009 0a5a 1330     		.2byte	0x3013
 6010 0a5c 14       		.uleb128 0x14
 6011 0a5d 9C240000 		.4byte	.LASF231
 6012 0a61 1430     		.2byte	0x3014
 6013 0a63 14       		.uleb128 0x14
 6014 0a64 BC250000 		.4byte	.LASF232
 6015 0a68 1530     		.2byte	0x3015
 6016 0a6a 14       		.uleb128 0x14
 6017 0a6b 5B060000 		.4byte	.LASF233
 6018 0a6f 1630     		.2byte	0x3016
 6019 0a71 14       		.uleb128 0x14
 6020 0a72 821A0000 		.4byte	.LASF234
 6021 0a76 1730     		.2byte	0x3017
 6022 0a78 14       		.uleb128 0x14
 6023 0a79 550E0000 		.4byte	.LASF235
 6024 0a7d 1830     		.2byte	0x3018
 6025 0a7f 14       		.uleb128 0x14
 6026 0a80 91190000 		.4byte	.LASF236
 6027 0a84 1930     		.2byte	0x3019
 6028 0a86 14       		.uleb128 0x14
 6029 0a87 EF1A0000 		.4byte	.LASF237
 6030 0a8b 0040     		.2byte	0x4000
 6031 0a8d 14       		.uleb128 0x14
 6032 0a8e 8B160000 		.4byte	.LASF238
 6033 0a92 0140     		.2byte	0x4001
 6034 0a94 14       		.uleb128 0x14
 6035 0a95 620A0000 		.4byte	.LASF239
 6036 0a99 0240     		.2byte	0x4002
 6037 0a9b 14       		.uleb128 0x14
 6038 0a9c 721D0000 		.4byte	.LASF240
 6039 0aa0 0340     		.2byte	0x4003
 6040 0aa2 14       		.uleb128 0x14
 6041 0aa3 741B0000 		.4byte	.LASF241
 6042 0aa7 0440     		.2byte	0x4004
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 209


 6043 0aa9 14       		.uleb128 0x14
 6044 0aaa 52050000 		.4byte	.LASF242
 6045 0aae 0540     		.2byte	0x4005
 6046 0ab0 14       		.uleb128 0x14
 6047 0ab1 39220000 		.4byte	.LASF243
 6048 0ab5 0640     		.2byte	0x4006
 6049 0ab7 14       		.uleb128 0x14
 6050 0ab8 7C240000 		.4byte	.LASF244
 6051 0abc 0740     		.2byte	0x4007
 6052 0abe 14       		.uleb128 0x14
 6053 0abf C7270000 		.4byte	.LASF245
 6054 0ac3 0840     		.2byte	0x4008
 6055 0ac5 14       		.uleb128 0x14
 6056 0ac6 7F070000 		.4byte	.LASF246
 6057 0aca 0940     		.2byte	0x4009
 6058 0acc 14       		.uleb128 0x14
 6059 0acd 3E1D0000 		.4byte	.LASF247
 6060 0ad1 0A40     		.2byte	0x400a
 6061 0ad3 14       		.uleb128 0x14
 6062 0ad4 58110000 		.4byte	.LASF248
 6063 0ad8 0B40     		.2byte	0x400b
 6064 0ada 14       		.uleb128 0x14
 6065 0adb D41C0000 		.4byte	.LASF249
 6066 0adf 0C40     		.2byte	0x400c
 6067 0ae1 14       		.uleb128 0x14
 6068 0ae2 72270000 		.4byte	.LASF250
 6069 0ae6 0D40     		.2byte	0x400d
 6070 0ae8 14       		.uleb128 0x14
 6071 0ae9 44180000 		.4byte	.LASF251
 6072 0aed 0E40     		.2byte	0x400e
 6073 0aef 14       		.uleb128 0x14
 6074 0af0 2B0E0000 		.4byte	.LASF252
 6075 0af4 0F40     		.2byte	0x400f
 6076 0af6 14       		.uleb128 0x14
 6077 0af7 B10C0000 		.4byte	.LASF253
 6078 0afb 1040     		.2byte	0x4010
 6079 0afd 14       		.uleb128 0x14
 6080 0afe AF080000 		.4byte	.LASF254
 6081 0b02 1140     		.2byte	0x4011
 6082 0b04 14       		.uleb128 0x14
 6083 0b05 AB200000 		.4byte	.LASF255
 6084 0b09 1240     		.2byte	0x4012
 6085 0b0b 14       		.uleb128 0x14
 6086 0b0c D2090000 		.4byte	.LASF256
 6087 0b10 1340     		.2byte	0x4013
 6088 0b12 14       		.uleb128 0x14
 6089 0b13 5D2A0000 		.4byte	.LASF257
 6090 0b17 1440     		.2byte	0x4014
 6091 0b19 14       		.uleb128 0x14
 6092 0b1a 3A1E0000 		.4byte	.LASF258
 6093 0b1e 1540     		.2byte	0x4015
 6094 0b20 14       		.uleb128 0x14
 6095 0b21 92040000 		.4byte	.LASF259
 6096 0b25 1640     		.2byte	0x4016
 6097 0b27 14       		.uleb128 0x14
 6098 0b28 9C270000 		.4byte	.LASF260
 6099 0b2c 1740     		.2byte	0x4017
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 210


 6100 0b2e 14       		.uleb128 0x14
 6101 0b2f 72160000 		.4byte	.LASF261
 6102 0b33 1840     		.2byte	0x4018
 6103 0b35 14       		.uleb128 0x14
 6104 0b36 47280000 		.4byte	.LASF262
 6105 0b3a 1940     		.2byte	0x4019
 6106 0b3c 14       		.uleb128 0x14
 6107 0b3d 6D1F0000 		.4byte	.LASF263
 6108 0b41 1A40     		.2byte	0x401a
 6109 0b43 14       		.uleb128 0x14
 6110 0b44 830F0000 		.4byte	.LASF264
 6111 0b48 0050     		.2byte	0x5000
 6112 0b4a 14       		.uleb128 0x14
 6113 0b4b ED180000 		.4byte	.LASF265
 6114 0b4f 0150     		.2byte	0x5001
 6115 0b51 14       		.uleb128 0x14
 6116 0b52 83120000 		.4byte	.LASF266
 6117 0b56 0250     		.2byte	0x5002
 6118 0b58 14       		.uleb128 0x14
 6119 0b59 2F060000 		.4byte	.LASF267
 6120 0b5d 0350     		.2byte	0x5003
 6121 0b5f 14       		.uleb128 0x14
 6122 0b60 741E0000 		.4byte	.LASF268
 6123 0b64 0450     		.2byte	0x5004
 6124 0b66 14       		.uleb128 0x14
 6125 0b67 F9100000 		.4byte	.LASF269
 6126 0b6b 0550     		.2byte	0x5005
 6127 0b6d 14       		.uleb128 0x14
 6128 0b6e 6D000000 		.4byte	.LASF270
 6129 0b72 0650     		.2byte	0x5006
 6130 0b74 14       		.uleb128 0x14
 6131 0b75 430A0000 		.4byte	.LASF271
 6132 0b79 0750     		.2byte	0x5007
 6133 0b7b 14       		.uleb128 0x14
 6134 0b7c D1120000 		.4byte	.LASF272
 6135 0b80 0850     		.2byte	0x5008
 6136 0b82 14       		.uleb128 0x14
 6137 0b83 07130000 		.4byte	.LASF273
 6138 0b87 0950     		.2byte	0x5009
 6139 0b89 14       		.uleb128 0x14
 6140 0b8a 5F210000 		.4byte	.LASF274
 6141 0b8e 0A50     		.2byte	0x500a
 6142 0b90 14       		.uleb128 0x14
 6143 0b91 B0030000 		.4byte	.LASF275
 6144 0b95 0B50     		.2byte	0x500b
 6145 0b97 14       		.uleb128 0x14
 6146 0b98 C2060000 		.4byte	.LASF276
 6147 0b9c 0C50     		.2byte	0x500c
 6148 0b9e 14       		.uleb128 0x14
 6149 0b9f 910D0000 		.4byte	.LASF277
 6150 0ba3 0D50     		.2byte	0x500d
 6151 0ba5 14       		.uleb128 0x14
 6152 0ba6 421A0000 		.4byte	.LASF278
 6153 0baa 0E50     		.2byte	0x500e
 6154 0bac 14       		.uleb128 0x14
 6155 0bad 9E0F0000 		.4byte	.LASF279
 6156 0bb1 0F50     		.2byte	0x500f
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 211


 6157 0bb3 14       		.uleb128 0x14
 6158 0bb4 411C0000 		.4byte	.LASF280
 6159 0bb8 1050     		.2byte	0x5010
 6160 0bba 14       		.uleb128 0x14
 6161 0bbb 48040000 		.4byte	.LASF281
 6162 0bbf 1150     		.2byte	0x5011
 6163 0bc1 14       		.uleb128 0x14
 6164 0bc2 090E0000 		.4byte	.LASF282
 6165 0bc6 1250     		.2byte	0x5012
 6166 0bc8 14       		.uleb128 0x14
 6167 0bc9 AB050000 		.4byte	.LASF283
 6168 0bcd 1350     		.2byte	0x5013
 6169 0bcf 14       		.uleb128 0x14
 6170 0bd0 40090000 		.4byte	.LASF284
 6171 0bd4 1450     		.2byte	0x5014
 6172 0bd6 14       		.uleb128 0x14
 6173 0bd7 57240000 		.4byte	.LASF285
 6174 0bdb 1550     		.2byte	0x5015
 6175 0bdd 14       		.uleb128 0x14
 6176 0bde 9D0B0000 		.4byte	.LASF286
 6177 0be2 1650     		.2byte	0x5016
 6178 0be4 14       		.uleb128 0x14
 6179 0be5 AA210000 		.4byte	.LASF287
 6180 0be9 1750     		.2byte	0x5017
 6181 0beb 14       		.uleb128 0x14
 6182 0bec CB040000 		.4byte	.LASF288
 6183 0bf0 1850     		.2byte	0x5018
 6184 0bf2 14       		.uleb128 0x14
 6185 0bf3 D60C0000 		.4byte	.LASF289
 6186 0bf7 0060     		.2byte	0x6000
 6187 0bf9 14       		.uleb128 0x14
 6188 0bfa FA200000 		.4byte	.LASF290
 6189 0bfe 0160     		.2byte	0x6001
 6190 0c00 14       		.uleb128 0x14
 6191 0c01 40120000 		.4byte	.LASF291
 6192 0c05 0260     		.2byte	0x6002
 6193 0c07 14       		.uleb128 0x14
 6194 0c08 2B100000 		.4byte	.LASF292
 6195 0c0c 0360     		.2byte	0x6003
 6196 0c0e 14       		.uleb128 0x14
 6197 0c0f EF040000 		.4byte	.LASF293
 6198 0c13 0460     		.2byte	0x6004
 6199 0c15 14       		.uleb128 0x14
 6200 0c16 AA1E0000 		.4byte	.LASF294
 6201 0c1a 0560     		.2byte	0x6005
 6202 0c1c 14       		.uleb128 0x14
 6203 0c1d DC140000 		.4byte	.LASF295
 6204 0c21 0660     		.2byte	0x6006
 6205 0c23 14       		.uleb128 0x14
 6206 0c24 8B150000 		.4byte	.LASF296
 6207 0c28 0760     		.2byte	0x6007
 6208 0c2a 14       		.uleb128 0x14
 6209 0c2b 1C090000 		.4byte	.LASF297
 6210 0c2f 0860     		.2byte	0x6008
 6211 0c31 14       		.uleb128 0x14
 6212 0c32 BE0F0000 		.4byte	.LASF298
 6213 0c36 0960     		.2byte	0x6009
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 212


 6214 0c38 14       		.uleb128 0x14
 6215 0c39 C01F0000 		.4byte	.LASF299
 6216 0c3d 0A60     		.2byte	0x600a
 6217 0c3f 14       		.uleb128 0x14
 6218 0c40 3C030000 		.4byte	.LASF300
 6219 0c44 FFFF     		.2byte	0xffff
 6220 0c46 00       		.byte	0
 6221 0c47 15       		.uleb128 0x15
 6222 0c48 02       		.byte	0x2
 6223 0c49 0B       		.byte	0xb
 6224 0c4a 6401     		.2byte	0x164
 6225 0c4c 6B0C0000 		.4byte	0xc6b
 6226 0c50 12       		.uleb128 0x12
 6227 0c51 0E050000 		.4byte	.LASF301
 6228 0c55 0B       		.byte	0xb
 6229 0c56 6E01     		.2byte	0x16e
 6230 0c58 D5000000 		.4byte	0xd5
 6231 0c5c 00       		.byte	0
 6232 0c5d 12       		.uleb128 0x12
 6233 0c5e EA280000 		.4byte	.LASF302
 6234 0c62 0B       		.byte	0xb
 6235 0c63 7201     		.2byte	0x172
 6236 0c65 D5000000 		.4byte	0xd5
 6237 0c69 01       		.byte	0x1
 6238 0c6a 00       		.byte	0
 6239 0c6b 0D       		.uleb128 0xd
 6240 0c6c FD210000 		.4byte	.LASF303
 6241 0c70 0B       		.byte	0xb
 6242 0c71 7401     		.2byte	0x174
 6243 0c73 470C0000 		.4byte	0xc47
 6244 0c77 16       		.uleb128 0x16
 6245 0c78 01       		.byte	0x1
 6246 0c79 5E000000 		.4byte	0x5e
 6247 0c7d 0C       		.byte	0xc
 6248 0c7e 7E       		.byte	0x7e
 6249 0c7f 9C0C0000 		.4byte	0xc9c
 6250 0c83 0C       		.uleb128 0xc
 6251 0c84 1C190000 		.4byte	.LASF304
 6252 0c88 00       		.byte	0
 6253 0c89 0C       		.uleb128 0xc
 6254 0c8a E9070000 		.4byte	.LASF305
 6255 0c8e 01       		.byte	0x1
 6256 0c8f 0C       		.uleb128 0xc
 6257 0c90 4E020000 		.4byte	.LASF306
 6258 0c94 02       		.byte	0x2
 6259 0c95 0C       		.uleb128 0xc
 6260 0c96 951F0000 		.4byte	.LASF307
 6261 0c9a 03       		.byte	0x3
 6262 0c9b 00       		.byte	0
 6263 0c9c 02       		.uleb128 0x2
 6264 0c9d 5A190000 		.4byte	.LASF308
 6265 0ca1 0C       		.byte	0xc
 6266 0ca2 83       		.byte	0x83
 6267 0ca3 770C0000 		.4byte	0xc77
 6268 0ca7 16       		.uleb128 0x16
 6269 0ca8 01       		.byte	0x1
 6270 0ca9 5E000000 		.4byte	0x5e
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 213


 6271 0cad 0C       		.byte	0xc
 6272 0cae 87       		.byte	0x87
 6273 0caf E40C0000 		.4byte	0xce4
 6274 0cb3 0C       		.uleb128 0xc
 6275 0cb4 CC170000 		.4byte	.LASF309
 6276 0cb8 00       		.byte	0
 6277 0cb9 0C       		.uleb128 0xc
 6278 0cba D8160000 		.4byte	.LASF310
 6279 0cbe 01       		.byte	0x1
 6280 0cbf 0C       		.uleb128 0xc
 6281 0cc0 8E220000 		.4byte	.LASF311
 6282 0cc4 02       		.byte	0x2
 6283 0cc5 0C       		.uleb128 0xc
 6284 0cc6 59130000 		.4byte	.LASF312
 6285 0cca 03       		.byte	0x3
 6286 0ccb 0C       		.uleb128 0xc
 6287 0ccc AB180000 		.4byte	.LASF313
 6288 0cd0 04       		.byte	0x4
 6289 0cd1 0C       		.uleb128 0xc
 6290 0cd2 190A0000 		.4byte	.LASF314
 6291 0cd6 05       		.byte	0x5
 6292 0cd7 0C       		.uleb128 0xc
 6293 0cd8 23020000 		.4byte	.LASF315
 6294 0cdc 06       		.byte	0x6
 6295 0cdd 0C       		.uleb128 0xc
 6296 0cde 7E060000 		.4byte	.LASF316
 6297 0ce2 07       		.byte	0x7
 6298 0ce3 00       		.byte	0
 6299 0ce4 02       		.uleb128 0x2
 6300 0ce5 16150000 		.4byte	.LASF317
 6301 0ce9 0C       		.byte	0xc
 6302 0cea 90       		.byte	0x90
 6303 0ceb A70C0000 		.4byte	0xca7
 6304 0cef 02       		.uleb128 0x2
 6305 0cf0 20060000 		.4byte	.LASF318
 6306 0cf4 0D       		.byte	0xd
 6307 0cf5 23       		.byte	0x23
 6308 0cf6 FA0C0000 		.4byte	0xcfa
 6309 0cfa 06       		.uleb128 0x6
 6310 0cfb 04       		.byte	0x4
 6311 0cfc 000D0000 		.4byte	0xd00
 6312 0d00 0E       		.uleb128 0xe
 6313 0d01 0B0D0000 		.4byte	0xd0b
 6314 0d05 0F       		.uleb128 0xf
 6315 0d06 BB000000 		.4byte	0xbb
 6316 0d0a 00       		.byte	0
 6317 0d0b 02       		.uleb128 0x2
 6318 0d0c D5260000 		.4byte	.LASF319
 6319 0d10 02       		.byte	0x2
 6320 0d11 37       		.byte	0x37
 6321 0d12 01010000 		.4byte	0x101
 6322 0d16 02       		.uleb128 0x2
 6323 0d17 F6020000 		.4byte	.LASF320
 6324 0d1b 02       		.byte	0x2
 6325 0d1c 38       		.byte	0x38
 6326 0d1d 94000000 		.4byte	0x94
 6327 0d21 02       		.uleb128 0x2
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 214


 6328 0d22 231F0000 		.4byte	.LASF321
 6329 0d26 02       		.byte	0x2
 6330 0d27 39       		.byte	0x39
 6331 0d28 A6000000 		.4byte	0xa6
 6332 0d2c 02       		.uleb128 0x2
 6333 0d2d B51F0000 		.4byte	.LASF322
 6334 0d31 02       		.byte	0x2
 6335 0d32 3F       		.byte	0x3f
 6336 0d33 01010000 		.4byte	0x101
 6337 0d37 17       		.uleb128 0x17
 6338 0d38 BB000000 		.4byte	0xbb
 6339 0d3c 470D0000 		.4byte	0xd47
 6340 0d40 18       		.uleb128 0x18
 6341 0d41 B4000000 		.4byte	0xb4
 6342 0d45 04       		.byte	0x4
 6343 0d46 00       		.byte	0
 6344 0d47 13       		.uleb128 0x13
 6345 0d48 BB150000 		.4byte	.LASF323
 6346 0d4c 14       		.byte	0x14
 6347 0d4d 0E       		.byte	0xe
 6348 0d4e 8B       		.byte	0x8b
 6349 0d4f 900D0000 		.4byte	0xd90
 6350 0d53 0A       		.uleb128 0xa
 6351 0d54 152A0000 		.4byte	.LASF324
 6352 0d58 0E       		.byte	0xe
 6353 0d59 8E       		.byte	0x8e
 6354 0d5a 2C0D0000 		.4byte	0xd2c
 6355 0d5e 00       		.byte	0
 6356 0d5f 0A       		.uleb128 0xa
 6357 0d60 8B040000 		.4byte	.LASF325
 6358 0d64 0E       		.byte	0xe
 6359 0d65 8F       		.byte	0x8f
 6360 0d66 900D0000 		.4byte	0xd90
 6361 0d6a 04       		.byte	0x4
 6362 0d6b 0A       		.uleb128 0xa
 6363 0d6c 2F1F0000 		.4byte	.LASF326
 6364 0d70 0E       		.byte	0xe
 6365 0d71 90       		.byte	0x90
 6366 0d72 900D0000 		.4byte	0xd90
 6367 0d76 08       		.byte	0x8
 6368 0d77 0A       		.uleb128 0xa
 6369 0d78 C4170000 		.4byte	.LASF327
 6370 0d7c 0E       		.byte	0xe
 6371 0d7d 91       		.byte	0x91
 6372 0d7e BB000000 		.4byte	0xbb
 6373 0d82 0C       		.byte	0xc
 6374 0d83 0A       		.uleb128 0xa
 6375 0d84 2B0D0000 		.4byte	.LASF328
 6376 0d88 0E       		.byte	0xe
 6377 0d89 92       		.byte	0x92
 6378 0d8a BB000000 		.4byte	0xbb
 6379 0d8e 10       		.byte	0x10
 6380 0d8f 00       		.byte	0
 6381 0d90 06       		.uleb128 0x6
 6382 0d91 04       		.byte	0x4
 6383 0d92 470D0000 		.4byte	0xd47
 6384 0d96 02       		.uleb128 0x2
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 215


 6385 0d97 14250000 		.4byte	.LASF329
 6386 0d9b 0E       		.byte	0xe
 6387 0d9c 95       		.byte	0x95
 6388 0d9d 470D0000 		.4byte	0xd47
 6389 0da1 13       		.uleb128 0x13
 6390 0da2 E90B0000 		.4byte	.LASF330
 6391 0da6 0C       		.byte	0xc
 6392 0da7 0E       		.byte	0xe
 6393 0da8 97       		.byte	0x97
 6394 0da9 D20D0000 		.4byte	0xdd2
 6395 0dad 0A       		.uleb128 0xa
 6396 0dae 152A0000 		.4byte	.LASF324
 6397 0db2 0E       		.byte	0xe
 6398 0db3 9A       		.byte	0x9a
 6399 0db4 2C0D0000 		.4byte	0xd2c
 6400 0db8 00       		.byte	0
 6401 0db9 0A       		.uleb128 0xa
 6402 0dba 8B040000 		.4byte	.LASF325
 6403 0dbe 0E       		.byte	0xe
 6404 0dbf 9B       		.byte	0x9b
 6405 0dc0 900D0000 		.4byte	0xd90
 6406 0dc4 04       		.byte	0x4
 6407 0dc5 0A       		.uleb128 0xa
 6408 0dc6 2F1F0000 		.4byte	.LASF326
 6409 0dca 0E       		.byte	0xe
 6410 0dcb 9C       		.byte	0x9c
 6411 0dcc 900D0000 		.4byte	0xd90
 6412 0dd0 08       		.byte	0x8
 6413 0dd1 00       		.byte	0
 6414 0dd2 02       		.uleb128 0x2
 6415 0dd3 FA090000 		.4byte	.LASF331
 6416 0dd7 0E       		.byte	0xe
 6417 0dd8 9E       		.byte	0x9e
 6418 0dd9 A10D0000 		.4byte	0xda1
 6419 0ddd 13       		.uleb128 0x13
 6420 0dde DD060000 		.4byte	.LASF332
 6421 0de2 14       		.byte	0x14
 6422 0de3 0E       		.byte	0xe
 6423 0de4 A3       		.byte	0xa3
 6424 0de5 0E0E0000 		.4byte	0xe0e
 6425 0de9 0A       		.uleb128 0xa
 6426 0dea 2A180000 		.4byte	.LASF333
 6427 0dee 0E       		.byte	0xe
 6428 0def A6       		.byte	0xa6
 6429 0df0 0E0E0000 		.4byte	0xe0e
 6430 0df4 00       		.byte	0
 6431 0df5 0A       		.uleb128 0xa
 6432 0df6 1A140000 		.4byte	.LASF334
 6433 0dfa 0E       		.byte	0xe
 6434 0dfb A7       		.byte	0xa7
 6435 0dfc 130E0000 		.4byte	0xe13
 6436 0e00 04       		.byte	0x4
 6437 0e01 0A       		.uleb128 0xa
 6438 0e02 1B1A0000 		.4byte	.LASF335
 6439 0e06 0E       		.byte	0xe
 6440 0e07 A8       		.byte	0xa8
 6441 0e08 D20D0000 		.4byte	0xdd2
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 216


 6442 0e0c 08       		.byte	0x8
 6443 0e0d 00       		.byte	0
 6444 0e0e 08       		.uleb128 0x8
 6445 0e0f 210D0000 		.4byte	0xd21
 6446 0e13 06       		.uleb128 0x6
 6447 0e14 04       		.byte	0x4
 6448 0e15 960D0000 		.4byte	0xd96
 6449 0e19 02       		.uleb128 0x2
 6450 0e1a 15190000 		.4byte	.LASF336
 6451 0e1e 0E       		.byte	0xe
 6452 0e1f AA       		.byte	0xaa
 6453 0e20 DD0D0000 		.4byte	0xddd
 6454 0e24 02       		.uleb128 0x2
 6455 0e25 E0180000 		.4byte	.LASF337
 6456 0e29 0F       		.byte	0xf
 6457 0e2a 3D       		.byte	0x3d
 6458 0e2b BB000000 		.4byte	0xbb
 6459 0e2f 16       		.uleb128 0x16
 6460 0e30 01       		.byte	0x1
 6461 0e31 5E000000 		.4byte	0x5e
 6462 0e35 0F       		.byte	0xf
 6463 0e36 52       		.byte	0x52
 6464 0e37 5A0E0000 		.4byte	0xe5a
 6465 0e3b 0C       		.uleb128 0xc
 6466 0e3c E0280000 		.4byte	.LASF338
 6467 0e40 00       		.byte	0
 6468 0e41 0C       		.uleb128 0xc
 6469 0e42 30220000 		.4byte	.LASF339
 6470 0e46 01       		.byte	0x1
 6471 0e47 0C       		.uleb128 0xc
 6472 0e48 AE1B0000 		.4byte	.LASF340
 6473 0e4c 02       		.byte	0x2
 6474 0e4d 0C       		.uleb128 0xc
 6475 0e4e C61B0000 		.4byte	.LASF341
 6476 0e52 03       		.byte	0x3
 6477 0e53 0C       		.uleb128 0xc
 6478 0e54 810C0000 		.4byte	.LASF342
 6479 0e58 04       		.byte	0x4
 6480 0e59 00       		.byte	0
 6481 0e5a 02       		.uleb128 0x2
 6482 0e5b A6260000 		.4byte	.LASF343
 6483 0e5f 0F       		.byte	0xf
 6484 0e60 58       		.byte	0x58
 6485 0e61 2F0E0000 		.4byte	0xe2f
 6486 0e65 13       		.uleb128 0x13
 6487 0e66 91020000 		.4byte	.LASF344
 6488 0e6a 08       		.byte	0x8
 6489 0e6b 0F       		.byte	0xf
 6490 0e6c 5D       		.byte	0x5d
 6491 0e6d 8A0E0000 		.4byte	0xe8a
 6492 0e71 0A       		.uleb128 0xa
 6493 0e72 B9100000 		.4byte	.LASF345
 6494 0e76 0F       		.byte	0xf
 6495 0e77 5F       		.byte	0x5f
 6496 0e78 160D0000 		.4byte	0xd16
 6497 0e7c 00       		.byte	0
 6498 0e7d 0A       		.uleb128 0xa
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 217


 6499 0e7e F00A0000 		.4byte	.LASF346
 6500 0e82 0F       		.byte	0xf
 6501 0e83 60       		.byte	0x60
 6502 0e84 2C0D0000 		.4byte	0xd2c
 6503 0e88 04       		.byte	0x4
 6504 0e89 00       		.byte	0
 6505 0e8a 02       		.uleb128 0x2
 6506 0e8b F3210000 		.4byte	.LASF347
 6507 0e8f 0F       		.byte	0xf
 6508 0e90 61       		.byte	0x61
 6509 0e91 650E0000 		.4byte	0xe65
 6510 0e95 13       		.uleb128 0x13
 6511 0e96 5D120000 		.4byte	.LASF348
 6512 0e9a 0C       		.byte	0xc
 6513 0e9b 0F       		.byte	0xf
 6514 0e9c 66       		.byte	0x66
 6515 0e9d C60E0000 		.4byte	0xec6
 6516 0ea1 0A       		.uleb128 0xa
 6517 0ea2 51100000 		.4byte	.LASF349
 6518 0ea6 0F       		.byte	0xf
 6519 0ea7 68       		.byte	0x68
 6520 0ea8 BB000000 		.4byte	0xbb
 6521 0eac 00       		.byte	0
 6522 0ead 0A       		.uleb128 0xa
 6523 0eae 26160000 		.4byte	.LASF350
 6524 0eb2 0F       		.byte	0xf
 6525 0eb3 69       		.byte	0x69
 6526 0eb4 01010000 		.4byte	0x101
 6527 0eb8 04       		.byte	0x4
 6528 0eb9 0A       		.uleb128 0xa
 6529 0eba 07290000 		.4byte	.LASF351
 6530 0ebe 0F       		.byte	0xf
 6531 0ebf 6A       		.byte	0x6a
 6532 0ec0 01010000 		.4byte	0x101
 6533 0ec4 08       		.byte	0x8
 6534 0ec5 00       		.byte	0
 6535 0ec6 02       		.uleb128 0x2
 6536 0ec7 4D010000 		.4byte	.LASF352
 6537 0ecb 0F       		.byte	0xf
 6538 0ecc 6B       		.byte	0x6b
 6539 0ecd 950E0000 		.4byte	0xe95
 6540 0ed1 07       		.uleb128 0x7
 6541 0ed2 CA000000 		.4byte	0xca
 6542 0ed6 06       		.uleb128 0x6
 6543 0ed7 04       		.byte	0x4
 6544 0ed8 0B0D0000 		.4byte	0xd0b
 6545 0edc 11       		.uleb128 0x11
 6546 0edd 7A1C0000 		.4byte	.LASF353
 6547 0ee1 60       		.byte	0x60
 6548 0ee2 01       		.byte	0x1
 6549 0ee3 0D01     		.2byte	0x10d
 6550 0ee5 5F0F0000 		.4byte	0xf5f
 6551 0ee9 12       		.uleb128 0x12
 6552 0eea 500B0000 		.4byte	.LASF354
 6553 0eee 01       		.byte	0x1
 6554 0eef 0F01     		.2byte	0x10f
 6555 0ef1 5F0F0000 		.4byte	0xf5f
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 218


 6556 0ef5 00       		.byte	0
 6557 0ef6 12       		.uleb128 0x12
 6558 0ef7 B01C0000 		.4byte	.LASF355
 6559 0efb 01       		.byte	0x1
 6560 0efc 1501     		.2byte	0x115
 6561 0efe 960D0000 		.4byte	0xd96
 6562 0f02 04       		.byte	0x4
 6563 0f03 12       		.uleb128 0x12
 6564 0f04 81010000 		.4byte	.LASF356
 6565 0f08 01       		.byte	0x1
 6566 0f09 1601     		.2byte	0x116
 6567 0f0b 960D0000 		.4byte	0xd96
 6568 0f0f 18       		.byte	0x18
 6569 0f10 12       		.uleb128 0x12
 6570 0f11 452A0000 		.4byte	.LASF357
 6571 0f15 01       		.byte	0x1
 6572 0f16 1701     		.2byte	0x117
 6573 0f18 210D0000 		.4byte	0xd21
 6574 0f1c 2C       		.byte	0x2c
 6575 0f1d 12       		.uleb128 0x12
 6576 0f1e 2B030000 		.4byte	.LASF358
 6577 0f22 01       		.byte	0x1
 6578 0f23 1801     		.2byte	0x118
 6579 0f25 D60E0000 		.4byte	0xed6
 6580 0f29 30       		.byte	0x30
 6581 0f2a 12       		.uleb128 0x12
 6582 0f2b 361C0000 		.4byte	.LASF359
 6583 0f2f 01       		.byte	0x1
 6584 0f30 1901     		.2byte	0x119
 6585 0f32 6A0F0000 		.4byte	0xf6a
 6586 0f36 34       		.byte	0x34
 6587 0f37 12       		.uleb128 0x12
 6588 0f38 3A1F0000 		.4byte	.LASF360
 6589 0f3c 01       		.byte	0x1
 6590 0f3d 3201     		.2byte	0x132
 6591 0f3f 370D0000 		.4byte	0xd37
 6592 0f43 44       		.byte	0x44
 6593 0f44 12       		.uleb128 0x12
 6594 0f45 930E0000 		.4byte	.LASF361
 6595 0f49 01       		.byte	0x1
 6596 0f4a 4501     		.2byte	0x145
 6597 0f4c 0C010000 		.4byte	0x10c
 6598 0f50 58       		.byte	0x58
 6599 0f51 12       		.uleb128 0x12
 6600 0f52 30200000 		.4byte	.LASF362
 6601 0f56 01       		.byte	0x1
 6602 0f57 4601     		.2byte	0x146
 6603 0f59 11010000 		.4byte	0x111
 6604 0f5d 5C       		.byte	0x5c
 6605 0f5e 00       		.byte	0
 6606 0f5f 06       		.uleb128 0x6
 6607 0f60 04       		.byte	0x4
 6608 0f61 650F0000 		.4byte	0xf65
 6609 0f65 08       		.uleb128 0x8
 6610 0f66 0B0D0000 		.4byte	0xd0b
 6611 0f6a 17       		.uleb128 0x17
 6612 0f6b C3000000 		.4byte	0xc3
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 219


 6613 0f6f 7A0F0000 		.4byte	0xf7a
 6614 0f73 18       		.uleb128 0x18
 6615 0f74 B4000000 		.4byte	0xb4
 6616 0f78 0F       		.byte	0xf
 6617 0f79 00       		.byte	0
 6618 0f7a 0D       		.uleb128 0xd
 6619 0f7b 6D050000 		.4byte	.LASF363
 6620 0f7f 01       		.byte	0x1
 6621 0f80 5301     		.2byte	0x153
 6622 0f82 DC0E0000 		.4byte	0xedc
 6623 0f86 0D       		.uleb128 0xd
 6624 0f87 88250000 		.4byte	.LASF364
 6625 0f8b 01       		.byte	0x1
 6626 0f8c 5701     		.2byte	0x157
 6627 0f8e 7A0F0000 		.4byte	0xf7a
 6628 0f92 19       		.uleb128 0x19
 6629 0f93 45240000 		.4byte	.LASF367
 6630 0f97 02       		.byte	0x2
 6631 0f98 98       		.byte	0x98
 6632 0f99 03       		.byte	0x3
 6633 0f9a AA0F0000 		.4byte	0xfaa
 6634 0f9e 1A       		.uleb128 0x1a
 6635 0f9f 141B0000 		.4byte	.LASF365
 6636 0fa3 02       		.byte	0x2
 6637 0fa4 9A       		.byte	0x9a
 6638 0fa5 01010000 		.4byte	0x101
 6639 0fa9 00       		.byte	0
 6640 0faa 1B       		.uleb128 0x1b
 6641 0fab 340F0000 		.4byte	.LASF531
 6642 0faf 02       		.byte	0x2
 6643 0fb0 A8       		.byte	0xa8
 6644 0fb1 01010000 		.4byte	0x101
 6645 0fb5 03       		.byte	0x3
 6646 0fb6 D10F0000 		.4byte	0xfd1
 6647 0fba 1A       		.uleb128 0x1a
 6648 0fbb 3D210000 		.4byte	.LASF366
 6649 0fbf 02       		.byte	0x2
 6650 0fc0 AA       		.byte	0xaa
 6651 0fc1 01010000 		.4byte	0x101
 6652 0fc5 1A       		.uleb128 0x1a
 6653 0fc6 141B0000 		.4byte	.LASF365
 6654 0fca 02       		.byte	0x2
 6655 0fcb AA       		.byte	0xaa
 6656 0fcc 01010000 		.4byte	0x101
 6657 0fd0 00       		.byte	0
 6658 0fd1 19       		.uleb128 0x19
 6659 0fd2 090A0000 		.4byte	.LASF368
 6660 0fd6 02       		.byte	0x2
 6661 0fd7 BC       		.byte	0xbc
 6662 0fd8 03       		.byte	0x3
 6663 0fd9 E90F0000 		.4byte	0xfe9
 6664 0fdd 1C       		.uleb128 0x1c
 6665 0fde 59250000 		.4byte	.LASF532
 6666 0fe2 02       		.byte	0x2
 6667 0fe3 BC       		.byte	0xbc
 6668 0fe4 01010000 		.4byte	0x101
 6669 0fe8 00       		.byte	0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 220


 6670 0fe9 1D       		.uleb128 0x1d
 6671 0fea 810B0000 		.4byte	.LASF385
 6672 0fee 01       		.byte	0x1
 6673 0fef C306     		.2byte	0x6c3
 6674 0ff1 160D0000 		.4byte	0xd16
 6675 0ff5 00000000 		.4byte	.LFB735
 6676 0ff9 4C000000 		.4byte	.LFE735-.LFB735
 6677 0ffd 01       		.uleb128 0x1
 6678 0ffe 9C       		.byte	0x9c
 6679 0fff 54100000 		.4byte	0x1054
 6680 1003 1E       		.uleb128 0x1e
 6681 1004 42040000 		.4byte	.LASF373
 6682 1008 01       		.byte	0x1
 6683 1009 C306     		.2byte	0x6c3
 6684 100b 54100000 		.4byte	0x1054
 6685 100f 00000000 		.4byte	.LLST0
 6686 1013 1F       		.uleb128 0x1f
 6687 1014 CA090000 		.4byte	.LASF369
 6688 1018 01       		.byte	0x1
 6689 1019 C506     		.2byte	0x6c5
 6690 101b 160D0000 		.4byte	0xd16
 6691 101f 69000000 		.4byte	.LLST1
 6692 1023 1F       		.uleb128 0x1f
 6693 1024 2B2A0000 		.4byte	.LASF370
 6694 1028 01       		.byte	0x1
 6695 1029 C606     		.2byte	0x6c6
 6696 102b 64100000 		.4byte	0x1064
 6697 102f 88000000 		.4byte	.LLST2
 6698 1033 20       		.uleb128 0x20
 6699 1034 920F0000 		.4byte	0xf92
 6700 1038 04000000 		.4byte	.LBB94
 6701 103c 12000000 		.4byte	.LBE94-.LBB94
 6702 1040 01       		.byte	0x1
 6703 1041 CC06     		.2byte	0x6cc
 6704 1043 21       		.uleb128 0x21
 6705 1044 04000000 		.4byte	.LBB95
 6706 1048 12000000 		.4byte	.LBE95-.LBB95
 6707 104c 22       		.uleb128 0x22
 6708 104d 9E0F0000 		.4byte	0xf9e
 6709 1051 00       		.byte	0
 6710 1052 00       		.byte	0
 6711 1053 00       		.byte	0
 6712 1054 07       		.uleb128 0x7
 6713 1055 240E0000 		.4byte	0xe24
 6714 1059 06       		.uleb128 0x6
 6715 105a 04       		.byte	0x4
 6716 105b 5F100000 		.4byte	0x105f
 6717 105f 07       		.uleb128 0x7
 6718 1060 860F0000 		.4byte	0xf86
 6719 1064 07       		.uleb128 0x7
 6720 1065 59100000 		.4byte	0x1059
 6721 1069 23       		.uleb128 0x23
 6722 106a 870A0000 		.4byte	.LASF371
 6723 106e 01       		.byte	0x1
 6724 106f 9D0E     		.2byte	0xe9d
 6725 1071 00000000 		.4byte	.LFB763
 6726 1075 2C000000 		.4byte	.LFE763-.LFB763
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 221


 6727 1079 01       		.uleb128 0x1
 6728 107a 9C       		.byte	0x9c
 6729 107b 90100000 		.4byte	0x1090
 6730 107f 1F       		.uleb128 0x1f
 6731 1080 2B2A0000 		.4byte	.LASF370
 6732 1084 01       		.byte	0x1
 6733 1085 9F0E     		.2byte	0xe9f
 6734 1087 90100000 		.4byte	0x1090
 6735 108b F1000000 		.4byte	.LLST3
 6736 108f 00       		.byte	0
 6737 1090 06       		.uleb128 0x6
 6738 1091 04       		.byte	0x4
 6739 1092 860F0000 		.4byte	0xf86
 6740 1096 23       		.uleb128 0x23
 6741 1097 EB170000 		.4byte	.LASF372
 6742 109b 01       		.byte	0x1
 6743 109c 670E     		.2byte	0xe67
 6744 109e 00000000 		.4byte	.LFB762
 6745 10a2 12000000 		.4byte	.LFE762-.LFB762
 6746 10a6 01       		.uleb128 0x1
 6747 10a7 9C       		.byte	0x9c
 6748 10a8 D6100000 		.4byte	0x10d6
 6749 10ac 1E       		.uleb128 0x1e
 6750 10ad 2B2A0000 		.4byte	.LASF370
 6751 10b1 01       		.byte	0x1
 6752 10b2 670E     		.2byte	0xe67
 6753 10b4 90100000 		.4byte	0x1090
 6754 10b8 04010000 		.4byte	.LLST4
 6755 10bc 24       		.uleb128 0x24
 6756 10bd 0A000000 		.4byte	.LVL13
 6757 10c1 8F2E0000 		.4byte	0x2e8f
 6758 10c5 25       		.uleb128 0x25
 6759 10c6 10000000 		.4byte	.LVL14
 6760 10ca 8F2E0000 		.4byte	0x2e8f
 6761 10ce 26       		.uleb128 0x26
 6762 10cf 01       		.uleb128 0x1
 6763 10d0 50       		.byte	0x50
 6764 10d1 02       		.uleb128 0x2
 6765 10d2 74       		.byte	0x74
 6766 10d3 00       		.sleb128 0
 6767 10d4 00       		.byte	0
 6768 10d5 00       		.byte	0
 6769 10d6 23       		.uleb128 0x23
 6770 10d7 B30A0000 		.4byte	.LASF374
 6771 10db 01       		.byte	0x1
 6772 10dc 3703     		.2byte	0x337
 6773 10de 00000000 		.4byte	.LFB726
 6774 10e2 9E000000 		.4byte	.LFE726-.LFB726
 6775 10e6 01       		.uleb128 0x1
 6776 10e7 9C       		.byte	0x9c
 6777 10e8 E6110000 		.4byte	0x11e6
 6778 10ec 1E       		.uleb128 0x1e
 6779 10ed DE0B0000 		.4byte	.LASF375
 6780 10f1 01       		.byte	0x1
 6781 10f2 3703     		.2byte	0x337
 6782 10f4 EF0C0000 		.4byte	0xcef
 6783 10f8 22010000 		.4byte	.LLST5
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 222


 6784 10fc 1E       		.uleb128 0x1e
 6785 10fd 1B080000 		.4byte	.LASF376
 6786 1101 01       		.byte	0x1
 6787 1102 3803     		.2byte	0x338
 6788 1104 D10E0000 		.4byte	0xed1
 6789 1108 40010000 		.4byte	.LLST6
 6790 110c 1E       		.uleb128 0x1e
 6791 110d 5C150000 		.4byte	.LASF377
 6792 1111 01       		.byte	0x1
 6793 1112 3903     		.2byte	0x339
 6794 1114 E6110000 		.4byte	0x11e6
 6795 1118 5E010000 		.4byte	.LLST7
 6796 111c 1E       		.uleb128 0x1e
 6797 111d E8250000 		.4byte	.LASF378
 6798 1121 01       		.byte	0x1
 6799 1122 3A03     		.2byte	0x33a
 6800 1124 EB110000 		.4byte	0x11eb
 6801 1128 9B010000 		.4byte	.LLST8
 6802 112c 1E       		.uleb128 0x1e
 6803 112d 452A0000 		.4byte	.LASF357
 6804 1131 01       		.byte	0x1
 6805 1132 3B03     		.2byte	0x33b
 6806 1134 210D0000 		.4byte	0xd21
 6807 1138 B9010000 		.4byte	.LLST9
 6808 113c 27       		.uleb128 0x27
 6809 113d 670F0000 		.4byte	.LASF379
 6810 1141 01       		.byte	0x1
 6811 1142 3C03     		.2byte	0x33c
 6812 1144 F6110000 		.4byte	0x11f6
 6813 1148 02       		.uleb128 0x2
 6814 1149 91       		.byte	0x91
 6815 114a 04       		.sleb128 4
 6816 114b 27       		.uleb128 0x27
 6817 114c C2040000 		.4byte	.LASF380
 6818 1150 01       		.byte	0x1
 6819 1151 3D03     		.2byte	0x33d
 6820 1153 90100000 		.4byte	0x1090
 6821 1157 02       		.uleb128 0x2
 6822 1158 91       		.byte	0x91
 6823 1159 08       		.sleb128 8
 6824 115a 27       		.uleb128 0x27
 6825 115b 91260000 		.4byte	.LASF381
 6826 115f 01       		.byte	0x1
 6827 1160 3E03     		.2byte	0x33e
 6828 1162 06120000 		.4byte	0x1206
 6829 1166 02       		.uleb128 0x2
 6830 1167 91       		.byte	0x91
 6831 1168 0C       		.sleb128 12
 6832 1169 28       		.uleb128 0x28
 6833 116a 500B0000 		.4byte	.LASF354
 6834 116e 01       		.byte	0x1
 6835 116f 4003     		.2byte	0x340
 6836 1171 D60E0000 		.4byte	0xed6
 6837 1175 01       		.uleb128 0x1
 6838 1176 55       		.byte	0x55
 6839 1177 29       		.uleb128 0x29
 6840 1178 7800     		.ascii	"x\000"
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 223


 6841 117a 01       		.byte	0x1
 6842 117b 4103     		.2byte	0x341
 6843 117d 210D0000 		.4byte	0xd21
 6844 1181 D8010000 		.4byte	.LLST10
 6845 1185 2A       		.uleb128 0x2a
 6846 1186 1C000000 		.4byte	.LVL19
 6847 118a 9A2E0000 		.4byte	0x2e9a
 6848 118e A1110000 		.4byte	0x11a1
 6849 1192 26       		.uleb128 0x26
 6850 1193 01       		.uleb128 0x1
 6851 1194 51       		.byte	0x51
 6852 1195 02       		.uleb128 0x2
 6853 1196 08       		.byte	0x8
 6854 1197 A5       		.byte	0xa5
 6855 1198 26       		.uleb128 0x26
 6856 1199 01       		.uleb128 0x1
 6857 119a 52       		.byte	0x52
 6858 119b 04       		.uleb128 0x4
 6859 119c 75       		.byte	0x75
 6860 119d 00       		.sleb128 0
 6861 119e 32       		.byte	0x32
 6862 119f 24       		.byte	0x24
 6863 11a0 00       		.byte	0
 6864 11a1 2A       		.uleb128 0x2a
 6865 11a2 5A000000 		.4byte	.LVL26
 6866 11a6 A52E0000 		.4byte	0x2ea5
 6867 11aa B5110000 		.4byte	0x11b5
 6868 11ae 26       		.uleb128 0x26
 6869 11af 01       		.uleb128 0x1
 6870 11b0 50       		.byte	0x50
 6871 11b1 02       		.uleb128 0x2
 6872 11b2 74       		.byte	0x74
 6873 11b3 04       		.sleb128 4
 6874 11b4 00       		.byte	0
 6875 11b5 2A       		.uleb128 0x2a
 6876 11b6 62000000 		.4byte	.LVL27
 6877 11ba A52E0000 		.4byte	0x2ea5
 6878 11be C9110000 		.4byte	0x11c9
 6879 11c2 26       		.uleb128 0x26
 6880 11c3 01       		.uleb128 0x1
 6881 11c4 50       		.byte	0x50
 6882 11c5 02       		.uleb128 0x2
 6883 11c6 74       		.byte	0x74
 6884 11c7 18       		.sleb128 24
 6885 11c8 00       		.byte	0
 6886 11c9 25       		.uleb128 0x25
 6887 11ca 94000000 		.4byte	.LVL32
 6888 11ce B12E0000 		.4byte	0x2eb1
 6889 11d2 26       		.uleb128 0x26
 6890 11d3 01       		.uleb128 0x1
 6891 11d4 50       		.byte	0x50
 6892 11d5 02       		.uleb128 0x2
 6893 11d6 75       		.byte	0x75
 6894 11d7 00       		.sleb128 0
 6895 11d8 26       		.uleb128 0x26
 6896 11d9 01       		.uleb128 0x1
 6897 11da 51       		.byte	0x51
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 224


 6898 11db 02       		.uleb128 0x2
 6899 11dc 7A       		.byte	0x7a
 6900 11dd 00       		.sleb128 0
 6901 11de 26       		.uleb128 0x26
 6902 11df 01       		.uleb128 0x1
 6903 11e0 52       		.byte	0x52
 6904 11e1 02       		.uleb128 0x2
 6905 11e2 78       		.byte	0x78
 6906 11e3 00       		.sleb128 0
 6907 11e4 00       		.byte	0
 6908 11e5 00       		.byte	0
 6909 11e6 07       		.uleb128 0x7
 6910 11e7 01010000 		.4byte	0x101
 6911 11eb 07       		.uleb128 0x7
 6912 11ec BB000000 		.4byte	0xbb
 6913 11f0 06       		.uleb128 0x6
 6914 11f1 04       		.byte	0x4
 6915 11f2 240E0000 		.4byte	0xe24
 6916 11f6 07       		.uleb128 0x7
 6917 11f7 F0110000 		.4byte	0x11f0
 6918 11fb 06       		.uleb128 0x6
 6919 11fc 04       		.byte	0x4
 6920 11fd 01120000 		.4byte	0x1201
 6921 1201 07       		.uleb128 0x7
 6922 1202 C60E0000 		.4byte	0xec6
 6923 1206 07       		.uleb128 0x7
 6924 1207 FB110000 		.4byte	0x11fb
 6925 120b 23       		.uleb128 0x23
 6926 120c FC270000 		.4byte	.LASF382
 6927 1210 01       		.byte	0x1
 6928 1211 770D     		.2byte	0xd77
 6929 1213 00000000 		.4byte	.LFB760
 6930 1217 58000000 		.4byte	.LFE760-.LFB760
 6931 121b 01       		.uleb128 0x1
 6932 121c 9C       		.byte	0x9c
 6933 121d B4120000 		.4byte	0x12b4
 6934 1221 1F       		.uleb128 0x1f
 6935 1222 452A0000 		.4byte	.LASF357
 6936 1226 01       		.byte	0x1
 6937 1227 790D     		.2byte	0xd79
 6938 1229 210D0000 		.4byte	0xd21
 6939 122d 02020000 		.4byte	.LLST11
 6940 1231 2A       		.uleb128 0x2a
 6941 1232 14000000 		.4byte	.LVL35
 6942 1236 BC2E0000 		.4byte	0x2ebc
 6943 123a 52120000 		.4byte	0x1252
 6944 123e 26       		.uleb128 0x26
 6945 123f 01       		.uleb128 0x1
 6946 1240 50       		.byte	0x50
 6947 1241 0F       		.uleb128 0xf
 6948 1242 74       		.byte	0x74
 6949 1243 00       		.sleb128 0
 6950 1244 32       		.byte	0x32
 6951 1245 24       		.byte	0x24
 6952 1246 74       		.byte	0x74
 6953 1247 00       		.sleb128 0
 6954 1248 22       		.byte	0x22
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 225


 6955 1249 32       		.byte	0x32
 6956 124a 24       		.byte	0x24
 6957 124b 03       		.byte	0x3
 6958 124c 30000000 		.4byte	.LANCHOR0+48
 6959 1250 22       		.byte	0x22
 6960 1251 00       		.byte	0
 6961 1252 2A       		.uleb128 0x2a
 6962 1253 26000000 		.4byte	.LVL38
 6963 1257 BC2E0000 		.4byte	0x2ebc
 6964 125b 66120000 		.4byte	0x1266
 6965 125f 26       		.uleb128 0x26
 6966 1260 01       		.uleb128 0x1
 6967 1261 50       		.byte	0x50
 6968 1262 02       		.uleb128 0x2
 6969 1263 76       		.byte	0x76
 6970 1264 00       		.sleb128 0
 6971 1265 00       		.byte	0
 6972 1266 2A       		.uleb128 0x2a
 6973 1267 30000000 		.4byte	.LVL39
 6974 126b BC2E0000 		.4byte	0x2ebc
 6975 126f 7A120000 		.4byte	0x127a
 6976 1273 26       		.uleb128 0x26
 6977 1274 01       		.uleb128 0x1
 6978 1275 50       		.byte	0x50
 6979 1276 02       		.uleb128 0x2
 6980 1277 75       		.byte	0x75
 6981 1278 00       		.sleb128 0
 6982 1279 00       		.byte	0
 6983 127a 2A       		.uleb128 0x2a
 6984 127b 38000000 		.4byte	.LVL40
 6985 127f BC2E0000 		.4byte	0x2ebc
 6986 1283 8E120000 		.4byte	0x128e
 6987 1287 26       		.uleb128 0x26
 6988 1288 01       		.uleb128 0x1
 6989 1289 50       		.byte	0x50
 6990 128a 02       		.uleb128 0x2
 6991 128b 74       		.byte	0x74
 6992 128c 14       		.sleb128 20
 6993 128d 00       		.byte	0
 6994 128e 2A       		.uleb128 0x2a
 6995 128f 40000000 		.4byte	.LVL41
 6996 1293 BC2E0000 		.4byte	0x2ebc
 6997 1297 A3120000 		.4byte	0x12a3
 6998 129b 26       		.uleb128 0x26
 6999 129c 01       		.uleb128 0x1
 7000 129d 50       		.byte	0x50
 7001 129e 03       		.uleb128 0x3
 7002 129f 74       		.byte	0x74
 7003 12a0 E401     		.sleb128 228
 7004 12a2 00       		.byte	0
 7005 12a3 25       		.uleb128 0x25
 7006 12a4 46000000 		.4byte	.LVL42
 7007 12a8 BC2E0000 		.4byte	0x2ebc
 7008 12ac 26       		.uleb128 0x26
 7009 12ad 01       		.uleb128 0x1
 7010 12ae 50       		.byte	0x50
 7011 12af 02       		.uleb128 0x2
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 226


 7012 12b0 74       		.byte	0x74
 7013 12b1 00       		.sleb128 0
 7014 12b2 00       		.byte	0
 7015 12b3 00       		.byte	0
 7016 12b4 23       		.uleb128 0x23
 7017 12b5 66070000 		.4byte	.LASF383
 7018 12b9 01       		.byte	0x1
 7019 12ba 0304     		.2byte	0x403
 7020 12bc 00000000 		.4byte	.LFB727
 7021 12c0 AC000000 		.4byte	.LFE727-.LFB727
 7022 12c4 01       		.uleb128 0x1
 7023 12c5 9C       		.byte	0x9c
 7024 12c6 0A130000 		.4byte	0x130a
 7025 12ca 1E       		.uleb128 0x1e
 7026 12cb C2040000 		.4byte	.LASF380
 7027 12cf 01       		.byte	0x1
 7028 12d0 0304     		.2byte	0x403
 7029 12d2 90100000 		.4byte	0x1090
 7030 12d6 21020000 		.4byte	.LLST12
 7031 12da 24       		.uleb128 0x24
 7032 12db 08000000 		.4byte	.LVL44
 7033 12df C82E0000 		.4byte	0x2ec8
 7034 12e3 24       		.uleb128 0x24
 7035 12e4 2C000000 		.4byte	.LVL45
 7036 12e8 0B120000 		.4byte	0x120b
 7037 12ec 2A       		.uleb128 0x2a
 7038 12ed 7A000000 		.4byte	.LVL46
 7039 12f1 D32E0000 		.4byte	0x2ed3
 7040 12f5 00130000 		.4byte	0x1300
 7041 12f9 26       		.uleb128 0x26
 7042 12fa 01       		.uleb128 0x1
 7043 12fb 51       		.byte	0x51
 7044 12fc 02       		.uleb128 0x2
 7045 12fd 74       		.byte	0x74
 7046 12fe 04       		.sleb128 4
 7047 12ff 00       		.byte	0
 7048 1300 24       		.uleb128 0x24
 7049 1301 7E000000 		.4byte	.LVL47
 7050 1305 DF2E0000 		.4byte	0x2edf
 7051 1309 00       		.byte	0
 7052 130a 23       		.uleb128 0x23
 7053 130b FC1F0000 		.4byte	.LASF384
 7054 130f 01       		.byte	0x1
 7055 1310 970D     		.2byte	0xd97
 7056 1312 00000000 		.4byte	.LFB761
 7057 1316 44000000 		.4byte	.LFE761-.LFB761
 7058 131a 01       		.uleb128 0x1
 7059 131b 9C       		.byte	0x9c
 7060 131c 71130000 		.4byte	0x1371
 7061 1320 21       		.uleb128 0x21
 7062 1321 02000000 		.4byte	.LBB96
 7063 1325 3C000000 		.4byte	.LBE96-.LBB96
 7064 1329 1F       		.uleb128 0x1f
 7065 132a 2B2A0000 		.4byte	.LASF370
 7066 132e 01       		.byte	0x1
 7067 132f 9E0D     		.2byte	0xd9e
 7068 1331 90100000 		.4byte	0x1090
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 227


 7069 1335 4D020000 		.4byte	.LLST13
 7070 1339 24       		.uleb128 0x24
 7071 133a 08000000 		.4byte	.LVL49
 7072 133e C82E0000 		.4byte	0x2ec8
 7073 1342 2A       		.uleb128 0x2a
 7074 1343 16000000 		.4byte	.LVL51
 7075 1347 EA2E0000 		.4byte	0x2eea
 7076 134b 56130000 		.4byte	0x1356
 7077 134f 26       		.uleb128 0x26
 7078 1350 01       		.uleb128 0x1
 7079 1351 50       		.byte	0x50
 7080 1352 02       		.uleb128 0x2
 7081 1353 75       		.byte	0x75
 7082 1354 04       		.sleb128 4
 7083 1355 00       		.byte	0
 7084 1356 24       		.uleb128 0x24
 7085 1357 2E000000 		.4byte	.LVL52
 7086 135b DF2E0000 		.4byte	0x2edf
 7087 135f 25       		.uleb128 0x25
 7088 1360 34000000 		.4byte	.LVL53
 7089 1364 96100000 		.4byte	0x1096
 7090 1368 26       		.uleb128 0x26
 7091 1369 01       		.uleb128 0x1
 7092 136a 50       		.byte	0x50
 7093 136b 02       		.uleb128 0x2
 7094 136c 75       		.byte	0x75
 7095 136d 00       		.sleb128 0
 7096 136e 00       		.byte	0
 7097 136f 00       		.byte	0
 7098 1370 00       		.byte	0
 7099 1371 2B       		.uleb128 0x2b
 7100 1372 22140000 		.4byte	.LASF386
 7101 1376 01       		.byte	0x1
 7102 1377 A30C     		.2byte	0xca3
 7103 1379 00000000 		.4byte	.LFB757
 7104 137d 28000000 		.4byte	.LFE757-.LFB757
 7105 1381 01       		.uleb128 0x1
 7106 1382 9C       		.byte	0x9c
 7107 1383 A1130000 		.4byte	0x13a1
 7108 1387 1E       		.uleb128 0x1e
 7109 1388 E8250000 		.4byte	.LASF378
 7110 138c 01       		.byte	0x1
 7111 138d A30C     		.2byte	0xca3
 7112 138f BB000000 		.4byte	0xbb
 7113 1393 60020000 		.4byte	.LLST14
 7114 1397 24       		.uleb128 0x24
 7115 1398 06000000 		.4byte	.LVL56
 7116 139c 0A130000 		.4byte	0x130a
 7117 13a0 00       		.byte	0
 7118 13a1 23       		.uleb128 0x23
 7119 13a2 041F0000 		.4byte	.LASF387
 7120 13a6 01       		.byte	0x1
 7121 13a7 3B13     		.2byte	0x133b
 7122 13a9 00000000 		.4byte	.LFB773
 7123 13ad 68000000 		.4byte	.LFE773-.LFB773
 7124 13b1 01       		.uleb128 0x1
 7125 13b2 9C       		.byte	0x9c
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 228


 7126 13b3 2A140000 		.4byte	0x142a
 7127 13b7 1E       		.uleb128 0x1e
 7128 13b8 35190000 		.4byte	.LASF388
 7129 13bc 01       		.byte	0x1
 7130 13bd 3B13     		.2byte	0x133b
 7131 13bf 2C0D0000 		.4byte	0xd2c
 7132 13c3 81020000 		.4byte	.LLST15
 7133 13c7 1E       		.uleb128 0x1e
 7134 13c8 1E010000 		.4byte	.LASF389
 7135 13cc 01       		.byte	0x1
 7136 13cd 3B13     		.2byte	0x133b
 7137 13cf 2A140000 		.4byte	0x142a
 7138 13d3 AD020000 		.4byte	.LLST16
 7139 13d7 1F       		.uleb128 0x1f
 7140 13d8 AE160000 		.4byte	.LASF390
 7141 13dc 01       		.byte	0x1
 7142 13dd 3D13     		.2byte	0x133d
 7143 13df 2C0D0000 		.4byte	0xd2c
 7144 13e3 D9020000 		.4byte	.LLST17
 7145 13e7 1F       		.uleb128 0x1f
 7146 13e8 611A0000 		.4byte	.LASF391
 7147 13ec 01       		.byte	0x1
 7148 13ed 3E13     		.2byte	0x133e
 7149 13ef 2F140000 		.4byte	0x142f
 7150 13f3 EC020000 		.4byte	.LLST18
 7151 13f7 24       		.uleb128 0x24
 7152 13f8 16000000 		.4byte	.LVL60
 7153 13fc EA2E0000 		.4byte	0x2eea
 7154 1400 2A       		.uleb128 0x2a
 7155 1401 2A000000 		.4byte	.LVL61
 7156 1405 D32E0000 		.4byte	0x2ed3
 7157 1409 17140000 		.4byte	0x1417
 7158 140d 26       		.uleb128 0x26
 7159 140e 01       		.uleb128 0x1
 7160 140f 50       		.byte	0x50
 7161 1410 05       		.uleb128 0x5
 7162 1411 03       		.byte	0x3
 7163 1412 00000000 		.4byte	.LANCHOR0
 7164 1416 00       		.byte	0
 7165 1417 24       		.uleb128 0x24
 7166 1418 4A000000 		.4byte	.LVL64
 7167 141c F62E0000 		.4byte	0x2ef6
 7168 1420 24       		.uleb128 0x24
 7169 1421 5A000000 		.4byte	.LVL67
 7170 1425 F62E0000 		.4byte	0x2ef6
 7171 1429 00       		.byte	0
 7172 142a 07       		.uleb128 0x7
 7173 142b 160D0000 		.4byte	0xd16
 7174 142f 07       		.uleb128 0x7
 7175 1430 2C0D0000 		.4byte	0xd2c
 7176 1434 2C       		.uleb128 0x2c
 7177 1435 85190000 		.4byte	.LASF394
 7178 1439 01       		.byte	0x1
 7179 143a DC02     		.2byte	0x2dc
 7180 143c 160D0000 		.4byte	0xd16
 7181 1440 00000000 		.4byte	.LFB725
 7182 1444 62000000 		.4byte	.LFE725-.LFB725
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 229


 7183 1448 01       		.uleb128 0x1
 7184 1449 9C       		.byte	0x9c
 7185 144a 78150000 		.4byte	0x1578
 7186 144e 1E       		.uleb128 0x1e
 7187 144f DE0B0000 		.4byte	.LASF375
 7188 1453 01       		.byte	0x1
 7189 1454 DC02     		.2byte	0x2dc
 7190 1456 EF0C0000 		.4byte	0xcef
 7191 145a FF020000 		.4byte	.LLST19
 7192 145e 1E       		.uleb128 0x1e
 7193 145f 1B080000 		.4byte	.LASF376
 7194 1463 01       		.byte	0x1
 7195 1464 DD02     		.2byte	0x2dd
 7196 1466 D10E0000 		.4byte	0xed1
 7197 146a 1D030000 		.4byte	.LLST20
 7198 146e 1E       		.uleb128 0x1e
 7199 146f F9000000 		.4byte	.LASF392
 7200 1473 01       		.byte	0x1
 7201 1474 DE02     		.2byte	0x2de
 7202 1476 78150000 		.4byte	0x1578
 7203 147a 3B030000 		.4byte	.LLST21
 7204 147e 1E       		.uleb128 0x1e
 7205 147f E8250000 		.4byte	.LASF378
 7206 1483 01       		.byte	0x1
 7207 1484 DF02     		.2byte	0x2df
 7208 1486 EB110000 		.4byte	0x11eb
 7209 148a 5C030000 		.4byte	.LLST22
 7210 148e 27       		.uleb128 0x27
 7211 148f 452A0000 		.4byte	.LASF357
 7212 1493 01       		.byte	0x1
 7213 1494 E002     		.2byte	0x2e0
 7214 1496 210D0000 		.4byte	0xd21
 7215 149a 02       		.uleb128 0x2
 7216 149b 91       		.byte	0x91
 7217 149c 00       		.sleb128 0
 7218 149d 27       		.uleb128 0x27
 7219 149e 670F0000 		.4byte	.LASF379
 7220 14a2 01       		.byte	0x1
 7221 14a3 E102     		.2byte	0x2e1
 7222 14a5 F6110000 		.4byte	0x11f6
 7223 14a9 02       		.uleb128 0x2
 7224 14aa 91       		.byte	0x91
 7225 14ab 04       		.sleb128 4
 7226 14ac 1F       		.uleb128 0x1f
 7227 14ad C2040000 		.4byte	.LASF380
 7228 14b1 01       		.byte	0x1
 7229 14b2 E302     		.2byte	0x2e3
 7230 14b4 90100000 		.4byte	0x1090
 7231 14b8 7A030000 		.4byte	.LLST23
 7232 14bc 1F       		.uleb128 0x1f
 7233 14bd CA090000 		.4byte	.LASF369
 7234 14c1 01       		.byte	0x1
 7235 14c2 E402     		.2byte	0x2e4
 7236 14c4 160D0000 		.4byte	0xd16
 7237 14c8 A3030000 		.4byte	.LLST24
 7238 14cc 2D       		.uleb128 0x2d
 7239 14cd 0E000000 		.4byte	.LBB97
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 230


 7240 14d1 24000000 		.4byte	.LBE97-.LBB97
 7241 14d5 24150000 		.4byte	0x1524
 7242 14d9 1F       		.uleb128 0x1f
 7243 14da 2B030000 		.4byte	.LASF358
 7244 14de 01       		.byte	0x1
 7245 14df 0103     		.2byte	0x301
 7246 14e1 D60E0000 		.4byte	0xed6
 7247 14e5 C2030000 		.4byte	.LLST25
 7248 14e9 2A       		.uleb128 0x2a
 7249 14ea 14000000 		.4byte	.LVL71
 7250 14ee 022F0000 		.4byte	0x2f02
 7251 14f2 FF140000 		.4byte	0x14ff
 7252 14f6 26       		.uleb128 0x26
 7253 14f7 01       		.uleb128 0x1
 7254 14f8 50       		.byte	0x50
 7255 14f9 04       		.uleb128 0x4
 7256 14fa 75       		.byte	0x75
 7257 14fb 00       		.sleb128 0
 7258 14fc 32       		.byte	0x32
 7259 14fd 24       		.byte	0x24
 7260 14fe 00       		.byte	0
 7261 14ff 2A       		.uleb128 0x2a
 7262 1500 1E000000 		.4byte	.LVL73
 7263 1504 022F0000 		.4byte	0x2f02
 7264 1508 13150000 		.4byte	0x1513
 7265 150c 26       		.uleb128 0x26
 7266 150d 01       		.uleb128 0x1
 7267 150e 50       		.byte	0x50
 7268 150f 02       		.uleb128 0x2
 7269 1510 08       		.byte	0x8
 7270 1511 60       		.byte	0x60
 7271 1512 00       		.byte	0
 7272 1513 25       		.uleb128 0x25
 7273 1514 2E000000 		.4byte	.LVL75
 7274 1518 8F2E0000 		.4byte	0x2e8f
 7275 151c 26       		.uleb128 0x26
 7276 151d 01       		.uleb128 0x1
 7277 151e 50       		.byte	0x50
 7278 151f 02       		.uleb128 0x2
 7279 1520 79       		.byte	0x79
 7280 1521 00       		.sleb128 0
 7281 1522 00       		.byte	0
 7282 1523 00       		.byte	0
 7283 1524 2A       		.uleb128 0x2a
 7284 1525 4E000000 		.4byte	.LVL78
 7285 1529 D6100000 		.4byte	0x10d6
 7286 152d 67150000 		.4byte	0x1567
 7287 1531 26       		.uleb128 0x26
 7288 1532 01       		.uleb128 0x1
 7289 1533 50       		.byte	0x50
 7290 1534 02       		.uleb128 0x2
 7291 1535 76       		.byte	0x76
 7292 1536 00       		.sleb128 0
 7293 1537 26       		.uleb128 0x26
 7294 1538 01       		.uleb128 0x1
 7295 1539 51       		.byte	0x51
 7296 153a 02       		.uleb128 0x2
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 231


 7297 153b 77       		.byte	0x77
 7298 153c 00       		.sleb128 0
 7299 153d 26       		.uleb128 0x26
 7300 153e 01       		.uleb128 0x1
 7301 153f 52       		.byte	0x52
 7302 1540 02       		.uleb128 0x2
 7303 1541 75       		.byte	0x75
 7304 1542 00       		.sleb128 0
 7305 1543 26       		.uleb128 0x26
 7306 1544 01       		.uleb128 0x1
 7307 1545 53       		.byte	0x53
 7308 1546 02       		.uleb128 0x2
 7309 1547 78       		.byte	0x78
 7310 1548 00       		.sleb128 0
 7311 1549 26       		.uleb128 0x26
 7312 154a 02       		.uleb128 0x2
 7313 154b 7D       		.byte	0x7d
 7314 154c 00       		.sleb128 0
 7315 154d 03       		.uleb128 0x3
 7316 154e 91       		.byte	0x91
 7317 154f 00       		.sleb128 0
 7318 1550 06       		.byte	0x6
 7319 1551 26       		.uleb128 0x26
 7320 1552 02       		.uleb128 0x2
 7321 1553 7D       		.byte	0x7d
 7322 1554 04       		.sleb128 4
 7323 1555 03       		.uleb128 0x3
 7324 1556 91       		.byte	0x91
 7325 1557 04       		.sleb128 4
 7326 1558 06       		.byte	0x6
 7327 1559 26       		.uleb128 0x26
 7328 155a 02       		.uleb128 0x2
 7329 155b 7D       		.byte	0x7d
 7330 155c 08       		.sleb128 8
 7331 155d 02       		.uleb128 0x2
 7332 155e 74       		.byte	0x74
 7333 155f 00       		.sleb128 0
 7334 1560 26       		.uleb128 0x26
 7335 1561 02       		.uleb128 0x2
 7336 1562 7D       		.byte	0x7d
 7337 1563 0C       		.sleb128 12
 7338 1564 01       		.uleb128 0x1
 7339 1565 30       		.byte	0x30
 7340 1566 00       		.byte	0
 7341 1567 25       		.uleb128 0x25
 7342 1568 54000000 		.4byte	.LVL79
 7343 156c B4120000 		.4byte	0x12b4
 7344 1570 26       		.uleb128 0x26
 7345 1571 01       		.uleb128 0x1
 7346 1572 50       		.byte	0x50
 7347 1573 02       		.uleb128 0x2
 7348 1574 74       		.byte	0x74
 7349 1575 00       		.sleb128 0
 7350 1576 00       		.byte	0
 7351 1577 00       		.byte	0
 7352 1578 07       		.uleb128 0x7
 7353 1579 EB000000 		.4byte	0xeb
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 232


 7354 157d 2E       		.uleb128 0x2e
 7355 157e FD0C0000 		.4byte	.LASF399
 7356 1582 01       		.byte	0x1
 7357 1583 5804     		.2byte	0x458
 7358 1585 00000000 		.4byte	.LFB728
 7359 1589 B0000000 		.4byte	.LFE728-.LFB728
 7360 158d 01       		.uleb128 0x1
 7361 158e 9C       		.byte	0x9c
 7362 158f 4A160000 		.4byte	0x164a
 7363 1593 1E       		.uleb128 0x1e
 7364 1594 3B270000 		.4byte	.LASF393
 7365 1598 01       		.byte	0x1
 7366 1599 5804     		.2byte	0x458
 7367 159b 240E0000 		.4byte	0xe24
 7368 159f EB030000 		.4byte	.LLST26
 7369 15a3 1F       		.uleb128 0x1f
 7370 15a4 2B2A0000 		.4byte	.LASF370
 7371 15a8 01       		.byte	0x1
 7372 15a9 5A04     		.2byte	0x45a
 7373 15ab 90100000 		.4byte	0x1090
 7374 15af 09040000 		.4byte	.LLST27
 7375 15b3 2F       		.uleb128 0x2f
 7376 15b4 920F0000 		.4byte	0xf92
 7377 15b8 84000000 		.4byte	.LBB98
 7378 15bc 12000000 		.4byte	.LBE98-.LBB98
 7379 15c0 01       		.byte	0x1
 7380 15c1 A504     		.2byte	0x4a5
 7381 15c3 D7150000 		.4byte	0x15d7
 7382 15c7 21       		.uleb128 0x21
 7383 15c8 84000000 		.4byte	.LBB99
 7384 15cc 12000000 		.4byte	.LBE99-.LBB99
 7385 15d0 22       		.uleb128 0x22
 7386 15d1 9E0F0000 		.4byte	0xf9e
 7387 15d5 00       		.byte	0
 7388 15d6 00       		.byte	0
 7389 15d7 24       		.uleb128 0x24
 7390 15d8 08000000 		.4byte	.LVL83
 7391 15dc C82E0000 		.4byte	0x2ec8
 7392 15e0 2A       		.uleb128 0x2a
 7393 15e1 18000000 		.4byte	.LVL85
 7394 15e5 EA2E0000 		.4byte	0x2eea
 7395 15e9 F4150000 		.4byte	0x15f4
 7396 15ed 26       		.uleb128 0x26
 7397 15ee 01       		.uleb128 0x1
 7398 15ef 50       		.byte	0x50
 7399 15f0 02       		.uleb128 0x2
 7400 15f1 76       		.byte	0x76
 7401 15f2 00       		.sleb128 0
 7402 15f3 00       		.byte	0
 7403 15f4 2A       		.uleb128 0x2a
 7404 15f5 24000000 		.4byte	.LVL86
 7405 15f9 EA2E0000 		.4byte	0x2eea
 7406 15fd 08160000 		.4byte	0x1608
 7407 1601 26       		.uleb128 0x26
 7408 1602 01       		.uleb128 0x1
 7409 1603 50       		.byte	0x50
 7410 1604 02       		.uleb128 0x2
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 233


 7411 1605 74       		.byte	0x74
 7412 1606 18       		.sleb128 24
 7413 1607 00       		.byte	0
 7414 1608 2A       		.uleb128 0x2a
 7415 1609 44000000 		.4byte	.LVL87
 7416 160d D32E0000 		.4byte	0x2ed3
 7417 1611 23160000 		.4byte	0x1623
 7418 1615 26       		.uleb128 0x26
 7419 1616 01       		.uleb128 0x1
 7420 1617 50       		.byte	0x50
 7421 1618 03       		.uleb128 0x3
 7422 1619 75       		.byte	0x75
 7423 161a E401     		.sleb128 228
 7424 161c 26       		.uleb128 0x26
 7425 161d 01       		.uleb128 0x1
 7426 161e 51       		.byte	0x51
 7427 161f 02       		.uleb128 0x2
 7428 1620 76       		.byte	0x76
 7429 1621 00       		.sleb128 0
 7430 1622 00       		.byte	0
 7431 1623 2A       		.uleb128 0x2a
 7432 1624 62000000 		.4byte	.LVL88
 7433 1628 96100000 		.4byte	0x1096
 7434 162c 37160000 		.4byte	0x1637
 7435 1630 26       		.uleb128 0x26
 7436 1631 01       		.uleb128 0x1
 7437 1632 50       		.byte	0x50
 7438 1633 02       		.uleb128 0x2
 7439 1634 74       		.byte	0x74
 7440 1635 00       		.sleb128 0
 7441 1636 00       		.byte	0
 7442 1637 24       		.uleb128 0x24
 7443 1638 66000000 		.4byte	.LVL89
 7444 163c 69100000 		.4byte	0x1069
 7445 1640 24       		.uleb128 0x24
 7446 1641 6A000000 		.4byte	.LVL90
 7447 1645 DF2E0000 		.4byte	0x2edf
 7448 1649 00       		.byte	0
 7449 164a 2C       		.uleb128 0x2c
 7450 164b DD1A0000 		.4byte	.LASF395
 7451 164f 01       		.byte	0x1
 7452 1650 7C05     		.2byte	0x57c
 7453 1652 210D0000 		.4byte	0xd21
 7454 1656 00000000 		.4byte	.LFB731
 7455 165a 20000000 		.4byte	.LFE731-.LFB731
 7456 165e 01       		.uleb128 0x1
 7457 165f 9C       		.byte	0x9c
 7458 1660 A7160000 		.4byte	0x16a7
 7459 1664 1E       		.uleb128 0x1e
 7460 1665 42040000 		.4byte	.LASF373
 7461 1669 01       		.byte	0x1
 7462 166a 7C05     		.2byte	0x57c
 7463 166c 240E0000 		.4byte	0xe24
 7464 1670 1C040000 		.4byte	.LLST28
 7465 1674 1F       		.uleb128 0x1f
 7466 1675 2B2A0000 		.4byte	.LASF370
 7467 1679 01       		.byte	0x1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 234


 7468 167a 7E05     		.2byte	0x57e
 7469 167c 90100000 		.4byte	0x1090
 7470 1680 3A040000 		.4byte	.LLST29
 7471 1684 1F       		.uleb128 0x1f
 7472 1685 82040000 		.4byte	.LASF396
 7473 1689 01       		.byte	0x1
 7474 168a 7F05     		.2byte	0x57f
 7475 168c 210D0000 		.4byte	0xd21
 7476 1690 4D040000 		.4byte	.LLST30
 7477 1694 24       		.uleb128 0x24
 7478 1695 08000000 		.4byte	.LVL94
 7479 1699 C82E0000 		.4byte	0x2ec8
 7480 169d 24       		.uleb128 0x24
 7481 169e 16000000 		.4byte	.LVL97
 7482 16a2 DF2E0000 		.4byte	0x2edf
 7483 16a6 00       		.byte	0
 7484 16a7 2C       		.uleb128 0x2c
 7485 16a8 45260000 		.4byte	.LASF397
 7486 16ac 01       		.byte	0x1
 7487 16ad 9205     		.2byte	0x592
 7488 16af 210D0000 		.4byte	0xd21
 7489 16b3 00000000 		.4byte	.LFB732
 7490 16b7 30000000 		.4byte	.LFE732-.LFB732
 7491 16bb 01       		.uleb128 0x1
 7492 16bc 9C       		.byte	0x9c
 7493 16bd 4C170000 		.4byte	0x174c
 7494 16c1 1E       		.uleb128 0x1e
 7495 16c2 42040000 		.4byte	.LASF373
 7496 16c6 01       		.byte	0x1
 7497 16c7 9205     		.2byte	0x592
 7498 16c9 240E0000 		.4byte	0xe24
 7499 16cd 6B040000 		.4byte	.LLST31
 7500 16d1 1F       		.uleb128 0x1f
 7501 16d2 2B2A0000 		.4byte	.LASF370
 7502 16d6 01       		.byte	0x1
 7503 16d7 9405     		.2byte	0x594
 7504 16d9 90100000 		.4byte	0x1090
 7505 16dd 89040000 		.4byte	.LLST32
 7506 16e1 28       		.uleb128 0x28
 7507 16e2 82040000 		.4byte	.LASF396
 7508 16e6 01       		.byte	0x1
 7509 16e7 9505     		.2byte	0x595
 7510 16e9 210D0000 		.4byte	0xd21
 7511 16ed 01       		.uleb128 0x1
 7512 16ee 50       		.byte	0x50
 7513 16ef 30       		.uleb128 0x30
 7514 16f0 B3020000 		.4byte	.LASF398
 7515 16f4 01       		.byte	0x1
 7516 16f5 9505     		.2byte	0x595
 7517 16f7 210D0000 		.4byte	0xd21
 7518 16fb 2F       		.uleb128 0x2f
 7519 16fc AA0F0000 		.4byte	0xfaa
 7520 1700 08000000 		.4byte	.LBB100
 7521 1704 14000000 		.4byte	.LBE100-.LBB100
 7522 1708 01       		.byte	0x1
 7523 1709 A905     		.2byte	0x5a9
 7524 170b 24170000 		.4byte	0x1724
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 235


 7525 170f 21       		.uleb128 0x21
 7526 1710 08000000 		.4byte	.LBB101
 7527 1714 14000000 		.4byte	.LBE101-.LBB101
 7528 1718 22       		.uleb128 0x22
 7529 1719 BA0F0000 		.4byte	0xfba
 7530 171d 22       		.uleb128 0x22
 7531 171e C50F0000 		.4byte	0xfc5
 7532 1722 00       		.byte	0
 7533 1723 00       		.byte	0
 7534 1724 2F       		.uleb128 0x2f
 7535 1725 D10F0000 		.4byte	0xfd1
 7536 1729 26000000 		.4byte	.LBB102
 7537 172d 04000000 		.4byte	.LBE102-.LBB102
 7538 1731 01       		.byte	0x1
 7539 1732 B005     		.2byte	0x5b0
 7540 1734 42170000 		.4byte	0x1742
 7541 1738 31       		.uleb128 0x31
 7542 1739 DD0F0000 		.4byte	0xfdd
 7543 173d 9C040000 		.4byte	.LLST33
 7544 1741 00       		.byte	0
 7545 1742 24       		.uleb128 0x24
 7546 1743 08000000 		.4byte	.LVL100
 7547 1747 0D2F0000 		.4byte	0x2f0d
 7548 174b 00       		.byte	0
 7549 174c 2E       		.uleb128 0x2e
 7550 174d 76100000 		.4byte	.LASF400
 7551 1751 01       		.byte	0x1
 7552 1752 BA05     		.2byte	0x5ba
 7553 1754 00000000 		.4byte	.LFB733
 7554 1758 DC000000 		.4byte	.LFE733-.LFB733
 7555 175c 01       		.uleb128 0x1
 7556 175d 9C       		.byte	0x9c
 7557 175e 21180000 		.4byte	0x1821
 7558 1762 1E       		.uleb128 0x1e
 7559 1763 42040000 		.4byte	.LASF373
 7560 1767 01       		.byte	0x1
 7561 1768 BA05     		.2byte	0x5ba
 7562 176a 240E0000 		.4byte	0xe24
 7563 176e AF040000 		.4byte	.LLST34
 7564 1772 1E       		.uleb128 0x1e
 7565 1773 3A050000 		.4byte	.LASF401
 7566 1777 01       		.byte	0x1
 7567 1778 BA05     		.2byte	0x5ba
 7568 177a 210D0000 		.4byte	0xd21
 7569 177e CD040000 		.4byte	.LLST35
 7570 1782 1F       		.uleb128 0x1f
 7571 1783 2B2A0000 		.4byte	.LASF370
 7572 1787 01       		.byte	0x1
 7573 1788 BC05     		.2byte	0x5bc
 7574 178a 90100000 		.4byte	0x1090
 7575 178e F7040000 		.4byte	.LLST36
 7576 1792 1F       		.uleb128 0x1f
 7577 1793 0A060000 		.4byte	.LASF402
 7578 1797 01       		.byte	0x1
 7579 1798 BD05     		.2byte	0x5bd
 7580 179a 210D0000 		.4byte	0xd21
 7581 179e 0A050000 		.4byte	.LLST37
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 236


 7582 17a2 1F       		.uleb128 0x1f
 7583 17a3 DD1B0000 		.4byte	.LASF403
 7584 17a7 01       		.byte	0x1
 7585 17a8 BD05     		.2byte	0x5bd
 7586 17aa 210D0000 		.4byte	0xd21
 7587 17ae 1D050000 		.4byte	.LLST38
 7588 17b2 1F       		.uleb128 0x1f
 7589 17b3 FE140000 		.4byte	.LASF404
 7590 17b7 01       		.byte	0x1
 7591 17b8 BE05     		.2byte	0x5be
 7592 17ba 160D0000 		.4byte	0xd16
 7593 17be 30050000 		.4byte	.LLST39
 7594 17c2 2F       		.uleb128 0x2f
 7595 17c3 920F0000 		.4byte	0xf92
 7596 17c7 04000000 		.4byte	.LBB104
 7597 17cb 12000000 		.4byte	.LBE104-.LBB104
 7598 17cf 01       		.byte	0x1
 7599 17d0 C005     		.2byte	0x5c0
 7600 17d2 E6170000 		.4byte	0x17e6
 7601 17d6 21       		.uleb128 0x21
 7602 17d7 04000000 		.4byte	.LBB105
 7603 17db 12000000 		.4byte	.LBE105-.LBB105
 7604 17df 22       		.uleb128 0x22
 7605 17e0 9E0F0000 		.4byte	0xf9e
 7606 17e4 00       		.byte	0
 7607 17e5 00       		.byte	0
 7608 17e6 24       		.uleb128 0x24
 7609 17e7 26000000 		.4byte	.LVL108
 7610 17eb C82E0000 		.4byte	0x2ec8
 7611 17ef 2A       		.uleb128 0x2a
 7612 17f0 96000000 		.4byte	.LVL114
 7613 17f4 EA2E0000 		.4byte	0x2eea
 7614 17f8 03180000 		.4byte	0x1803
 7615 17fc 26       		.uleb128 0x26
 7616 17fd 01       		.uleb128 0x1
 7617 17fe 50       		.byte	0x50
 7618 17ff 02       		.uleb128 0x2
 7619 1800 75       		.byte	0x75
 7620 1801 00       		.sleb128 0
 7621 1802 00       		.byte	0
 7622 1803 2A       		.uleb128 0x2a
 7623 1804 B8000000 		.4byte	.LVL115
 7624 1808 D32E0000 		.4byte	0x2ed3
 7625 180c 17180000 		.4byte	0x1817
 7626 1810 26       		.uleb128 0x26
 7627 1811 01       		.uleb128 0x1
 7628 1812 51       		.byte	0x51
 7629 1813 02       		.uleb128 0x2
 7630 1814 75       		.byte	0x75
 7631 1815 00       		.sleb128 0
 7632 1816 00       		.byte	0
 7633 1817 24       		.uleb128 0x24
 7634 1818 CE000000 		.4byte	.LVL117
 7635 181c DF2E0000 		.4byte	0x2edf
 7636 1820 00       		.byte	0
 7637 1821 2E       		.uleb128 0x2e
 7638 1822 4B030000 		.4byte	.LASF405
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 237


 7639 1826 01       		.byte	0x1
 7640 1827 F106     		.2byte	0x6f1
 7641 1829 00000000 		.4byte	.LFB736
 7642 182d 88000000 		.4byte	.LFE736-.LFB736
 7643 1831 01       		.uleb128 0x1
 7644 1832 9C       		.byte	0x9c
 7645 1833 CA180000 		.4byte	0x18ca
 7646 1837 1E       		.uleb128 0x1e
 7647 1838 750F0000 		.4byte	.LASF406
 7648 183c 01       		.byte	0x1
 7649 183d F106     		.2byte	0x6f1
 7650 183f 240E0000 		.4byte	0xe24
 7651 1843 4F050000 		.4byte	.LLST40
 7652 1847 1F       		.uleb128 0x1f
 7653 1848 2B2A0000 		.4byte	.LASF370
 7654 184c 01       		.byte	0x1
 7655 184d F306     		.2byte	0x6f3
 7656 184f CA180000 		.4byte	0x18ca
 7657 1853 7B050000 		.4byte	.LLST41
 7658 1857 2F       		.uleb128 0x2f
 7659 1858 920F0000 		.4byte	0xf92
 7660 185c 02000000 		.4byte	.LBB106
 7661 1860 12000000 		.4byte	.LBE106-.LBB106
 7662 1864 01       		.byte	0x1
 7663 1865 F606     		.2byte	0x6f6
 7664 1867 7B180000 		.4byte	0x187b
 7665 186b 21       		.uleb128 0x21
 7666 186c 02000000 		.4byte	.LBB107
 7667 1870 12000000 		.4byte	.LBE107-.LBB107
 7668 1874 22       		.uleb128 0x22
 7669 1875 9E0F0000 		.4byte	0xf9e
 7670 1879 00       		.byte	0
 7671 187a 00       		.byte	0
 7672 187b 24       		.uleb128 0x24
 7673 187c 28000000 		.4byte	.LVL121
 7674 1880 C82E0000 		.4byte	0x2ec8
 7675 1884 2A       		.uleb128 0x2a
 7676 1885 2E000000 		.4byte	.LVL122
 7677 1889 E90F0000 		.4byte	0xfe9
 7678 188d 98180000 		.4byte	0x1898
 7679 1891 26       		.uleb128 0x26
 7680 1892 01       		.uleb128 0x1
 7681 1893 50       		.byte	0x50
 7682 1894 02       		.uleb128 0x2
 7683 1895 74       		.byte	0x74
 7684 1896 00       		.sleb128 0
 7685 1897 00       		.byte	0
 7686 1898 2A       		.uleb128 0x2a
 7687 1899 38000000 		.4byte	.LVL123
 7688 189d EA2E0000 		.4byte	0x2eea
 7689 18a1 AC180000 		.4byte	0x18ac
 7690 18a5 26       		.uleb128 0x26
 7691 18a6 01       		.uleb128 0x1
 7692 18a7 50       		.byte	0x50
 7693 18a8 02       		.uleb128 0x2
 7694 18a9 76       		.byte	0x76
 7695 18aa 00       		.sleb128 0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 238


 7696 18ab 00       		.byte	0
 7697 18ac 2A       		.uleb128 0x2a
 7698 18ad 5E000000 		.4byte	.LVL124
 7699 18b1 D32E0000 		.4byte	0x2ed3
 7700 18b5 C0180000 		.4byte	0x18c0
 7701 18b9 26       		.uleb128 0x26
 7702 18ba 01       		.uleb128 0x1
 7703 18bb 51       		.byte	0x51
 7704 18bc 02       		.uleb128 0x2
 7705 18bd 76       		.byte	0x76
 7706 18be 00       		.sleb128 0
 7707 18bf 00       		.byte	0
 7708 18c0 24       		.uleb128 0x24
 7709 18c1 7E000000 		.4byte	.LVL125
 7710 18c5 DF2E0000 		.4byte	0x2edf
 7711 18c9 00       		.byte	0
 7712 18ca 07       		.uleb128 0x7
 7713 18cb 90100000 		.4byte	0x1090
 7714 18cf 2C       		.uleb128 0x2c
 7715 18d0 580D0000 		.4byte	.LASF407
 7716 18d4 01       		.byte	0x1
 7717 18d5 2707     		.2byte	0x727
 7718 18d7 160D0000 		.4byte	0xd16
 7719 18db 00000000 		.4byte	.LFB737
 7720 18df A4000000 		.4byte	.LFE737-.LFB737
 7721 18e3 01       		.uleb128 0x1
 7722 18e4 9C       		.byte	0x9c
 7723 18e5 EF190000 		.4byte	0x19ef
 7724 18e9 1E       		.uleb128 0x1e
 7725 18ea 750F0000 		.4byte	.LASF406
 7726 18ee 01       		.byte	0x1
 7727 18ef 2707     		.2byte	0x727
 7728 18f1 240E0000 		.4byte	0xe24
 7729 18f5 A7050000 		.4byte	.LLST42
 7730 18f9 1F       		.uleb128 0x1f
 7731 18fa FE140000 		.4byte	.LASF404
 7732 18fe 01       		.byte	0x1
 7733 18ff 2907     		.2byte	0x729
 7734 1901 160D0000 		.4byte	0xd16
 7735 1905 D3050000 		.4byte	.LLST43
 7736 1909 1F       		.uleb128 0x1f
 7737 190a 2B2A0000 		.4byte	.LASF370
 7738 190e 01       		.byte	0x1
 7739 190f 2A07     		.2byte	0x72a
 7740 1911 CA180000 		.4byte	0x18ca
 7741 1915 14060000 		.4byte	.LLST44
 7742 1919 30       		.uleb128 0x30
 7743 191a 7F140000 		.4byte	.LASF408
 7744 191e 01       		.byte	0x1
 7745 191f 2B07     		.2byte	0x72b
 7746 1921 210D0000 		.4byte	0xd21
 7747 1925 2F       		.uleb128 0x2f
 7748 1926 920F0000 		.4byte	0xf92
 7749 192a 04000000 		.4byte	.LBB108
 7750 192e 14000000 		.4byte	.LBE108-.LBB108
 7751 1932 01       		.byte	0x1
 7752 1933 2D07     		.2byte	0x72d
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 239


 7753 1935 49190000 		.4byte	0x1949
 7754 1939 21       		.uleb128 0x21
 7755 193a 04000000 		.4byte	.LBB109
 7756 193e 14000000 		.4byte	.LBE109-.LBB109
 7757 1942 22       		.uleb128 0x22
 7758 1943 9E0F0000 		.4byte	0xf9e
 7759 1947 00       		.byte	0
 7760 1948 00       		.byte	0
 7761 1949 2F       		.uleb128 0x2f
 7762 194a AA0F0000 		.4byte	0xfaa
 7763 194e 1C000000 		.4byte	.LBB110
 7764 1952 14000000 		.4byte	.LBE110-.LBB110
 7765 1956 01       		.byte	0x1
 7766 1957 4107     		.2byte	0x741
 7767 1959 72190000 		.4byte	0x1972
 7768 195d 21       		.uleb128 0x21
 7769 195e 1C000000 		.4byte	.LBB111
 7770 1962 14000000 		.4byte	.LBE111-.LBB111
 7771 1966 22       		.uleb128 0x22
 7772 1967 BA0F0000 		.4byte	0xfba
 7773 196b 22       		.uleb128 0x22
 7774 196c C50F0000 		.4byte	0xfc5
 7775 1970 00       		.byte	0
 7776 1971 00       		.byte	0
 7777 1972 2F       		.uleb128 0x2f
 7778 1973 D10F0000 		.4byte	0xfd1
 7779 1977 90000000 		.4byte	.LBB112
 7780 197b 04000000 		.4byte	.LBE112-.LBB112
 7781 197f 01       		.byte	0x1
 7782 1980 6507     		.2byte	0x765
 7783 1982 90190000 		.4byte	0x1990
 7784 1986 31       		.uleb128 0x31
 7785 1987 DD0F0000 		.4byte	0xfdd
 7786 198b 40060000 		.4byte	.LLST45
 7787 198f 00       		.byte	0
 7788 1990 24       		.uleb128 0x24
 7789 1991 1C000000 		.4byte	.LVL130
 7790 1995 0D2F0000 		.4byte	0x2f0d
 7791 1999 2A       		.uleb128 0x2a
 7792 199a 36000000 		.4byte	.LVL131
 7793 199e E90F0000 		.4byte	0xfe9
 7794 19a2 AD190000 		.4byte	0x19ad
 7795 19a6 26       		.uleb128 0x26
 7796 19a7 01       		.uleb128 0x1
 7797 19a8 50       		.byte	0x50
 7798 19a9 02       		.uleb128 0x2
 7799 19aa 74       		.byte	0x74
 7800 19ab 00       		.sleb128 0
 7801 19ac 00       		.byte	0
 7802 19ad 2A       		.uleb128 0x2a
 7803 19ae 5C000000 		.4byte	.LVL133
 7804 19b2 EA2E0000 		.4byte	0x2eea
 7805 19b6 C1190000 		.4byte	0x19c1
 7806 19ba 26       		.uleb128 0x26
 7807 19bb 01       		.uleb128 0x1
 7808 19bc 50       		.byte	0x50
 7809 19bd 02       		.uleb128 0x2
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 240


 7810 19be 76       		.byte	0x76
 7811 19bf 00       		.sleb128 0
 7812 19c0 00       		.byte	0
 7813 19c1 2A       		.uleb128 0x2a
 7814 19c2 7E000000 		.4byte	.LVL134
 7815 19c6 D32E0000 		.4byte	0x2ed3
 7816 19ca D5190000 		.4byte	0x19d5
 7817 19ce 26       		.uleb128 0x26
 7818 19cf 01       		.uleb128 0x1
 7819 19d0 51       		.byte	0x51
 7820 19d1 02       		.uleb128 0x2
 7821 19d2 76       		.byte	0x76
 7822 19d3 00       		.sleb128 0
 7823 19d4 00       		.byte	0
 7824 19d5 25       		.uleb128 0x25
 7825 19d6 8A000000 		.4byte	.LVL136
 7826 19da D32E0000 		.4byte	0x2ed3
 7827 19de 26       		.uleb128 0x26
 7828 19df 01       		.uleb128 0x1
 7829 19e0 50       		.byte	0x50
 7830 19e1 05       		.uleb128 0x5
 7831 19e2 03       		.byte	0x3
 7832 19e3 14000000 		.4byte	.LANCHOR0+20
 7833 19e7 26       		.uleb128 0x26
 7834 19e8 01       		.uleb128 0x1
 7835 19e9 51       		.byte	0x51
 7836 19ea 02       		.uleb128 0x2
 7837 19eb 74       		.byte	0x74
 7838 19ec 18       		.sleb128 24
 7839 19ed 00       		.byte	0
 7840 19ee 00       		.byte	0
 7841 19ef 2E       		.uleb128 0x2e
 7842 19f0 110F0000 		.4byte	.LASF409
 7843 19f4 01       		.byte	0x1
 7844 19f5 6D07     		.2byte	0x76d
 7845 19f7 00000000 		.4byte	.LFB738
 7846 19fb 7C000000 		.4byte	.LFE738-.LFB738
 7847 19ff 01       		.uleb128 0x1
 7848 1a00 9C       		.byte	0x9c
 7849 1a01 AB1A0000 		.4byte	0x1aab
 7850 1a05 1F       		.uleb128 0x1f
 7851 1a06 CA090000 		.4byte	.LASF369
 7852 1a0a 01       		.byte	0x1
 7853 1a0b 6F07     		.2byte	0x76f
 7854 1a0d 160D0000 		.4byte	0xd16
 7855 1a11 53060000 		.4byte	.LLST46
 7856 1a15 2F       		.uleb128 0x2f
 7857 1a16 920F0000 		.4byte	0xf92
 7858 1a1a 22000000 		.4byte	.LBB114
 7859 1a1e 10000000 		.4byte	.LBE114-.LBB114
 7860 1a22 01       		.byte	0x1
 7861 1a23 B507     		.2byte	0x7b5
 7862 1a25 391A0000 		.4byte	0x1a39
 7863 1a29 21       		.uleb128 0x21
 7864 1a2a 22000000 		.4byte	.LBB115
 7865 1a2e 10000000 		.4byte	.LBE115-.LBB115
 7866 1a32 22       		.uleb128 0x22
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 241


 7867 1a33 9E0F0000 		.4byte	0xf9e
 7868 1a37 00       		.byte	0
 7869 1a38 00       		.byte	0
 7870 1a39 2F       		.uleb128 0x2f
 7871 1a3a 920F0000 		.4byte	0xf92
 7872 1a3e 52000000 		.4byte	.LBB116
 7873 1a42 12000000 		.4byte	.LBE116-.LBB116
 7874 1a46 01       		.byte	0x1
 7875 1a47 DC07     		.2byte	0x7dc
 7876 1a49 5D1A0000 		.4byte	0x1a5d
 7877 1a4d 21       		.uleb128 0x21
 7878 1a4e 52000000 		.4byte	.LBB117
 7879 1a52 12000000 		.4byte	.LBE117-.LBB117
 7880 1a56 22       		.uleb128 0x22
 7881 1a57 9E0F0000 		.4byte	0xf9e
 7882 1a5b 00       		.byte	0
 7883 1a5c 00       		.byte	0
 7884 1a5d 2A       		.uleb128 0x2a
 7885 1a5e 16000000 		.4byte	.LVL140
 7886 1a62 34140000 		.4byte	0x1434
 7887 1a66 981A0000 		.4byte	0x1a98
 7888 1a6a 26       		.uleb128 0x26
 7889 1a6b 01       		.uleb128 0x1
 7890 1a6c 50       		.byte	0x50
 7891 1a6d 05       		.uleb128 0x5
 7892 1a6e 03       		.byte	0x3
 7893 1a6f 00000000 		.4byte	prvIdleTask
 7894 1a73 26       		.uleb128 0x26
 7895 1a74 01       		.uleb128 0x1
 7896 1a75 51       		.byte	0x51
 7897 1a76 05       		.uleb128 0x5
 7898 1a77 03       		.byte	0x3
 7899 1a78 00000000 		.4byte	.LC0
 7900 1a7c 26       		.uleb128 0x26
 7901 1a7d 01       		.uleb128 0x1
 7902 1a7e 52       		.byte	0x52
 7903 1a7f 02       		.uleb128 0x2
 7904 1a80 08       		.byte	0x8
 7905 1a81 80       		.byte	0x80
 7906 1a82 26       		.uleb128 0x26
 7907 1a83 01       		.uleb128 0x1
 7908 1a84 53       		.byte	0x53
 7909 1a85 01       		.uleb128 0x1
 7910 1a86 30       		.byte	0x30
 7911 1a87 26       		.uleb128 0x26
 7912 1a88 02       		.uleb128 0x2
 7913 1a89 7D       		.byte	0x7d
 7914 1a8a 00       		.sleb128 0
 7915 1a8b 01       		.uleb128 0x1
 7916 1a8c 30       		.byte	0x30
 7917 1a8d 26       		.uleb128 0x26
 7918 1a8e 02       		.uleb128 0x2
 7919 1a8f 7D       		.byte	0x7d
 7920 1a90 04       		.sleb128 4
 7921 1a91 05       		.uleb128 0x5
 7922 1a92 03       		.byte	0x3
 7923 1a93 1C010000 		.4byte	.LANCHOR0+284
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 242


 7924 1a97 00       		.byte	0
 7925 1a98 24       		.uleb128 0x24
 7926 1a99 1E000000 		.4byte	.LVL141
 7927 1a9d 182F0000 		.4byte	0x2f18
 7928 1aa1 24       		.uleb128 0x24
 7929 1aa2 4A000000 		.4byte	.LVL142
 7930 1aa6 242F0000 		.4byte	0x2f24
 7931 1aaa 00       		.byte	0
 7932 1aab 2E       		.uleb128 0x2e
 7933 1aac 831F0000 		.4byte	.LASF410
 7934 1ab0 01       		.byte	0x1
 7935 1ab1 E507     		.2byte	0x7e5
 7936 1ab3 00000000 		.4byte	.LFB739
 7937 1ab7 24000000 		.4byte	.LFE739-.LFB739
 7938 1abb 01       		.uleb128 0x1
 7939 1abc 9C       		.byte	0x9c
 7940 1abd EF1A0000 		.4byte	0x1aef
 7941 1ac1 2F       		.uleb128 0x2f
 7942 1ac2 920F0000 		.4byte	0xf92
 7943 1ac6 02000000 		.4byte	.LBB118
 7944 1aca 10000000 		.4byte	.LBE118-.LBB118
 7945 1ace 01       		.byte	0x1
 7946 1acf EA07     		.2byte	0x7ea
 7947 1ad1 E51A0000 		.4byte	0x1ae5
 7948 1ad5 21       		.uleb128 0x21
 7949 1ad6 02000000 		.4byte	.LBB119
 7950 1ada 10000000 		.4byte	.LBE119-.LBB119
 7951 1ade 22       		.uleb128 0x22
 7952 1adf 9E0F0000 		.4byte	0xf9e
 7953 1ae3 00       		.byte	0
 7954 1ae4 00       		.byte	0
 7955 1ae5 24       		.uleb128 0x24
 7956 1ae6 1E000000 		.4byte	.LVL146
 7957 1aea 2F2F0000 		.4byte	0x2f2f
 7958 1aee 00       		.byte	0
 7959 1aef 32       		.uleb128 0x32
 7960 1af0 69180000 		.4byte	.LASF450
 7961 1af4 01       		.byte	0x1
 7962 1af5 F007     		.2byte	0x7f0
 7963 1af7 00000000 		.4byte	.LFB740
 7964 1afb 14000000 		.4byte	.LFE740-.LFB740
 7965 1aff 01       		.uleb128 0x1
 7966 1b00 9C       		.byte	0x9c
 7967 1b01 2C       		.uleb128 0x2c
 7968 1b02 21210000 		.4byte	.LASF411
 7969 1b06 01       		.byte	0x1
 7970 1b07 A708     		.2byte	0x8a7
 7971 1b09 2C0D0000 		.4byte	0xd2c
 7972 1b0d 00000000 		.4byte	.LFB742
 7973 1b11 0C000000 		.4byte	.LFE742-.LFB742
 7974 1b15 01       		.uleb128 0x1
 7975 1b16 9C       		.byte	0x9c
 7976 1b17 2A1B0000 		.4byte	0x1b2a
 7977 1b1b 28       		.uleb128 0x28
 7978 1b1c 4A100000 		.4byte	.LASF412
 7979 1b20 01       		.byte	0x1
 7980 1b21 A908     		.2byte	0x8a9
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 243


 7981 1b23 2C0D0000 		.4byte	0xd2c
 7982 1b27 01       		.uleb128 0x1
 7983 1b28 50       		.byte	0x50
 7984 1b29 00       		.byte	0
 7985 1b2a 2C       		.uleb128 0x2c
 7986 1b2b 34010000 		.4byte	.LASF413
 7987 1b2f 01       		.byte	0x1
 7988 1b30 B608     		.2byte	0x8b6
 7989 1b32 2C0D0000 		.4byte	0xd2c
 7990 1b36 00000000 		.4byte	.LFB743
 7991 1b3a 14000000 		.4byte	.LFE743-.LFB743
 7992 1b3e 01       		.uleb128 0x1
 7993 1b3f 9C       		.byte	0x9c
 7994 1b40 691B0000 		.4byte	0x1b69
 7995 1b44 28       		.uleb128 0x28
 7996 1b45 CA090000 		.4byte	.LASF369
 7997 1b49 01       		.byte	0x1
 7998 1b4a B808     		.2byte	0x8b8
 7999 1b4c 2C0D0000 		.4byte	0xd2c
 8000 1b50 01       		.uleb128 0x1
 8001 1b51 50       		.byte	0x50
 8002 1b52 33       		.uleb128 0x33
 8003 1b53 7F140000 		.4byte	.LASF408
 8004 1b57 01       		.byte	0x1
 8005 1b58 B908     		.2byte	0x8b9
 8006 1b5a 210D0000 		.4byte	0xd21
 8007 1b5e 00       		.byte	0
 8008 1b5f 24       		.uleb128 0x24
 8009 1b60 06000000 		.4byte	.LVL148
 8010 1b64 0D2F0000 		.4byte	0x2f0d
 8011 1b68 00       		.byte	0
 8012 1b69 34       		.uleb128 0x34
 8013 1b6a 5D030000 		.4byte	.LASF533
 8014 1b6e 01       		.byte	0x1
 8015 1b6f D508     		.2byte	0x8d5
 8016 1b71 210D0000 		.4byte	0xd21
 8017 1b75 00000000 		.4byte	.LFB744
 8018 1b79 0C000000 		.4byte	.LFE744-.LFB744
 8019 1b7d 01       		.uleb128 0x1
 8020 1b7e 9C       		.byte	0x9c
 8021 1b7f 2C       		.uleb128 0x2c
 8022 1b80 0C120000 		.4byte	.LASF414
 8023 1b84 01       		.byte	0x1
 8024 1b85 DD08     		.2byte	0x8dd
 8025 1b87 BD000000 		.4byte	0xbd
 8026 1b8b 00000000 		.4byte	.LFB745
 8027 1b8f 28000000 		.4byte	.LFE745-.LFB745
 8028 1b93 01       		.uleb128 0x1
 8029 1b94 9C       		.byte	0x9c
 8030 1b95 DA1B0000 		.4byte	0x1bda
 8031 1b99 1E       		.uleb128 0x1e
 8032 1b9a 38240000 		.4byte	.LASF415
 8033 1b9e 01       		.byte	0x1
 8034 1b9f DD08     		.2byte	0x8dd
 8035 1ba1 240E0000 		.4byte	0xe24
 8036 1ba5 7C060000 		.4byte	.LLST47
 8037 1ba9 1F       		.uleb128 0x1f
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 244


 8038 1baa 2B2A0000 		.4byte	.LASF370
 8039 1bae 01       		.byte	0x1
 8040 1baf DF08     		.2byte	0x8df
 8041 1bb1 90100000 		.4byte	0x1090
 8042 1bb5 8F060000 		.4byte	.LLST48
 8043 1bb9 20       		.uleb128 0x20
 8044 1bba 920F0000 		.4byte	0xf92
 8045 1bbe 0C000000 		.4byte	.LBB120
 8046 1bc2 12000000 		.4byte	.LBE120-.LBB120
 8047 1bc6 01       		.byte	0x1
 8048 1bc7 E408     		.2byte	0x8e4
 8049 1bc9 21       		.uleb128 0x21
 8050 1bca 0C000000 		.4byte	.LBB121
 8051 1bce 12000000 		.4byte	.LBE121-.LBB121
 8052 1bd2 22       		.uleb128 0x22
 8053 1bd3 9E0F0000 		.4byte	0xf9e
 8054 1bd7 00       		.byte	0
 8055 1bd8 00       		.byte	0
 8056 1bd9 00       		.byte	0
 8057 1bda 2C       		.uleb128 0x2c
 8058 1bdb 611E0000 		.4byte	.LASF416
 8059 1bdf 01       		.byte	0x1
 8060 1be0 1D0A     		.2byte	0xa1d
 8061 1be2 160D0000 		.4byte	0xd16
 8062 1be6 00000000 		.4byte	.LFB746
 8063 1bea FC000000 		.4byte	.LFE746-.LFB746
 8064 1bee 01       		.uleb128 0x1
 8065 1bef 9C       		.byte	0x9c
 8066 1bf0 BE1C0000 		.4byte	0x1cbe
 8067 1bf4 1F       		.uleb128 0x1f
 8068 1bf5 2B2A0000 		.4byte	.LASF370
 8069 1bf9 01       		.byte	0x1
 8070 1bfa 1F0A     		.2byte	0xa1f
 8071 1bfc 90100000 		.4byte	0x1090
 8072 1c00 AD060000 		.4byte	.LLST49
 8073 1c04 1F       		.uleb128 0x1f
 8074 1c05 152A0000 		.4byte	.LASF324
 8075 1c09 01       		.byte	0x1
 8076 1c0a 200A     		.2byte	0xa20
 8077 1c0c 2C0D0000 		.4byte	0xd2c
 8078 1c10 CB060000 		.4byte	.LLST50
 8079 1c14 1F       		.uleb128 0x1f
 8080 1c15 7B200000 		.4byte	.LASF417
 8081 1c19 01       		.byte	0x1
 8082 1c1a 210A     		.2byte	0xa21
 8083 1c1c 160D0000 		.4byte	0xd16
 8084 1c20 DE060000 		.4byte	.LLST51
 8085 1c24 35       		.uleb128 0x35
 8086 1c25 00000000 		.4byte	.Ldebug_ranges0+0
 8087 1c29 1F       		.uleb128 0x1f
 8088 1c2a 611A0000 		.4byte	.LASF391
 8089 1c2e 01       		.byte	0x1
 8090 1c2f 2B0A     		.2byte	0xa2b
 8091 1c31 2F140000 		.4byte	0x142f
 8092 1c35 36070000 		.4byte	.LLST52
 8093 1c39 2D       		.uleb128 0x2d
 8094 1c3a 1C000000 		.4byte	.LBB123
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 245


 8095 1c3e 34000000 		.4byte	.LBE123-.LBB123
 8096 1c42 841C0000 		.4byte	0x1c84
 8097 1c46 1F       		.uleb128 0x1f
 8098 1c47 D4210000 		.4byte	.LASF418
 8099 1c4b 01       		.byte	0x1
 8100 1c4c 330A     		.2byte	0xa33
 8101 1c4e BE1C0000 		.4byte	0x1cbe
 8102 1c52 49070000 		.4byte	.LLST53
 8103 1c56 2F       		.uleb128 0x2f
 8104 1c57 920F0000 		.4byte	0xf92
 8105 1c5b 22000000 		.4byte	.LBB124
 8106 1c5f 12000000 		.4byte	.LBE124-.LBB124
 8107 1c63 01       		.byte	0x1
 8108 1c64 330A     		.2byte	0xa33
 8109 1c66 7A1C0000 		.4byte	0x1c7a
 8110 1c6a 21       		.uleb128 0x21
 8111 1c6b 22000000 		.4byte	.LBB125
 8112 1c6f 12000000 		.4byte	.LBE125-.LBB125
 8113 1c73 22       		.uleb128 0x22
 8114 1c74 9E0F0000 		.4byte	0xf9e
 8115 1c78 00       		.byte	0
 8116 1c79 00       		.byte	0
 8117 1c7a 24       		.uleb128 0x24
 8118 1c7b 50000000 		.4byte	.LVL160
 8119 1c7f 69100000 		.4byte	0x1069
 8120 1c83 00       		.byte	0
 8121 1c84 2A       		.uleb128 0x2a
 8122 1c85 9A000000 		.4byte	.LVL167
 8123 1c89 EA2E0000 		.4byte	0x2eea
 8124 1c8d 981C0000 		.4byte	0x1c98
 8125 1c91 26       		.uleb128 0x26
 8126 1c92 01       		.uleb128 0x1
 8127 1c93 50       		.byte	0x50
 8128 1c94 02       		.uleb128 0x2
 8129 1c95 78       		.byte	0x78
 8130 1c96 00       		.sleb128 0
 8131 1c97 00       		.byte	0
 8132 1c98 2A       		.uleb128 0x2a
 8133 1c99 A6000000 		.4byte	.LVL168
 8134 1c9d EA2E0000 		.4byte	0x2eea
 8135 1ca1 AC1C0000 		.4byte	0x1cac
 8136 1ca5 26       		.uleb128 0x26
 8137 1ca6 01       		.uleb128 0x1
 8138 1ca7 50       		.byte	0x50
 8139 1ca8 02       		.uleb128 0x2
 8140 1ca9 75       		.byte	0x75
 8141 1caa 18       		.sleb128 24
 8142 1cab 00       		.byte	0
 8143 1cac 25       		.uleb128 0x25
 8144 1cad CC000000 		.4byte	.LVL169
 8145 1cb1 D32E0000 		.4byte	0x2ed3
 8146 1cb5 26       		.uleb128 0x26
 8147 1cb6 01       		.uleb128 0x1
 8148 1cb7 51       		.byte	0x51
 8149 1cb8 02       		.uleb128 0x2
 8150 1cb9 78       		.byte	0x78
 8151 1cba 00       		.sleb128 0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 246


 8152 1cbb 00       		.byte	0
 8153 1cbc 00       		.byte	0
 8154 1cbd 00       		.byte	0
 8155 1cbe 06       		.uleb128 0x6
 8156 1cbf 04       		.byte	0x4
 8157 1cc0 190E0000 		.4byte	0xe19
 8158 1cc4 2C       		.uleb128 0x2c
 8159 1cc5 4B190000 		.4byte	.LASF419
 8160 1cc9 01       		.byte	0x1
 8161 1cca 3908     		.2byte	0x839
 8162 1ccc 160D0000 		.4byte	0xd16
 8163 1cd0 00000000 		.4byte	.LFB741
 8164 1cd4 F0000000 		.4byte	.LFE741-.LFB741
 8165 1cd8 01       		.uleb128 0x1
 8166 1cd9 9C       		.byte	0x9c
 8167 1cda A11D0000 		.4byte	0x1da1
 8168 1cde 1F       		.uleb128 0x1f
 8169 1cdf 2B2A0000 		.4byte	.LASF370
 8170 1ce3 01       		.byte	0x1
 8171 1ce4 3B08     		.2byte	0x83b
 8172 1ce6 90100000 		.4byte	0x1090
 8173 1cea 6B070000 		.4byte	.LLST54
 8174 1cee 1F       		.uleb128 0x1f
 8175 1cef 4F210000 		.4byte	.LASF420
 8176 1cf3 01       		.byte	0x1
 8177 1cf4 3C08     		.2byte	0x83c
 8178 1cf6 160D0000 		.4byte	0xd16
 8179 1cfa AD070000 		.4byte	.LLST55
 8180 1cfe 2F       		.uleb128 0x2f
 8181 1cff 920F0000 		.4byte	0xf92
 8182 1d03 08000000 		.4byte	.LBB127
 8183 1d07 12000000 		.4byte	.LBE127-.LBB127
 8184 1d0b 01       		.byte	0x1
 8185 1d0c 4008     		.2byte	0x840
 8186 1d0e 221D0000 		.4byte	0x1d22
 8187 1d12 21       		.uleb128 0x21
 8188 1d13 08000000 		.4byte	.LBB128
 8189 1d17 12000000 		.4byte	.LBE128-.LBB128
 8190 1d1b 22       		.uleb128 0x22
 8191 1d1c 9E0F0000 		.4byte	0xf9e
 8192 1d20 00       		.byte	0
 8193 1d21 00       		.byte	0
 8194 1d22 2D       		.uleb128 0x2d
 8195 1d23 9C000000 		.4byte	.LBB129
 8196 1d27 22000000 		.4byte	.LBE129-.LBB129
 8197 1d2b 491D0000 		.4byte	0x1d49
 8198 1d2f 1F       		.uleb128 0x1f
 8199 1d30 00000000 		.4byte	.LASF421
 8200 1d34 01       		.byte	0x1
 8201 1d35 7408     		.2byte	0x874
 8202 1d37 210D0000 		.4byte	0xd21
 8203 1d3b EF070000 		.4byte	.LLST56
 8204 1d3f 24       		.uleb128 0x24
 8205 1d40 A8000000 		.4byte	.LVL186
 8206 1d44 DA1B0000 		.4byte	0x1bda
 8207 1d48 00       		.byte	0
 8208 1d49 24       		.uleb128 0x24
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 247


 8209 1d4a 20000000 		.4byte	.LVL176
 8210 1d4e C82E0000 		.4byte	0x2ec8
 8211 1d52 2A       		.uleb128 0x2a
 8212 1d53 4E000000 		.4byte	.LVL179
 8213 1d57 EA2E0000 		.4byte	0x2eea
 8214 1d5b 661D0000 		.4byte	0x1d66
 8215 1d5f 26       		.uleb128 0x26
 8216 1d60 01       		.uleb128 0x1
 8217 1d61 50       		.byte	0x50
 8218 1d62 02       		.uleb128 0x2
 8219 1d63 74       		.byte	0x74
 8220 1d64 18       		.sleb128 24
 8221 1d65 00       		.byte	0
 8222 1d66 2A       		.uleb128 0x2a
 8223 1d67 56000000 		.4byte	.LVL180
 8224 1d6b EA2E0000 		.4byte	0x2eea
 8225 1d6f 7A1D0000 		.4byte	0x1d7a
 8226 1d73 26       		.uleb128 0x26
 8227 1d74 01       		.uleb128 0x1
 8228 1d75 50       		.byte	0x50
 8229 1d76 02       		.uleb128 0x2
 8230 1d77 76       		.byte	0x76
 8231 1d78 00       		.sleb128 0
 8232 1d79 00       		.byte	0
 8233 1d7a 2A       		.uleb128 0x2a
 8234 1d7b 78000000 		.4byte	.LVL181
 8235 1d7f D32E0000 		.4byte	0x2ed3
 8236 1d83 8E1D0000 		.4byte	0x1d8e
 8237 1d87 26       		.uleb128 0x26
 8238 1d88 01       		.uleb128 0x1
 8239 1d89 51       		.byte	0x51
 8240 1d8a 02       		.uleb128 0x2
 8241 1d8b 76       		.byte	0x76
 8242 1d8c 00       		.sleb128 0
 8243 1d8d 00       		.byte	0
 8244 1d8e 24       		.uleb128 0x24
 8245 1d8f 9C000000 		.4byte	.LVL184
 8246 1d93 69100000 		.4byte	0x1069
 8247 1d97 24       		.uleb128 0x24
 8248 1d98 E4000000 		.4byte	.LVL194
 8249 1d9c DF2E0000 		.4byte	0x2edf
 8250 1da0 00       		.byte	0
 8251 1da1 2E       		.uleb128 0x2e
 8252 1da2 571F0000 		.4byte	.LASF422
 8253 1da6 01       		.byte	0x1
 8254 1da7 B404     		.2byte	0x4b4
 8255 1da9 00000000 		.4byte	.LFB729
 8256 1dad AC000000 		.4byte	.LFE729-.LFB729
 8257 1db1 01       		.uleb128 0x1
 8258 1db2 9C       		.byte	0x9c
 8259 1db3 AD1E0000 		.4byte	0x1ead
 8260 1db7 1E       		.uleb128 0x1e
 8261 1db8 68200000 		.4byte	.LASF423
 8262 1dbc 01       		.byte	0x1
 8263 1dbd B404     		.2byte	0x4b4
 8264 1dbf B31E0000 		.4byte	0x1eb3
 8265 1dc3 25080000 		.4byte	.LLST57
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 248


 8266 1dc7 1E       		.uleb128 0x1e
 8267 1dc8 8E1C0000 		.4byte	.LASF424
 8268 1dcc 01       		.byte	0x1
 8269 1dcd B404     		.2byte	0x4b4
 8270 1dcf 2F140000 		.4byte	0x142f
 8271 1dd3 51080000 		.4byte	.LLST58
 8272 1dd7 1F       		.uleb128 0x1f
 8273 1dd8 AE160000 		.4byte	.LASF390
 8274 1ddc 01       		.byte	0x1
 8275 1ddd B604     		.2byte	0x4b6
 8276 1ddf 2C0D0000 		.4byte	0xd2c
 8277 1de3 7D080000 		.4byte	.LLST59
 8278 1de7 28       		.uleb128 0x28
 8279 1de8 4F210000 		.4byte	.LASF420
 8280 1dec 01       		.byte	0x1
 8281 1ded B704     		.2byte	0x4b7
 8282 1def 160D0000 		.4byte	0xd16
 8283 1df3 01       		.uleb128 0x1
 8284 1df4 50       		.byte	0x50
 8285 1df5 1F       		.uleb128 0x1f
 8286 1df6 671B0000 		.4byte	.LASF425
 8287 1dfa 01       		.byte	0x1
 8288 1dfb B704     		.2byte	0x4b7
 8289 1dfd 160D0000 		.4byte	0xd16
 8290 1e01 90080000 		.4byte	.LLST60
 8291 1e05 2F       		.uleb128 0x2f
 8292 1e06 920F0000 		.4byte	0xf92
 8293 1e0a 04000000 		.4byte	.LBB130
 8294 1e0e 14000000 		.4byte	.LBE130-.LBB130
 8295 1e12 01       		.byte	0x1
 8296 1e13 B904     		.2byte	0x4b9
 8297 1e15 291E0000 		.4byte	0x1e29
 8298 1e19 21       		.uleb128 0x21
 8299 1e1a 04000000 		.4byte	.LBB131
 8300 1e1e 14000000 		.4byte	.LBE131-.LBB131
 8301 1e22 22       		.uleb128 0x22
 8302 1e23 9E0F0000 		.4byte	0xf9e
 8303 1e27 00       		.byte	0
 8304 1e28 00       		.byte	0
 8305 1e29 2F       		.uleb128 0x2f
 8306 1e2a 920F0000 		.4byte	0xf92
 8307 1e2e 1A000000 		.4byte	.LBB132
 8308 1e32 12000000 		.4byte	.LBE132-.LBB132
 8309 1e36 01       		.byte	0x1
 8310 1e37 BA04     		.2byte	0x4ba
 8311 1e39 4D1E0000 		.4byte	0x1e4d
 8312 1e3d 21       		.uleb128 0x21
 8313 1e3e 1A000000 		.4byte	.LBB133
 8314 1e42 12000000 		.4byte	.LBE133-.LBB133
 8315 1e46 22       		.uleb128 0x22
 8316 1e47 9E0F0000 		.4byte	0xf9e
 8317 1e4b 00       		.byte	0
 8318 1e4c 00       		.byte	0
 8319 1e4d 2F       		.uleb128 0x2f
 8320 1e4e 920F0000 		.4byte	0xf92
 8321 1e52 34000000 		.4byte	.LBB134
 8322 1e56 14000000 		.4byte	.LBE134-.LBB134
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 249


 8323 1e5a 01       		.byte	0x1
 8324 1e5b BB04     		.2byte	0x4bb
 8325 1e5d 711E0000 		.4byte	0x1e71
 8326 1e61 21       		.uleb128 0x21
 8327 1e62 34000000 		.4byte	.LBB135
 8328 1e66 14000000 		.4byte	.LBE135-.LBB135
 8329 1e6a 22       		.uleb128 0x22
 8330 1e6b 9E0F0000 		.4byte	0xf9e
 8331 1e6f 00       		.byte	0
 8332 1e70 00       		.byte	0
 8333 1e71 36       		.uleb128 0x36
 8334 1e72 18000000 		.4byte	.Ldebug_ranges0+0x18
 8335 1e76 9A1E0000 		.4byte	0x1e9a
 8336 1e7a 1F       		.uleb128 0x1f
 8337 1e7b 611A0000 		.4byte	.LASF391
 8338 1e7f 01       		.byte	0x1
 8339 1e80 C104     		.2byte	0x4c1
 8340 1e82 2F140000 		.4byte	0x142f
 8341 1e86 AF080000 		.4byte	.LLST61
 8342 1e8a 25       		.uleb128 0x25
 8343 1e8b 8C000000 		.4byte	.LVL206
 8344 1e8f A1130000 		.4byte	0x13a1
 8345 1e93 26       		.uleb128 0x26
 8346 1e94 01       		.uleb128 0x1
 8347 1e95 51       		.byte	0x51
 8348 1e96 01       		.uleb128 0x1
 8349 1e97 30       		.byte	0x30
 8350 1e98 00       		.byte	0
 8351 1e99 00       		.byte	0
 8352 1e9a 24       		.uleb128 0x24
 8353 1e9b 4C000000 		.4byte	.LVL201
 8354 1e9f EF1A0000 		.4byte	0x1aef
 8355 1ea3 24       		.uleb128 0x24
 8356 1ea4 90000000 		.4byte	.LVL207
 8357 1ea8 C41C0000 		.4byte	0x1cc4
 8358 1eac 00       		.byte	0
 8359 1ead 06       		.uleb128 0x6
 8360 1eae 04       		.byte	0x4
 8361 1eaf 2C0D0000 		.4byte	0xd2c
 8362 1eb3 07       		.uleb128 0x7
 8363 1eb4 AD1E0000 		.4byte	0x1ead
 8364 1eb8 2E       		.uleb128 0x2e
 8365 1eb9 A51C0000 		.4byte	.LASF426
 8366 1ebd 01       		.byte	0x1
 8367 1ebe 0805     		.2byte	0x508
 8368 1ec0 00000000 		.4byte	.LFB730
 8369 1ec4 50000000 		.4byte	.LFE730-.LFB730
 8370 1ec8 01       		.uleb128 0x1
 8371 1ec9 9C       		.byte	0x9c
 8372 1eca 3E1F0000 		.4byte	0x1f3e
 8373 1ece 1E       		.uleb128 0x1e
 8374 1ecf F9120000 		.4byte	.LASF427
 8375 1ed3 01       		.byte	0x1
 8376 1ed4 0805     		.2byte	0x508
 8377 1ed6 2F140000 		.4byte	0x142f
 8378 1eda C2080000 		.4byte	.LLST62
 8379 1ede 1F       		.uleb128 0x1f
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 250


 8380 1edf 4F210000 		.4byte	.LASF420
 8381 1ee3 01       		.byte	0x1
 8382 1ee4 0A05     		.2byte	0x50a
 8383 1ee6 160D0000 		.4byte	0xd16
 8384 1eea F9080000 		.4byte	.LLST63
 8385 1eee 2F       		.uleb128 0x2f
 8386 1eef 920F0000 		.4byte	0xf92
 8387 1ef3 0E000000 		.4byte	.LBB139
 8388 1ef7 12000000 		.4byte	.LBE139-.LBB139
 8389 1efb 01       		.byte	0x1
 8390 1efc 0F05     		.2byte	0x50f
 8391 1efe 121F0000 		.4byte	0x1f12
 8392 1f02 21       		.uleb128 0x21
 8393 1f03 0E000000 		.4byte	.LBB140
 8394 1f07 12000000 		.4byte	.LBE140-.LBB140
 8395 1f0b 22       		.uleb128 0x22
 8396 1f0c 9E0F0000 		.4byte	0xf9e
 8397 1f10 00       		.byte	0
 8398 1f11 00       		.byte	0
 8399 1f12 24       		.uleb128 0x24
 8400 1f13 24000000 		.4byte	.LVL212
 8401 1f17 EF1A0000 		.4byte	0x1aef
 8402 1f1b 2A       		.uleb128 0x2a
 8403 1f1c 2C000000 		.4byte	.LVL213
 8404 1f20 A1130000 		.4byte	0x13a1
 8405 1f24 341F0000 		.4byte	0x1f34
 8406 1f28 26       		.uleb128 0x26
 8407 1f29 01       		.uleb128 0x1
 8408 1f2a 50       		.byte	0x50
 8409 1f2b 02       		.uleb128 0x2
 8410 1f2c 74       		.byte	0x74
 8411 1f2d 00       		.sleb128 0
 8412 1f2e 26       		.uleb128 0x26
 8413 1f2f 01       		.uleb128 0x1
 8414 1f30 51       		.byte	0x51
 8415 1f31 01       		.uleb128 0x1
 8416 1f32 30       		.byte	0x30
 8417 1f33 00       		.byte	0
 8418 1f34 24       		.uleb128 0x24
 8419 1f35 30000000 		.4byte	.LVL214
 8420 1f39 C41C0000 		.4byte	0x1cc4
 8421 1f3d 00       		.byte	0
 8422 1f3e 2E       		.uleb128 0x2e
 8423 1f3f E90E0000 		.4byte	.LASF428
 8424 1f43 01       		.byte	0x1
 8425 1f44 230B     		.2byte	0xb23
 8426 1f46 00000000 		.4byte	.LFB747
 8427 1f4a C8000000 		.4byte	.LFE747-.LFB747
 8428 1f4e 01       		.uleb128 0x1
 8429 1f4f 9C       		.byte	0x9c
 8430 1f50 ED1F0000 		.4byte	0x1fed
 8431 1f54 2D       		.uleb128 0x2d
 8432 1f55 1C000000 		.4byte	.LBB141
 8433 1f59 36000000 		.4byte	.LBE141-.LBB141
 8434 1f5d 8C1F0000 		.4byte	0x1f8c
 8435 1f61 1F       		.uleb128 0x1f
 8436 1f62 800D0000 		.4byte	.LASF429
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 251


 8437 1f66 01       		.byte	0x1
 8438 1f67 4D0B     		.2byte	0xb4d
 8439 1f69 F31F0000 		.4byte	0x1ff3
 8440 1f6d 2F090000 		.4byte	.LLST64
 8441 1f71 37       		.uleb128 0x37
 8442 1f72 DC0E0000 		.4byte	.LASF430
 8443 1f76 01       		.byte	0x1
 8444 1f77 4E0B     		.2byte	0xb4e
 8445 1f79 E6110000 		.4byte	0x11e6
 8446 1f7d A5CB96AD 		.sleb128 -1515870811
 8446      7A
 8447 1f82 24       		.uleb128 0x24
 8448 1f83 52000000 		.4byte	.LVL219
 8449 1f87 3A2F0000 		.4byte	0x2f3a
 8450 1f8b 00       		.byte	0
 8451 1f8c 21       		.uleb128 0x21
 8452 1f8d 52000000 		.4byte	.LBB142
 8453 1f91 76000000 		.4byte	.LBE142-.LBB142
 8454 1f95 1F       		.uleb128 0x1f
 8455 1f96 1C1D0000 		.4byte	.LASF431
 8456 1f9a 01       		.byte	0x1
 8457 1f9b 5B0B     		.2byte	0xb5b
 8458 1f9d 210D0000 		.4byte	0xd21
 8459 1fa1 42090000 		.4byte	.LLST65
 8460 1fa5 2F       		.uleb128 0x2f
 8461 1fa6 920F0000 		.4byte	0xf92
 8462 1faa 5C000000 		.4byte	.LBB143
 8463 1fae 12000000 		.4byte	.LBE143-.LBB143
 8464 1fb2 01       		.byte	0x1
 8465 1fb3 5B0B     		.2byte	0xb5b
 8466 1fb5 C91F0000 		.4byte	0x1fc9
 8467 1fb9 21       		.uleb128 0x21
 8468 1fba 5C000000 		.4byte	.LBB144
 8469 1fbe 12000000 		.4byte	.LBE144-.LBB144
 8470 1fc2 22       		.uleb128 0x22
 8471 1fc3 9E0F0000 		.4byte	0xf9e
 8472 1fc7 00       		.byte	0
 8473 1fc8 00       		.byte	0
 8474 1fc9 21       		.uleb128 0x21
 8475 1fca 80000000 		.4byte	.LBB145
 8476 1fce 3E000000 		.4byte	.LBE145-.LBB145
 8477 1fd2 28       		.uleb128 0x28
 8478 1fd3 470F0000 		.4byte	.LASF432
 8479 1fd7 01       		.byte	0x1
 8480 1fd8 5B0B     		.2byte	0xb5b
 8481 1fda F81F0000 		.4byte	0x1ff8
 8482 1fde 0B       		.uleb128 0xb
 8483 1fdf 73       		.byte	0x73
 8484 1fe0 00       		.sleb128 0
 8485 1fe1 44       		.byte	0x44
 8486 1fe2 1E       		.byte	0x1e
 8487 1fe3 03       		.byte	0x3
 8488 1fe4 30000000 		.4byte	pxReadyTasksLists
 8489 1fe8 22       		.byte	0x22
 8490 1fe9 9F       		.byte	0x9f
 8491 1fea 00       		.byte	0
 8492 1feb 00       		.byte	0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 252


 8493 1fec 00       		.byte	0
 8494 1fed 06       		.uleb128 0x6
 8495 1fee 04       		.byte	0x4
 8496 1fef E6110000 		.4byte	0x11e6
 8497 1ff3 07       		.uleb128 0x7
 8498 1ff4 ED1F0000 		.4byte	0x1fed
 8499 1ff8 07       		.uleb128 0x7
 8500 1ff9 BE1C0000 		.4byte	0x1cbe
 8501 1ffd 2E       		.uleb128 0x2e
 8502 1ffe B91B0000 		.4byte	.LASF433
 8503 2002 01       		.byte	0x1
 8504 2003 5E06     		.2byte	0x65e
 8505 2005 00000000 		.4byte	.LFB734
 8506 2009 B8000000 		.4byte	.LFE734-.LFB734
 8507 200d 01       		.uleb128 0x1
 8508 200e 9C       		.byte	0x9c
 8509 200f D3200000 		.4byte	0x20d3
 8510 2013 1E       		.uleb128 0x1e
 8511 2014 13040000 		.4byte	.LASF434
 8512 2018 01       		.byte	0x1
 8513 2019 5E06     		.2byte	0x65e
 8514 201b 240E0000 		.4byte	0xe24
 8515 201f 60090000 		.4byte	.LLST66
 8516 2023 1F       		.uleb128 0x1f
 8517 2024 2B2A0000 		.4byte	.LASF370
 8518 2028 01       		.byte	0x1
 8519 2029 6006     		.2byte	0x660
 8520 202b 90100000 		.4byte	0x1090
 8521 202f 7E090000 		.4byte	.LLST67
 8522 2033 2F       		.uleb128 0x2f
 8523 2034 920F0000 		.4byte	0xf92
 8524 2038 6E000000 		.4byte	.LBB146
 8525 203c 12000000 		.4byte	.LBE146-.LBB146
 8526 2040 01       		.byte	0x1
 8527 2041 A206     		.2byte	0x6a2
 8528 2043 57200000 		.4byte	0x2057
 8529 2047 21       		.uleb128 0x21
 8530 2048 6E000000 		.4byte	.LBB147
 8531 204c 12000000 		.4byte	.LBE147-.LBB147
 8532 2050 22       		.uleb128 0x22
 8533 2051 9E0F0000 		.4byte	0xf9e
 8534 2055 00       		.byte	0
 8535 2056 00       		.byte	0
 8536 2057 24       		.uleb128 0x24
 8537 2058 08000000 		.4byte	.LVL226
 8538 205c C82E0000 		.4byte	0x2ec8
 8539 2060 2A       		.uleb128 0x2a
 8540 2061 18000000 		.4byte	.LVL228
 8541 2065 EA2E0000 		.4byte	0x2eea
 8542 2069 74200000 		.4byte	0x2074
 8543 206d 26       		.uleb128 0x26
 8544 206e 01       		.uleb128 0x1
 8545 206f 50       		.byte	0x50
 8546 2070 02       		.uleb128 0x2
 8547 2071 75       		.byte	0x75
 8548 2072 00       		.sleb128 0
 8549 2073 00       		.byte	0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 253


 8550 2074 2A       		.uleb128 0x2a
 8551 2075 24000000 		.4byte	.LVL229
 8552 2079 EA2E0000 		.4byte	0x2eea
 8553 207d 88200000 		.4byte	0x2088
 8554 2081 26       		.uleb128 0x26
 8555 2082 01       		.uleb128 0x1
 8556 2083 50       		.byte	0x50
 8557 2084 02       		.uleb128 0x2
 8558 2085 74       		.byte	0x74
 8559 2086 18       		.sleb128 24
 8560 2087 00       		.byte	0
 8561 2088 2A       		.uleb128 0x2a
 8562 2089 2C000000 		.4byte	.LVL230
 8563 208d D32E0000 		.4byte	0x2ed3
 8564 2091 A5200000 		.4byte	0x20a5
 8565 2095 26       		.uleb128 0x26
 8566 2096 01       		.uleb128 0x1
 8567 2097 50       		.byte	0x50
 8568 2098 05       		.uleb128 0x5
 8569 2099 03       		.byte	0x3
 8570 209a 00000000 		.4byte	.LANCHOR0
 8571 209e 26       		.uleb128 0x26
 8572 209f 01       		.uleb128 0x1
 8573 20a0 51       		.byte	0x51
 8574 20a1 02       		.uleb128 0x2
 8575 20a2 75       		.byte	0x75
 8576 20a3 00       		.sleb128 0
 8577 20a4 00       		.byte	0
 8578 20a5 24       		.uleb128 0x24
 8579 20a6 40000000 		.4byte	.LVL231
 8580 20aa DF2E0000 		.4byte	0x2edf
 8581 20ae 24       		.uleb128 0x24
 8582 20af 4C000000 		.4byte	.LVL232
 8583 20b3 C82E0000 		.4byte	0x2ec8
 8584 20b7 24       		.uleb128 0x24
 8585 20b8 50000000 		.4byte	.LVL233
 8586 20bc 69100000 		.4byte	0x1069
 8587 20c0 24       		.uleb128 0x24
 8588 20c1 54000000 		.4byte	.LVL234
 8589 20c5 DF2E0000 		.4byte	0x2edf
 8590 20c9 24       		.uleb128 0x24
 8591 20ca AC000000 		.4byte	.LVL238
 8592 20ce 3E1F0000 		.4byte	0x1f3e
 8593 20d2 00       		.byte	0
 8594 20d3 2E       		.uleb128 0x2e
 8595 20d4 F2130000 		.4byte	.LASF435
 8596 20d8 01       		.byte	0x1
 8597 20d9 690B     		.2byte	0xb69
 8598 20db 00000000 		.4byte	.LFB748
 8599 20df 34000000 		.4byte	.LFE748-.LFB748
 8600 20e3 01       		.uleb128 0x1
 8601 20e4 9C       		.byte	0x9c
 8602 20e5 4C210000 		.4byte	0x214c
 8603 20e9 1E       		.uleb128 0x1e
 8604 20ea E1050000 		.4byte	.LASF436
 8605 20ee 01       		.byte	0x1
 8606 20ef 690B     		.2byte	0xb69
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 254


 8607 20f1 F81F0000 		.4byte	0x1ff8
 8608 20f5 91090000 		.4byte	.LLST68
 8609 20f9 1E       		.uleb128 0x1e
 8610 20fa 35190000 		.4byte	.LASF388
 8611 20fe 01       		.byte	0x1
 8612 20ff 690B     		.2byte	0xb69
 8613 2101 2F140000 		.4byte	0x142f
 8614 2105 B2090000 		.4byte	.LLST69
 8615 2109 2F       		.uleb128 0x2f
 8616 210a 920F0000 		.4byte	0xf92
 8617 210e 02000000 		.4byte	.LBB148
 8618 2112 12000000 		.4byte	.LBE148-.LBB148
 8619 2116 01       		.byte	0x1
 8620 2117 6B0B     		.2byte	0xb6b
 8621 2119 2D210000 		.4byte	0x212d
 8622 211d 21       		.uleb128 0x21
 8623 211e 02000000 		.4byte	.LBB149
 8624 2122 12000000 		.4byte	.LBE149-.LBB149
 8625 2126 22       		.uleb128 0x22
 8626 2127 9E0F0000 		.4byte	0xf9e
 8627 212b 00       		.byte	0
 8628 212c 00       		.byte	0
 8629 212d 24       		.uleb128 0x24
 8630 212e 24000000 		.4byte	.LVL243
 8631 2132 F62E0000 		.4byte	0x2ef6
 8632 2136 25       		.uleb128 0x25
 8633 2137 2C000000 		.4byte	.LVL244
 8634 213b A1130000 		.4byte	0x13a1
 8635 213f 26       		.uleb128 0x26
 8636 2140 01       		.uleb128 0x1
 8637 2141 50       		.byte	0x50
 8638 2142 02       		.uleb128 0x2
 8639 2143 74       		.byte	0x74
 8640 2144 00       		.sleb128 0
 8641 2145 26       		.uleb128 0x26
 8642 2146 01       		.uleb128 0x1
 8643 2147 51       		.byte	0x51
 8644 2148 01       		.uleb128 0x1
 8645 2149 31       		.byte	0x31
 8646 214a 00       		.byte	0
 8647 214b 00       		.byte	0
 8648 214c 2E       		.uleb128 0x2e
 8649 214d C1010000 		.4byte	.LASF437
 8650 2151 01       		.byte	0x1
 8651 2152 7A0B     		.2byte	0xb7a
 8652 2154 00000000 		.4byte	.LFB749
 8653 2158 5C000000 		.4byte	.LFE749-.LFB749
 8654 215c 01       		.uleb128 0x1
 8655 215d 9C       		.byte	0x9c
 8656 215e 05220000 		.4byte	0x2205
 8657 2162 1E       		.uleb128 0x1e
 8658 2163 E1050000 		.4byte	.LASF436
 8659 2167 01       		.byte	0x1
 8660 2168 7A0B     		.2byte	0xb7a
 8661 216a BE1C0000 		.4byte	0x1cbe
 8662 216e DE090000 		.4byte	.LLST70
 8663 2172 1E       		.uleb128 0x1e
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 255


 8664 2173 152A0000 		.4byte	.LASF324
 8665 2177 01       		.byte	0x1
 8666 2178 7A0B     		.2byte	0xb7a
 8667 217a 2F140000 		.4byte	0x142f
 8668 217e 2E0A0000 		.4byte	.LLST71
 8669 2182 1E       		.uleb128 0x1e
 8670 2183 35190000 		.4byte	.LASF388
 8671 2187 01       		.byte	0x1
 8672 2188 7A0B     		.2byte	0xb7a
 8673 218a 2F140000 		.4byte	0x142f
 8674 218e 5A0A0000 		.4byte	.LLST72
 8675 2192 2F       		.uleb128 0x2f
 8676 2193 920F0000 		.4byte	0xf92
 8677 2197 02000000 		.4byte	.LBB150
 8678 219b 14000000 		.4byte	.LBE150-.LBB150
 8679 219f 01       		.byte	0x1
 8680 21a0 7C0B     		.2byte	0xb7c
 8681 21a2 B6210000 		.4byte	0x21b6
 8682 21a6 21       		.uleb128 0x21
 8683 21a7 02000000 		.4byte	.LBB151
 8684 21ab 14000000 		.4byte	.LBE151-.LBB151
 8685 21af 22       		.uleb128 0x22
 8686 21b0 9E0F0000 		.4byte	0xf9e
 8687 21b4 00       		.byte	0
 8688 21b5 00       		.byte	0
 8689 21b6 2F       		.uleb128 0x2f
 8690 21b7 920F0000 		.4byte	0xf92
 8691 21bb 1E000000 		.4byte	.LBB152
 8692 21bf 12000000 		.4byte	.LBE152-.LBB152
 8693 21c3 01       		.byte	0x1
 8694 21c4 800B     		.2byte	0xb80
 8695 21c6 DA210000 		.4byte	0x21da
 8696 21ca 21       		.uleb128 0x21
 8697 21cb 1E000000 		.4byte	.LBB153
 8698 21cf 12000000 		.4byte	.LBE153-.LBB153
 8699 21d3 22       		.uleb128 0x22
 8700 21d4 9E0F0000 		.4byte	0xf9e
 8701 21d8 00       		.byte	0
 8702 21d9 00       		.byte	0
 8703 21da 2A       		.uleb128 0x2a
 8704 21db 4E000000 		.4byte	.LVL255
 8705 21df D32E0000 		.4byte	0x2ed3
 8706 21e3 EF210000 		.4byte	0x21ef
 8707 21e7 26       		.uleb128 0x26
 8708 21e8 01       		.uleb128 0x1
 8709 21e9 50       		.byte	0x50
 8710 21ea 03       		.uleb128 0x3
 8711 21eb F3       		.byte	0xf3
 8712 21ec 01       		.uleb128 0x1
 8713 21ed 50       		.byte	0x50
 8714 21ee 00       		.byte	0
 8715 21ef 25       		.uleb128 0x25
 8716 21f0 56000000 		.4byte	.LVL256
 8717 21f4 A1130000 		.4byte	0x13a1
 8718 21f8 26       		.uleb128 0x26
 8719 21f9 01       		.uleb128 0x1
 8720 21fa 50       		.byte	0x50
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 256


 8721 21fb 02       		.uleb128 0x2
 8722 21fc 74       		.byte	0x74
 8723 21fd 00       		.sleb128 0
 8724 21fe 26       		.uleb128 0x26
 8725 21ff 01       		.uleb128 0x1
 8726 2200 51       		.byte	0x51
 8727 2201 01       		.uleb128 0x1
 8728 2202 31       		.byte	0x31
 8729 2203 00       		.byte	0
 8730 2204 00       		.byte	0
 8731 2205 2E       		.uleb128 0x2e
 8732 2206 A2060000 		.4byte	.LASF438
 8733 220a 01       		.byte	0x1
 8734 220b 940B     		.2byte	0xb94
 8735 220d 00000000 		.4byte	.LFB750
 8736 2211 3C000000 		.4byte	.LFE750-.LFB750
 8737 2215 01       		.uleb128 0x1
 8738 2216 9C       		.byte	0x9c
 8739 2217 8F220000 		.4byte	0x228f
 8740 221b 1E       		.uleb128 0x1e
 8741 221c E1050000 		.4byte	.LASF436
 8742 2220 01       		.byte	0x1
 8743 2221 940B     		.2byte	0xb94
 8744 2223 F81F0000 		.4byte	0x1ff8
 8745 2227 860A0000 		.4byte	.LLST73
 8746 222b 1E       		.uleb128 0x1e
 8747 222c 35190000 		.4byte	.LASF388
 8748 2230 01       		.byte	0x1
 8749 2231 940B     		.2byte	0xb94
 8750 2233 2C0D0000 		.4byte	0xd2c
 8751 2237 A70A0000 		.4byte	.LLST74
 8752 223b 1E       		.uleb128 0x1e
 8753 223c 6F0B0000 		.4byte	.LASF439
 8754 2240 01       		.byte	0x1
 8755 2241 940B     		.2byte	0xb94
 8756 2243 2A140000 		.4byte	0x142a
 8757 2247 C50A0000 		.4byte	.LLST75
 8758 224b 2F       		.uleb128 0x2f
 8759 224c 920F0000 		.4byte	0xf92
 8760 2250 04000000 		.4byte	.LBB154
 8761 2254 16000000 		.4byte	.LBE154-.LBB154
 8762 2258 01       		.byte	0x1
 8763 2259 960B     		.2byte	0xb96
 8764 225b 6F220000 		.4byte	0x226f
 8765 225f 21       		.uleb128 0x21
 8766 2260 04000000 		.4byte	.LBB155
 8767 2264 16000000 		.4byte	.LBE155-.LBB155
 8768 2268 22       		.uleb128 0x22
 8769 2269 9E0F0000 		.4byte	0xf9e
 8770 226d 00       		.byte	0
 8771 226e 00       		.byte	0
 8772 226f 24       		.uleb128 0x24
 8773 2270 26000000 		.4byte	.LVL262
 8774 2274 D32E0000 		.4byte	0x2ed3
 8775 2278 25       		.uleb128 0x25
 8776 2279 34000000 		.4byte	.LVL264
 8777 227d A1130000 		.4byte	0x13a1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 257


 8778 2281 26       		.uleb128 0x26
 8779 2282 01       		.uleb128 0x1
 8780 2283 50       		.byte	0x50
 8781 2284 02       		.uleb128 0x2
 8782 2285 74       		.byte	0x74
 8783 2286 00       		.sleb128 0
 8784 2287 26       		.uleb128 0x26
 8785 2288 01       		.uleb128 0x1
 8786 2289 51       		.byte	0x51
 8787 228a 02       		.uleb128 0x2
 8788 228b 75       		.byte	0x75
 8789 228c 00       		.sleb128 0
 8790 228d 00       		.byte	0
 8791 228e 00       		.byte	0
 8792 228f 2C       		.uleb128 0x2c
 8793 2290 C9190000 		.4byte	.LASF440
 8794 2294 01       		.byte	0x1
 8795 2295 B30B     		.2byte	0xbb3
 8796 2297 160D0000 		.4byte	0xd16
 8797 229b 00000000 		.4byte	.LFB751
 8798 229f 88000000 		.4byte	.LFE751-.LFB751
 8799 22a3 01       		.uleb128 0x1
 8800 22a4 9C       		.byte	0x9c
 8801 22a5 53230000 		.4byte	0x2353
 8802 22a9 1E       		.uleb128 0x1e
 8803 22aa E1050000 		.4byte	.LASF436
 8804 22ae 01       		.byte	0x1
 8805 22af B30B     		.2byte	0xbb3
 8806 22b1 5E230000 		.4byte	0x235e
 8807 22b5 F10A0000 		.4byte	.LLST76
 8808 22b9 1F       		.uleb128 0x1f
 8809 22ba 79180000 		.4byte	.LASF441
 8810 22be 01       		.byte	0x1
 8811 22bf B50B     		.2byte	0xbb5
 8812 22c1 90100000 		.4byte	0x1090
 8813 22c5 120B0000 		.4byte	.LLST77
 8814 22c9 1F       		.uleb128 0x1f
 8815 22ca CA090000 		.4byte	.LASF369
 8816 22ce 01       		.byte	0x1
 8817 22cf B60B     		.2byte	0xbb6
 8818 22d1 160D0000 		.4byte	0xd16
 8819 22d5 250B0000 		.4byte	.LLST78
 8820 22d9 2F       		.uleb128 0x2f
 8821 22da 920F0000 		.4byte	0xf92
 8822 22de 08000000 		.4byte	.LBB156
 8823 22e2 12000000 		.4byte	.LBE156-.LBB156
 8824 22e6 01       		.byte	0x1
 8825 22e7 C60B     		.2byte	0xbc6
 8826 22e9 FD220000 		.4byte	0x22fd
 8827 22ed 21       		.uleb128 0x21
 8828 22ee 08000000 		.4byte	.LBB157
 8829 22f2 12000000 		.4byte	.LBE157-.LBB157
 8830 22f6 22       		.uleb128 0x22
 8831 22f7 9E0F0000 		.4byte	0xf9e
 8832 22fb 00       		.byte	0
 8833 22fc 00       		.byte	0
 8834 22fd 2A       		.uleb128 0x2a
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 258


 8835 22fe 24000000 		.4byte	.LVL270
 8836 2302 EA2E0000 		.4byte	0x2eea
 8837 2306 11230000 		.4byte	0x2311
 8838 230a 26       		.uleb128 0x26
 8839 230b 01       		.uleb128 0x1
 8840 230c 50       		.byte	0x50
 8841 230d 02       		.uleb128 0x2
 8842 230e 75       		.byte	0x75
 8843 230f 00       		.sleb128 0
 8844 2310 00       		.byte	0
 8845 2311 2A       		.uleb128 0x2a
 8846 2312 34000000 		.4byte	.LVL271
 8847 2316 EA2E0000 		.4byte	0x2eea
 8848 231a 25230000 		.4byte	0x2325
 8849 231e 26       		.uleb128 0x26
 8850 231f 01       		.uleb128 0x1
 8851 2320 50       		.byte	0x50
 8852 2321 02       		.uleb128 0x2
 8853 2322 75       		.byte	0x75
 8854 2323 00       		.sleb128 0
 8855 2324 00       		.byte	0
 8856 2325 2A       		.uleb128 0x2a
 8857 2326 56000000 		.4byte	.LVL272
 8858 232a D32E0000 		.4byte	0x2ed3
 8859 232e 39230000 		.4byte	0x2339
 8860 2332 26       		.uleb128 0x26
 8861 2333 01       		.uleb128 0x1
 8862 2334 51       		.byte	0x51
 8863 2335 02       		.uleb128 0x2
 8864 2336 75       		.byte	0x75
 8865 2337 00       		.sleb128 0
 8866 2338 00       		.byte	0
 8867 2339 25       		.uleb128 0x25
 8868 233a 60000000 		.4byte	.LVL273
 8869 233e D32E0000 		.4byte	0x2ed3
 8870 2342 26       		.uleb128 0x26
 8871 2343 01       		.uleb128 0x1
 8872 2344 50       		.byte	0x50
 8873 2345 05       		.uleb128 0x5
 8874 2346 03       		.byte	0x3
 8875 2347 14000000 		.4byte	.LANCHOR0+20
 8876 234b 26       		.uleb128 0x26
 8877 234c 01       		.uleb128 0x1
 8878 234d 51       		.byte	0x51
 8879 234e 02       		.uleb128 0x2
 8880 234f 75       		.byte	0x75
 8881 2350 00       		.sleb128 0
 8882 2351 00       		.byte	0
 8883 2352 00       		.byte	0
 8884 2353 06       		.uleb128 0x6
 8885 2354 04       		.byte	0x4
 8886 2355 59230000 		.4byte	0x2359
 8887 2359 07       		.uleb128 0x7
 8888 235a 190E0000 		.4byte	0xe19
 8889 235e 07       		.uleb128 0x7
 8890 235f 53230000 		.4byte	0x2353
 8891 2363 2E       		.uleb128 0x2e
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 259


 8892 2364 7E2A0000 		.4byte	.LASF442
 8893 2368 01       		.byte	0x1
 8894 2369 F70B     		.2byte	0xbf7
 8895 236b 00000000 		.4byte	.LFB752
 8896 236f 84000000 		.4byte	.LFE752-.LFB752
 8897 2373 01       		.uleb128 0x1
 8898 2374 9C       		.byte	0x9c
 8899 2375 1F240000 		.4byte	0x241f
 8900 2379 1E       		.uleb128 0x1e
 8901 237a AB150000 		.4byte	.LASF443
 8902 237e 01       		.byte	0x1
 8903 237f F70B     		.2byte	0xbf7
 8904 2381 130E0000 		.4byte	0xe13
 8905 2385 440B0000 		.4byte	.LLST79
 8906 2389 1E       		.uleb128 0x1e
 8907 238a 152A0000 		.4byte	.LASF324
 8908 238e 01       		.byte	0x1
 8909 238f F70B     		.2byte	0xbf7
 8910 2391 2F140000 		.4byte	0x142f
 8911 2395 650B0000 		.4byte	.LLST80
 8912 2399 1F       		.uleb128 0x1f
 8913 239a 79180000 		.4byte	.LASF441
 8914 239e 01       		.byte	0x1
 8915 239f F90B     		.2byte	0xbf9
 8916 23a1 90100000 		.4byte	0x1090
 8917 23a5 860B0000 		.4byte	.LLST81
 8918 23a9 2F       		.uleb128 0x2f
 8919 23aa 920F0000 		.4byte	0xf92
 8920 23ae 08000000 		.4byte	.LBB158
 8921 23b2 12000000 		.4byte	.LBE158-.LBB158
 8922 23b6 01       		.byte	0x1
 8923 23b7 FD0B     		.2byte	0xbfd
 8924 23b9 CD230000 		.4byte	0x23cd
 8925 23bd 21       		.uleb128 0x21
 8926 23be 08000000 		.4byte	.LBB159
 8927 23c2 12000000 		.4byte	.LBE159-.LBB159
 8928 23c6 22       		.uleb128 0x22
 8929 23c7 9E0F0000 		.4byte	0xf9e
 8930 23cb 00       		.byte	0
 8931 23cc 00       		.byte	0
 8932 23cd 2F       		.uleb128 0x2f
 8933 23ce 920F0000 		.4byte	0xf92
 8934 23d2 26000000 		.4byte	.LBB160
 8935 23d6 12000000 		.4byte	.LBE160-.LBB160
 8936 23da 01       		.byte	0x1
 8937 23db 050C     		.2byte	0xc05
 8938 23dd F1230000 		.4byte	0x23f1
 8939 23e1 21       		.uleb128 0x21
 8940 23e2 26000000 		.4byte	.LBB161
 8941 23e6 12000000 		.4byte	.LBE161-.LBB161
 8942 23ea 22       		.uleb128 0x22
 8943 23eb 9E0F0000 		.4byte	0xf9e
 8944 23ef 00       		.byte	0
 8945 23f0 00       		.byte	0
 8946 23f1 24       		.uleb128 0x24
 8947 23f2 3C000000 		.4byte	.LVL282
 8948 23f6 EA2E0000 		.4byte	0x2eea
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 260


 8949 23fa 2A       		.uleb128 0x2a
 8950 23fb 44000000 		.4byte	.LVL283
 8951 23ff EA2E0000 		.4byte	0x2eea
 8952 2403 0E240000 		.4byte	0x240e
 8953 2407 26       		.uleb128 0x26
 8954 2408 01       		.uleb128 0x1
 8955 2409 50       		.byte	0x50
 8956 240a 02       		.uleb128 0x2
 8957 240b 76       		.byte	0x76
 8958 240c 00       		.sleb128 0
 8959 240d 00       		.byte	0
 8960 240e 25       		.uleb128 0x25
 8961 240f 6A000000 		.4byte	.LVL284
 8962 2413 D32E0000 		.4byte	0x2ed3
 8963 2417 26       		.uleb128 0x26
 8964 2418 01       		.uleb128 0x1
 8965 2419 51       		.byte	0x51
 8966 241a 02       		.uleb128 0x2
 8967 241b 76       		.byte	0x76
 8968 241c 00       		.sleb128 0
 8969 241d 00       		.byte	0
 8970 241e 00       		.byte	0
 8971 241f 2E       		.uleb128 0x2e
 8972 2420 88110000 		.4byte	.LASF444
 8973 2424 01       		.byte	0x1
 8974 2425 190C     		.2byte	0xc19
 8975 2427 00000000 		.4byte	.LFB753
 8976 242b 34000000 		.4byte	.LFE753-.LFB753
 8977 242f 01       		.uleb128 0x1
 8978 2430 9C       		.byte	0x9c
 8979 2431 7C240000 		.4byte	0x247c
 8980 2435 1E       		.uleb128 0x1e
 8981 2436 D5100000 		.4byte	.LASF445
 8982 243a 01       		.byte	0x1
 8983 243b 190C     		.2byte	0xc19
 8984 243d 82240000 		.4byte	0x2482
 8985 2441 990B0000 		.4byte	.LLST82
 8986 2445 2F       		.uleb128 0x2f
 8987 2446 920F0000 		.4byte	0xf92
 8988 244a 02000000 		.4byte	.LBB162
 8989 244e 12000000 		.4byte	.LBE162-.LBB162
 8990 2452 01       		.byte	0x1
 8991 2453 1B0C     		.2byte	0xc1b
 8992 2455 69240000 		.4byte	0x2469
 8993 2459 21       		.uleb128 0x21
 8994 245a 02000000 		.4byte	.LBB163
 8995 245e 12000000 		.4byte	.LBE163-.LBB163
 8996 2462 22       		.uleb128 0x22
 8997 2463 9E0F0000 		.4byte	0xf9e
 8998 2467 00       		.byte	0
 8999 2468 00       		.byte	0
 9000 2469 24       		.uleb128 0x24
 9001 246a 1C000000 		.4byte	.LVL288
 9002 246e C82E0000 		.4byte	0x2ec8
 9003 2472 24       		.uleb128 0x24
 9004 2473 2E000000 		.4byte	.LVL289
 9005 2477 DF2E0000 		.4byte	0x2edf
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 261


 9006 247b 00       		.byte	0
 9007 247c 06       		.uleb128 0x6
 9008 247d 04       		.byte	0x4
 9009 247e 8A0E0000 		.4byte	0xe8a
 9010 2482 07       		.uleb128 0x7
 9011 2483 7C240000 		.4byte	0x247c
 9012 2487 2E       		.uleb128 0x2e
 9013 2488 DC000000 		.4byte	.LASF446
 9014 248c 01       		.byte	0x1
 9015 248d 250C     		.2byte	0xc25
 9016 248f 00000000 		.4byte	.LFB754
 9017 2493 14000000 		.4byte	.LFE754-.LFB754
 9018 2497 01       		.uleb128 0x1
 9019 2498 9C       		.byte	0x9c
 9020 2499 AC240000 		.4byte	0x24ac
 9021 249d 27       		.uleb128 0x27
 9022 249e D5100000 		.4byte	.LASF445
 9023 24a2 01       		.byte	0x1
 9024 24a3 250C     		.2byte	0xc25
 9025 24a5 82240000 		.4byte	0x2482
 9026 24a9 01       		.uleb128 0x1
 9027 24aa 50       		.byte	0x50
 9028 24ab 00       		.byte	0
 9029 24ac 2C       		.uleb128 0x2c
 9030 24ad BC120000 		.4byte	.LASF447
 9031 24b1 01       		.byte	0x1
 9032 24b2 2D0C     		.2byte	0xc2d
 9033 24b4 160D0000 		.4byte	0xd16
 9034 24b8 00000000 		.4byte	.LFB755
 9035 24bc 80000000 		.4byte	.LFE755-.LFB755
 9036 24c0 01       		.uleb128 0x1
 9037 24c1 9C       		.byte	0x9c
 9038 24c2 8F250000 		.4byte	0x258f
 9039 24c6 1E       		.uleb128 0x1e
 9040 24c7 D5100000 		.4byte	.LASF445
 9041 24cb 01       		.byte	0x1
 9042 24cc 2D0C     		.2byte	0xc2d
 9043 24ce 82240000 		.4byte	0x2482
 9044 24d2 C50B0000 		.4byte	.LLST83
 9045 24d6 1E       		.uleb128 0x1e
 9046 24d7 DB070000 		.4byte	.LASF448
 9047 24db 01       		.byte	0x1
 9048 24dc 2D0C     		.2byte	0xc2d
 9049 24de B31E0000 		.4byte	0x1eb3
 9050 24e2 F10B0000 		.4byte	.LLST84
 9051 24e6 1F       		.uleb128 0x1f
 9052 24e7 CA090000 		.4byte	.LASF369
 9053 24eb 01       		.byte	0x1
 9054 24ec 2F0C     		.2byte	0xc2f
 9055 24ee 160D0000 		.4byte	0xd16
 9056 24f2 680C0000 		.4byte	.LLST85
 9057 24f6 2F       		.uleb128 0x2f
 9058 24f7 920F0000 		.4byte	0xf92
 9059 24fb 04000000 		.4byte	.LBB164
 9060 24ff 14000000 		.4byte	.LBE164-.LBB164
 9061 2503 01       		.byte	0x1
 9062 2504 310C     		.2byte	0xc31
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 262


 9063 2506 1A250000 		.4byte	0x251a
 9064 250a 21       		.uleb128 0x21
 9065 250b 04000000 		.4byte	.LBB165
 9066 250f 14000000 		.4byte	.LBE165-.LBB165
 9067 2513 22       		.uleb128 0x22
 9068 2514 9E0F0000 		.4byte	0xf9e
 9069 2518 00       		.byte	0
 9070 2519 00       		.byte	0
 9071 251a 2F       		.uleb128 0x2f
 9072 251b 920F0000 		.4byte	0xf92
 9073 251f 1A000000 		.4byte	.LBB166
 9074 2523 14000000 		.4byte	.LBE166-.LBB166
 9075 2527 01       		.byte	0x1
 9076 2528 320C     		.2byte	0xc32
 9077 252a 3E250000 		.4byte	0x253e
 9078 252e 21       		.uleb128 0x21
 9079 252f 1A000000 		.4byte	.LBB167
 9080 2533 14000000 		.4byte	.LBE167-.LBB167
 9081 2537 22       		.uleb128 0x22
 9082 2538 9E0F0000 		.4byte	0xf9e
 9083 253c 00       		.byte	0
 9084 253d 00       		.byte	0
 9085 253e 2D       		.uleb128 0x2d
 9086 253f 32000000 		.4byte	.LBB168
 9087 2543 42000000 		.4byte	.LBE168-.LBB168
 9088 2547 7C250000 		.4byte	0x257c
 9089 254b 1F       		.uleb128 0x1f
 9090 254c 611A0000 		.4byte	.LASF391
 9091 2550 01       		.byte	0x1
 9092 2551 370C     		.2byte	0xc37
 9093 2553 2F140000 		.4byte	0x142f
 9094 2557 9E0C0000 		.4byte	.LLST86
 9095 255b 1F       		.uleb128 0x1f
 9096 255c 0F240000 		.4byte	.LASF449
 9097 2560 01       		.byte	0x1
 9098 2561 380C     		.2byte	0xc38
 9099 2563 2F140000 		.4byte	0x142f
 9100 2567 BC0C0000 		.4byte	.LLST87
 9101 256b 25       		.uleb128 0x25
 9102 256c 62000000 		.4byte	.LVL299
 9103 2570 87240000 		.4byte	0x2487
 9104 2574 26       		.uleb128 0x26
 9105 2575 01       		.uleb128 0x1
 9106 2576 50       		.byte	0x50
 9107 2577 02       		.uleb128 0x2
 9108 2578 75       		.byte	0x75
 9109 2579 00       		.sleb128 0
 9110 257a 00       		.byte	0
 9111 257b 00       		.byte	0
 9112 257c 24       		.uleb128 0x24
 9113 257d 32000000 		.4byte	.LVL295
 9114 2581 C82E0000 		.4byte	0x2ec8
 9115 2585 24       		.uleb128 0x24
 9116 2586 78000000 		.4byte	.LVL308
 9117 258a DF2E0000 		.4byte	0x2edf
 9118 258e 00       		.byte	0
 9119 258f 32       		.uleb128 0x32
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 263


 9120 2590 33110000 		.4byte	.LASF451
 9121 2594 01       		.byte	0x1
 9122 2595 6C0C     		.2byte	0xc6c
 9123 2597 00000000 		.4byte	.LFB756
 9124 259b 10000000 		.4byte	.LFE756-.LFB756
 9125 259f 01       		.uleb128 0x1
 9126 25a0 9C       		.byte	0x9c
 9127 25a1 2E       		.uleb128 0x2e
 9128 25a2 181E0000 		.4byte	.LASF452
 9129 25a6 01       		.byte	0x1
 9130 25a7 420D     		.2byte	0xd42
 9131 25a9 00000000 		.4byte	.LFB758
 9132 25ad 1C000000 		.4byte	.LFE758-.LFB758
 9133 25b1 01       		.uleb128 0x1
 9134 25b2 9C       		.byte	0x9c
 9135 25b3 F6250000 		.4byte	0x25f6
 9136 25b7 1E       		.uleb128 0x1e
 9137 25b8 68290000 		.4byte	.LASF453
 9138 25bc 01       		.byte	0x1
 9139 25bd 420D     		.2byte	0xd42
 9140 25bf 240E0000 		.4byte	0xe24
 9141 25c3 DA0C0000 		.4byte	.LLST88
 9142 25c7 1E       		.uleb128 0x1e
 9143 25c8 B21A0000 		.4byte	.LASF454
 9144 25cc 01       		.byte	0x1
 9145 25cd 420D     		.2byte	0xd42
 9146 25cf 160D0000 		.4byte	0xd16
 9147 25d3 ED0C0000 		.4byte	.LLST89
 9148 25d7 27       		.uleb128 0x27
 9149 25d8 931E0000 		.4byte	.LASF455
 9150 25dc 01       		.byte	0x1
 9151 25dd 420D     		.2byte	0xd42
 9152 25df BB000000 		.4byte	0xbb
 9153 25e3 01       		.uleb128 0x1
 9154 25e4 52       		.byte	0x52
 9155 25e5 1F       		.uleb128 0x1f
 9156 25e6 2B2A0000 		.4byte	.LASF370
 9157 25ea 01       		.byte	0x1
 9158 25eb 440D     		.2byte	0xd44
 9159 25ed 90100000 		.4byte	0x1090
 9160 25f1 1B0D0000 		.4byte	.LLST90
 9161 25f5 00       		.byte	0
 9162 25f6 2C       		.uleb128 0x2c
 9163 25f7 17050000 		.4byte	.LASF456
 9164 25fb 01       		.byte	0x1
 9165 25fc 520D     		.2byte	0xd52
 9166 25fe BB000000 		.4byte	0xbb
 9167 2602 00000000 		.4byte	.LFB759
 9168 2606 20000000 		.4byte	.LFE759-.LFB759
 9169 260a 01       		.uleb128 0x1
 9170 260b 9C       		.byte	0x9c
 9171 260c 51260000 		.4byte	0x2651
 9172 2610 1E       		.uleb128 0x1e
 9173 2611 38240000 		.4byte	.LASF415
 9174 2615 01       		.byte	0x1
 9175 2616 520D     		.2byte	0xd52
 9176 2618 240E0000 		.4byte	0xe24
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 264


 9177 261c 2E0D0000 		.4byte	.LLST91
 9178 2620 1E       		.uleb128 0x1e
 9179 2621 B21A0000 		.4byte	.LASF454
 9180 2625 01       		.byte	0x1
 9181 2626 520D     		.2byte	0xd52
 9182 2628 160D0000 		.4byte	0xd16
 9183 262c 5A0D0000 		.4byte	.LLST92
 9184 2630 1F       		.uleb128 0x1f
 9185 2631 0D150000 		.4byte	.LASF457
 9186 2635 01       		.byte	0x1
 9187 2636 540D     		.2byte	0xd54
 9188 2638 BB000000 		.4byte	0xbb
 9189 263c 850D0000 		.4byte	.LLST93
 9190 2640 1F       		.uleb128 0x1f
 9191 2641 2B2A0000 		.4byte	.LASF370
 9192 2645 01       		.byte	0x1
 9193 2646 550D     		.2byte	0xd55
 9194 2648 90100000 		.4byte	0x1090
 9195 264c BB0D0000 		.4byte	.LLST94
 9196 2650 00       		.byte	0
 9197 2651 2C       		.uleb128 0x2c
 9198 2652 AA220000 		.4byte	.LASF458
 9199 2656 01       		.byte	0x1
 9200 2657 B70E     		.2byte	0xeb7
 9201 2659 240E0000 		.4byte	0xe24
 9202 265d 00000000 		.4byte	.LFB764
 9203 2661 0C000000 		.4byte	.LFE764-.LFB764
 9204 2665 01       		.uleb128 0x1
 9205 2666 9C       		.byte	0x9c
 9206 2667 7A260000 		.4byte	0x267a
 9207 266b 28       		.uleb128 0x28
 9208 266c CA090000 		.4byte	.LASF369
 9209 2670 01       		.byte	0x1
 9210 2671 B90E     		.2byte	0xeb9
 9211 2673 240E0000 		.4byte	0xe24
 9212 2677 01       		.uleb128 0x1
 9213 2678 50       		.byte	0x50
 9214 2679 00       		.byte	0
 9215 267a 2C       		.uleb128 0x2c
 9216 267b CC1E0000 		.4byte	.LASF459
 9217 267f 01       		.byte	0x1
 9218 2680 C80E     		.2byte	0xec8
 9219 2682 160D0000 		.4byte	0xd16
 9220 2686 00000000 		.4byte	.LFB765
 9221 268a 20000000 		.4byte	.LFE765-.LFB765
 9222 268e 01       		.uleb128 0x1
 9223 268f 9C       		.byte	0x9c
 9224 2690 A3260000 		.4byte	0x26a3
 9225 2694 28       		.uleb128 0x28
 9226 2695 CA090000 		.4byte	.LASF369
 9227 2699 01       		.byte	0x1
 9228 269a CA0E     		.2byte	0xeca
 9229 269c 160D0000 		.4byte	0xd16
 9230 26a0 01       		.uleb128 0x1
 9231 26a1 50       		.byte	0x50
 9232 26a2 00       		.byte	0
 9233 26a3 2C       		.uleb128 0x2c
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 265


 9234 26a4 3E0D0000 		.4byte	.LASF460
 9235 26a8 01       		.byte	0x1
 9236 26a9 2911     		.2byte	0x1129
 9237 26ab 2C0D0000 		.4byte	0xd2c
 9238 26af 00000000 		.4byte	.LFB766
 9239 26b3 20000000 		.4byte	.LFE766-.LFB766
 9240 26b7 01       		.uleb128 0x1
 9241 26b8 9C       		.byte	0x9c
 9242 26b9 CC260000 		.4byte	0x26cc
 9243 26bd 28       		.uleb128 0x28
 9244 26be 82040000 		.4byte	.LASF396
 9245 26c2 01       		.byte	0x1
 9246 26c3 2B11     		.2byte	0x112b
 9247 26c5 2C0D0000 		.4byte	0xd2c
 9248 26c9 01       		.uleb128 0x1
 9249 26ca 50       		.byte	0x50
 9250 26cb 00       		.byte	0
 9251 26cc 2C       		.uleb128 0x2c
 9252 26cd 2E290000 		.4byte	.LASF461
 9253 26d1 01       		.byte	0x1
 9254 26d2 4A11     		.2byte	0x114a
 9255 26d4 01010000 		.4byte	0x101
 9256 26d8 00000000 		.4byte	.LFB767
 9257 26dc 80000000 		.4byte	.LFE767-.LFB767
 9258 26e0 01       		.uleb128 0x1
 9259 26e1 9C       		.byte	0x9c
 9260 26e2 54270000 		.4byte	0x2754
 9261 26e6 1E       		.uleb128 0x1e
 9262 26e7 91080000 		.4byte	.LASF462
 9263 26eb 01       		.byte	0x1
 9264 26ec 4A11     		.2byte	0x114a
 9265 26ee 160D0000 		.4byte	0xd16
 9266 26f2 CE0D0000 		.4byte	.LLST95
 9267 26f6 1E       		.uleb128 0x1e
 9268 26f7 35190000 		.4byte	.LASF388
 9269 26fb 01       		.byte	0x1
 9270 26fc 4A11     		.2byte	0x114a
 9271 26fe 2C0D0000 		.4byte	0xd2c
 9272 2702 FA0D0000 		.4byte	.LLST96
 9273 2706 1F       		.uleb128 0x1f
 9274 2707 50250000 		.4byte	.LASF463
 9275 270b 01       		.byte	0x1
 9276 270c 4C11     		.2byte	0x114c
 9277 270e 01010000 		.4byte	0x101
 9278 2712 260E0000 		.4byte	.LLST97
 9279 2716 24       		.uleb128 0x24
 9280 2717 0A000000 		.4byte	.LVL326
 9281 271b C82E0000 		.4byte	0x2ec8
 9282 271f 2A       		.uleb128 0x2a
 9283 2720 2A000000 		.4byte	.LVL327
 9284 2724 A1130000 		.4byte	0x13a1
 9285 2728 38270000 		.4byte	0x2738
 9286 272c 26       		.uleb128 0x26
 9287 272d 01       		.uleb128 0x1
 9288 272e 50       		.byte	0x50
 9289 272f 02       		.uleb128 0x2
 9290 2730 74       		.byte	0x74
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 266


 9291 2731 00       		.sleb128 0
 9292 2732 26       		.uleb128 0x26
 9293 2733 01       		.uleb128 0x1
 9294 2734 51       		.byte	0x51
 9295 2735 01       		.uleb128 0x1
 9296 2736 31       		.byte	0x31
 9297 2737 00       		.byte	0
 9298 2738 24       		.uleb128 0x24
 9299 2739 3E000000 		.4byte	.LVL328
 9300 273d DF2E0000 		.4byte	0x2edf
 9301 2741 24       		.uleb128 0x24
 9302 2742 42000000 		.4byte	.LVL329
 9303 2746 C82E0000 		.4byte	0x2ec8
 9304 274a 24       		.uleb128 0x24
 9305 274b 74000000 		.4byte	.LVL331
 9306 274f DF2E0000 		.4byte	0x2edf
 9307 2753 00       		.byte	0
 9308 2754 2C       		.uleb128 0x2c
 9309 2755 A30A0000 		.4byte	.LASF464
 9310 2759 01       		.byte	0x1
 9311 275a 8E11     		.2byte	0x118e
 9312 275c 160D0000 		.4byte	0xd16
 9313 2760 00000000 		.4byte	.LFB768
 9314 2764 A4000000 		.4byte	.LFE768-.LFB768
 9315 2768 01       		.uleb128 0x1
 9316 2769 9C       		.byte	0x9c
 9317 276a FC270000 		.4byte	0x27fc
 9318 276e 1E       		.uleb128 0x1e
 9319 276f B4260000 		.4byte	.LASF465
 9320 2773 01       		.byte	0x1
 9321 2774 8E11     		.2byte	0x118e
 9322 2776 01010000 		.4byte	0x101
 9323 277a 440E0000 		.4byte	.LLST98
 9324 277e 1E       		.uleb128 0x1e
 9325 277f 071A0000 		.4byte	.LASF466
 9326 2783 01       		.byte	0x1
 9327 2784 8E11     		.2byte	0x118e
 9328 2786 01010000 		.4byte	0x101
 9329 278a 700E0000 		.4byte	.LLST99
 9330 278e 1E       		.uleb128 0x1e
 9331 278f 7E090000 		.4byte	.LASF467
 9332 2793 01       		.byte	0x1
 9333 2794 8E11     		.2byte	0x118e
 9334 2796 40050000 		.4byte	0x540
 9335 279a B50E0000 		.4byte	.LLST100
 9336 279e 1E       		.uleb128 0x1e
 9337 279f 35190000 		.4byte	.LASF388
 9338 27a3 01       		.byte	0x1
 9339 27a4 8E11     		.2byte	0x118e
 9340 27a6 2C0D0000 		.4byte	0xd2c
 9341 27aa FA0E0000 		.4byte	.LLST101
 9342 27ae 1F       		.uleb128 0x1f
 9343 27af CA090000 		.4byte	.LASF369
 9344 27b3 01       		.byte	0x1
 9345 27b4 9011     		.2byte	0x1190
 9346 27b6 160D0000 		.4byte	0xd16
 9347 27ba 260F0000 		.4byte	.LLST102
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 267


 9348 27be 24       		.uleb128 0x24
 9349 27bf 0E000000 		.4byte	.LVL334
 9350 27c3 C82E0000 		.4byte	0x2ec8
 9351 27c7 2A       		.uleb128 0x2a
 9352 27c8 40000000 		.4byte	.LVL335
 9353 27cc A1130000 		.4byte	0x13a1
 9354 27d0 E0270000 		.4byte	0x27e0
 9355 27d4 26       		.uleb128 0x26
 9356 27d5 01       		.uleb128 0x1
 9357 27d6 50       		.byte	0x50
 9358 27d7 02       		.uleb128 0x2
 9359 27d8 76       		.byte	0x76
 9360 27d9 00       		.sleb128 0
 9361 27da 26       		.uleb128 0x26
 9362 27db 01       		.uleb128 0x1
 9363 27dc 51       		.byte	0x51
 9364 27dd 01       		.uleb128 0x1
 9365 27de 31       		.byte	0x31
 9366 27df 00       		.byte	0
 9367 27e0 24       		.uleb128 0x24
 9368 27e1 54000000 		.4byte	.LVL336
 9369 27e5 DF2E0000 		.4byte	0x2edf
 9370 27e9 24       		.uleb128 0x24
 9371 27ea 58000000 		.4byte	.LVL337
 9372 27ee C82E0000 		.4byte	0x2ec8
 9373 27f2 24       		.uleb128 0x24
 9374 27f3 98000000 		.4byte	.LVL343
 9375 27f7 DF2E0000 		.4byte	0x2edf
 9376 27fb 00       		.byte	0
 9377 27fc 2C       		.uleb128 0x2c
 9378 27fd E3020000 		.4byte	.LASF468
 9379 2801 01       		.byte	0x1
 9380 2802 DE11     		.2byte	0x11de
 9381 2804 160D0000 		.4byte	0xd16
 9382 2808 00000000 		.4byte	.LFB769
 9383 280c E4000000 		.4byte	.LFE769-.LFB769
 9384 2810 01       		.uleb128 0x1
 9385 2811 9C       		.byte	0x9c
 9386 2812 09290000 		.4byte	0x2909
 9387 2816 1E       		.uleb128 0x1e
 9388 2817 76260000 		.4byte	.LASF469
 9389 281b 01       		.byte	0x1
 9390 281c DE11     		.2byte	0x11de
 9391 281e 240E0000 		.4byte	0xe24
 9392 2822 500F0000 		.4byte	.LLST103
 9393 2826 1E       		.uleb128 0x1e
 9394 2827 C31D0000 		.4byte	.LASF470
 9395 282b 01       		.byte	0x1
 9396 282c DE11     		.2byte	0x11de
 9397 282e 01010000 		.4byte	0x101
 9398 2832 7C0F0000 		.4byte	.LLST104
 9399 2836 1E       		.uleb128 0x1e
 9400 2837 9D1C0000 		.4byte	.LASF471
 9401 283b 01       		.byte	0x1
 9402 283c DE11     		.2byte	0x11de
 9403 283e 5A0E0000 		.4byte	0xe5a
 9404 2842 C10F0000 		.4byte	.LLST105
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 268


 9405 2846 1E       		.uleb128 0x1e
 9406 2847 1D0B0000 		.4byte	.LASF472
 9407 284b 01       		.byte	0x1
 9408 284c DE11     		.2byte	0x11de
 9409 284e 40050000 		.4byte	0x540
 9410 2852 E20F0000 		.4byte	.LLST106
 9411 2856 1F       		.uleb128 0x1f
 9412 2857 2B2A0000 		.4byte	.LASF370
 9413 285b 01       		.byte	0x1
 9414 285c E011     		.2byte	0x11e0
 9415 285e 90100000 		.4byte	0x1090
 9416 2862 27100000 		.4byte	.LLST107
 9417 2866 1F       		.uleb128 0x1f
 9418 2867 CA090000 		.4byte	.LASF369
 9419 286b 01       		.byte	0x1
 9420 286c E111     		.2byte	0x11e1
 9421 286e 160D0000 		.4byte	0xd16
 9422 2872 48100000 		.4byte	.LLST108
 9423 2876 1F       		.uleb128 0x1f
 9424 2877 E9080000 		.4byte	.LASF473
 9425 287b 01       		.byte	0x1
 9426 287c E211     		.2byte	0x11e2
 9427 287e D5000000 		.4byte	0xd5
 9428 2882 72100000 		.4byte	.LLST109
 9429 2886 2F       		.uleb128 0x2f
 9430 2887 920F0000 		.4byte	0xf92
 9431 288b 04000000 		.4byte	.LBB169
 9432 288f 1A000000 		.4byte	.LBE169-.LBB169
 9433 2893 01       		.byte	0x1
 9434 2894 E411     		.2byte	0x11e4
 9435 2896 AA280000 		.4byte	0x28aa
 9436 289a 21       		.uleb128 0x21
 9437 289b 04000000 		.4byte	.LBB170
 9438 289f 1A000000 		.4byte	.LBE170-.LBB170
 9439 28a3 22       		.uleb128 0x22
 9440 28a4 9E0F0000 		.4byte	0xf9e
 9441 28a8 00       		.byte	0
 9442 28a9 00       		.byte	0
 9443 28aa 2F       		.uleb128 0x2f
 9444 28ab 920F0000 		.4byte	0xf92
 9445 28af 9E000000 		.4byte	.LBB171
 9446 28b3 12000000 		.4byte	.LBE171-.LBB171
 9447 28b7 01       		.byte	0x1
 9448 28b8 1C12     		.2byte	0x121c
 9449 28ba CE280000 		.4byte	0x28ce
 9450 28be 21       		.uleb128 0x21
 9451 28bf 9E000000 		.4byte	.LBB172
 9452 28c3 12000000 		.4byte	.LBE172-.LBB172
 9453 28c7 22       		.uleb128 0x22
 9454 28c8 9E0F0000 		.4byte	0xf9e
 9455 28cc 00       		.byte	0
 9456 28cd 00       		.byte	0
 9457 28ce 24       		.uleb128 0x24
 9458 28cf 22000000 		.4byte	.LVL350
 9459 28d3 C82E0000 		.4byte	0x2ec8
 9460 28d7 2A       		.uleb128 0x2a
 9461 28d8 78000000 		.4byte	.LVL355
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 269


 9462 28dc EA2E0000 		.4byte	0x2eea
 9463 28e0 EB280000 		.4byte	0x28eb
 9464 28e4 26       		.uleb128 0x26
 9465 28e5 01       		.uleb128 0x1
 9466 28e6 50       		.byte	0x50
 9467 28e7 02       		.uleb128 0x2
 9468 28e8 76       		.byte	0x76
 9469 28e9 00       		.sleb128 0
 9470 28ea 00       		.byte	0
 9471 28eb 2A       		.uleb128 0x2a
 9472 28ec 9A000000 		.4byte	.LVL356
 9473 28f0 D32E0000 		.4byte	0x2ed3
 9474 28f4 FF280000 		.4byte	0x28ff
 9475 28f8 26       		.uleb128 0x26
 9476 28f9 01       		.uleb128 0x1
 9477 28fa 51       		.byte	0x51
 9478 28fb 02       		.uleb128 0x2
 9479 28fc 76       		.byte	0x76
 9480 28fd 00       		.sleb128 0
 9481 28fe 00       		.byte	0
 9482 28ff 24       		.uleb128 0x24
 9483 2900 D2000000 		.4byte	.LVL358
 9484 2904 DF2E0000 		.4byte	0x2edf
 9485 2908 00       		.byte	0
 9486 2909 2C       		.uleb128 0x2c
 9487 290a 16220000 		.4byte	.LASF474
 9488 290e 01       		.byte	0x1
 9489 290f 4812     		.2byte	0x1248
 9490 2911 160D0000 		.4byte	0xd16
 9491 2915 00000000 		.4byte	.LFB770
 9492 2919 20010000 		.4byte	.LFE770-.LFB770
 9493 291d 01       		.uleb128 0x1
 9494 291e 9C       		.byte	0x9c
 9495 291f 892A0000 		.4byte	0x2a89
 9496 2923 1E       		.uleb128 0x1e
 9497 2924 76260000 		.4byte	.LASF469
 9498 2928 01       		.byte	0x1
 9499 2929 4812     		.2byte	0x1248
 9500 292b 240E0000 		.4byte	0xe24
 9501 292f 85100000 		.4byte	.LLST110
 9502 2933 1E       		.uleb128 0x1e
 9503 2934 C31D0000 		.4byte	.LASF470
 9504 2938 01       		.byte	0x1
 9505 2939 4812     		.2byte	0x1248
 9506 293b 01010000 		.4byte	0x101
 9507 293f B1100000 		.4byte	.LLST111
 9508 2943 1E       		.uleb128 0x1e
 9509 2944 9D1C0000 		.4byte	.LASF471
 9510 2948 01       		.byte	0x1
 9511 2949 4812     		.2byte	0x1248
 9512 294b 5A0E0000 		.4byte	0xe5a
 9513 294f F6100000 		.4byte	.LLST112
 9514 2953 1E       		.uleb128 0x1e
 9515 2954 1D0B0000 		.4byte	.LASF472
 9516 2958 01       		.byte	0x1
 9517 2959 4812     		.2byte	0x1248
 9518 295b 40050000 		.4byte	0x540
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 270


 9519 295f 17110000 		.4byte	.LLST113
 9520 2963 1E       		.uleb128 0x1e
 9521 2964 E3220000 		.4byte	.LASF475
 9522 2968 01       		.byte	0x1
 9523 2969 4812     		.2byte	0x1248
 9524 296b 892A0000 		.4byte	0x2a89
 9525 296f 5C110000 		.4byte	.LLST114
 9526 2973 1F       		.uleb128 0x1f
 9527 2974 2B2A0000 		.4byte	.LASF370
 9528 2978 01       		.byte	0x1
 9529 2979 4A12     		.2byte	0x124a
 9530 297b 90100000 		.4byte	0x1090
 9531 297f 7C110000 		.4byte	.LLST115
 9532 2983 1F       		.uleb128 0x1f
 9533 2984 E9080000 		.4byte	.LASF473
 9534 2988 01       		.byte	0x1
 9535 2989 4B12     		.2byte	0x124b
 9536 298b D5000000 		.4byte	0xd5
 9537 298f 9D110000 		.4byte	.LLST116
 9538 2993 1F       		.uleb128 0x1f
 9539 2994 CA090000 		.4byte	.LASF369
 9540 2998 01       		.byte	0x1
 9541 2999 4C12     		.2byte	0x124c
 9542 299b 160D0000 		.4byte	0xd16
 9543 299f B0110000 		.4byte	.LLST117
 9544 29a3 30       		.uleb128 0x30
 9545 29a4 7F140000 		.4byte	.LASF408
 9546 29a8 01       		.byte	0x1
 9547 29a9 4D12     		.2byte	0x124d
 9548 29ab 210D0000 		.4byte	0xd21
 9549 29af 2F       		.uleb128 0x2f
 9550 29b0 920F0000 		.4byte	0xf92
 9551 29b4 08000000 		.4byte	.LBB173
 9552 29b8 1A000000 		.4byte	.LBE173-.LBB173
 9553 29bc 01       		.byte	0x1
 9554 29bd 4F12     		.2byte	0x124f
 9555 29bf D3290000 		.4byte	0x29d3
 9556 29c3 21       		.uleb128 0x21
 9557 29c4 08000000 		.4byte	.LBB174
 9558 29c8 1A000000 		.4byte	.LBE174-.LBB174
 9559 29cc 22       		.uleb128 0x22
 9560 29cd 9E0F0000 		.4byte	0xf9e
 9561 29d1 00       		.byte	0
 9562 29d2 00       		.byte	0
 9563 29d3 2F       		.uleb128 0x2f
 9564 29d4 AA0F0000 		.4byte	0xfaa
 9565 29d8 26000000 		.4byte	.LBB175
 9566 29dc 14000000 		.4byte	.LBE175-.LBB175
 9567 29e0 01       		.byte	0x1
 9568 29e1 6512     		.2byte	0x1265
 9569 29e3 FC290000 		.4byte	0x29fc
 9570 29e7 21       		.uleb128 0x21
 9571 29e8 26000000 		.4byte	.LBB176
 9572 29ec 14000000 		.4byte	.LBE176-.LBB176
 9573 29f0 22       		.uleb128 0x22
 9574 29f1 BA0F0000 		.4byte	0xfba
 9575 29f5 22       		.uleb128 0x22
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 271


 9576 29f6 C50F0000 		.4byte	0xfc5
 9577 29fa 00       		.byte	0
 9578 29fb 00       		.byte	0
 9579 29fc 2F       		.uleb128 0x2f
 9580 29fd 920F0000 		.4byte	0xf92
 9581 2a01 98000000 		.4byte	.LBB177
 9582 2a05 12000000 		.4byte	.LBE177-.LBB177
 9583 2a09 01       		.byte	0x1
 9584 2a0a 9612     		.2byte	0x1296
 9585 2a0c 202A0000 		.4byte	0x2a20
 9586 2a10 21       		.uleb128 0x21
 9587 2a11 98000000 		.4byte	.LBB178
 9588 2a15 12000000 		.4byte	.LBE178-.LBB178
 9589 2a19 22       		.uleb128 0x22
 9590 2a1a 9E0F0000 		.4byte	0xf9e
 9591 2a1e 00       		.byte	0
 9592 2a1f 00       		.byte	0
 9593 2a20 2F       		.uleb128 0x2f
 9594 2a21 D10F0000 		.4byte	0xfd1
 9595 2a25 08010000 		.4byte	.LBB179
 9596 2a29 04000000 		.4byte	.LBE179-.LBB179
 9597 2a2d 01       		.byte	0x1
 9598 2a2e BA12     		.2byte	0x12ba
 9599 2a30 3E2A0000 		.4byte	0x2a3e
 9600 2a34 31       		.uleb128 0x31
 9601 2a35 DD0F0000 		.4byte	0xfdd
 9602 2a39 DA110000 		.4byte	.LLST118
 9603 2a3d 00       		.byte	0
 9604 2a3e 24       		.uleb128 0x24
 9605 2a3f 26000000 		.4byte	.LVL364
 9606 2a43 0D2F0000 		.4byte	0x2f0d
 9607 2a47 2A       		.uleb128 0x2a
 9608 2a48 BC000000 		.4byte	.LVL370
 9609 2a4c EA2E0000 		.4byte	0x2eea
 9610 2a50 5B2A0000 		.4byte	0x2a5b
 9611 2a54 26       		.uleb128 0x26
 9612 2a55 01       		.uleb128 0x1
 9613 2a56 50       		.byte	0x50
 9614 2a57 02       		.uleb128 0x2
 9615 2a58 78       		.byte	0x78
 9616 2a59 00       		.sleb128 0
 9617 2a5a 00       		.byte	0
 9618 2a5b 2A       		.uleb128 0x2a
 9619 2a5c DE000000 		.4byte	.LVL371
 9620 2a60 D32E0000 		.4byte	0x2ed3
 9621 2a64 6F2A0000 		.4byte	0x2a6f
 9622 2a68 26       		.uleb128 0x26
 9623 2a69 01       		.uleb128 0x1
 9624 2a6a 51       		.byte	0x51
 9625 2a6b 02       		.uleb128 0x2
 9626 2a6c 78       		.byte	0x78
 9627 2a6d 00       		.sleb128 0
 9628 2a6e 00       		.byte	0
 9629 2a6f 25       		.uleb128 0x25
 9630 2a70 EA000000 		.4byte	.LVL373
 9631 2a74 D32E0000 		.4byte	0x2ed3
 9632 2a78 26       		.uleb128 0x26
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 272


 9633 2a79 01       		.uleb128 0x1
 9634 2a7a 50       		.byte	0x50
 9635 2a7b 05       		.uleb128 0x5
 9636 2a7c 03       		.byte	0x3
 9637 2a7d 14000000 		.4byte	.LANCHOR0+20
 9638 2a81 26       		.uleb128 0x26
 9639 2a82 01       		.uleb128 0x1
 9640 2a83 51       		.byte	0x51
 9641 2a84 02       		.uleb128 0x2
 9642 2a85 74       		.byte	0x74
 9643 2a86 18       		.sleb128 24
 9644 2a87 00       		.byte	0
 9645 2a88 00       		.byte	0
 9646 2a89 06       		.uleb128 0x6
 9647 2a8a 04       		.byte	0x4
 9648 2a8b 160D0000 		.4byte	0xd16
 9649 2a8f 2E       		.uleb128 0x2e
 9650 2a90 F0280000 		.4byte	.LASF476
 9651 2a94 01       		.byte	0x1
 9652 2a95 C412     		.2byte	0x12c4
 9653 2a97 00000000 		.4byte	.LFB771
 9654 2a9b CC000000 		.4byte	.LFE771-.LFB771
 9655 2a9f 01       		.uleb128 0x1
 9656 2aa0 9C       		.byte	0x9c
 9657 2aa1 CB2B0000 		.4byte	0x2bcb
 9658 2aa5 1E       		.uleb128 0x1e
 9659 2aa6 76260000 		.4byte	.LASF469
 9660 2aaa 01       		.byte	0x1
 9661 2aab C412     		.2byte	0x12c4
 9662 2aad 240E0000 		.4byte	0xe24
 9663 2ab1 ED110000 		.4byte	.LLST119
 9664 2ab5 1E       		.uleb128 0x1e
 9665 2ab6 E3220000 		.4byte	.LASF475
 9666 2aba 01       		.byte	0x1
 9667 2abb C412     		.2byte	0x12c4
 9668 2abd 892A0000 		.4byte	0x2a89
 9669 2ac1 19120000 		.4byte	.LLST120
 9670 2ac5 1F       		.uleb128 0x1f
 9671 2ac6 2B2A0000 		.4byte	.LASF370
 9672 2aca 01       		.byte	0x1
 9673 2acb C612     		.2byte	0x12c6
 9674 2acd 90100000 		.4byte	0x1090
 9675 2ad1 45120000 		.4byte	.LLST121
 9676 2ad5 1F       		.uleb128 0x1f
 9677 2ad6 E9080000 		.4byte	.LASF473
 9678 2ada 01       		.byte	0x1
 9679 2adb C712     		.2byte	0x12c7
 9680 2add D5000000 		.4byte	0xd5
 9681 2ae1 66120000 		.4byte	.LLST122
 9682 2ae5 30       		.uleb128 0x30
 9683 2ae6 7F140000 		.4byte	.LASF408
 9684 2aea 01       		.byte	0x1
 9685 2aeb C812     		.2byte	0x12c8
 9686 2aed 210D0000 		.4byte	0xd21
 9687 2af1 2F       		.uleb128 0x2f
 9688 2af2 920F0000 		.4byte	0xf92
 9689 2af6 04000000 		.4byte	.LBB181
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 273


 9690 2afa 16000000 		.4byte	.LBE181-.LBB181
 9691 2afe 01       		.byte	0x1
 9692 2aff CA12     		.2byte	0x12ca
 9693 2b01 152B0000 		.4byte	0x2b15
 9694 2b05 21       		.uleb128 0x21
 9695 2b06 04000000 		.4byte	.LBB182
 9696 2b0a 16000000 		.4byte	.LBE182-.LBB182
 9697 2b0e 22       		.uleb128 0x22
 9698 2b0f 9E0F0000 		.4byte	0xf9e
 9699 2b13 00       		.byte	0
 9700 2b14 00       		.byte	0
 9701 2b15 2F       		.uleb128 0x2f
 9702 2b16 AA0F0000 		.4byte	0xfaa
 9703 2b1a 1E000000 		.4byte	.LBB183
 9704 2b1e 14000000 		.4byte	.LBE183-.LBB183
 9705 2b22 01       		.byte	0x1
 9706 2b23 E012     		.2byte	0x12e0
 9707 2b25 3E2B0000 		.4byte	0x2b3e
 9708 2b29 21       		.uleb128 0x21
 9709 2b2a 1E000000 		.4byte	.LBB184
 9710 2b2e 14000000 		.4byte	.LBE184-.LBB184
 9711 2b32 22       		.uleb128 0x22
 9712 2b33 BA0F0000 		.4byte	0xfba
 9713 2b37 22       		.uleb128 0x22
 9714 2b38 C50F0000 		.4byte	0xfc5
 9715 2b3c 00       		.byte	0
 9716 2b3d 00       		.byte	0
 9717 2b3e 2F       		.uleb128 0x2f
 9718 2b3f 920F0000 		.4byte	0xf92
 9719 2b43 4C000000 		.4byte	.LBB185
 9720 2b47 12000000 		.4byte	.LBE185-.LBB185
 9721 2b4b 01       		.byte	0x1
 9722 2b4c F012     		.2byte	0x12f0
 9723 2b4e 622B0000 		.4byte	0x2b62
 9724 2b52 21       		.uleb128 0x21
 9725 2b53 4C000000 		.4byte	.LBB186
 9726 2b57 12000000 		.4byte	.LBE186-.LBB186
 9727 2b5b 22       		.uleb128 0x22
 9728 2b5c 9E0F0000 		.4byte	0xf9e
 9729 2b60 00       		.byte	0
 9730 2b61 00       		.byte	0
 9731 2b62 2F       		.uleb128 0x2f
 9732 2b63 D10F0000 		.4byte	0xfd1
 9733 2b67 BA000000 		.4byte	.LBB187
 9734 2b6b 12000000 		.4byte	.LBE187-.LBB187
 9735 2b6f 01       		.byte	0x1
 9736 2b70 1413     		.2byte	0x1314
 9737 2b72 802B0000 		.4byte	0x2b80
 9738 2b76 31       		.uleb128 0x31
 9739 2b77 DD0F0000 		.4byte	0xfdd
 9740 2b7b 79120000 		.4byte	.LLST123
 9741 2b7f 00       		.byte	0
 9742 2b80 24       		.uleb128 0x24
 9743 2b81 1E000000 		.4byte	.LVL379
 9744 2b85 0D2F0000 		.4byte	0x2f0d
 9745 2b89 2A       		.uleb128 0x2a
 9746 2b8a 6E000000 		.4byte	.LVL383
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 274


 9747 2b8e EA2E0000 		.4byte	0x2eea
 9748 2b92 9D2B0000 		.4byte	0x2b9d
 9749 2b96 26       		.uleb128 0x26
 9750 2b97 01       		.uleb128 0x1
 9751 2b98 50       		.byte	0x50
 9752 2b99 02       		.uleb128 0x2
 9753 2b9a 77       		.byte	0x77
 9754 2b9b 00       		.sleb128 0
 9755 2b9c 00       		.byte	0
 9756 2b9d 2A       		.uleb128 0x2a
 9757 2b9e 90000000 		.4byte	.LVL384
 9758 2ba2 D32E0000 		.4byte	0x2ed3
 9759 2ba6 B12B0000 		.4byte	0x2bb1
 9760 2baa 26       		.uleb128 0x26
 9761 2bab 01       		.uleb128 0x1
 9762 2bac 51       		.byte	0x51
 9763 2bad 02       		.uleb128 0x2
 9764 2bae 77       		.byte	0x77
 9765 2baf 00       		.sleb128 0
 9766 2bb0 00       		.byte	0
 9767 2bb1 25       		.uleb128 0x25
 9768 2bb2 9C000000 		.4byte	.LVL385
 9769 2bb6 D32E0000 		.4byte	0x2ed3
 9770 2bba 26       		.uleb128 0x26
 9771 2bbb 01       		.uleb128 0x1
 9772 2bbc 50       		.byte	0x50
 9773 2bbd 05       		.uleb128 0x5
 9774 2bbe 03       		.byte	0x3
 9775 2bbf 14000000 		.4byte	.LANCHOR0+20
 9776 2bc3 26       		.uleb128 0x26
 9777 2bc4 01       		.uleb128 0x1
 9778 2bc5 51       		.byte	0x51
 9779 2bc6 02       		.uleb128 0x2
 9780 2bc7 74       		.byte	0x74
 9781 2bc8 18       		.sleb128 24
 9782 2bc9 00       		.byte	0
 9783 2bca 00       		.byte	0
 9784 2bcb 2C       		.uleb128 0x2c
 9785 2bcc 95200000 		.4byte	.LASF477
 9786 2bd0 01       		.byte	0x1
 9787 2bd1 1D13     		.2byte	0x131d
 9788 2bd3 160D0000 		.4byte	0xd16
 9789 2bd7 00000000 		.4byte	.LFB772
 9790 2bdb 34000000 		.4byte	.LFE772-.LFB772
 9791 2bdf 01       		.uleb128 0x1
 9792 2be0 9C       		.byte	0x9c
 9793 2be1 282C0000 		.4byte	0x2c28
 9794 2be5 1E       		.uleb128 0x1e
 9795 2be6 42040000 		.4byte	.LASF373
 9796 2bea 01       		.byte	0x1
 9797 2beb 1D13     		.2byte	0x131d
 9798 2bed 240E0000 		.4byte	0xe24
 9799 2bf1 8C120000 		.4byte	.LLST124
 9800 2bf5 1F       		.uleb128 0x1f
 9801 2bf6 2B2A0000 		.4byte	.LASF370
 9802 2bfa 01       		.byte	0x1
 9803 2bfb 1F13     		.2byte	0x131f
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 275


 9804 2bfd 90100000 		.4byte	0x1090
 9805 2c01 9F120000 		.4byte	.LLST125
 9806 2c05 1F       		.uleb128 0x1f
 9807 2c06 CA090000 		.4byte	.LASF369
 9808 2c0a 01       		.byte	0x1
 9809 2c0b 2013     		.2byte	0x1320
 9810 2c0d 160D0000 		.4byte	0xd16
 9811 2c11 BD120000 		.4byte	.LLST126
 9812 2c15 24       		.uleb128 0x24
 9813 2c16 10000000 		.4byte	.LVL391
 9814 2c1a C82E0000 		.4byte	0x2ec8
 9815 2c1e 24       		.uleb128 0x24
 9816 2c1f 2A000000 		.4byte	.LVL396
 9817 2c23 DF2E0000 		.4byte	0x2edf
 9818 2c27 00       		.byte	0
 9819 2c28 17       		.uleb128 0x17
 9820 2c29 190E0000 		.4byte	0xe19
 9821 2c2d 382C0000 		.4byte	0x2c38
 9822 2c31 18       		.uleb128 0x18
 9823 2c32 B4000000 		.4byte	0xb4
 9824 2c36 06       		.byte	0x6
 9825 2c37 00       		.byte	0
 9826 2c38 28       		.uleb128 0x28
 9827 2c39 5A160000 		.4byte	.LASF478
 9828 2c3d 01       		.byte	0x1
 9829 2c3e 5F01     		.2byte	0x15f
 9830 2c40 282C0000 		.4byte	0x2c28
 9831 2c44 05       		.uleb128 0x5
 9832 2c45 03       		.byte	0x3
 9833 2c46 30000000 		.4byte	pxReadyTasksLists
 9834 2c4a 28       		.uleb128 0x28
 9835 2c4b 2E120000 		.4byte	.LASF479
 9836 2c4f 01       		.byte	0x1
 9837 2c50 6001     		.2byte	0x160
 9838 2c52 190E0000 		.4byte	0xe19
 9839 2c56 05       		.uleb128 0x5
 9840 2c57 03       		.byte	0x3
 9841 2c58 BC000000 		.4byte	xDelayedTaskList1
 9842 2c5c 28       		.uleb128 0x28
 9843 2c5d 83280000 		.4byte	.LASF480
 9844 2c61 01       		.byte	0x1
 9845 2c62 6101     		.2byte	0x161
 9846 2c64 190E0000 		.4byte	0xe19
 9847 2c68 05       		.uleb128 0x5
 9848 2c69 03       		.byte	0x3
 9849 2c6a D0000000 		.4byte	xDelayedTaskList2
 9850 2c6e 28       		.uleb128 0x28
 9851 2c6f D1220000 		.4byte	.LASF481
 9852 2c73 01       		.byte	0x1
 9853 2c74 6201     		.2byte	0x162
 9854 2c76 802C0000 		.4byte	0x2c80
 9855 2c7a 05       		.uleb128 0x5
 9856 2c7b 03       		.byte	0x3
 9857 2c7c 28000000 		.4byte	pxDelayedTaskList
 9858 2c80 08       		.uleb128 0x8
 9859 2c81 BE1C0000 		.4byte	0x1cbe
 9860 2c85 28       		.uleb128 0x28
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 276


 9861 2c86 6C230000 		.4byte	.LASF482
 9862 2c8a 01       		.byte	0x1
 9863 2c8b 6301     		.2byte	0x163
 9864 2c8d 802C0000 		.4byte	0x2c80
 9865 2c91 05       		.uleb128 0x5
 9866 2c92 03       		.byte	0x3
 9867 2c93 F8000000 		.4byte	pxOverflowDelayedTaskList
 9868 2c97 28       		.uleb128 0x28
 9869 2c98 C30D0000 		.4byte	.LASF483
 9870 2c9c 01       		.byte	0x1
 9871 2c9d 6401     		.2byte	0x164
 9872 2c9f 190E0000 		.4byte	0xe19
 9873 2ca3 05       		.uleb128 0x5
 9874 2ca4 03       		.byte	0x3
 9875 2ca5 14000000 		.4byte	xPendingReadyList
 9876 2ca9 28       		.uleb128 0x28
 9877 2caa CB240000 		.4byte	.LASF484
 9878 2cae 01       		.byte	0x1
 9879 2caf 6801     		.2byte	0x168
 9880 2cb1 190E0000 		.4byte	0xe19
 9881 2cb5 05       		.uleb128 0x5
 9882 2cb6 03       		.byte	0x3
 9883 2cb7 E4000000 		.4byte	xTasksWaitingTermination
 9884 2cbb 28       		.uleb128 0x28
 9885 2cbc E3060000 		.4byte	.LASF485
 9886 2cc0 01       		.byte	0x1
 9887 2cc1 6901     		.2byte	0x169
 9888 2cc3 0E0E0000 		.4byte	0xe0e
 9889 2cc7 05       		.uleb128 0x5
 9890 2cc8 03       		.byte	0x3
 9891 2cc9 10010000 		.4byte	uxDeletedTasksWaitingCleanUp
 9892 2ccd 28       		.uleb128 0x28
 9893 2cce 7E080000 		.4byte	.LASF486
 9894 2cd2 01       		.byte	0x1
 9895 2cd3 6F01     		.2byte	0x16f
 9896 2cd5 190E0000 		.4byte	0xe19
 9897 2cd9 05       		.uleb128 0x5
 9898 2cda 03       		.byte	0x3
 9899 2cdb 00000000 		.4byte	xSuspendedTaskList
 9900 2cdf 28       		.uleb128 0x28
 9901 2ce0 5F100000 		.4byte	.LASF487
 9902 2ce4 01       		.byte	0x1
 9903 2ce5 7401     		.2byte	0x174
 9904 2ce7 0E0E0000 		.4byte	0xe0e
 9905 2ceb 05       		.uleb128 0x5
 9906 2cec 03       		.byte	0x3
 9907 2ced FC000000 		.4byte	uxCurrentNumberOfTasks
 9908 2cf1 28       		.uleb128 0x28
 9909 2cf2 9B020000 		.4byte	.LASF488
 9910 2cf6 01       		.byte	0x1
 9911 2cf7 7501     		.2byte	0x175
 9912 2cf9 032D0000 		.4byte	0x2d03
 9913 2cfd 05       		.uleb128 0x5
 9914 2cfe 03       		.byte	0x3
 9915 2cff 14010000 		.4byte	xTickCount
 9916 2d03 08       		.uleb128 0x8
 9917 2d04 2C0D0000 		.4byte	0xd2c
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 277


 9918 2d08 28       		.uleb128 0x28
 9919 2d09 D3200000 		.4byte	.LASF489
 9920 2d0d 01       		.byte	0x1
 9921 2d0e 7601     		.2byte	0x176
 9922 2d10 0E0E0000 		.4byte	0xe0e
 9923 2d14 05       		.uleb128 0x5
 9924 2d15 03       		.byte	0x3
 9925 2d16 0C010000 		.4byte	uxTopReadyPriority
 9926 2d1a 28       		.uleb128 0x28
 9927 2d1b 5D0B0000 		.4byte	.LASF490
 9928 2d1f 01       		.byte	0x1
 9929 2d20 7701     		.2byte	0x177
 9930 2d22 2C2D0000 		.4byte	0x2d2c
 9931 2d26 05       		.uleb128 0x5
 9932 2d27 03       		.byte	0x3
 9933 2d28 04010000 		.4byte	xSchedulerRunning
 9934 2d2c 08       		.uleb128 0x8
 9935 2d2d 160D0000 		.4byte	0xd16
 9936 2d31 28       		.uleb128 0x28
 9937 2d32 000B0000 		.4byte	.LASF491
 9938 2d36 01       		.byte	0x1
 9939 2d37 7801     		.2byte	0x178
 9940 2d39 0E0E0000 		.4byte	0xe0e
 9941 2d3d 05       		.uleb128 0x5
 9942 2d3e 03       		.byte	0x3
 9943 2d3f 24010000 		.4byte	uxPendedTicks
 9944 2d43 28       		.uleb128 0x28
 9945 2d44 8F000000 		.4byte	.LASF492
 9946 2d48 01       		.byte	0x1
 9947 2d49 7901     		.2byte	0x179
 9948 2d4b 2C2D0000 		.4byte	0x2d2c
 9949 2d4f 05       		.uleb128 0x5
 9950 2d50 03       		.byte	0x3
 9951 2d51 28010000 		.4byte	xYieldPending
 9952 2d55 28       		.uleb128 0x28
 9953 2d56 A1090000 		.4byte	.LASF493
 9954 2d5a 01       		.byte	0x1
 9955 2d5b 7A01     		.2byte	0x17a
 9956 2d5d 2C2D0000 		.4byte	0x2d2c
 9957 2d61 05       		.uleb128 0x5
 9958 2d62 03       		.byte	0x3
 9959 2d63 20010000 		.4byte	xNumOfOverflows
 9960 2d67 28       		.uleb128 0x28
 9961 2d68 A6020000 		.4byte	.LASF494
 9962 2d6c 01       		.byte	0x1
 9963 2d6d 7B01     		.2byte	0x17b
 9964 2d6f 210D0000 		.4byte	0xd21
 9965 2d73 05       		.uleb128 0x5
 9966 2d74 03       		.byte	0x3
 9967 2d75 08010000 		.4byte	uxTaskNumber
 9968 2d79 28       		.uleb128 0x28
 9969 2d7a 090D0000 		.4byte	.LASF495
 9970 2d7e 01       		.byte	0x1
 9971 2d7f 7C01     		.2byte	0x17c
 9972 2d81 032D0000 		.4byte	0x2d03
 9973 2d85 05       		.uleb128 0x5
 9974 2d86 03       		.byte	0x3
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 278


 9975 2d87 2C000000 		.4byte	xNextTaskUnblockTime
 9976 2d8b 28       		.uleb128 0x28
 9977 2d8c 78110000 		.4byte	.LASF496
 9978 2d90 01       		.byte	0x1
 9979 2d91 7D01     		.2byte	0x17d
 9980 2d93 240E0000 		.4byte	0xe24
 9981 2d97 05       		.uleb128 0x5
 9982 2d98 03       		.byte	0x3
 9983 2d99 1C010000 		.4byte	xIdleTaskHandle
 9984 2d9d 28       		.uleb128 0x28
 9985 2d9e 6B0D0000 		.4byte	.LASF497
 9986 2da2 01       		.byte	0x1
 9987 2da3 8701     		.2byte	0x187
 9988 2da5 0E0E0000 		.4byte	0xe0e
 9989 2da9 05       		.uleb128 0x5
 9990 2daa 03       		.byte	0x3
 9991 2dab 18010000 		.4byte	uxSchedulerSuspended
 9992 2daf 38       		.uleb128 0x38
 9993 2db0 E9210000 		.4byte	.LASF498
 9994 2db4 06       		.byte	0x6
 9995 2db5 A7       		.byte	0xa7
 9996 2db6 BA2D0000 		.4byte	0x2dba
 9997 2dba 06       		.uleb128 0x6
 9998 2dbb 04       		.byte	0x4
 9999 2dbc C02D0000 		.4byte	0x2dc0
 10000 2dc0 07       		.uleb128 0x7
 10001 2dc1 27050000 		.4byte	0x527
 10002 2dc5 39       		.uleb128 0x39
 10003 2dc6 19160000 		.4byte	.LASF499
 10004 2dca 10       		.byte	0x10
 10005 2dcb F907     		.2byte	0x7f9
 10006 2dcd D12D0000 		.4byte	0x2dd1
 10007 2dd1 08       		.uleb128 0x8
 10008 2dd2 F6000000 		.4byte	0xf6
 10009 2dd6 39       		.uleb128 0x39
 10010 2dd7 8E250000 		.4byte	.LASF500
 10011 2ddb 0C       		.byte	0xc
 10012 2ddc 2202     		.2byte	0x222
 10013 2dde 9C0C0000 		.4byte	0xc9c
 10014 2de2 17       		.uleb128 0x17
 10015 2de3 6B0C0000 		.4byte	0xc6b
 10016 2de7 F22D0000 		.4byte	0x2df2
 10017 2deb 18       		.uleb128 0x18
 10018 2dec B4000000 		.4byte	0xb4
 10019 2df0 00       		.byte	0
 10020 2df1 00       		.byte	0
 10021 2df2 39       		.uleb128 0x39
 10022 2df3 DE0A0000 		.4byte	.LASF501
 10023 2df7 0C       		.byte	0xc
 10024 2df8 2C02     		.2byte	0x22c
 10025 2dfa E22D0000 		.4byte	0x2de2
 10026 2dfe 17       		.uleb128 0x17
 10027 2dff E40C0000 		.4byte	0xce4
 10028 2e03 0E2E0000 		.4byte	0x2e0e
 10029 2e07 18       		.uleb128 0x18
 10030 2e08 B4000000 		.4byte	0xb4
 10031 2e0c 00       		.byte	0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 279


 10032 2e0d 00       		.byte	0
 10033 2e0e 39       		.uleb128 0x39
 10034 2e0f E4240000 		.4byte	.LASF502
 10035 2e13 0C       		.byte	0xc
 10036 2e14 2D02     		.2byte	0x22d
 10037 2e16 FE2D0000 		.4byte	0x2dfe
 10038 2e1a 39       		.uleb128 0x39
 10039 2e1b C2070000 		.4byte	.LASF503
 10040 2e1f 0C       		.byte	0xc
 10041 2e20 5202     		.2byte	0x252
 10042 2e22 D5000000 		.4byte	0xd5
 10043 2e26 38       		.uleb128 0x38
 10044 2e27 84260000 		.4byte	.LASF504
 10045 2e2b 11       		.byte	0x11
 10046 2e2c 87       		.byte	0x87
 10047 2e2d B7070000 		.4byte	0x7b7
 10048 2e31 38       		.uleb128 0x38
 10049 2e32 6C1C0000 		.4byte	.LASF505
 10050 2e36 12       		.byte	0x12
 10051 2e37 7F       		.byte	0x7f
 10052 2e38 DB060000 		.4byte	0x6db
 10053 2e3c 38       		.uleb128 0x38
 10054 2e3d 13260000 		.4byte	.LASF506
 10055 2e41 13       		.byte	0x13
 10056 2e42 7F       		.byte	0x7f
 10057 2e43 DB060000 		.4byte	0x6db
 10058 2e47 38       		.uleb128 0x38
 10059 2e48 D2230000 		.4byte	.LASF507
 10060 2e4c 14       		.byte	0x14
 10061 2e4d 1F       		.byte	0x1f
 10062 2e4e 522E0000 		.4byte	0x2e52
 10063 2e52 07       		.uleb128 0x7
 10064 2e53 FC080000 		.4byte	0x8fc
 10065 2e57 38       		.uleb128 0x38
 10066 2e58 A4230000 		.4byte	.LASF508
 10067 2e5c 15       		.byte	0x15
 10068 2e5d 1F       		.byte	0x1f
 10069 2e5e 522E0000 		.4byte	0x2e52
 10070 2e62 38       		.uleb128 0x38
 10071 2e63 F70F0000 		.4byte	.LASF509
 10072 2e67 16       		.byte	0x16
 10073 2e68 1F       		.byte	0x1f
 10074 2e69 522E0000 		.4byte	0x2e52
 10075 2e6d 38       		.uleb128 0x38
 10076 2e6e 00240000 		.4byte	.LASF510
 10077 2e72 17       		.byte	0x17
 10078 2e73 1F       		.byte	0x1f
 10079 2e74 522E0000 		.4byte	0x2e52
 10080 2e78 3A       		.uleb128 0x3a
 10081 2e79 4E060000 		.4byte	.LASF511
 10082 2e7d 01       		.byte	0x1
 10083 2e7e 5C01     		.2byte	0x15c
 10084 2e80 8A2E0000 		.4byte	0x2e8a
 10085 2e84 05       		.uleb128 0x5
 10086 2e85 03       		.byte	0x3
 10087 2e86 00000000 		.4byte	pxCurrentTCB
 10088 2e8a 08       		.uleb128 0x8
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 280


 10089 2e8b 90100000 		.4byte	0x1090
 10090 2e8f 3B       		.uleb128 0x3b
 10091 2e90 95280000 		.4byte	.LASF512
 10092 2e94 95280000 		.4byte	.LASF512
 10093 2e98 18       		.byte	0x18
 10094 2e99 82       		.byte	0x82
 10095 2e9a 3B       		.uleb128 0x3b
 10096 2e9b 61200000 		.4byte	.LASF513
 10097 2e9f 61200000 		.4byte	.LASF513
 10098 2ea3 19       		.byte	0x19
 10099 2ea4 19       		.byte	0x19
 10100 2ea5 3C       		.uleb128 0x3c
 10101 2ea6 C91A0000 		.4byte	.LASF514
 10102 2eaa C91A0000 		.4byte	.LASF514
 10103 2eae 0E       		.byte	0xe
 10104 2eaf 6301     		.2byte	0x163
 10105 2eb1 3B       		.uleb128 0x3b
 10106 2eb2 9B0C0000 		.4byte	.LASF515
 10107 2eb6 9B0C0000 		.4byte	.LASF515
 10108 2eba 18       		.byte	0x18
 10109 2ebb 66       		.byte	0x66
 10110 2ebc 3C       		.uleb128 0x3c
 10111 2ebd 22080000 		.4byte	.LASF516
 10112 2ec1 22080000 		.4byte	.LASF516
 10113 2ec5 0E       		.byte	0xe
 10114 2ec6 5801     		.2byte	0x158
 10115 2ec8 3B       		.uleb128 0x3b
 10116 2ec9 B01D0000 		.4byte	.LASF517
 10117 2ecd B01D0000 		.4byte	.LASF517
 10118 2ed1 02       		.byte	0x2
 10119 2ed2 61       		.byte	0x61
 10120 2ed3 3C       		.uleb128 0x3c
 10121 2ed4 67260000 		.4byte	.LASF518
 10122 2ed8 67260000 		.4byte	.LASF518
 10123 2edc 0E       		.byte	0xe
 10124 2edd 8501     		.2byte	0x185
 10125 2edf 3B       		.uleb128 0x3b
 10126 2ee0 06180000 		.4byte	.LASF519
 10127 2ee4 06180000 		.4byte	.LASF519
 10128 2ee8 02       		.byte	0x2
 10129 2ee9 62       		.byte	0x62
 10130 2eea 3C       		.uleb128 0x3c
 10131 2eeb C4220000 		.4byte	.LASF520
 10132 2eef C4220000 		.4byte	.LASF520
 10133 2ef3 0E       		.byte	0xe
 10134 2ef4 9401     		.2byte	0x194
 10135 2ef6 3C       		.uleb128 0x3c
 10136 2ef7 DD030000 		.4byte	.LASF521
 10137 2efb DD030000 		.4byte	.LASF521
 10138 2eff 0E       		.byte	0xe
 10139 2f00 7001     		.2byte	0x170
 10140 2f02 3B       		.uleb128 0x3b
 10141 2f03 71080000 		.4byte	.LASF522
 10142 2f07 71080000 		.4byte	.LASF522
 10143 2f0b 18       		.byte	0x18
 10144 2f0c 81       		.byte	0x81
 10145 2f0d 3B       		.uleb128 0x3b
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 281


 10146 2f0e E1260000 		.4byte	.LASF523
 10147 2f12 E1260000 		.4byte	.LASF523
 10148 2f16 02       		.byte	0x2
 10149 2f17 75       		.byte	0x75
 10150 2f18 3C       		.uleb128 0x3c
 10151 2f19 26230000 		.4byte	.LASF524
 10152 2f1d 26230000 		.4byte	.LASF524
 10153 2f21 1A       		.byte	0x1a
 10154 2f22 EF04     		.2byte	0x4ef
 10155 2f24 3B       		.uleb128 0x3b
 10156 2f25 44110000 		.4byte	.LASF525
 10157 2f29 44110000 		.4byte	.LASF525
 10158 2f2d 18       		.byte	0x18
 10159 2f2e 8B       		.byte	0x8b
 10160 2f2f 3B       		.uleb128 0x3b
 10161 2f30 EA270000 		.4byte	.LASF526
 10162 2f34 EA270000 		.4byte	.LASF526
 10163 2f38 18       		.byte	0x18
 10164 2f39 92       		.byte	0x92
 10165 2f3a 3C       		.uleb128 0x3c
 10166 2f3b C00B0000 		.4byte	.LASF527
 10167 2f3f C00B0000 		.4byte	.LASF527
 10168 2f43 01       		.byte	0x1
 10169 2f44 9701     		.2byte	0x197
 10170 2f46 00       		.byte	0
 10171              		.section	.debug_abbrev,"",%progbits
 10172              	.Ldebug_abbrev0:
 10173 0000 01       		.uleb128 0x1
 10174 0001 11       		.uleb128 0x11
 10175 0002 01       		.byte	0x1
 10176 0003 25       		.uleb128 0x25
 10177 0004 0E       		.uleb128 0xe
 10178 0005 13       		.uleb128 0x13
 10179 0006 0B       		.uleb128 0xb
 10180 0007 03       		.uleb128 0x3
 10181 0008 0E       		.uleb128 0xe
 10182 0009 1B       		.uleb128 0x1b
 10183 000a 0E       		.uleb128 0xe
 10184 000b 55       		.uleb128 0x55
 10185 000c 17       		.uleb128 0x17
 10186 000d 11       		.uleb128 0x11
 10187 000e 01       		.uleb128 0x1
 10188 000f 10       		.uleb128 0x10
 10189 0010 17       		.uleb128 0x17
 10190 0011 00       		.byte	0
 10191 0012 00       		.byte	0
 10192 0013 02       		.uleb128 0x2
 10193 0014 16       		.uleb128 0x16
 10194 0015 00       		.byte	0
 10195 0016 03       		.uleb128 0x3
 10196 0017 0E       		.uleb128 0xe
 10197 0018 3A       		.uleb128 0x3a
 10198 0019 0B       		.uleb128 0xb
 10199 001a 3B       		.uleb128 0x3b
 10200 001b 0B       		.uleb128 0xb
 10201 001c 49       		.uleb128 0x49
 10202 001d 13       		.uleb128 0x13
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 282


 10203 001e 00       		.byte	0
 10204 001f 00       		.byte	0
 10205 0020 03       		.uleb128 0x3
 10206 0021 24       		.uleb128 0x24
 10207 0022 00       		.byte	0
 10208 0023 0B       		.uleb128 0xb
 10209 0024 0B       		.uleb128 0xb
 10210 0025 3E       		.uleb128 0x3e
 10211 0026 0B       		.uleb128 0xb
 10212 0027 03       		.uleb128 0x3
 10213 0028 0E       		.uleb128 0xe
 10214 0029 00       		.byte	0
 10215 002a 00       		.byte	0
 10216 002b 04       		.uleb128 0x4
 10217 002c 24       		.uleb128 0x24
 10218 002d 00       		.byte	0
 10219 002e 0B       		.uleb128 0xb
 10220 002f 0B       		.uleb128 0xb
 10221 0030 3E       		.uleb128 0x3e
 10222 0031 0B       		.uleb128 0xb
 10223 0032 03       		.uleb128 0x3
 10224 0033 08       		.uleb128 0x8
 10225 0034 00       		.byte	0
 10226 0035 00       		.byte	0
 10227 0036 05       		.uleb128 0x5
 10228 0037 0F       		.uleb128 0xf
 10229 0038 00       		.byte	0
 10230 0039 0B       		.uleb128 0xb
 10231 003a 0B       		.uleb128 0xb
 10232 003b 00       		.byte	0
 10233 003c 00       		.byte	0
 10234 003d 06       		.uleb128 0x6
 10235 003e 0F       		.uleb128 0xf
 10236 003f 00       		.byte	0
 10237 0040 0B       		.uleb128 0xb
 10238 0041 0B       		.uleb128 0xb
 10239 0042 49       		.uleb128 0x49
 10240 0043 13       		.uleb128 0x13
 10241 0044 00       		.byte	0
 10242 0045 00       		.byte	0
 10243 0046 07       		.uleb128 0x7
 10244 0047 26       		.uleb128 0x26
 10245 0048 00       		.byte	0
 10246 0049 49       		.uleb128 0x49
 10247 004a 13       		.uleb128 0x13
 10248 004b 00       		.byte	0
 10249 004c 00       		.byte	0
 10250 004d 08       		.uleb128 0x8
 10251 004e 35       		.uleb128 0x35
 10252 004f 00       		.byte	0
 10253 0050 49       		.uleb128 0x49
 10254 0051 13       		.uleb128 0x13
 10255 0052 00       		.byte	0
 10256 0053 00       		.byte	0
 10257 0054 09       		.uleb128 0x9
 10258 0055 13       		.uleb128 0x13
 10259 0056 01       		.byte	0x1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 283


 10260 0057 0B       		.uleb128 0xb
 10261 0058 0B       		.uleb128 0xb
 10262 0059 3A       		.uleb128 0x3a
 10263 005a 0B       		.uleb128 0xb
 10264 005b 3B       		.uleb128 0x3b
 10265 005c 0B       		.uleb128 0xb
 10266 005d 01       		.uleb128 0x1
 10267 005e 13       		.uleb128 0x13
 10268 005f 00       		.byte	0
 10269 0060 00       		.byte	0
 10270 0061 0A       		.uleb128 0xa
 10271 0062 0D       		.uleb128 0xd
 10272 0063 00       		.byte	0
 10273 0064 03       		.uleb128 0x3
 10274 0065 0E       		.uleb128 0xe
 10275 0066 3A       		.uleb128 0x3a
 10276 0067 0B       		.uleb128 0xb
 10277 0068 3B       		.uleb128 0x3b
 10278 0069 0B       		.uleb128 0xb
 10279 006a 49       		.uleb128 0x49
 10280 006b 13       		.uleb128 0x13
 10281 006c 38       		.uleb128 0x38
 10282 006d 0B       		.uleb128 0xb
 10283 006e 00       		.byte	0
 10284 006f 00       		.byte	0
 10285 0070 0B       		.uleb128 0xb
 10286 0071 04       		.uleb128 0x4
 10287 0072 01       		.byte	0x1
 10288 0073 0B       		.uleb128 0xb
 10289 0074 0B       		.uleb128 0xb
 10290 0075 49       		.uleb128 0x49
 10291 0076 13       		.uleb128 0x13
 10292 0077 3A       		.uleb128 0x3a
 10293 0078 0B       		.uleb128 0xb
 10294 0079 3B       		.uleb128 0x3b
 10295 007a 05       		.uleb128 0x5
 10296 007b 01       		.uleb128 0x1
 10297 007c 13       		.uleb128 0x13
 10298 007d 00       		.byte	0
 10299 007e 00       		.byte	0
 10300 007f 0C       		.uleb128 0xc
 10301 0080 28       		.uleb128 0x28
 10302 0081 00       		.byte	0
 10303 0082 03       		.uleb128 0x3
 10304 0083 0E       		.uleb128 0xe
 10305 0084 1C       		.uleb128 0x1c
 10306 0085 0B       		.uleb128 0xb
 10307 0086 00       		.byte	0
 10308 0087 00       		.byte	0
 10309 0088 0D       		.uleb128 0xd
 10310 0089 16       		.uleb128 0x16
 10311 008a 00       		.byte	0
 10312 008b 03       		.uleb128 0x3
 10313 008c 0E       		.uleb128 0xe
 10314 008d 3A       		.uleb128 0x3a
 10315 008e 0B       		.uleb128 0xb
 10316 008f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 284


 10317 0090 05       		.uleb128 0x5
 10318 0091 49       		.uleb128 0x49
 10319 0092 13       		.uleb128 0x13
 10320 0093 00       		.byte	0
 10321 0094 00       		.byte	0
 10322 0095 0E       		.uleb128 0xe
 10323 0096 15       		.uleb128 0x15
 10324 0097 01       		.byte	0x1
 10325 0098 27       		.uleb128 0x27
 10326 0099 19       		.uleb128 0x19
 10327 009a 01       		.uleb128 0x1
 10328 009b 13       		.uleb128 0x13
 10329 009c 00       		.byte	0
 10330 009d 00       		.byte	0
 10331 009e 0F       		.uleb128 0xf
 10332 009f 05       		.uleb128 0x5
 10333 00a0 00       		.byte	0
 10334 00a1 49       		.uleb128 0x49
 10335 00a2 13       		.uleb128 0x13
 10336 00a3 00       		.byte	0
 10337 00a4 00       		.byte	0
 10338 00a5 10       		.uleb128 0x10
 10339 00a6 15       		.uleb128 0x15
 10340 00a7 01       		.byte	0x1
 10341 00a8 27       		.uleb128 0x27
 10342 00a9 19       		.uleb128 0x19
 10343 00aa 49       		.uleb128 0x49
 10344 00ab 13       		.uleb128 0x13
 10345 00ac 01       		.uleb128 0x1
 10346 00ad 13       		.uleb128 0x13
 10347 00ae 00       		.byte	0
 10348 00af 00       		.byte	0
 10349 00b0 11       		.uleb128 0x11
 10350 00b1 13       		.uleb128 0x13
 10351 00b2 01       		.byte	0x1
 10352 00b3 03       		.uleb128 0x3
 10353 00b4 0E       		.uleb128 0xe
 10354 00b5 0B       		.uleb128 0xb
 10355 00b6 0B       		.uleb128 0xb
 10356 00b7 3A       		.uleb128 0x3a
 10357 00b8 0B       		.uleb128 0xb
 10358 00b9 3B       		.uleb128 0x3b
 10359 00ba 05       		.uleb128 0x5
 10360 00bb 01       		.uleb128 0x1
 10361 00bc 13       		.uleb128 0x13
 10362 00bd 00       		.byte	0
 10363 00be 00       		.byte	0
 10364 00bf 12       		.uleb128 0x12
 10365 00c0 0D       		.uleb128 0xd
 10366 00c1 00       		.byte	0
 10367 00c2 03       		.uleb128 0x3
 10368 00c3 0E       		.uleb128 0xe
 10369 00c4 3A       		.uleb128 0x3a
 10370 00c5 0B       		.uleb128 0xb
 10371 00c6 3B       		.uleb128 0x3b
 10372 00c7 05       		.uleb128 0x5
 10373 00c8 49       		.uleb128 0x49
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 285


 10374 00c9 13       		.uleb128 0x13
 10375 00ca 38       		.uleb128 0x38
 10376 00cb 0B       		.uleb128 0xb
 10377 00cc 00       		.byte	0
 10378 00cd 00       		.byte	0
 10379 00ce 13       		.uleb128 0x13
 10380 00cf 13       		.uleb128 0x13
 10381 00d0 01       		.byte	0x1
 10382 00d1 03       		.uleb128 0x3
 10383 00d2 0E       		.uleb128 0xe
 10384 00d3 0B       		.uleb128 0xb
 10385 00d4 0B       		.uleb128 0xb
 10386 00d5 3A       		.uleb128 0x3a
 10387 00d6 0B       		.uleb128 0xb
 10388 00d7 3B       		.uleb128 0x3b
 10389 00d8 0B       		.uleb128 0xb
 10390 00d9 01       		.uleb128 0x1
 10391 00da 13       		.uleb128 0x13
 10392 00db 00       		.byte	0
 10393 00dc 00       		.byte	0
 10394 00dd 14       		.uleb128 0x14
 10395 00de 28       		.uleb128 0x28
 10396 00df 00       		.byte	0
 10397 00e0 03       		.uleb128 0x3
 10398 00e1 0E       		.uleb128 0xe
 10399 00e2 1C       		.uleb128 0x1c
 10400 00e3 05       		.uleb128 0x5
 10401 00e4 00       		.byte	0
 10402 00e5 00       		.byte	0
 10403 00e6 15       		.uleb128 0x15
 10404 00e7 13       		.uleb128 0x13
 10405 00e8 01       		.byte	0x1
 10406 00e9 0B       		.uleb128 0xb
 10407 00ea 0B       		.uleb128 0xb
 10408 00eb 3A       		.uleb128 0x3a
 10409 00ec 0B       		.uleb128 0xb
 10410 00ed 3B       		.uleb128 0x3b
 10411 00ee 05       		.uleb128 0x5
 10412 00ef 01       		.uleb128 0x1
 10413 00f0 13       		.uleb128 0x13
 10414 00f1 00       		.byte	0
 10415 00f2 00       		.byte	0
 10416 00f3 16       		.uleb128 0x16
 10417 00f4 04       		.uleb128 0x4
 10418 00f5 01       		.byte	0x1
 10419 00f6 0B       		.uleb128 0xb
 10420 00f7 0B       		.uleb128 0xb
 10421 00f8 49       		.uleb128 0x49
 10422 00f9 13       		.uleb128 0x13
 10423 00fa 3A       		.uleb128 0x3a
 10424 00fb 0B       		.uleb128 0xb
 10425 00fc 3B       		.uleb128 0x3b
 10426 00fd 0B       		.uleb128 0xb
 10427 00fe 01       		.uleb128 0x1
 10428 00ff 13       		.uleb128 0x13
 10429 0100 00       		.byte	0
 10430 0101 00       		.byte	0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 286


 10431 0102 17       		.uleb128 0x17
 10432 0103 01       		.uleb128 0x1
 10433 0104 01       		.byte	0x1
 10434 0105 49       		.uleb128 0x49
 10435 0106 13       		.uleb128 0x13
 10436 0107 01       		.uleb128 0x1
 10437 0108 13       		.uleb128 0x13
 10438 0109 00       		.byte	0
 10439 010a 00       		.byte	0
 10440 010b 18       		.uleb128 0x18
 10441 010c 21       		.uleb128 0x21
 10442 010d 00       		.byte	0
 10443 010e 49       		.uleb128 0x49
 10444 010f 13       		.uleb128 0x13
 10445 0110 2F       		.uleb128 0x2f
 10446 0111 0B       		.uleb128 0xb
 10447 0112 00       		.byte	0
 10448 0113 00       		.byte	0
 10449 0114 19       		.uleb128 0x19
 10450 0115 2E       		.uleb128 0x2e
 10451 0116 01       		.byte	0x1
 10452 0117 03       		.uleb128 0x3
 10453 0118 0E       		.uleb128 0xe
 10454 0119 3A       		.uleb128 0x3a
 10455 011a 0B       		.uleb128 0xb
 10456 011b 3B       		.uleb128 0x3b
 10457 011c 0B       		.uleb128 0xb
 10458 011d 27       		.uleb128 0x27
 10459 011e 19       		.uleb128 0x19
 10460 011f 20       		.uleb128 0x20
 10461 0120 0B       		.uleb128 0xb
 10462 0121 01       		.uleb128 0x1
 10463 0122 13       		.uleb128 0x13
 10464 0123 00       		.byte	0
 10465 0124 00       		.byte	0
 10466 0125 1A       		.uleb128 0x1a
 10467 0126 34       		.uleb128 0x34
 10468 0127 00       		.byte	0
 10469 0128 03       		.uleb128 0x3
 10470 0129 0E       		.uleb128 0xe
 10471 012a 3A       		.uleb128 0x3a
 10472 012b 0B       		.uleb128 0xb
 10473 012c 3B       		.uleb128 0x3b
 10474 012d 0B       		.uleb128 0xb
 10475 012e 49       		.uleb128 0x49
 10476 012f 13       		.uleb128 0x13
 10477 0130 00       		.byte	0
 10478 0131 00       		.byte	0
 10479 0132 1B       		.uleb128 0x1b
 10480 0133 2E       		.uleb128 0x2e
 10481 0134 01       		.byte	0x1
 10482 0135 03       		.uleb128 0x3
 10483 0136 0E       		.uleb128 0xe
 10484 0137 3A       		.uleb128 0x3a
 10485 0138 0B       		.uleb128 0xb
 10486 0139 3B       		.uleb128 0x3b
 10487 013a 0B       		.uleb128 0xb
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 287


 10488 013b 27       		.uleb128 0x27
 10489 013c 19       		.uleb128 0x19
 10490 013d 49       		.uleb128 0x49
 10491 013e 13       		.uleb128 0x13
 10492 013f 20       		.uleb128 0x20
 10493 0140 0B       		.uleb128 0xb
 10494 0141 01       		.uleb128 0x1
 10495 0142 13       		.uleb128 0x13
 10496 0143 00       		.byte	0
 10497 0144 00       		.byte	0
 10498 0145 1C       		.uleb128 0x1c
 10499 0146 05       		.uleb128 0x5
 10500 0147 00       		.byte	0
 10501 0148 03       		.uleb128 0x3
 10502 0149 0E       		.uleb128 0xe
 10503 014a 3A       		.uleb128 0x3a
 10504 014b 0B       		.uleb128 0xb
 10505 014c 3B       		.uleb128 0x3b
 10506 014d 0B       		.uleb128 0xb
 10507 014e 49       		.uleb128 0x49
 10508 014f 13       		.uleb128 0x13
 10509 0150 00       		.byte	0
 10510 0151 00       		.byte	0
 10511 0152 1D       		.uleb128 0x1d
 10512 0153 2E       		.uleb128 0x2e
 10513 0154 01       		.byte	0x1
 10514 0155 03       		.uleb128 0x3
 10515 0156 0E       		.uleb128 0xe
 10516 0157 3A       		.uleb128 0x3a
 10517 0158 0B       		.uleb128 0xb
 10518 0159 3B       		.uleb128 0x3b
 10519 015a 05       		.uleb128 0x5
 10520 015b 27       		.uleb128 0x27
 10521 015c 19       		.uleb128 0x19
 10522 015d 49       		.uleb128 0x49
 10523 015e 13       		.uleb128 0x13
 10524 015f 11       		.uleb128 0x11
 10525 0160 01       		.uleb128 0x1
 10526 0161 12       		.uleb128 0x12
 10527 0162 06       		.uleb128 0x6
 10528 0163 40       		.uleb128 0x40
 10529 0164 18       		.uleb128 0x18
 10530 0165 9742     		.uleb128 0x2117
 10531 0167 19       		.uleb128 0x19
 10532 0168 01       		.uleb128 0x1
 10533 0169 13       		.uleb128 0x13
 10534 016a 00       		.byte	0
 10535 016b 00       		.byte	0
 10536 016c 1E       		.uleb128 0x1e
 10537 016d 05       		.uleb128 0x5
 10538 016e 00       		.byte	0
 10539 016f 03       		.uleb128 0x3
 10540 0170 0E       		.uleb128 0xe
 10541 0171 3A       		.uleb128 0x3a
 10542 0172 0B       		.uleb128 0xb
 10543 0173 3B       		.uleb128 0x3b
 10544 0174 05       		.uleb128 0x5
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 288


 10545 0175 49       		.uleb128 0x49
 10546 0176 13       		.uleb128 0x13
 10547 0177 02       		.uleb128 0x2
 10548 0178 17       		.uleb128 0x17
 10549 0179 00       		.byte	0
 10550 017a 00       		.byte	0
 10551 017b 1F       		.uleb128 0x1f
 10552 017c 34       		.uleb128 0x34
 10553 017d 00       		.byte	0
 10554 017e 03       		.uleb128 0x3
 10555 017f 0E       		.uleb128 0xe
 10556 0180 3A       		.uleb128 0x3a
 10557 0181 0B       		.uleb128 0xb
 10558 0182 3B       		.uleb128 0x3b
 10559 0183 05       		.uleb128 0x5
 10560 0184 49       		.uleb128 0x49
 10561 0185 13       		.uleb128 0x13
 10562 0186 02       		.uleb128 0x2
 10563 0187 17       		.uleb128 0x17
 10564 0188 00       		.byte	0
 10565 0189 00       		.byte	0
 10566 018a 20       		.uleb128 0x20
 10567 018b 1D       		.uleb128 0x1d
 10568 018c 01       		.byte	0x1
 10569 018d 31       		.uleb128 0x31
 10570 018e 13       		.uleb128 0x13
 10571 018f 11       		.uleb128 0x11
 10572 0190 01       		.uleb128 0x1
 10573 0191 12       		.uleb128 0x12
 10574 0192 06       		.uleb128 0x6
 10575 0193 58       		.uleb128 0x58
 10576 0194 0B       		.uleb128 0xb
 10577 0195 59       		.uleb128 0x59
 10578 0196 05       		.uleb128 0x5
 10579 0197 00       		.byte	0
 10580 0198 00       		.byte	0
 10581 0199 21       		.uleb128 0x21
 10582 019a 0B       		.uleb128 0xb
 10583 019b 01       		.byte	0x1
 10584 019c 11       		.uleb128 0x11
 10585 019d 01       		.uleb128 0x1
 10586 019e 12       		.uleb128 0x12
 10587 019f 06       		.uleb128 0x6
 10588 01a0 00       		.byte	0
 10589 01a1 00       		.byte	0
 10590 01a2 22       		.uleb128 0x22
 10591 01a3 34       		.uleb128 0x34
 10592 01a4 00       		.byte	0
 10593 01a5 31       		.uleb128 0x31
 10594 01a6 13       		.uleb128 0x13
 10595 01a7 00       		.byte	0
 10596 01a8 00       		.byte	0
 10597 01a9 23       		.uleb128 0x23
 10598 01aa 2E       		.uleb128 0x2e
 10599 01ab 01       		.byte	0x1
 10600 01ac 03       		.uleb128 0x3
 10601 01ad 0E       		.uleb128 0xe
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 289


 10602 01ae 3A       		.uleb128 0x3a
 10603 01af 0B       		.uleb128 0xb
 10604 01b0 3B       		.uleb128 0x3b
 10605 01b1 05       		.uleb128 0x5
 10606 01b2 27       		.uleb128 0x27
 10607 01b3 19       		.uleb128 0x19
 10608 01b4 11       		.uleb128 0x11
 10609 01b5 01       		.uleb128 0x1
 10610 01b6 12       		.uleb128 0x12
 10611 01b7 06       		.uleb128 0x6
 10612 01b8 40       		.uleb128 0x40
 10613 01b9 18       		.uleb128 0x18
 10614 01ba 9742     		.uleb128 0x2117
 10615 01bc 19       		.uleb128 0x19
 10616 01bd 01       		.uleb128 0x1
 10617 01be 13       		.uleb128 0x13
 10618 01bf 00       		.byte	0
 10619 01c0 00       		.byte	0
 10620 01c1 24       		.uleb128 0x24
 10621 01c2 898201   		.uleb128 0x4109
 10622 01c5 00       		.byte	0
 10623 01c6 11       		.uleb128 0x11
 10624 01c7 01       		.uleb128 0x1
 10625 01c8 31       		.uleb128 0x31
 10626 01c9 13       		.uleb128 0x13
 10627 01ca 00       		.byte	0
 10628 01cb 00       		.byte	0
 10629 01cc 25       		.uleb128 0x25
 10630 01cd 898201   		.uleb128 0x4109
 10631 01d0 01       		.byte	0x1
 10632 01d1 11       		.uleb128 0x11
 10633 01d2 01       		.uleb128 0x1
 10634 01d3 31       		.uleb128 0x31
 10635 01d4 13       		.uleb128 0x13
 10636 01d5 00       		.byte	0
 10637 01d6 00       		.byte	0
 10638 01d7 26       		.uleb128 0x26
 10639 01d8 8A8201   		.uleb128 0x410a
 10640 01db 00       		.byte	0
 10641 01dc 02       		.uleb128 0x2
 10642 01dd 18       		.uleb128 0x18
 10643 01de 9142     		.uleb128 0x2111
 10644 01e0 18       		.uleb128 0x18
 10645 01e1 00       		.byte	0
 10646 01e2 00       		.byte	0
 10647 01e3 27       		.uleb128 0x27
 10648 01e4 05       		.uleb128 0x5
 10649 01e5 00       		.byte	0
 10650 01e6 03       		.uleb128 0x3
 10651 01e7 0E       		.uleb128 0xe
 10652 01e8 3A       		.uleb128 0x3a
 10653 01e9 0B       		.uleb128 0xb
 10654 01ea 3B       		.uleb128 0x3b
 10655 01eb 05       		.uleb128 0x5
 10656 01ec 49       		.uleb128 0x49
 10657 01ed 13       		.uleb128 0x13
 10658 01ee 02       		.uleb128 0x2
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 290


 10659 01ef 18       		.uleb128 0x18
 10660 01f0 00       		.byte	0
 10661 01f1 00       		.byte	0
 10662 01f2 28       		.uleb128 0x28
 10663 01f3 34       		.uleb128 0x34
 10664 01f4 00       		.byte	0
 10665 01f5 03       		.uleb128 0x3
 10666 01f6 0E       		.uleb128 0xe
 10667 01f7 3A       		.uleb128 0x3a
 10668 01f8 0B       		.uleb128 0xb
 10669 01f9 3B       		.uleb128 0x3b
 10670 01fa 05       		.uleb128 0x5
 10671 01fb 49       		.uleb128 0x49
 10672 01fc 13       		.uleb128 0x13
 10673 01fd 02       		.uleb128 0x2
 10674 01fe 18       		.uleb128 0x18
 10675 01ff 00       		.byte	0
 10676 0200 00       		.byte	0
 10677 0201 29       		.uleb128 0x29
 10678 0202 34       		.uleb128 0x34
 10679 0203 00       		.byte	0
 10680 0204 03       		.uleb128 0x3
 10681 0205 08       		.uleb128 0x8
 10682 0206 3A       		.uleb128 0x3a
 10683 0207 0B       		.uleb128 0xb
 10684 0208 3B       		.uleb128 0x3b
 10685 0209 05       		.uleb128 0x5
 10686 020a 49       		.uleb128 0x49
 10687 020b 13       		.uleb128 0x13
 10688 020c 02       		.uleb128 0x2
 10689 020d 17       		.uleb128 0x17
 10690 020e 00       		.byte	0
 10691 020f 00       		.byte	0
 10692 0210 2A       		.uleb128 0x2a
 10693 0211 898201   		.uleb128 0x4109
 10694 0214 01       		.byte	0x1
 10695 0215 11       		.uleb128 0x11
 10696 0216 01       		.uleb128 0x1
 10697 0217 31       		.uleb128 0x31
 10698 0218 13       		.uleb128 0x13
 10699 0219 01       		.uleb128 0x1
 10700 021a 13       		.uleb128 0x13
 10701 021b 00       		.byte	0
 10702 021c 00       		.byte	0
 10703 021d 2B       		.uleb128 0x2b
 10704 021e 2E       		.uleb128 0x2e
 10705 021f 01       		.byte	0x1
 10706 0220 03       		.uleb128 0x3
 10707 0221 0E       		.uleb128 0xe
 10708 0222 3A       		.uleb128 0x3a
 10709 0223 0B       		.uleb128 0xb
 10710 0224 3B       		.uleb128 0x3b
 10711 0225 05       		.uleb128 0x5
 10712 0226 27       		.uleb128 0x27
 10713 0227 19       		.uleb128 0x19
 10714 0228 8701     		.uleb128 0x87
 10715 022a 19       		.uleb128 0x19
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 291


 10716 022b 11       		.uleb128 0x11
 10717 022c 01       		.uleb128 0x1
 10718 022d 12       		.uleb128 0x12
 10719 022e 06       		.uleb128 0x6
 10720 022f 40       		.uleb128 0x40
 10721 0230 18       		.uleb128 0x18
 10722 0231 9742     		.uleb128 0x2117
 10723 0233 19       		.uleb128 0x19
 10724 0234 01       		.uleb128 0x1
 10725 0235 13       		.uleb128 0x13
 10726 0236 00       		.byte	0
 10727 0237 00       		.byte	0
 10728 0238 2C       		.uleb128 0x2c
 10729 0239 2E       		.uleb128 0x2e
 10730 023a 01       		.byte	0x1
 10731 023b 3F       		.uleb128 0x3f
 10732 023c 19       		.uleb128 0x19
 10733 023d 03       		.uleb128 0x3
 10734 023e 0E       		.uleb128 0xe
 10735 023f 3A       		.uleb128 0x3a
 10736 0240 0B       		.uleb128 0xb
 10737 0241 3B       		.uleb128 0x3b
 10738 0242 05       		.uleb128 0x5
 10739 0243 27       		.uleb128 0x27
 10740 0244 19       		.uleb128 0x19
 10741 0245 49       		.uleb128 0x49
 10742 0246 13       		.uleb128 0x13
 10743 0247 11       		.uleb128 0x11
 10744 0248 01       		.uleb128 0x1
 10745 0249 12       		.uleb128 0x12
 10746 024a 06       		.uleb128 0x6
 10747 024b 40       		.uleb128 0x40
 10748 024c 18       		.uleb128 0x18
 10749 024d 9742     		.uleb128 0x2117
 10750 024f 19       		.uleb128 0x19
 10751 0250 01       		.uleb128 0x1
 10752 0251 13       		.uleb128 0x13
 10753 0252 00       		.byte	0
 10754 0253 00       		.byte	0
 10755 0254 2D       		.uleb128 0x2d
 10756 0255 0B       		.uleb128 0xb
 10757 0256 01       		.byte	0x1
 10758 0257 11       		.uleb128 0x11
 10759 0258 01       		.uleb128 0x1
 10760 0259 12       		.uleb128 0x12
 10761 025a 06       		.uleb128 0x6
 10762 025b 01       		.uleb128 0x1
 10763 025c 13       		.uleb128 0x13
 10764 025d 00       		.byte	0
 10765 025e 00       		.byte	0
 10766 025f 2E       		.uleb128 0x2e
 10767 0260 2E       		.uleb128 0x2e
 10768 0261 01       		.byte	0x1
 10769 0262 3F       		.uleb128 0x3f
 10770 0263 19       		.uleb128 0x19
 10771 0264 03       		.uleb128 0x3
 10772 0265 0E       		.uleb128 0xe
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 292


 10773 0266 3A       		.uleb128 0x3a
 10774 0267 0B       		.uleb128 0xb
 10775 0268 3B       		.uleb128 0x3b
 10776 0269 05       		.uleb128 0x5
 10777 026a 27       		.uleb128 0x27
 10778 026b 19       		.uleb128 0x19
 10779 026c 11       		.uleb128 0x11
 10780 026d 01       		.uleb128 0x1
 10781 026e 12       		.uleb128 0x12
 10782 026f 06       		.uleb128 0x6
 10783 0270 40       		.uleb128 0x40
 10784 0271 18       		.uleb128 0x18
 10785 0272 9742     		.uleb128 0x2117
 10786 0274 19       		.uleb128 0x19
 10787 0275 01       		.uleb128 0x1
 10788 0276 13       		.uleb128 0x13
 10789 0277 00       		.byte	0
 10790 0278 00       		.byte	0
 10791 0279 2F       		.uleb128 0x2f
 10792 027a 1D       		.uleb128 0x1d
 10793 027b 01       		.byte	0x1
 10794 027c 31       		.uleb128 0x31
 10795 027d 13       		.uleb128 0x13
 10796 027e 11       		.uleb128 0x11
 10797 027f 01       		.uleb128 0x1
 10798 0280 12       		.uleb128 0x12
 10799 0281 06       		.uleb128 0x6
 10800 0282 58       		.uleb128 0x58
 10801 0283 0B       		.uleb128 0xb
 10802 0284 59       		.uleb128 0x59
 10803 0285 05       		.uleb128 0x5
 10804 0286 01       		.uleb128 0x1
 10805 0287 13       		.uleb128 0x13
 10806 0288 00       		.byte	0
 10807 0289 00       		.byte	0
 10808 028a 30       		.uleb128 0x30
 10809 028b 34       		.uleb128 0x34
 10810 028c 00       		.byte	0
 10811 028d 03       		.uleb128 0x3
 10812 028e 0E       		.uleb128 0xe
 10813 028f 3A       		.uleb128 0x3a
 10814 0290 0B       		.uleb128 0xb
 10815 0291 3B       		.uleb128 0x3b
 10816 0292 05       		.uleb128 0x5
 10817 0293 49       		.uleb128 0x49
 10818 0294 13       		.uleb128 0x13
 10819 0295 00       		.byte	0
 10820 0296 00       		.byte	0
 10821 0297 31       		.uleb128 0x31
 10822 0298 05       		.uleb128 0x5
 10823 0299 00       		.byte	0
 10824 029a 31       		.uleb128 0x31
 10825 029b 13       		.uleb128 0x13
 10826 029c 02       		.uleb128 0x2
 10827 029d 17       		.uleb128 0x17
 10828 029e 00       		.byte	0
 10829 029f 00       		.byte	0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 293


 10830 02a0 32       		.uleb128 0x32
 10831 02a1 2E       		.uleb128 0x2e
 10832 02a2 00       		.byte	0
 10833 02a3 3F       		.uleb128 0x3f
 10834 02a4 19       		.uleb128 0x19
 10835 02a5 03       		.uleb128 0x3
 10836 02a6 0E       		.uleb128 0xe
 10837 02a7 3A       		.uleb128 0x3a
 10838 02a8 0B       		.uleb128 0xb
 10839 02a9 3B       		.uleb128 0x3b
 10840 02aa 05       		.uleb128 0x5
 10841 02ab 27       		.uleb128 0x27
 10842 02ac 19       		.uleb128 0x19
 10843 02ad 11       		.uleb128 0x11
 10844 02ae 01       		.uleb128 0x1
 10845 02af 12       		.uleb128 0x12
 10846 02b0 06       		.uleb128 0x6
 10847 02b1 40       		.uleb128 0x40
 10848 02b2 18       		.uleb128 0x18
 10849 02b3 9742     		.uleb128 0x2117
 10850 02b5 19       		.uleb128 0x19
 10851 02b6 00       		.byte	0
 10852 02b7 00       		.byte	0
 10853 02b8 33       		.uleb128 0x33
 10854 02b9 34       		.uleb128 0x34
 10855 02ba 00       		.byte	0
 10856 02bb 03       		.uleb128 0x3
 10857 02bc 0E       		.uleb128 0xe
 10858 02bd 3A       		.uleb128 0x3a
 10859 02be 0B       		.uleb128 0xb
 10860 02bf 3B       		.uleb128 0x3b
 10861 02c0 05       		.uleb128 0x5
 10862 02c1 49       		.uleb128 0x49
 10863 02c2 13       		.uleb128 0x13
 10864 02c3 1C       		.uleb128 0x1c
 10865 02c4 0B       		.uleb128 0xb
 10866 02c5 00       		.byte	0
 10867 02c6 00       		.byte	0
 10868 02c7 34       		.uleb128 0x34
 10869 02c8 2E       		.uleb128 0x2e
 10870 02c9 00       		.byte	0
 10871 02ca 3F       		.uleb128 0x3f
 10872 02cb 19       		.uleb128 0x19
 10873 02cc 03       		.uleb128 0x3
 10874 02cd 0E       		.uleb128 0xe
 10875 02ce 3A       		.uleb128 0x3a
 10876 02cf 0B       		.uleb128 0xb
 10877 02d0 3B       		.uleb128 0x3b
 10878 02d1 05       		.uleb128 0x5
 10879 02d2 27       		.uleb128 0x27
 10880 02d3 19       		.uleb128 0x19
 10881 02d4 49       		.uleb128 0x49
 10882 02d5 13       		.uleb128 0x13
 10883 02d6 11       		.uleb128 0x11
 10884 02d7 01       		.uleb128 0x1
 10885 02d8 12       		.uleb128 0x12
 10886 02d9 06       		.uleb128 0x6
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 294


 10887 02da 40       		.uleb128 0x40
 10888 02db 18       		.uleb128 0x18
 10889 02dc 9742     		.uleb128 0x2117
 10890 02de 19       		.uleb128 0x19
 10891 02df 00       		.byte	0
 10892 02e0 00       		.byte	0
 10893 02e1 35       		.uleb128 0x35
 10894 02e2 0B       		.uleb128 0xb
 10895 02e3 01       		.byte	0x1
 10896 02e4 55       		.uleb128 0x55
 10897 02e5 17       		.uleb128 0x17
 10898 02e6 00       		.byte	0
 10899 02e7 00       		.byte	0
 10900 02e8 36       		.uleb128 0x36
 10901 02e9 0B       		.uleb128 0xb
 10902 02ea 01       		.byte	0x1
 10903 02eb 55       		.uleb128 0x55
 10904 02ec 17       		.uleb128 0x17
 10905 02ed 01       		.uleb128 0x1
 10906 02ee 13       		.uleb128 0x13
 10907 02ef 00       		.byte	0
 10908 02f0 00       		.byte	0
 10909 02f1 37       		.uleb128 0x37
 10910 02f2 34       		.uleb128 0x34
 10911 02f3 00       		.byte	0
 10912 02f4 03       		.uleb128 0x3
 10913 02f5 0E       		.uleb128 0xe
 10914 02f6 3A       		.uleb128 0x3a
 10915 02f7 0B       		.uleb128 0xb
 10916 02f8 3B       		.uleb128 0x3b
 10917 02f9 05       		.uleb128 0x5
 10918 02fa 49       		.uleb128 0x49
 10919 02fb 13       		.uleb128 0x13
 10920 02fc 1C       		.uleb128 0x1c
 10921 02fd 0D       		.uleb128 0xd
 10922 02fe 00       		.byte	0
 10923 02ff 00       		.byte	0
 10924 0300 38       		.uleb128 0x38
 10925 0301 34       		.uleb128 0x34
 10926 0302 00       		.byte	0
 10927 0303 03       		.uleb128 0x3
 10928 0304 0E       		.uleb128 0xe
 10929 0305 3A       		.uleb128 0x3a
 10930 0306 0B       		.uleb128 0xb
 10931 0307 3B       		.uleb128 0x3b
 10932 0308 0B       		.uleb128 0xb
 10933 0309 49       		.uleb128 0x49
 10934 030a 13       		.uleb128 0x13
 10935 030b 3F       		.uleb128 0x3f
 10936 030c 19       		.uleb128 0x19
 10937 030d 3C       		.uleb128 0x3c
 10938 030e 19       		.uleb128 0x19
 10939 030f 00       		.byte	0
 10940 0310 00       		.byte	0
 10941 0311 39       		.uleb128 0x39
 10942 0312 34       		.uleb128 0x34
 10943 0313 00       		.byte	0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 295


 10944 0314 03       		.uleb128 0x3
 10945 0315 0E       		.uleb128 0xe
 10946 0316 3A       		.uleb128 0x3a
 10947 0317 0B       		.uleb128 0xb
 10948 0318 3B       		.uleb128 0x3b
 10949 0319 05       		.uleb128 0x5
 10950 031a 49       		.uleb128 0x49
 10951 031b 13       		.uleb128 0x13
 10952 031c 3F       		.uleb128 0x3f
 10953 031d 19       		.uleb128 0x19
 10954 031e 3C       		.uleb128 0x3c
 10955 031f 19       		.uleb128 0x19
 10956 0320 00       		.byte	0
 10957 0321 00       		.byte	0
 10958 0322 3A       		.uleb128 0x3a
 10959 0323 34       		.uleb128 0x34
 10960 0324 00       		.byte	0
 10961 0325 03       		.uleb128 0x3
 10962 0326 0E       		.uleb128 0xe
 10963 0327 3A       		.uleb128 0x3a
 10964 0328 0B       		.uleb128 0xb
 10965 0329 3B       		.uleb128 0x3b
 10966 032a 05       		.uleb128 0x5
 10967 032b 49       		.uleb128 0x49
 10968 032c 13       		.uleb128 0x13
 10969 032d 3F       		.uleb128 0x3f
 10970 032e 19       		.uleb128 0x19
 10971 032f 02       		.uleb128 0x2
 10972 0330 18       		.uleb128 0x18
 10973 0331 00       		.byte	0
 10974 0332 00       		.byte	0
 10975 0333 3B       		.uleb128 0x3b
 10976 0334 2E       		.uleb128 0x2e
 10977 0335 00       		.byte	0
 10978 0336 3F       		.uleb128 0x3f
 10979 0337 19       		.uleb128 0x19
 10980 0338 3C       		.uleb128 0x3c
 10981 0339 19       		.uleb128 0x19
 10982 033a 6E       		.uleb128 0x6e
 10983 033b 0E       		.uleb128 0xe
 10984 033c 03       		.uleb128 0x3
 10985 033d 0E       		.uleb128 0xe
 10986 033e 3A       		.uleb128 0x3a
 10987 033f 0B       		.uleb128 0xb
 10988 0340 3B       		.uleb128 0x3b
 10989 0341 0B       		.uleb128 0xb
 10990 0342 00       		.byte	0
 10991 0343 00       		.byte	0
 10992 0344 3C       		.uleb128 0x3c
 10993 0345 2E       		.uleb128 0x2e
 10994 0346 00       		.byte	0
 10995 0347 3F       		.uleb128 0x3f
 10996 0348 19       		.uleb128 0x19
 10997 0349 3C       		.uleb128 0x3c
 10998 034a 19       		.uleb128 0x19
 10999 034b 6E       		.uleb128 0x6e
 11000 034c 0E       		.uleb128 0xe
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 296


 11001 034d 03       		.uleb128 0x3
 11002 034e 0E       		.uleb128 0xe
 11003 034f 3A       		.uleb128 0x3a
 11004 0350 0B       		.uleb128 0xb
 11005 0351 3B       		.uleb128 0x3b
 11006 0352 05       		.uleb128 0x5
 11007 0353 00       		.byte	0
 11008 0354 00       		.byte	0
 11009 0355 00       		.byte	0
 11010              		.section	.debug_loc,"",%progbits
 11011              	.Ldebug_loc0:
 11012              	.LLST0:
 11013 0000 00000000 		.4byte	.LVL0
 11014 0004 36000000 		.4byte	.LVL2
 11015 0008 0100     		.2byte	0x1
 11016 000a 50       		.byte	0x50
 11017 000b 36000000 		.4byte	.LVL2
 11018 000f 38000000 		.4byte	.LVL3
 11019 0013 0400     		.2byte	0x4
 11020 0015 F3       		.byte	0xf3
 11021 0016 01       		.uleb128 0x1
 11022 0017 50       		.byte	0x50
 11023 0018 9F       		.byte	0x9f
 11024 0019 38000000 		.4byte	.LVL3
 11025 001d 3A000000 		.4byte	.LVL4
 11026 0021 0100     		.2byte	0x1
 11027 0023 50       		.byte	0x50
 11028 0024 3A000000 		.4byte	.LVL4
 11029 0028 3C000000 		.4byte	.LVL5
 11030 002c 0100     		.2byte	0x1
 11031 002e 52       		.byte	0x52
 11032 002f 3C000000 		.4byte	.LVL5
 11033 0033 3E000000 		.4byte	.LVL6
 11034 0037 0100     		.2byte	0x1
 11035 0039 50       		.byte	0x50
 11036 003a 3E000000 		.4byte	.LVL6
 11037 003e 40000000 		.4byte	.LVL7
 11038 0042 0400     		.2byte	0x4
 11039 0044 F3       		.byte	0xf3
 11040 0045 01       		.uleb128 0x1
 11041 0046 50       		.byte	0x50
 11042 0047 9F       		.byte	0x9f
 11043 0048 40000000 		.4byte	.LVL7
 11044 004c 42000000 		.4byte	.LVL8
 11045 0050 0100     		.2byte	0x1
 11046 0052 50       		.byte	0x50
 11047 0053 42000000 		.4byte	.LVL8
 11048 0057 4C000000 		.4byte	.LFE735
 11049 005b 0400     		.2byte	0x4
 11050 005d F3       		.byte	0xf3
 11051 005e 01       		.uleb128 0x1
 11052 005f 50       		.byte	0x50
 11053 0060 9F       		.byte	0x9f
 11054 0061 00000000 		.4byte	0
 11055 0065 00000000 		.4byte	0
 11056              	.LLST1:
 11057 0069 00000000 		.4byte	.LVL0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 297


 11058 006d 42000000 		.4byte	.LVL8
 11059 0071 0200     		.2byte	0x2
 11060 0073 30       		.byte	0x30
 11061 0074 9F       		.byte	0x9f
 11062 0075 42000000 		.4byte	.LVL8
 11063 0079 4C000000 		.4byte	.LFE735
 11064 007d 0100     		.2byte	0x1
 11065 007f 50       		.byte	0x50
 11066 0080 00000000 		.4byte	0
 11067 0084 00000000 		.4byte	0
 11068              	.LLST2:
 11069 0088 00000000 		.4byte	.LVL0
 11070 008c 36000000 		.4byte	.LVL2
 11071 0090 0100     		.2byte	0x1
 11072 0092 50       		.byte	0x50
 11073 0093 36000000 		.4byte	.LVL2
 11074 0097 38000000 		.4byte	.LVL3
 11075 009b 0400     		.2byte	0x4
 11076 009d F3       		.byte	0xf3
 11077 009e 01       		.uleb128 0x1
 11078 009f 50       		.byte	0x50
 11079 00a0 9F       		.byte	0x9f
 11080 00a1 38000000 		.4byte	.LVL3
 11081 00a5 3A000000 		.4byte	.LVL4
 11082 00a9 0100     		.2byte	0x1
 11083 00ab 50       		.byte	0x50
 11084 00ac 3A000000 		.4byte	.LVL4
 11085 00b0 3C000000 		.4byte	.LVL5
 11086 00b4 0100     		.2byte	0x1
 11087 00b6 52       		.byte	0x52
 11088 00b7 3C000000 		.4byte	.LVL5
 11089 00bb 3E000000 		.4byte	.LVL6
 11090 00bf 0100     		.2byte	0x1
 11091 00c1 50       		.byte	0x50
 11092 00c2 3E000000 		.4byte	.LVL6
 11093 00c6 40000000 		.4byte	.LVL7
 11094 00ca 0400     		.2byte	0x4
 11095 00cc F3       		.byte	0xf3
 11096 00cd 01       		.uleb128 0x1
 11097 00ce 50       		.byte	0x50
 11098 00cf 9F       		.byte	0x9f
 11099 00d0 40000000 		.4byte	.LVL7
 11100 00d4 42000000 		.4byte	.LVL8
 11101 00d8 0100     		.2byte	0x1
 11102 00da 50       		.byte	0x50
 11103 00db 42000000 		.4byte	.LVL8
 11104 00df 4C000000 		.4byte	.LFE735
 11105 00e3 0400     		.2byte	0x4
 11106 00e5 F3       		.byte	0xf3
 11107 00e6 01       		.uleb128 0x1
 11108 00e7 50       		.byte	0x50
 11109 00e8 9F       		.byte	0x9f
 11110 00e9 00000000 		.4byte	0
 11111 00ed 00000000 		.4byte	0
 11112              	.LLST3:
 11113 00f1 22000000 		.4byte	.LVL9
 11114 00f5 24000000 		.4byte	.LVL10
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 298


 11115 00f9 0100     		.2byte	0x1
 11116 00fb 52       		.byte	0x52
 11117 00fc 00000000 		.4byte	0
 11118 0100 00000000 		.4byte	0
 11119              	.LLST4:
 11120 0104 00000000 		.4byte	.LVL11
 11121 0108 06000000 		.4byte	.LVL12
 11122 010c 0100     		.2byte	0x1
 11123 010e 50       		.byte	0x50
 11124 010f 06000000 		.4byte	.LVL12
 11125 0113 12000000 		.4byte	.LFE762
 11126 0117 0100     		.2byte	0x1
 11127 0119 54       		.byte	0x54
 11128 011a 00000000 		.4byte	0
 11129 011e 00000000 		.4byte	0
 11130              	.LLST5:
 11131 0122 00000000 		.4byte	.LVL15
 11132 0126 18000000 		.4byte	.LVL18
 11133 012a 0100     		.2byte	0x1
 11134 012c 50       		.byte	0x50
 11135 012d 18000000 		.4byte	.LVL18
 11136 0131 9E000000 		.4byte	.LFE726
 11137 0135 0100     		.2byte	0x1
 11138 0137 5A       		.byte	0x5a
 11139 0138 00000000 		.4byte	0
 11140 013c 00000000 		.4byte	0
 11141              	.LLST6:
 11142 0140 00000000 		.4byte	.LVL15
 11143 0144 16000000 		.4byte	.LVL17
 11144 0148 0100     		.2byte	0x1
 11145 014a 51       		.byte	0x51
 11146 014b 16000000 		.4byte	.LVL17
 11147 014f 9E000000 		.4byte	.LFE726
 11148 0153 0100     		.2byte	0x1
 11149 0155 59       		.byte	0x59
 11150 0156 00000000 		.4byte	0
 11151 015a 00000000 		.4byte	0
 11152              	.LLST7:
 11153 015e 00000000 		.4byte	.LVL15
 11154 0162 14000000 		.4byte	.LVL16
 11155 0166 0100     		.2byte	0x1
 11156 0168 52       		.byte	0x52
 11157 0169 14000000 		.4byte	.LVL16
 11158 016d 28000000 		.4byte	.LVL20
 11159 0171 0100     		.2byte	0x1
 11160 0173 55       		.byte	0x55
 11161 0174 28000000 		.4byte	.LVL20
 11162 0178 30000000 		.4byte	.LVL22
 11163 017c 0700     		.2byte	0x7
 11164 017e 72       		.byte	0x72
 11165 017f 81808080 		.sleb128 -1073741823
 11165      7C
 11166 0184 9F       		.byte	0x9f
 11167 0185 30000000 		.4byte	.LVL22
 11168 0189 9E000000 		.4byte	.LFE726
 11169 018d 0400     		.2byte	0x4
 11170 018f F3       		.byte	0xf3
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 299


 11171 0190 01       		.uleb128 0x1
 11172 0191 52       		.byte	0x52
 11173 0192 9F       		.byte	0x9f
 11174 0193 00000000 		.4byte	0
 11175 0197 00000000 		.4byte	0
 11176              	.LLST8:
 11177 019b 00000000 		.4byte	.LVL15
 11178 019f 1B000000 		.4byte	.LVL19-1
 11179 01a3 0100     		.2byte	0x1
 11180 01a5 53       		.byte	0x53
 11181 01a6 1B000000 		.4byte	.LVL19-1
 11182 01aa 9E000000 		.4byte	.LFE726
 11183 01ae 0100     		.2byte	0x1
 11184 01b0 58       		.byte	0x58
 11185 01b1 00000000 		.4byte	0
 11186 01b5 00000000 		.4byte	0
 11187              	.LLST9:
 11188 01b9 00000000 		.4byte	.LVL15
 11189 01bd 52000000 		.4byte	.LVL25
 11190 01c1 0200     		.2byte	0x2
 11191 01c3 91       		.byte	0x91
 11192 01c4 00       		.sleb128 0
 11193 01c5 52000000 		.4byte	.LVL25
 11194 01c9 9E000000 		.4byte	.LFE726
 11195 01cd 0100     		.2byte	0x1
 11196 01cf 57       		.byte	0x57
 11197 01d0 00000000 		.4byte	0
 11198 01d4 00000000 		.4byte	0
 11199              	.LLST10:
 11200 01d8 30000000 		.4byte	.LVL22
 11201 01dc 48000000 		.4byte	.LVL24
 11202 01e0 0100     		.2byte	0x1
 11203 01e2 53       		.byte	0x53
 11204 01e3 6C000000 		.4byte	.LVL28
 11205 01e7 70000000 		.4byte	.LVL29
 11206 01eb 0200     		.2byte	0x2
 11207 01ed 30       		.byte	0x30
 11208 01ee 9F       		.byte	0x9f
 11209 01ef 70000000 		.4byte	.LVL29
 11210 01f3 84000000 		.4byte	.LVL31
 11211 01f7 0100     		.2byte	0x1
 11212 01f9 53       		.byte	0x53
 11213 01fa 00000000 		.4byte	0
 11214 01fe 00000000 		.4byte	0
 11215              	.LLST11:
 11216 0202 02000000 		.4byte	.LVL33
 11217 0206 06000000 		.4byte	.LVL34
 11218 020a 0200     		.2byte	0x2
 11219 020c 30       		.byte	0x30
 11220 020d 9F       		.byte	0x9f
 11221 020e 06000000 		.4byte	.LVL34
 11222 0212 1C000000 		.4byte	.LVL37
 11223 0216 0100     		.2byte	0x1
 11224 0218 54       		.byte	0x54
 11225 0219 00000000 		.4byte	0
 11226 021d 00000000 		.4byte	0
 11227              	.LLST12:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 300


 11228 0221 00000000 		.4byte	.LVL43
 11229 0225 07000000 		.4byte	.LVL44-1
 11230 0229 0100     		.2byte	0x1
 11231 022b 50       		.byte	0x50
 11232 022c 07000000 		.4byte	.LVL44-1
 11233 0230 A2000000 		.4byte	.LVL48
 11234 0234 0100     		.2byte	0x1
 11235 0236 54       		.byte	0x54
 11236 0237 A2000000 		.4byte	.LVL48
 11237 023b AC000000 		.4byte	.LFE727
 11238 023f 0400     		.2byte	0x4
 11239 0241 F3       		.byte	0xf3
 11240 0242 01       		.uleb128 0x1
 11241 0243 50       		.byte	0x50
 11242 0244 9F       		.byte	0x9f
 11243 0245 00000000 		.4byte	0
 11244 0249 00000000 		.4byte	0
 11245              	.LLST13:
 11246 024d 10000000 		.4byte	.LVL50
 11247 0251 34000000 		.4byte	.LVL53
 11248 0255 0100     		.2byte	0x1
 11249 0257 55       		.byte	0x55
 11250 0258 00000000 		.4byte	0
 11251 025c 00000000 		.4byte	0
 11252              	.LLST14:
 11253 0260 00000000 		.4byte	.LVL54
 11254 0264 02000000 		.4byte	.LVL55
 11255 0268 0100     		.2byte	0x1
 11256 026a 50       		.byte	0x50
 11257 026b 02000000 		.4byte	.LVL55
 11258 026f 28000000 		.4byte	.LFE757
 11259 0273 0400     		.2byte	0x4
 11260 0275 F3       		.byte	0xf3
 11261 0276 01       		.uleb128 0x1
 11262 0277 50       		.byte	0x50
 11263 0278 9F       		.byte	0x9f
 11264 0279 00000000 		.4byte	0
 11265 027d 00000000 		.4byte	0
 11266              	.LLST15:
 11267 0281 00000000 		.4byte	.LVL57
 11268 0285 10000000 		.4byte	.LVL59
 11269 0289 0100     		.2byte	0x1
 11270 028b 50       		.byte	0x50
 11271 028c 10000000 		.4byte	.LVL59
 11272 0290 2E000000 		.4byte	.LVL63
 11273 0294 0100     		.2byte	0x1
 11274 0296 54       		.byte	0x54
 11275 0297 2E000000 		.4byte	.LVL63
 11276 029b 68000000 		.4byte	.LFE773
 11277 029f 0400     		.2byte	0x4
 11278 02a1 F3       		.byte	0xf3
 11279 02a2 01       		.uleb128 0x1
 11280 02a3 50       		.byte	0x50
 11281 02a4 9F       		.byte	0x9f
 11282 02a5 00000000 		.4byte	0
 11283 02a9 00000000 		.4byte	0
 11284              	.LLST16:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 301


 11285 02ad 00000000 		.4byte	.LVL57
 11286 02b1 15000000 		.4byte	.LVL60-1
 11287 02b5 0100     		.2byte	0x1
 11288 02b7 51       		.byte	0x51
 11289 02b8 15000000 		.4byte	.LVL60-1
 11290 02bc 64000000 		.4byte	.LVL68
 11291 02c0 0100     		.2byte	0x1
 11292 02c2 56       		.byte	0x56
 11293 02c3 64000000 		.4byte	.LVL68
 11294 02c7 68000000 		.4byte	.LFE773
 11295 02cb 0400     		.2byte	0x4
 11296 02cd F3       		.byte	0xf3
 11297 02ce 01       		.uleb128 0x1
 11298 02cf 51       		.byte	0x51
 11299 02d0 9F       		.byte	0x9f
 11300 02d1 00000000 		.4byte	0
 11301 02d5 00000000 		.4byte	0
 11302              	.LLST17:
 11303 02d9 2E000000 		.4byte	.LVL63
 11304 02dd 64000000 		.4byte	.LVL68
 11305 02e1 0100     		.2byte	0x1
 11306 02e3 54       		.byte	0x54
 11307 02e4 00000000 		.4byte	0
 11308 02e8 00000000 		.4byte	0
 11309              	.LLST18:
 11310 02ec 0C000000 		.4byte	.LVL58
 11311 02f0 4E000000 		.4byte	.LVL66
 11312 02f4 0100     		.2byte	0x1
 11313 02f6 55       		.byte	0x55
 11314 02f7 00000000 		.4byte	0
 11315 02fb 00000000 		.4byte	0
 11316              	.LLST19:
 11317 02ff 00000000 		.4byte	.LVL69
 11318 0303 10000000 		.4byte	.LVL70
 11319 0307 0100     		.2byte	0x1
 11320 0309 50       		.byte	0x50
 11321 030a 10000000 		.4byte	.LVL70
 11322 030e 62000000 		.4byte	.LFE725
 11323 0312 0100     		.2byte	0x1
 11324 0314 56       		.byte	0x56
 11325 0315 00000000 		.4byte	0
 11326 0319 00000000 		.4byte	0
 11327              	.LLST20:
 11328 031d 00000000 		.4byte	.LVL69
 11329 0321 13000000 		.4byte	.LVL71-1
 11330 0325 0100     		.2byte	0x1
 11331 0327 51       		.byte	0x51
 11332 0328 13000000 		.4byte	.LVL71-1
 11333 032c 62000000 		.4byte	.LFE725
 11334 0330 0100     		.2byte	0x1
 11335 0332 57       		.byte	0x57
 11336 0333 00000000 		.4byte	0
 11337 0337 00000000 		.4byte	0
 11338              	.LLST21:
 11339 033b 00000000 		.4byte	.LVL69
 11340 033f 13000000 		.4byte	.LVL71-1
 11341 0343 0100     		.2byte	0x1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 302


 11342 0345 52       		.byte	0x52
 11343 0346 13000000 		.4byte	.LVL71-1
 11344 034a 62000000 		.4byte	.LFE725
 11345 034e 0400     		.2byte	0x4
 11346 0350 F3       		.byte	0xf3
 11347 0351 01       		.uleb128 0x1
 11348 0352 52       		.byte	0x52
 11349 0353 9F       		.byte	0x9f
 11350 0354 00000000 		.4byte	0
 11351 0358 00000000 		.4byte	0
 11352              	.LLST22:
 11353 035c 00000000 		.4byte	.LVL69
 11354 0360 13000000 		.4byte	.LVL71-1
 11355 0364 0100     		.2byte	0x1
 11356 0366 53       		.byte	0x53
 11357 0367 13000000 		.4byte	.LVL71-1
 11358 036b 62000000 		.4byte	.LFE725
 11359 036f 0100     		.2byte	0x1
 11360 0371 58       		.byte	0x58
 11361 0372 00000000 		.4byte	0
 11362 0376 00000000 		.4byte	0
 11363              	.LLST23:
 11364 037a 1E000000 		.4byte	.LVL73
 11365 037e 2A000000 		.4byte	.LVL74
 11366 0382 0100     		.2byte	0x1
 11367 0384 50       		.byte	0x50
 11368 0385 2A000000 		.4byte	.LVL74
 11369 0389 30000000 		.4byte	.LVL76
 11370 038d 0100     		.2byte	0x1
 11371 038f 54       		.byte	0x54
 11372 0390 32000000 		.4byte	.LVL77
 11373 0394 62000000 		.4byte	.LFE725
 11374 0398 0100     		.2byte	0x1
 11375 039a 54       		.byte	0x54
 11376 039b 00000000 		.4byte	0
 11377 039f 00000000 		.4byte	0
 11378              	.LLST24:
 11379 03a3 54000000 		.4byte	.LVL79
 11380 03a7 58000000 		.4byte	.LVL80
 11381 03ab 0200     		.2byte	0x2
 11382 03ad 31       		.byte	0x31
 11383 03ae 9F       		.byte	0x9f
 11384 03af 5C000000 		.4byte	.LVL81
 11385 03b3 62000000 		.4byte	.LFE725
 11386 03b7 0100     		.2byte	0x1
 11387 03b9 50       		.byte	0x50
 11388 03ba 00000000 		.4byte	0
 11389 03be 00000000 		.4byte	0
 11390              	.LLST25:
 11391 03c2 14000000 		.4byte	.LVL71
 11392 03c6 1A000000 		.4byte	.LVL72
 11393 03ca 0100     		.2byte	0x1
 11394 03cc 50       		.byte	0x50
 11395 03cd 1A000000 		.4byte	.LVL72
 11396 03d1 30000000 		.4byte	.LVL76
 11397 03d5 0100     		.2byte	0x1
 11398 03d7 59       		.byte	0x59
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 303


 11399 03d8 30000000 		.4byte	.LVL76
 11400 03dc 32000000 		.4byte	.LVL77
 11401 03e0 0100     		.2byte	0x1
 11402 03e2 50       		.byte	0x50
 11403 03e3 00000000 		.4byte	0
 11404 03e7 00000000 		.4byte	0
 11405              	.LLST26:
 11406 03eb 00000000 		.4byte	.LVL82
 11407 03ef 07000000 		.4byte	.LVL83-1
 11408 03f3 0100     		.2byte	0x1
 11409 03f5 50       		.byte	0x50
 11410 03f6 07000000 		.4byte	.LVL83-1
 11411 03fa 10000000 		.4byte	.LVL84
 11412 03fe 0100     		.2byte	0x1
 11413 0400 54       		.byte	0x54
 11414 0401 00000000 		.4byte	0
 11415 0405 00000000 		.4byte	0
 11416              	.LLST27:
 11417 0409 10000000 		.4byte	.LVL84
 11418 040d A8000000 		.4byte	.LVL92
 11419 0411 0100     		.2byte	0x1
 11420 0413 54       		.byte	0x54
 11421 0414 00000000 		.4byte	0
 11422 0418 00000000 		.4byte	0
 11423              	.LLST28:
 11424 041c 00000000 		.4byte	.LVL93
 11425 0420 07000000 		.4byte	.LVL94-1
 11426 0424 0100     		.2byte	0x1
 11427 0426 50       		.byte	0x50
 11428 0427 07000000 		.4byte	.LVL94-1
 11429 042b 10000000 		.4byte	.LVL95
 11430 042f 0100     		.2byte	0x1
 11431 0431 54       		.byte	0x54
 11432 0432 00000000 		.4byte	0
 11433 0436 00000000 		.4byte	0
 11434              	.LLST29:
 11435 043a 10000000 		.4byte	.LVL95
 11436 043e 12000000 		.4byte	.LVL96
 11437 0442 0100     		.2byte	0x1
 11438 0444 54       		.byte	0x54
 11439 0445 00000000 		.4byte	0
 11440 0449 00000000 		.4byte	0
 11441              	.LLST30:
 11442 044d 12000000 		.4byte	.LVL96
 11443 0451 1A000000 		.4byte	.LVL98
 11444 0455 0100     		.2byte	0x1
 11445 0457 54       		.byte	0x54
 11446 0458 1A000000 		.4byte	.LVL98
 11447 045c 20000000 		.4byte	.LFE731
 11448 0460 0100     		.2byte	0x1
 11449 0462 50       		.byte	0x50
 11450 0463 00000000 		.4byte	0
 11451 0467 00000000 		.4byte	0
 11452              	.LLST31:
 11453 046b 00000000 		.4byte	.LVL99
 11454 046f 07000000 		.4byte	.LVL100-1
 11455 0473 0100     		.2byte	0x1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 304


 11456 0475 50       		.byte	0x50
 11457 0476 07000000 		.4byte	.LVL100-1
 11458 047a 24000000 		.4byte	.LVL101
 11459 047e 0100     		.2byte	0x1
 11460 0480 54       		.byte	0x54
 11461 0481 00000000 		.4byte	0
 11462 0485 00000000 		.4byte	0
 11463              	.LLST32:
 11464 0489 24000000 		.4byte	.LVL101
 11465 048d 2C000000 		.4byte	.LVL104
 11466 0491 0100     		.2byte	0x1
 11467 0493 54       		.byte	0x54
 11468 0494 00000000 		.4byte	0
 11469 0498 00000000 		.4byte	0
 11470              	.LLST33:
 11471 049c 26000000 		.4byte	.LVL102
 11472 04a0 2A000000 		.4byte	.LVL103
 11473 04a4 0100     		.2byte	0x1
 11474 04a6 53       		.byte	0x53
 11475 04a7 00000000 		.4byte	0
 11476 04ab 00000000 		.4byte	0
 11477              	.LLST34:
 11478 04af 00000000 		.4byte	.LVL105
 11479 04b3 25000000 		.4byte	.LVL108-1
 11480 04b7 0100     		.2byte	0x1
 11481 04b9 50       		.byte	0x50
 11482 04ba 25000000 		.4byte	.LVL108-1
 11483 04be 2E000000 		.4byte	.LVL109
 11484 04c2 0100     		.2byte	0x1
 11485 04c4 54       		.byte	0x54
 11486 04c5 00000000 		.4byte	0
 11487 04c9 00000000 		.4byte	0
 11488              	.LLST35:
 11489 04cd 00000000 		.4byte	.LVL105
 11490 04d1 22000000 		.4byte	.LVL107
 11491 04d5 0100     		.2byte	0x1
 11492 04d7 51       		.byte	0x51
 11493 04d8 22000000 		.4byte	.LVL107
 11494 04dc 74000000 		.4byte	.LVL112
 11495 04e0 0100     		.2byte	0x1
 11496 04e2 55       		.byte	0x55
 11497 04e3 74000000 		.4byte	.LVL112
 11498 04e7 95000000 		.4byte	.LVL114-1
 11499 04eb 0200     		.2byte	0x2
 11500 04ed 74       		.byte	0x74
 11501 04ee 2C       		.sleb128 44
 11502 04ef 00000000 		.4byte	0
 11503 04f3 00000000 		.4byte	0
 11504              	.LLST36:
 11505 04f7 2E000000 		.4byte	.LVL109
 11506 04fb D0000000 		.4byte	.LVL118
 11507 04ff 0100     		.2byte	0x1
 11508 0501 54       		.byte	0x54
 11509 0502 00000000 		.4byte	0
 11510 0506 00000000 		.4byte	0
 11511              	.LLST37:
 11512 050a 30000000 		.4byte	.LVL110
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 305


 11513 050e 7C000000 		.4byte	.LVL113
 11514 0512 0100     		.2byte	0x1
 11515 0514 53       		.byte	0x53
 11516 0515 00000000 		.4byte	0
 11517 0519 00000000 		.4byte	0
 11518              	.LLST38:
 11519 051d 68000000 		.4byte	.LVL111
 11520 0521 7C000000 		.4byte	.LVL113
 11521 0525 0100     		.2byte	0x1
 11522 0527 53       		.byte	0x53
 11523 0528 00000000 		.4byte	0
 11524 052c 00000000 		.4byte	0
 11525              	.LLST39:
 11526 0530 00000000 		.4byte	.LVL105
 11527 0534 68000000 		.4byte	.LVL111
 11528 0538 0200     		.2byte	0x2
 11529 053a 30       		.byte	0x30
 11530 053b 9F       		.byte	0x9f
 11531 053c 68000000 		.4byte	.LVL111
 11532 0540 CA000000 		.4byte	.LVL116
 11533 0544 0100     		.2byte	0x1
 11534 0546 56       		.byte	0x56
 11535 0547 00000000 		.4byte	0
 11536 054b 00000000 		.4byte	0
 11537              	.LLST40:
 11538 054f 00000000 		.4byte	.LVL119
 11539 0553 27000000 		.4byte	.LVL121-1
 11540 0557 0100     		.2byte	0x1
 11541 0559 50       		.byte	0x50
 11542 055a 27000000 		.4byte	.LVL121-1
 11543 055e 80000000 		.4byte	.LVL126
 11544 0562 0100     		.2byte	0x1
 11545 0564 54       		.byte	0x54
 11546 0565 80000000 		.4byte	.LVL126
 11547 0569 88000000 		.4byte	.LFE736
 11548 056d 0400     		.2byte	0x4
 11549 056f F3       		.byte	0xf3
 11550 0570 01       		.uleb128 0x1
 11551 0571 50       		.byte	0x50
 11552 0572 9F       		.byte	0x9f
 11553 0573 00000000 		.4byte	0
 11554 0577 00000000 		.4byte	0
 11555              	.LLST41:
 11556 057b 00000000 		.4byte	.LVL119
 11557 057f 27000000 		.4byte	.LVL121-1
 11558 0583 0100     		.2byte	0x1
 11559 0585 50       		.byte	0x50
 11560 0586 27000000 		.4byte	.LVL121-1
 11561 058a 80000000 		.4byte	.LVL126
 11562 058e 0100     		.2byte	0x1
 11563 0590 54       		.byte	0x54
 11564 0591 80000000 		.4byte	.LVL126
 11565 0595 88000000 		.4byte	.LFE736
 11566 0599 0400     		.2byte	0x4
 11567 059b F3       		.byte	0xf3
 11568 059c 01       		.uleb128 0x1
 11569 059d 50       		.byte	0x50
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 306


 11570 059e 9F       		.byte	0x9f
 11571 059f 00000000 		.4byte	0
 11572 05a3 00000000 		.4byte	0
 11573              	.LLST42:
 11574 05a7 00000000 		.4byte	.LVL127
 11575 05ab 1B000000 		.4byte	.LVL130-1
 11576 05af 0100     		.2byte	0x1
 11577 05b1 50       		.byte	0x50
 11578 05b2 1B000000 		.4byte	.LVL130-1
 11579 05b6 98000000 		.4byte	.LVL139
 11580 05ba 0100     		.2byte	0x1
 11581 05bc 54       		.byte	0x54
 11582 05bd 98000000 		.4byte	.LVL139
 11583 05c1 A4000000 		.4byte	.LFE737
 11584 05c5 0400     		.2byte	0x4
 11585 05c7 F3       		.byte	0xf3
 11586 05c8 01       		.uleb128 0x1
 11587 05c9 50       		.byte	0x50
 11588 05ca 9F       		.byte	0x9f
 11589 05cb 00000000 		.4byte	0
 11590 05cf 00000000 		.4byte	0
 11591              	.LLST43:
 11592 05d3 02000000 		.4byte	.LVL128
 11593 05d7 54000000 		.4byte	.LVL132
 11594 05db 0200     		.2byte	0x2
 11595 05dd 30       		.byte	0x30
 11596 05de 9F       		.byte	0x9f
 11597 05df 54000000 		.4byte	.LVL132
 11598 05e3 80000000 		.4byte	.LVL135
 11599 05e7 0100     		.2byte	0x1
 11600 05e9 55       		.byte	0x55
 11601 05ea 80000000 		.4byte	.LVL135
 11602 05ee 90000000 		.4byte	.LVL137
 11603 05f2 0200     		.2byte	0x2
 11604 05f4 30       		.byte	0x30
 11605 05f5 9F       		.byte	0x9f
 11606 05f6 90000000 		.4byte	.LVL137
 11607 05fa 98000000 		.4byte	.LVL139
 11608 05fe 0100     		.2byte	0x1
 11609 0600 55       		.byte	0x55
 11610 0601 98000000 		.4byte	.LVL139
 11611 0605 A4000000 		.4byte	.LFE737
 11612 0609 0100     		.2byte	0x1
 11613 060b 50       		.byte	0x50
 11614 060c 00000000 		.4byte	0
 11615 0610 00000000 		.4byte	0
 11616              	.LLST44:
 11617 0614 02000000 		.4byte	.LVL128
 11618 0618 1B000000 		.4byte	.LVL130-1
 11619 061c 0100     		.2byte	0x1
 11620 061e 50       		.byte	0x50
 11621 061f 1B000000 		.4byte	.LVL130-1
 11622 0623 98000000 		.4byte	.LVL139
 11623 0627 0100     		.2byte	0x1
 11624 0629 54       		.byte	0x54
 11625 062a 98000000 		.4byte	.LVL139
 11626 062e A4000000 		.4byte	.LFE737
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 307


 11627 0632 0400     		.2byte	0x4
 11628 0634 F3       		.byte	0xf3
 11629 0635 01       		.uleb128 0x1
 11630 0636 50       		.byte	0x50
 11631 0637 9F       		.byte	0x9f
 11632 0638 00000000 		.4byte	0
 11633 063c 00000000 		.4byte	0
 11634              	.LLST45:
 11635 0640 90000000 		.4byte	.LVL137
 11636 0644 94000000 		.4byte	.LVL138
 11637 0648 0100     		.2byte	0x1
 11638 064a 57       		.byte	0x57
 11639 064b 00000000 		.4byte	0
 11640 064f 00000000 		.4byte	0
 11641              	.LLST46:
 11642 0653 16000000 		.4byte	.LVL140
 11643 0657 1D000000 		.4byte	.LVL141-1
 11644 065b 0100     		.2byte	0x1
 11645 065d 50       		.byte	0x50
 11646 065e 1E000000 		.4byte	.LVL141
 11647 0662 49000000 		.4byte	.LVL142-1
 11648 0666 0100     		.2byte	0x1
 11649 0668 50       		.byte	0x50
 11650 0669 4C000000 		.4byte	.LVL143
 11651 066d 64000000 		.4byte	.LVL145
 11652 0671 0100     		.2byte	0x1
 11653 0673 50       		.byte	0x50
 11654 0674 00000000 		.4byte	0
 11655 0678 00000000 		.4byte	0
 11656              	.LLST47:
 11657 067c 00000000 		.4byte	.LVL150
 11658 0680 0A000000 		.4byte	.LVL151
 11659 0684 0100     		.2byte	0x1
 11660 0686 50       		.byte	0x50
 11661 0687 00000000 		.4byte	0
 11662 068b 00000000 		.4byte	0
 11663              	.LLST48:
 11664 068f 0A000000 		.4byte	.LVL151
 11665 0693 1C000000 		.4byte	.LVL152
 11666 0697 0100     		.2byte	0x1
 11667 0699 53       		.byte	0x53
 11668 069a 1E000000 		.4byte	.LVL153
 11669 069e 28000000 		.4byte	.LFE745
 11670 06a2 0100     		.2byte	0x1
 11671 06a4 53       		.byte	0x53
 11672 06a5 00000000 		.4byte	0
 11673 06a9 00000000 		.4byte	0
 11674              	.LLST49:
 11675 06ad 5C000000 		.4byte	.LVL161
 11676 06b1 60000000 		.4byte	.LVL163
 11677 06b5 0100     		.2byte	0x1
 11678 06b7 55       		.byte	0x55
 11679 06b8 84000000 		.4byte	.LVL165
 11680 06bc DA000000 		.4byte	.LVL170
 11681 06c0 0100     		.2byte	0x1
 11682 06c2 55       		.byte	0x55
 11683 06c3 00000000 		.4byte	0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 308


 11684 06c7 00000000 		.4byte	0
 11685              	.LLST50:
 11686 06cb 86000000 		.4byte	.LVL166
 11687 06cf 99000000 		.4byte	.LVL167-1
 11688 06d3 0100     		.2byte	0x1
 11689 06d5 53       		.byte	0x53
 11690 06d6 00000000 		.4byte	0
 11691 06da 00000000 		.4byte	0
 11692              	.LLST51:
 11693 06de 04000000 		.4byte	.LVL154
 11694 06e2 5C000000 		.4byte	.LVL161
 11695 06e6 0200     		.2byte	0x2
 11696 06e8 30       		.byte	0x30
 11697 06e9 9F       		.byte	0x9f
 11698 06ea 5C000000 		.4byte	.LVL161
 11699 06ee 5E000000 		.4byte	.LVL162
 11700 06f2 0100     		.2byte	0x1
 11701 06f4 56       		.byte	0x56
 11702 06f5 60000000 		.4byte	.LVL163
 11703 06f9 62000000 		.4byte	.LVL164
 11704 06fd 0200     		.2byte	0x2
 11705 06ff 30       		.byte	0x30
 11706 0700 9F       		.byte	0x9f
 11707 0701 62000000 		.4byte	.LVL164
 11708 0705 DA000000 		.4byte	.LVL170
 11709 0709 0100     		.2byte	0x1
 11710 070b 56       		.byte	0x56
 11711 070c DA000000 		.4byte	.LVL170
 11712 0710 E8000000 		.4byte	.LVL171
 11713 0714 0200     		.2byte	0x2
 11714 0716 30       		.byte	0x30
 11715 0717 9F       		.byte	0x9f
 11716 0718 E8000000 		.4byte	.LVL171
 11717 071c F8000000 		.4byte	.LVL173
 11718 0720 0100     		.2byte	0x1
 11719 0722 56       		.byte	0x56
 11720 0723 F8000000 		.4byte	.LVL173
 11721 0727 FC000000 		.4byte	.LFE746
 11722 072b 0100     		.2byte	0x1
 11723 072d 50       		.byte	0x50
 11724 072e 00000000 		.4byte	0
 11725 0732 00000000 		.4byte	0
 11726              	.LLST52:
 11727 0736 16000000 		.4byte	.LVL155
 11728 073a DA000000 		.4byte	.LVL170
 11729 073e 0100     		.2byte	0x1
 11730 0740 54       		.byte	0x54
 11731 0741 00000000 		.4byte	0
 11732 0745 00000000 		.4byte	0
 11733              	.LLST53:
 11734 0749 38000000 		.4byte	.LVL157
 11735 074d 46000000 		.4byte	.LVL158
 11736 0751 0100     		.2byte	0x1
 11737 0753 52       		.byte	0x52
 11738 0754 46000000 		.4byte	.LVL158
 11739 0758 4C000000 		.4byte	.LVL159
 11740 075c 0500     		.2byte	0x5
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 309


 11741 075e 03       		.byte	0x3
 11742 075f F8000000 		.4byte	pxOverflowDelayedTaskList
 11743 0763 00000000 		.4byte	0
 11744 0767 00000000 		.4byte	0
 11745              	.LLST54:
 11746 076b 00000000 		.4byte	.LVL174
 11747 076f 40000000 		.4byte	.LVL177
 11748 0773 0200     		.2byte	0x2
 11749 0775 30       		.byte	0x30
 11750 0776 9F       		.byte	0x9f
 11751 0777 40000000 		.4byte	.LVL177
 11752 077b 8C000000 		.4byte	.LVL182
 11753 077f 0100     		.2byte	0x1
 11754 0781 54       		.byte	0x54
 11755 0782 8C000000 		.4byte	.LVL182
 11756 0786 8E000000 		.4byte	.LVL183
 11757 078a 0200     		.2byte	0x2
 11758 078c 30       		.byte	0x30
 11759 078d 9F       		.byte	0x9f
 11760 078e 8E000000 		.4byte	.LVL183
 11761 0792 A2000000 		.4byte	.LVL185
 11762 0796 0100     		.2byte	0x1
 11763 0798 54       		.byte	0x54
 11764 0799 DA000000 		.4byte	.LVL191
 11765 079d DE000000 		.4byte	.LVL192
 11766 07a1 0200     		.2byte	0x2
 11767 07a3 30       		.byte	0x30
 11768 07a4 9F       		.byte	0x9f
 11769 07a5 00000000 		.4byte	0
 11770 07a9 00000000 		.4byte	0
 11771              	.LLST55:
 11772 07ad 00000000 		.4byte	.LVL174
 11773 07b1 C6000000 		.4byte	.LVL189
 11774 07b5 0200     		.2byte	0x2
 11775 07b7 30       		.byte	0x30
 11776 07b8 9F       		.byte	0x9f
 11777 07b9 C6000000 		.4byte	.LVL189
 11778 07bd DA000000 		.4byte	.LVL191
 11779 07c1 0200     		.2byte	0x2
 11780 07c3 31       		.byte	0x31
 11781 07c4 9F       		.byte	0x9f
 11782 07c5 DA000000 		.4byte	.LVL191
 11783 07c9 E0000000 		.4byte	.LVL193
 11784 07cd 0200     		.2byte	0x2
 11785 07cf 30       		.byte	0x30
 11786 07d0 9F       		.byte	0x9f
 11787 07d1 E0000000 		.4byte	.LVL193
 11788 07d5 E8000000 		.4byte	.LVL195
 11789 07d9 0100     		.2byte	0x1
 11790 07db 54       		.byte	0x54
 11791 07dc E8000000 		.4byte	.LVL195
 11792 07e0 F0000000 		.4byte	.LFE741
 11793 07e4 0100     		.2byte	0x1
 11794 07e6 50       		.byte	0x50
 11795 07e7 00000000 		.4byte	0
 11796 07eb 00000000 		.4byte	0
 11797              	.LLST56:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 310


 11798 07ef A2000000 		.4byte	.LVL185
 11799 07f3 B2000000 		.4byte	.LVL187
 11800 07f7 0100     		.2byte	0x1
 11801 07f9 54       		.byte	0x54
 11802 07fa B2000000 		.4byte	.LVL187
 11803 07fe B4000000 		.4byte	.LVL188
 11804 0802 0300     		.2byte	0x3
 11805 0804 74       		.byte	0x74
 11806 0805 7F       		.sleb128 -1
 11807 0806 9F       		.byte	0x9f
 11808 0807 B4000000 		.4byte	.LVL188
 11809 080b D8000000 		.4byte	.LVL190
 11810 080f 0100     		.2byte	0x1
 11811 0811 54       		.byte	0x54
 11812 0812 DE000000 		.4byte	.LVL192
 11813 0816 E0000000 		.4byte	.LVL193
 11814 081a 0100     		.2byte	0x1
 11815 081c 54       		.byte	0x54
 11816 081d 00000000 		.4byte	0
 11817 0821 00000000 		.4byte	0
 11818              	.LLST57:
 11819 0825 00000000 		.4byte	.LVL196
 11820 0829 4B000000 		.4byte	.LVL201-1
 11821 082d 0100     		.2byte	0x1
 11822 082f 50       		.byte	0x50
 11823 0830 4B000000 		.4byte	.LVL201-1
 11824 0834 A4000000 		.4byte	.LVL208
 11825 0838 0100     		.2byte	0x1
 11826 083a 55       		.byte	0x55
 11827 083b A4000000 		.4byte	.LVL208
 11828 083f AC000000 		.4byte	.LFE729
 11829 0843 0400     		.2byte	0x4
 11830 0845 F3       		.byte	0xf3
 11831 0846 01       		.uleb128 0x1
 11832 0847 50       		.byte	0x50
 11833 0848 9F       		.byte	0x9f
 11834 0849 00000000 		.4byte	0
 11835 084d 00000000 		.4byte	0
 11836              	.LLST58:
 11837 0851 00000000 		.4byte	.LVL196
 11838 0855 4B000000 		.4byte	.LVL201-1
 11839 0859 0100     		.2byte	0x1
 11840 085b 51       		.byte	0x51
 11841 085c 4B000000 		.4byte	.LVL201-1
 11842 0860 A4000000 		.4byte	.LVL208
 11843 0864 0100     		.2byte	0x1
 11844 0866 54       		.byte	0x54
 11845 0867 A4000000 		.4byte	.LVL208
 11846 086b AC000000 		.4byte	.LFE729
 11847 086f 0400     		.2byte	0x4
 11848 0871 F3       		.byte	0xf3
 11849 0872 01       		.uleb128 0x1
 11850 0873 51       		.byte	0x51
 11851 0874 9F       		.byte	0x9f
 11852 0875 00000000 		.4byte	0
 11853 0879 00000000 		.4byte	0
 11854              	.LLST59:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 311


 11855 087d 56000000 		.4byte	.LVL203
 11856 0881 8B000000 		.4byte	.LVL206-1
 11857 0885 0100     		.2byte	0x1
 11858 0887 53       		.byte	0x53
 11859 0888 00000000 		.4byte	0
 11860 088c 00000000 		.4byte	0
 11861              	.LLST60:
 11862 0890 02000000 		.4byte	.LVL197
 11863 0894 80000000 		.4byte	.LVL204
 11864 0898 0200     		.2byte	0x2
 11865 089a 30       		.byte	0x30
 11866 089b 9F       		.byte	0x9f
 11867 089c 80000000 		.4byte	.LVL204
 11868 08a0 8B000000 		.4byte	.LVL206-1
 11869 08a4 0100     		.2byte	0x1
 11870 08a6 52       		.byte	0x52
 11871 08a7 00000000 		.4byte	0
 11872 08ab 00000000 		.4byte	0
 11873              	.LLST61:
 11874 08af 52000000 		.4byte	.LVL202
 11875 08b3 88000000 		.4byte	.LVL205
 11876 08b7 0100     		.2byte	0x1
 11877 08b9 50       		.byte	0x50
 11878 08ba 00000000 		.4byte	0
 11879 08be 00000000 		.4byte	0
 11880              	.LLST62:
 11881 08c2 00000000 		.4byte	.LVL209
 11882 08c6 23000000 		.4byte	.LVL212-1
 11883 08ca 0100     		.2byte	0x1
 11884 08cc 50       		.byte	0x50
 11885 08cd 23000000 		.4byte	.LVL212-1
 11886 08d1 32000000 		.4byte	.LVL215
 11887 08d5 0100     		.2byte	0x1
 11888 08d7 54       		.byte	0x54
 11889 08d8 32000000 		.4byte	.LVL215
 11890 08dc 34000000 		.4byte	.LVL216
 11891 08e0 0100     		.2byte	0x1
 11892 08e2 50       		.byte	0x50
 11893 08e3 34000000 		.4byte	.LVL216
 11894 08e7 50000000 		.4byte	.LFE730
 11895 08eb 0400     		.2byte	0x4
 11896 08ed F3       		.byte	0xf3
 11897 08ee 01       		.uleb128 0x1
 11898 08ef 50       		.byte	0x50
 11899 08f0 9F       		.byte	0x9f
 11900 08f1 00000000 		.4byte	0
 11901 08f5 00000000 		.4byte	0
 11902              	.LLST63:
 11903 08f9 02000000 		.4byte	.LVL210
 11904 08fd 30000000 		.4byte	.LVL214
 11905 0901 0200     		.2byte	0x2
 11906 0903 30       		.byte	0x30
 11907 0904 9F       		.byte	0x9f
 11908 0905 30000000 		.4byte	.LVL214
 11909 0909 32000000 		.4byte	.LVL215
 11910 090d 0100     		.2byte	0x1
 11911 090f 50       		.byte	0x50
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 312


 11912 0910 32000000 		.4byte	.LVL215
 11913 0914 34000000 		.4byte	.LVL216
 11914 0918 0200     		.2byte	0x2
 11915 091a 30       		.byte	0x30
 11916 091b 9F       		.byte	0x9f
 11917 091c 34000000 		.4byte	.LVL216
 11918 0920 50000000 		.4byte	.LFE730
 11919 0924 0100     		.2byte	0x1
 11920 0926 50       		.byte	0x50
 11921 0927 00000000 		.4byte	0
 11922 092b 00000000 		.4byte	0
 11923              	.LLST64:
 11924 092f 22000000 		.4byte	.LVL217
 11925 0933 3C000000 		.4byte	.LVL218
 11926 0937 0100     		.2byte	0x1
 11927 0939 53       		.byte	0x53
 11928 093a 00000000 		.4byte	0
 11929 093e 00000000 		.4byte	0
 11930              	.LLST65:
 11931 0942 58000000 		.4byte	.LVL220
 11932 0946 6C000000 		.4byte	.LVL221
 11933 094a 0100     		.2byte	0x1
 11934 094c 53       		.byte	0x53
 11935 094d 6E000000 		.4byte	.LVL222
 11936 0951 C8000000 		.4byte	.LFE747
 11937 0955 0100     		.2byte	0x1
 11938 0957 53       		.byte	0x53
 11939 0958 00000000 		.4byte	0
 11940 095c 00000000 		.4byte	0
 11941              	.LLST66:
 11942 0960 00000000 		.4byte	.LVL225
 11943 0964 07000000 		.4byte	.LVL226-1
 11944 0968 0100     		.2byte	0x1
 11945 096a 50       		.byte	0x50
 11946 096b 07000000 		.4byte	.LVL226-1
 11947 096f 10000000 		.4byte	.LVL227
 11948 0973 0100     		.2byte	0x1
 11949 0975 54       		.byte	0x54
 11950 0976 00000000 		.4byte	0
 11951 097a 00000000 		.4byte	0
 11952              	.LLST67:
 11953 097e 10000000 		.4byte	.LVL227
 11954 0982 AE000000 		.4byte	.LVL239
 11955 0986 0100     		.2byte	0x1
 11956 0988 54       		.byte	0x54
 11957 0989 00000000 		.4byte	0
 11958 098d 00000000 		.4byte	0
 11959              	.LLST68:
 11960 0991 00000000 		.4byte	.LVL240
 11961 0995 23000000 		.4byte	.LVL243-1
 11962 0999 0100     		.2byte	0x1
 11963 099b 50       		.byte	0x50
 11964 099c 23000000 		.4byte	.LVL243-1
 11965 09a0 34000000 		.4byte	.LFE748
 11966 09a4 0400     		.2byte	0x4
 11967 09a6 F3       		.byte	0xf3
 11968 09a7 01       		.uleb128 0x1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 313


 11969 09a8 50       		.byte	0x50
 11970 09a9 9F       		.byte	0x9f
 11971 09aa 00000000 		.4byte	0
 11972 09ae 00000000 		.4byte	0
 11973              	.LLST69:
 11974 09b2 00000000 		.4byte	.LVL240
 11975 09b6 1E000000 		.4byte	.LVL242
 11976 09ba 0100     		.2byte	0x1
 11977 09bc 51       		.byte	0x51
 11978 09bd 1E000000 		.4byte	.LVL242
 11979 09c1 2E000000 		.4byte	.LVL245
 11980 09c5 0100     		.2byte	0x1
 11981 09c7 54       		.byte	0x54
 11982 09c8 2E000000 		.4byte	.LVL245
 11983 09cc 34000000 		.4byte	.LFE748
 11984 09d0 0400     		.2byte	0x4
 11985 09d2 F3       		.byte	0xf3
 11986 09d3 01       		.uleb128 0x1
 11987 09d4 51       		.byte	0x51
 11988 09d5 9F       		.byte	0x9f
 11989 09d6 00000000 		.4byte	0
 11990 09da 00000000 		.4byte	0
 11991              	.LLST70:
 11992 09de 00000000 		.4byte	.LVL246
 11993 09e2 18000000 		.4byte	.LVL248
 11994 09e6 0100     		.2byte	0x1
 11995 09e8 50       		.byte	0x50
 11996 09e9 18000000 		.4byte	.LVL248
 11997 09ed 2E000000 		.4byte	.LVL249
 11998 09f1 0100     		.2byte	0x1
 11999 09f3 53       		.byte	0x53
 12000 09f4 2E000000 		.4byte	.LVL249
 12001 09f8 30000000 		.4byte	.LVL250
 12002 09fc 0400     		.2byte	0x4
 12003 09fe F3       		.byte	0xf3
 12004 09ff 01       		.uleb128 0x1
 12005 0a00 50       		.byte	0x50
 12006 0a01 9F       		.byte	0x9f
 12007 0a02 30000000 		.4byte	.LVL250
 12008 0a06 38000000 		.4byte	.LVL251
 12009 0a0a 0100     		.2byte	0x1
 12010 0a0c 53       		.byte	0x53
 12011 0a0d 38000000 		.4byte	.LVL251
 12012 0a11 4D000000 		.4byte	.LVL255-1
 12013 0a15 0100     		.2byte	0x1
 12014 0a17 50       		.byte	0x50
 12015 0a18 4D000000 		.4byte	.LVL255-1
 12016 0a1c 5C000000 		.4byte	.LFE749
 12017 0a20 0400     		.2byte	0x4
 12018 0a22 F3       		.byte	0xf3
 12019 0a23 01       		.uleb128 0x1
 12020 0a24 50       		.byte	0x50
 12021 0a25 9F       		.byte	0x9f
 12022 0a26 00000000 		.4byte	0
 12023 0a2a 00000000 		.4byte	0
 12024              	.LLST71:
 12025 0a2e 00000000 		.4byte	.LVL246
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 314


 12026 0a32 3E000000 		.4byte	.LVL253
 12027 0a36 0100     		.2byte	0x1
 12028 0a38 51       		.byte	0x51
 12029 0a39 3E000000 		.4byte	.LVL253
 12030 0a3d 42000000 		.4byte	.LVL254
 12031 0a41 0100     		.2byte	0x1
 12032 0a43 53       		.byte	0x53
 12033 0a44 42000000 		.4byte	.LVL254
 12034 0a48 5C000000 		.4byte	.LFE749
 12035 0a4c 0400     		.2byte	0x4
 12036 0a4e F3       		.byte	0xf3
 12037 0a4f 01       		.uleb128 0x1
 12038 0a50 51       		.byte	0x51
 12039 0a51 9F       		.byte	0x9f
 12040 0a52 00000000 		.4byte	0
 12041 0a56 00000000 		.4byte	0
 12042              	.LLST72:
 12043 0a5a 00000000 		.4byte	.LVL246
 12044 0a5e 3A000000 		.4byte	.LVL252
 12045 0a62 0100     		.2byte	0x1
 12046 0a64 52       		.byte	0x52
 12047 0a65 3A000000 		.4byte	.LVL252
 12048 0a69 58000000 		.4byte	.LVL257
 12049 0a6d 0100     		.2byte	0x1
 12050 0a6f 54       		.byte	0x54
 12051 0a70 58000000 		.4byte	.LVL257
 12052 0a74 5C000000 		.4byte	.LFE749
 12053 0a78 0400     		.2byte	0x4
 12054 0a7a F3       		.byte	0xf3
 12055 0a7b 01       		.uleb128 0x1
 12056 0a7c 52       		.byte	0x52
 12057 0a7d 9F       		.byte	0x9f
 12058 0a7e 00000000 		.4byte	0
 12059 0a82 00000000 		.4byte	0
 12060              	.LLST73:
 12061 0a86 00000000 		.4byte	.LVL258
 12062 0a8a 25000000 		.4byte	.LVL262-1
 12063 0a8e 0100     		.2byte	0x1
 12064 0a90 50       		.byte	0x50
 12065 0a91 25000000 		.4byte	.LVL262-1
 12066 0a95 3C000000 		.4byte	.LFE750
 12067 0a99 0400     		.2byte	0x4
 12068 0a9b F3       		.byte	0xf3
 12069 0a9c 01       		.uleb128 0x1
 12070 0a9d 50       		.byte	0x50
 12071 0a9e 9F       		.byte	0x9f
 12072 0a9f 00000000 		.4byte	0
 12073 0aa3 00000000 		.4byte	0
 12074              	.LLST74:
 12075 0aa7 00000000 		.4byte	.LVL258
 12076 0aab 20000000 		.4byte	.LVL261
 12077 0aaf 0100     		.2byte	0x1
 12078 0ab1 51       		.byte	0x51
 12079 0ab2 20000000 		.4byte	.LVL261
 12080 0ab6 36000000 		.4byte	.LVL265
 12081 0aba 0100     		.2byte	0x1
 12082 0abc 54       		.byte	0x54
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 315


 12083 0abd 00000000 		.4byte	0
 12084 0ac1 00000000 		.4byte	0
 12085              	.LLST75:
 12086 0ac5 00000000 		.4byte	.LVL258
 12087 0ac9 1C000000 		.4byte	.LVL260
 12088 0acd 0100     		.2byte	0x1
 12089 0acf 52       		.byte	0x52
 12090 0ad0 1C000000 		.4byte	.LVL260
 12091 0ad4 36000000 		.4byte	.LVL265
 12092 0ad8 0100     		.2byte	0x1
 12093 0ada 55       		.byte	0x55
 12094 0adb 36000000 		.4byte	.LVL265
 12095 0adf 3C000000 		.4byte	.LFE750
 12096 0ae3 0400     		.2byte	0x4
 12097 0ae5 F3       		.byte	0xf3
 12098 0ae6 01       		.uleb128 0x1
 12099 0ae7 52       		.byte	0x52
 12100 0ae8 9F       		.byte	0x9f
 12101 0ae9 00000000 		.4byte	0
 12102 0aed 00000000 		.4byte	0
 12103              	.LLST76:
 12104 0af1 00000000 		.4byte	.LVL266
 12105 0af5 20000000 		.4byte	.LVL269
 12106 0af9 0100     		.2byte	0x1
 12107 0afb 50       		.byte	0x50
 12108 0afc 20000000 		.4byte	.LVL269
 12109 0b00 88000000 		.4byte	.LFE751
 12110 0b04 0400     		.2byte	0x4
 12111 0b06 F3       		.byte	0xf3
 12112 0b07 01       		.uleb128 0x1
 12113 0b08 50       		.byte	0x50
 12114 0b09 9F       		.byte	0x9f
 12115 0b0a 00000000 		.4byte	0
 12116 0b0e 00000000 		.4byte	0
 12117              	.LLST77:
 12118 0b12 06000000 		.4byte	.LVL267
 12119 0b16 7C000000 		.4byte	.LVL277
 12120 0b1a 0100     		.2byte	0x1
 12121 0b1c 54       		.byte	0x54
 12122 0b1d 00000000 		.4byte	0
 12123 0b21 00000000 		.4byte	0
 12124              	.LLST78:
 12125 0b25 6E000000 		.4byte	.LVL274
 12126 0b29 78000000 		.4byte	.LVL275
 12127 0b2d 0200     		.2byte	0x2
 12128 0b2f 31       		.byte	0x31
 12129 0b30 9F       		.byte	0x9f
 12130 0b31 7A000000 		.4byte	.LVL276
 12131 0b35 88000000 		.4byte	.LFE751
 12132 0b39 0100     		.2byte	0x1
 12133 0b3b 50       		.byte	0x50
 12134 0b3c 00000000 		.4byte	0
 12135 0b40 00000000 		.4byte	0
 12136              	.LLST79:
 12137 0b44 00000000 		.4byte	.LVL278
 12138 0b48 3B000000 		.4byte	.LVL282-1
 12139 0b4c 0100     		.2byte	0x1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 316


 12140 0b4e 50       		.byte	0x50
 12141 0b4f 3B000000 		.4byte	.LVL282-1
 12142 0b53 84000000 		.4byte	.LFE752
 12143 0b57 0400     		.2byte	0x4
 12144 0b59 F3       		.byte	0xf3
 12145 0b5a 01       		.uleb128 0x1
 12146 0b5b 50       		.byte	0x50
 12147 0b5c 9F       		.byte	0x9f
 12148 0b5d 00000000 		.4byte	0
 12149 0b61 00000000 		.4byte	0
 12150              	.LLST80:
 12151 0b65 00000000 		.4byte	.LVL278
 12152 0b69 3B000000 		.4byte	.LVL282-1
 12153 0b6d 0100     		.2byte	0x1
 12154 0b6f 51       		.byte	0x51
 12155 0b70 3B000000 		.4byte	.LVL282-1
 12156 0b74 84000000 		.4byte	.LFE752
 12157 0b78 0400     		.2byte	0x4
 12158 0b7a F3       		.byte	0xf3
 12159 0b7b 01       		.uleb128 0x1
 12160 0b7c 51       		.byte	0x51
 12161 0b7d 9F       		.byte	0x9f
 12162 0b7e 00000000 		.4byte	0
 12163 0b82 00000000 		.4byte	0
 12164              	.LLST81:
 12165 0b86 24000000 		.4byte	.LVL280
 12166 0b8a 7E000000 		.4byte	.LVL285
 12167 0b8e 0100     		.2byte	0x1
 12168 0b90 54       		.byte	0x54
 12169 0b91 00000000 		.4byte	0
 12170 0b95 00000000 		.4byte	0
 12171              	.LLST82:
 12172 0b99 00000000 		.4byte	.LVL286
 12173 0b9d 1B000000 		.4byte	.LVL288-1
 12174 0ba1 0100     		.2byte	0x1
 12175 0ba3 50       		.byte	0x50
 12176 0ba4 1B000000 		.4byte	.LVL288-1
 12177 0ba8 30000000 		.4byte	.LVL290
 12178 0bac 0100     		.2byte	0x1
 12179 0bae 54       		.byte	0x54
 12180 0baf 30000000 		.4byte	.LVL290
 12181 0bb3 34000000 		.4byte	.LFE753
 12182 0bb7 0400     		.2byte	0x4
 12183 0bb9 F3       		.byte	0xf3
 12184 0bba 01       		.uleb128 0x1
 12185 0bbb 50       		.byte	0x50
 12186 0bbc 9F       		.byte	0x9f
 12187 0bbd 00000000 		.4byte	0
 12188 0bc1 00000000 		.4byte	0
 12189              	.LLST83:
 12190 0bc5 00000000 		.4byte	.LVL292
 12191 0bc9 31000000 		.4byte	.LVL295-1
 12192 0bcd 0100     		.2byte	0x1
 12193 0bcf 50       		.byte	0x50
 12194 0bd0 31000000 		.4byte	.LVL295-1
 12195 0bd4 7C000000 		.4byte	.LVL309
 12196 0bd8 0100     		.2byte	0x1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 317


 12197 0bda 55       		.byte	0x55
 12198 0bdb 7C000000 		.4byte	.LVL309
 12199 0bdf 80000000 		.4byte	.LFE755
 12200 0be3 0400     		.2byte	0x4
 12201 0be5 F3       		.byte	0xf3
 12202 0be6 01       		.uleb128 0x1
 12203 0be7 50       		.byte	0x50
 12204 0be8 9F       		.byte	0x9f
 12205 0be9 00000000 		.4byte	0
 12206 0bed 00000000 		.4byte	0
 12207              	.LLST84:
 12208 0bf1 00000000 		.4byte	.LVL292
 12209 0bf5 31000000 		.4byte	.LVL295-1
 12210 0bf9 0100     		.2byte	0x1
 12211 0bfb 51       		.byte	0x51
 12212 0bfc 31000000 		.4byte	.LVL295-1
 12213 0c00 64000000 		.4byte	.LVL300
 12214 0c04 0100     		.2byte	0x1
 12215 0c06 54       		.byte	0x54
 12216 0c07 64000000 		.4byte	.LVL300
 12217 0c0b 66000000 		.4byte	.LVL301
 12218 0c0f 0400     		.2byte	0x4
 12219 0c11 F3       		.byte	0xf3
 12220 0c12 01       		.uleb128 0x1
 12221 0c13 51       		.byte	0x51
 12222 0c14 9F       		.byte	0x9f
 12223 0c15 66000000 		.4byte	.LVL301
 12224 0c19 6C000000 		.4byte	.LVL303
 12225 0c1d 0100     		.2byte	0x1
 12226 0c1f 54       		.byte	0x54
 12227 0c20 6C000000 		.4byte	.LVL303
 12228 0c24 6E000000 		.4byte	.LVL304
 12229 0c28 0400     		.2byte	0x4
 12230 0c2a F3       		.byte	0xf3
 12231 0c2b 01       		.uleb128 0x1
 12232 0c2c 51       		.byte	0x51
 12233 0c2d 9F       		.byte	0x9f
 12234 0c2e 6E000000 		.4byte	.LVL304
 12235 0c32 70000000 		.4byte	.LVL305
 12236 0c36 0100     		.2byte	0x1
 12237 0c38 54       		.byte	0x54
 12238 0c39 70000000 		.4byte	.LVL305
 12239 0c3d 72000000 		.4byte	.LVL306
 12240 0c41 0400     		.2byte	0x4
 12241 0c43 F3       		.byte	0xf3
 12242 0c44 01       		.uleb128 0x1
 12243 0c45 51       		.byte	0x51
 12244 0c46 9F       		.byte	0x9f
 12245 0c47 72000000 		.4byte	.LVL306
 12246 0c4b 74000000 		.4byte	.LVL307
 12247 0c4f 0100     		.2byte	0x1
 12248 0c51 54       		.byte	0x54
 12249 0c52 74000000 		.4byte	.LVL307
 12250 0c56 80000000 		.4byte	.LFE755
 12251 0c5a 0400     		.2byte	0x4
 12252 0c5c F3       		.byte	0xf3
 12253 0c5d 01       		.uleb128 0x1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 318


 12254 0c5e 51       		.byte	0x51
 12255 0c5f 9F       		.byte	0x9f
 12256 0c60 00000000 		.4byte	0
 12257 0c64 00000000 		.4byte	0
 12258              	.LLST85:
 12259 0c68 62000000 		.4byte	.LVL299
 12260 0c6c 66000000 		.4byte	.LVL301
 12261 0c70 0200     		.2byte	0x2
 12262 0c72 30       		.byte	0x30
 12263 0c73 9F       		.byte	0x9f
 12264 0c74 6A000000 		.4byte	.LVL302
 12265 0c78 6E000000 		.4byte	.LVL304
 12266 0c7c 0200     		.2byte	0x2
 12267 0c7e 31       		.byte	0x31
 12268 0c7f 9F       		.byte	0x9f
 12269 0c80 74000000 		.4byte	.LVL307
 12270 0c84 7C000000 		.4byte	.LVL309
 12271 0c88 0100     		.2byte	0x1
 12272 0c8a 54       		.byte	0x54
 12273 0c8b 7C000000 		.4byte	.LVL309
 12274 0c8f 80000000 		.4byte	.LFE755
 12275 0c93 0100     		.2byte	0x1
 12276 0c95 50       		.byte	0x50
 12277 0c96 00000000 		.4byte	0
 12278 0c9a 00000000 		.4byte	0
 12279              	.LLST86:
 12280 0c9e 38000000 		.4byte	.LVL296
 12281 0ca2 5E000000 		.4byte	.LVL298
 12282 0ca6 0100     		.2byte	0x1
 12283 0ca8 50       		.byte	0x50
 12284 0ca9 66000000 		.4byte	.LVL301
 12285 0cad 74000000 		.4byte	.LVL307
 12286 0cb1 0100     		.2byte	0x1
 12287 0cb3 50       		.byte	0x50
 12288 0cb4 00000000 		.4byte	0
 12289 0cb8 00000000 		.4byte	0
 12290              	.LLST87:
 12291 0cbc 3C000000 		.4byte	.LVL297
 12292 0cc0 61000000 		.4byte	.LVL299-1
 12293 0cc4 0100     		.2byte	0x1
 12294 0cc6 52       		.byte	0x52
 12295 0cc7 66000000 		.4byte	.LVL301
 12296 0ccb 74000000 		.4byte	.LVL307
 12297 0ccf 0100     		.2byte	0x1
 12298 0cd1 52       		.byte	0x52
 12299 0cd2 00000000 		.4byte	0
 12300 0cd6 00000000 		.4byte	0
 12301              	.LLST88:
 12302 0cda 00000000 		.4byte	.LVL310
 12303 0cde 0C000000 		.4byte	.LVL311
 12304 0ce2 0100     		.2byte	0x1
 12305 0ce4 50       		.byte	0x50
 12306 0ce5 00000000 		.4byte	0
 12307 0ce9 00000000 		.4byte	0
 12308              	.LLST89:
 12309 0ced 00000000 		.4byte	.LVL310
 12310 0cf1 0E000000 		.4byte	.LVL312
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 319


 12311 0cf5 0100     		.2byte	0x1
 12312 0cf7 51       		.byte	0x51
 12313 0cf8 0E000000 		.4byte	.LVL312
 12314 0cfc 12000000 		.4byte	.LVL313
 12315 0d00 0300     		.2byte	0x3
 12316 0d02 71       		.byte	0x71
 12317 0d03 70       		.sleb128 -16
 12318 0d04 9F       		.byte	0x9f
 12319 0d05 12000000 		.4byte	.LVL313
 12320 0d09 1C000000 		.4byte	.LFE758
 12321 0d0d 0400     		.2byte	0x4
 12322 0d0f F3       		.byte	0xf3
 12323 0d10 01       		.uleb128 0x1
 12324 0d11 51       		.byte	0x51
 12325 0d12 9F       		.byte	0x9f
 12326 0d13 00000000 		.4byte	0
 12327 0d17 00000000 		.4byte	0
 12328              	.LLST90:
 12329 0d1b 0C000000 		.4byte	.LVL311
 12330 0d1f 14000000 		.4byte	.LVL314
 12331 0d23 0100     		.2byte	0x1
 12332 0d25 50       		.byte	0x50
 12333 0d26 00000000 		.4byte	0
 12334 0d2a 00000000 		.4byte	0
 12335              	.LLST91:
 12336 0d2e 00000000 		.4byte	.LVL315
 12337 0d32 0C000000 		.4byte	.LVL316
 12338 0d36 0100     		.2byte	0x1
 12339 0d38 50       		.byte	0x50
 12340 0d39 16000000 		.4byte	.LVL320
 12341 0d3d 18000000 		.4byte	.LVL321
 12342 0d41 0100     		.2byte	0x1
 12343 0d43 50       		.byte	0x50
 12344 0d44 18000000 		.4byte	.LVL321
 12345 0d48 20000000 		.4byte	.LFE759
 12346 0d4c 0400     		.2byte	0x4
 12347 0d4e F3       		.byte	0xf3
 12348 0d4f 01       		.uleb128 0x1
 12349 0d50 50       		.byte	0x50
 12350 0d51 9F       		.byte	0x9f
 12351 0d52 00000000 		.4byte	0
 12352 0d56 00000000 		.4byte	0
 12353              	.LLST92:
 12354 0d5a 00000000 		.4byte	.LVL315
 12355 0d5e 0E000000 		.4byte	.LVL317
 12356 0d62 0100     		.2byte	0x1
 12357 0d64 51       		.byte	0x51
 12358 0d65 0E000000 		.4byte	.LVL317
 12359 0d69 16000000 		.4byte	.LVL320
 12360 0d6d 0300     		.2byte	0x3
 12361 0d6f 71       		.byte	0x71
 12362 0d70 70       		.sleb128 -16
 12363 0d71 9F       		.byte	0x9f
 12364 0d72 16000000 		.4byte	.LVL320
 12365 0d76 20000000 		.4byte	.LFE759
 12366 0d7a 0100     		.2byte	0x1
 12367 0d7c 51       		.byte	0x51
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 320


 12368 0d7d 00000000 		.4byte	0
 12369 0d81 00000000 		.4byte	0
 12370              	.LLST93:
 12371 0d85 00000000 		.4byte	.LVL315
 12372 0d89 14000000 		.4byte	.LVL319
 12373 0d8d 0200     		.2byte	0x2
 12374 0d8f 30       		.byte	0x30
 12375 0d90 9F       		.byte	0x9f
 12376 0d91 14000000 		.4byte	.LVL319
 12377 0d95 16000000 		.4byte	.LVL320
 12378 0d99 0100     		.2byte	0x1
 12379 0d9b 50       		.byte	0x50
 12380 0d9c 16000000 		.4byte	.LVL320
 12381 0da0 18000000 		.4byte	.LVL321
 12382 0da4 0200     		.2byte	0x2
 12383 0da6 30       		.byte	0x30
 12384 0da7 9F       		.byte	0x9f
 12385 0da8 18000000 		.4byte	.LVL321
 12386 0dac 20000000 		.4byte	.LFE759
 12387 0db0 0100     		.2byte	0x1
 12388 0db2 50       		.byte	0x50
 12389 0db3 00000000 		.4byte	0
 12390 0db7 00000000 		.4byte	0
 12391              	.LLST94:
 12392 0dbb 0C000000 		.4byte	.LVL316
 12393 0dbf 12000000 		.4byte	.LVL318
 12394 0dc3 0100     		.2byte	0x1
 12395 0dc5 50       		.byte	0x50
 12396 0dc6 00000000 		.4byte	0
 12397 0dca 00000000 		.4byte	0
 12398              	.LLST95:
 12399 0dce 00000000 		.4byte	.LVL325
 12400 0dd2 09000000 		.4byte	.LVL326-1
 12401 0dd6 0100     		.2byte	0x1
 12402 0dd8 50       		.byte	0x50
 12403 0dd9 09000000 		.4byte	.LVL326-1
 12404 0ddd 78000000 		.4byte	.LVL332
 12405 0de1 0100     		.2byte	0x1
 12406 0de3 55       		.byte	0x55
 12407 0de4 78000000 		.4byte	.LVL332
 12408 0de8 80000000 		.4byte	.LFE767
 12409 0dec 0400     		.2byte	0x4
 12410 0dee F3       		.byte	0xf3
 12411 0def 01       		.uleb128 0x1
 12412 0df0 50       		.byte	0x50
 12413 0df1 9F       		.byte	0x9f
 12414 0df2 00000000 		.4byte	0
 12415 0df6 00000000 		.4byte	0
 12416              	.LLST96:
 12417 0dfa 00000000 		.4byte	.LVL325
 12418 0dfe 09000000 		.4byte	.LVL326-1
 12419 0e02 0100     		.2byte	0x1
 12420 0e04 51       		.byte	0x51
 12421 0e05 09000000 		.4byte	.LVL326-1
 12422 0e09 4A000000 		.4byte	.LVL330
 12423 0e0d 0100     		.2byte	0x1
 12424 0e0f 54       		.byte	0x54
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 321


 12425 0e10 4A000000 		.4byte	.LVL330
 12426 0e14 80000000 		.4byte	.LFE767
 12427 0e18 0400     		.2byte	0x4
 12428 0e1a F3       		.byte	0xf3
 12429 0e1b 01       		.uleb128 0x1
 12430 0e1c 51       		.byte	0x51
 12431 0e1d 9F       		.byte	0x9f
 12432 0e1e 00000000 		.4byte	0
 12433 0e22 00000000 		.4byte	0
 12434              	.LLST97:
 12435 0e26 4A000000 		.4byte	.LVL330
 12436 0e2a 78000000 		.4byte	.LVL332
 12437 0e2e 0100     		.2byte	0x1
 12438 0e30 54       		.byte	0x54
 12439 0e31 78000000 		.4byte	.LVL332
 12440 0e35 80000000 		.4byte	.LFE767
 12441 0e39 0100     		.2byte	0x1
 12442 0e3b 50       		.byte	0x50
 12443 0e3c 00000000 		.4byte	0
 12444 0e40 00000000 		.4byte	0
 12445              	.LLST98:
 12446 0e44 00000000 		.4byte	.LVL333
 12447 0e48 0D000000 		.4byte	.LVL334-1
 12448 0e4c 0100     		.2byte	0x1
 12449 0e4e 50       		.byte	0x50
 12450 0e4f 0D000000 		.4byte	.LVL334-1
 12451 0e53 9C000000 		.4byte	.LVL344
 12452 0e57 0100     		.2byte	0x1
 12453 0e59 57       		.byte	0x57
 12454 0e5a 9C000000 		.4byte	.LVL344
 12455 0e5e A4000000 		.4byte	.LFE768
 12456 0e62 0400     		.2byte	0x4
 12457 0e64 F3       		.byte	0xf3
 12458 0e65 01       		.uleb128 0x1
 12459 0e66 50       		.byte	0x50
 12460 0e67 9F       		.byte	0x9f
 12461 0e68 00000000 		.4byte	0
 12462 0e6c 00000000 		.4byte	0
 12463              	.LLST99:
 12464 0e70 00000000 		.4byte	.LVL333
 12465 0e74 0D000000 		.4byte	.LVL334-1
 12466 0e78 0100     		.2byte	0x1
 12467 0e7a 51       		.byte	0x51
 12468 0e7b 0D000000 		.4byte	.LVL334-1
 12469 0e7f 80000000 		.4byte	.LVL338
 12470 0e83 0100     		.2byte	0x1
 12471 0e85 55       		.byte	0x55
 12472 0e86 80000000 		.4byte	.LVL338
 12473 0e8a 86000000 		.4byte	.LVL341
 12474 0e8e 0400     		.2byte	0x4
 12475 0e90 F3       		.byte	0xf3
 12476 0e91 01       		.uleb128 0x1
 12477 0e92 51       		.byte	0x51
 12478 0e93 9F       		.byte	0x9f
 12479 0e94 86000000 		.4byte	.LVL341
 12480 0e98 88000000 		.4byte	.LVL342
 12481 0e9c 0100     		.2byte	0x1
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 322


 12482 0e9e 55       		.byte	0x55
 12483 0e9f 88000000 		.4byte	.LVL342
 12484 0ea3 A4000000 		.4byte	.LFE768
 12485 0ea7 0400     		.2byte	0x4
 12486 0ea9 F3       		.byte	0xf3
 12487 0eaa 01       		.uleb128 0x1
 12488 0eab 51       		.byte	0x51
 12489 0eac 9F       		.byte	0x9f
 12490 0ead 00000000 		.4byte	0
 12491 0eb1 00000000 		.4byte	0
 12492              	.LLST100:
 12493 0eb5 00000000 		.4byte	.LVL333
 12494 0eb9 0D000000 		.4byte	.LVL334-1
 12495 0ebd 0100     		.2byte	0x1
 12496 0ebf 52       		.byte	0x52
 12497 0ec0 0D000000 		.4byte	.LVL334-1
 12498 0ec4 84000000 		.4byte	.LVL340
 12499 0ec8 0100     		.2byte	0x1
 12500 0eca 54       		.byte	0x54
 12501 0ecb 84000000 		.4byte	.LVL340
 12502 0ecf 86000000 		.4byte	.LVL341
 12503 0ed3 0400     		.2byte	0x4
 12504 0ed5 F3       		.byte	0xf3
 12505 0ed6 01       		.uleb128 0x1
 12506 0ed7 52       		.byte	0x52
 12507 0ed8 9F       		.byte	0x9f
 12508 0ed9 86000000 		.4byte	.LVL341
 12509 0edd 88000000 		.4byte	.LVL342
 12510 0ee1 0100     		.2byte	0x1
 12511 0ee3 54       		.byte	0x54
 12512 0ee4 88000000 		.4byte	.LVL342
 12513 0ee8 A4000000 		.4byte	.LFE768
 12514 0eec 0400     		.2byte	0x4
 12515 0eee F3       		.byte	0xf3
 12516 0eef 01       		.uleb128 0x1
 12517 0ef0 52       		.byte	0x52
 12518 0ef1 9F       		.byte	0x9f
 12519 0ef2 00000000 		.4byte	0
 12520 0ef6 00000000 		.4byte	0
 12521              	.LLST101:
 12522 0efa 00000000 		.4byte	.LVL333
 12523 0efe 0D000000 		.4byte	.LVL334-1
 12524 0f02 0100     		.2byte	0x1
 12525 0f04 53       		.byte	0x53
 12526 0f05 0D000000 		.4byte	.LVL334-1
 12527 0f09 9C000000 		.4byte	.LVL344
 12528 0f0d 0100     		.2byte	0x1
 12529 0f0f 56       		.byte	0x56
 12530 0f10 9C000000 		.4byte	.LVL344
 12531 0f14 A4000000 		.4byte	.LFE768
 12532 0f18 0400     		.2byte	0x4
 12533 0f1a F3       		.byte	0xf3
 12534 0f1b 01       		.uleb128 0x1
 12535 0f1c 53       		.byte	0x53
 12536 0f1d 9F       		.byte	0x9f
 12537 0f1e 00000000 		.4byte	0
 12538 0f22 00000000 		.4byte	0
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 323


 12539              	.LLST102:
 12540 0f26 82000000 		.4byte	.LVL339
 12541 0f2a 86000000 		.4byte	.LVL341
 12542 0f2e 0200     		.2byte	0x2
 12543 0f30 31       		.byte	0x31
 12544 0f31 9F       		.byte	0x9f
 12545 0f32 88000000 		.4byte	.LVL342
 12546 0f36 9C000000 		.4byte	.LVL344
 12547 0f3a 0100     		.2byte	0x1
 12548 0f3c 54       		.byte	0x54
 12549 0f3d 9C000000 		.4byte	.LVL344
 12550 0f41 A4000000 		.4byte	.LFE768
 12551 0f45 0100     		.2byte	0x1
 12552 0f47 50       		.byte	0x50
 12553 0f48 00000000 		.4byte	0
 12554 0f4c 00000000 		.4byte	0
 12555              	.LLST103:
 12556 0f50 00000000 		.4byte	.LVL345
 12557 0f54 21000000 		.4byte	.LVL350-1
 12558 0f58 0100     		.2byte	0x1
 12559 0f5a 50       		.byte	0x50
 12560 0f5b 21000000 		.4byte	.LVL350-1
 12561 0f5f D6000000 		.4byte	.LVL359
 12562 0f63 0100     		.2byte	0x1
 12563 0f65 54       		.byte	0x54
 12564 0f66 D6000000 		.4byte	.LVL359
 12565 0f6a E4000000 		.4byte	.LFE769
 12566 0f6e 0400     		.2byte	0x4
 12567 0f70 F3       		.byte	0xf3
 12568 0f71 01       		.uleb128 0x1
 12569 0f72 50       		.byte	0x50
 12570 0f73 9F       		.byte	0x9f
 12571 0f74 00000000 		.4byte	0
 12572 0f78 00000000 		.4byte	0
 12573              	.LLST104:
 12574 0f7c 00000000 		.4byte	.LVL345
 12575 0f80 21000000 		.4byte	.LVL350-1
 12576 0f84 0100     		.2byte	0x1
 12577 0f86 51       		.byte	0x51
 12578 0f87 21000000 		.4byte	.LVL350-1
 12579 0f8b 46000000 		.4byte	.LVL352
 12580 0f8f 0100     		.2byte	0x1
 12581 0f91 56       		.byte	0x56
 12582 0f92 46000000 		.4byte	.LVL352
 12583 0f96 4C000000 		.4byte	.LVL353
 12584 0f9a 0400     		.2byte	0x4
 12585 0f9c F3       		.byte	0xf3
 12586 0f9d 01       		.uleb128 0x1
 12587 0f9e 51       		.byte	0x51
 12588 0f9f 9F       		.byte	0x9f
 12589 0fa0 4C000000 		.4byte	.LVL353
 12590 0fa4 6C000000 		.4byte	.LVL354
 12591 0fa8 0100     		.2byte	0x1
 12592 0faa 56       		.byte	0x56
 12593 0fab 6C000000 		.4byte	.LVL354
 12594 0faf E4000000 		.4byte	.LFE769
 12595 0fb3 0400     		.2byte	0x4
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 324


 12596 0fb5 F3       		.byte	0xf3
 12597 0fb6 01       		.uleb128 0x1
 12598 0fb7 51       		.byte	0x51
 12599 0fb8 9F       		.byte	0x9f
 12600 0fb9 00000000 		.4byte	0
 12601 0fbd 00000000 		.4byte	0
 12602              	.LLST105:
 12603 0fc1 00000000 		.4byte	.LVL345
 12604 0fc5 21000000 		.4byte	.LVL350-1
 12605 0fc9 0100     		.2byte	0x1
 12606 0fcb 52       		.byte	0x52
 12607 0fcc 21000000 		.4byte	.LVL350-1
 12608 0fd0 E4000000 		.4byte	.LFE769
 12609 0fd4 0400     		.2byte	0x4
 12610 0fd6 F3       		.byte	0xf3
 12611 0fd7 01       		.uleb128 0x1
 12612 0fd8 52       		.byte	0x52
 12613 0fd9 9F       		.byte	0x9f
 12614 0fda 00000000 		.4byte	0
 12615 0fde 00000000 		.4byte	0
 12616              	.LLST106:
 12617 0fe2 00000000 		.4byte	.LVL345
 12618 0fe6 14000000 		.4byte	.LVL347
 12619 0fea 0100     		.2byte	0x1
 12620 0fec 53       		.byte	0x53
 12621 0fed 14000000 		.4byte	.LVL347
 12622 0ff1 16000000 		.4byte	.LVL348
 12623 0ff5 0400     		.2byte	0x4
 12624 0ff7 F3       		.byte	0xf3
 12625 0ff8 01       		.uleb128 0x1
 12626 0ff9 53       		.byte	0x53
 12627 0ffa 9F       		.byte	0x9f
 12628 0ffb 16000000 		.4byte	.LVL348
 12629 0fff 21000000 		.4byte	.LVL350-1
 12630 1003 0100     		.2byte	0x1
 12631 1005 53       		.byte	0x53
 12632 1006 21000000 		.4byte	.LVL350-1
 12633 100a D6000000 		.4byte	.LVL359
 12634 100e 0100     		.2byte	0x1
 12635 1010 57       		.byte	0x57
 12636 1011 D6000000 		.4byte	.LVL359
 12637 1015 E4000000 		.4byte	.LFE769
 12638 1019 0400     		.2byte	0x4
 12639 101b F3       		.byte	0xf3
 12640 101c 01       		.uleb128 0x1
 12641 101d 53       		.byte	0x53
 12642 101e 9F       		.byte	0x9f
 12643 101f 00000000 		.4byte	0
 12644 1023 00000000 		.4byte	0
 12645              	.LLST107:
 12646 1027 1E000000 		.4byte	.LVL349
 12647 102b D6000000 		.4byte	.LVL359
 12648 102f 0100     		.2byte	0x1
 12649 1031 54       		.byte	0x54
 12650 1032 D6000000 		.4byte	.LVL359
 12651 1036 E4000000 		.4byte	.LFE769
 12652 103a 0400     		.2byte	0x4
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 325


 12653 103c F3       		.byte	0xf3
 12654 103d 01       		.uleb128 0x1
 12655 103e 50       		.byte	0x50
 12656 103f 9F       		.byte	0x9f
 12657 1040 00000000 		.4byte	0
 12658 1044 00000000 		.4byte	0
 12659              	.LLST108:
 12660 1048 02000000 		.4byte	.LVL346
 12661 104c 6C000000 		.4byte	.LVL354
 12662 1050 0200     		.2byte	0x2
 12663 1052 31       		.byte	0x31
 12664 1053 9F       		.byte	0x9f
 12665 1054 6C000000 		.4byte	.LVL354
 12666 1058 D6000000 		.4byte	.LVL359
 12667 105c 0100     		.2byte	0x1
 12668 105e 55       		.byte	0x55
 12669 105f D6000000 		.4byte	.LVL359
 12670 1063 E4000000 		.4byte	.LFE769
 12671 1067 0100     		.2byte	0x1
 12672 1069 50       		.byte	0x50
 12673 106a 00000000 		.4byte	0
 12674 106e 00000000 		.4byte	0
 12675              	.LLST109:
 12676 1072 2E000000 		.4byte	.LVL351
 12677 1076 77000000 		.4byte	.LVL355-1
 12678 107a 0100     		.2byte	0x1
 12679 107c 53       		.byte	0x53
 12680 107d 00000000 		.4byte	0
 12681 1081 00000000 		.4byte	0
 12682              	.LLST110:
 12683 1085 00000000 		.4byte	.LVL360
 12684 1089 25000000 		.4byte	.LVL364-1
 12685 108d 0100     		.2byte	0x1
 12686 108f 50       		.byte	0x50
 12687 1090 25000000 		.4byte	.LVL364-1
 12688 1094 12010000 		.4byte	.LVL376
 12689 1098 0100     		.2byte	0x1
 12690 109a 54       		.byte	0x54
 12691 109b 12010000 		.4byte	.LVL376
 12692 109f 20010000 		.4byte	.LFE770
 12693 10a3 0400     		.2byte	0x4
 12694 10a5 F3       		.byte	0xf3
 12695 10a6 01       		.uleb128 0x1
 12696 10a7 50       		.byte	0x50
 12697 10a8 9F       		.byte	0x9f
 12698 10a9 00000000 		.4byte	0
 12699 10ad 00000000 		.4byte	0
 12700              	.LLST111:
 12701 10b1 00000000 		.4byte	.LVL360
 12702 10b5 25000000 		.4byte	.LVL364-1
 12703 10b9 0100     		.2byte	0x1
 12704 10bb 51       		.byte	0x51
 12705 10bc 25000000 		.4byte	.LVL364-1
 12706 10c0 B6000000 		.4byte	.LVL369
 12707 10c4 0100     		.2byte	0x1
 12708 10c6 58       		.byte	0x58
 12709 10c7 B6000000 		.4byte	.LVL369
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 326


 12710 10cb E0000000 		.4byte	.LVL372
 12711 10cf 0400     		.2byte	0x4
 12712 10d1 F3       		.byte	0xf3
 12713 10d2 01       		.uleb128 0x1
 12714 10d3 51       		.byte	0x51
 12715 10d4 9F       		.byte	0x9f
 12716 10d5 E0000000 		.4byte	.LVL372
 12717 10d9 EA000000 		.4byte	.LVL373
 12718 10dd 0100     		.2byte	0x1
 12719 10df 58       		.byte	0x58
 12720 10e0 EA000000 		.4byte	.LVL373
 12721 10e4 20010000 		.4byte	.LFE770
 12722 10e8 0400     		.2byte	0x4
 12723 10ea F3       		.byte	0xf3
 12724 10eb 01       		.uleb128 0x1
 12725 10ec 51       		.byte	0x51
 12726 10ed 9F       		.byte	0x9f
 12727 10ee 00000000 		.4byte	0
 12728 10f2 00000000 		.4byte	0
 12729              	.LLST112:
 12730 10f6 00000000 		.4byte	.LVL360
 12731 10fa 25000000 		.4byte	.LVL364-1
 12732 10fe 0100     		.2byte	0x1
 12733 1100 52       		.byte	0x52
 12734 1101 25000000 		.4byte	.LVL364-1
 12735 1105 20010000 		.4byte	.LFE770
 12736 1109 0400     		.2byte	0x4
 12737 110b F3       		.byte	0xf3
 12738 110c 01       		.uleb128 0x1
 12739 110d 52       		.byte	0x52
 12740 110e 9F       		.byte	0x9f
 12741 110f 00000000 		.4byte	0
 12742 1113 00000000 		.4byte	0
 12743              	.LLST113:
 12744 1117 00000000 		.4byte	.LVL360
 12745 111b 18000000 		.4byte	.LVL362
 12746 111f 0100     		.2byte	0x1
 12747 1121 53       		.byte	0x53
 12748 1122 18000000 		.4byte	.LVL362
 12749 1126 1A000000 		.4byte	.LVL363
 12750 112a 0400     		.2byte	0x4
 12751 112c F3       		.byte	0xf3
 12752 112d 01       		.uleb128 0x1
 12753 112e 53       		.byte	0x53
 12754 112f 9F       		.byte	0x9f
 12755 1130 1A000000 		.4byte	.LVL363
 12756 1134 25000000 		.4byte	.LVL364-1
 12757 1138 0100     		.2byte	0x1
 12758 113a 53       		.byte	0x53
 12759 113b 25000000 		.4byte	.LVL364-1
 12760 113f 12010000 		.4byte	.LVL376
 12761 1143 0100     		.2byte	0x1
 12762 1145 59       		.byte	0x59
 12763 1146 12010000 		.4byte	.LVL376
 12764 114a 20010000 		.4byte	.LFE770
 12765 114e 0400     		.2byte	0x4
 12766 1150 F3       		.byte	0xf3
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 327


 12767 1151 01       		.uleb128 0x1
 12768 1152 53       		.byte	0x53
 12769 1153 9F       		.byte	0x9f
 12770 1154 00000000 		.4byte	0
 12771 1158 00000000 		.4byte	0
 12772              	.LLST114:
 12773 115c 00000000 		.4byte	.LVL360
 12774 1160 12010000 		.4byte	.LVL376
 12775 1164 0200     		.2byte	0x2
 12776 1166 91       		.byte	0x91
 12777 1167 00       		.sleb128 0
 12778 1168 12010000 		.4byte	.LVL376
 12779 116c 20010000 		.4byte	.LFE770
 12780 1170 0200     		.2byte	0x2
 12781 1172 7D       		.byte	0x7d
 12782 1173 00       		.sleb128 0
 12783 1174 00000000 		.4byte	0
 12784 1178 00000000 		.4byte	0
 12785              	.LLST115:
 12786 117c 26000000 		.4byte	.LVL364
 12787 1180 12010000 		.4byte	.LVL376
 12788 1184 0100     		.2byte	0x1
 12789 1186 54       		.byte	0x54
 12790 1187 12010000 		.4byte	.LVL376
 12791 118b 20010000 		.4byte	.LFE770
 12792 118f 0400     		.2byte	0x4
 12793 1191 F3       		.byte	0xf3
 12794 1192 01       		.uleb128 0x1
 12795 1193 50       		.byte	0x50
 12796 1194 9F       		.byte	0x9f
 12797 1195 00000000 		.4byte	0
 12798 1199 00000000 		.4byte	0
 12799              	.LLST116:
 12800 119d 4C000000 		.4byte	.LVL365
 12801 11a1 96000000 		.4byte	.LVL367
 12802 11a5 0100     		.2byte	0x1
 12803 11a7 53       		.byte	0x53
 12804 11a8 00000000 		.4byte	0
 12805 11ac 00000000 		.4byte	0
 12806              	.LLST117:
 12807 11b0 06000000 		.4byte	.LVL361
 12808 11b4 90000000 		.4byte	.LVL366
 12809 11b8 0200     		.2byte	0x2
 12810 11ba 31       		.byte	0x31
 12811 11bb 9F       		.byte	0x9f
 12812 11bc 90000000 		.4byte	.LVL366
 12813 11c0 12010000 		.4byte	.LVL376
 12814 11c4 0100     		.2byte	0x1
 12815 11c6 55       		.byte	0x55
 12816 11c7 12010000 		.4byte	.LVL376
 12817 11cb 20010000 		.4byte	.LFE770
 12818 11cf 0100     		.2byte	0x1
 12819 11d1 50       		.byte	0x50
 12820 11d2 00000000 		.4byte	0
 12821 11d6 00000000 		.4byte	0
 12822              	.LLST118:
 12823 11da 08010000 		.4byte	.LVL374
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 328


 12824 11de 0C010000 		.4byte	.LVL375
 12825 11e2 0100     		.2byte	0x1
 12826 11e4 57       		.byte	0x57
 12827 11e5 00000000 		.4byte	0
 12828 11e9 00000000 		.4byte	0
 12829              	.LLST119:
 12830 11ed 00000000 		.4byte	.LVL377
 12831 11f1 1D000000 		.4byte	.LVL379-1
 12832 11f5 0100     		.2byte	0x1
 12833 11f7 50       		.byte	0x50
 12834 11f8 1D000000 		.4byte	.LVL379-1
 12835 11fc C0000000 		.4byte	.LVL388
 12836 1200 0100     		.2byte	0x1
 12837 1202 54       		.byte	0x54
 12838 1203 C0000000 		.4byte	.LVL388
 12839 1207 CC000000 		.4byte	.LFE771
 12840 120b 0400     		.2byte	0x4
 12841 120d F3       		.byte	0xf3
 12842 120e 01       		.uleb128 0x1
 12843 120f 50       		.byte	0x50
 12844 1210 9F       		.byte	0x9f
 12845 1211 00000000 		.4byte	0
 12846 1215 00000000 		.4byte	0
 12847              	.LLST120:
 12848 1219 00000000 		.4byte	.LVL377
 12849 121d 1D000000 		.4byte	.LVL379-1
 12850 1221 0100     		.2byte	0x1
 12851 1223 51       		.byte	0x51
 12852 1224 1D000000 		.4byte	.LVL379-1
 12853 1228 C0000000 		.4byte	.LVL388
 12854 122c 0100     		.2byte	0x1
 12855 122e 55       		.byte	0x55
 12856 122f C0000000 		.4byte	.LVL388
 12857 1233 CC000000 		.4byte	.LFE771
 12858 1237 0400     		.2byte	0x4
 12859 1239 F3       		.byte	0xf3
 12860 123a 01       		.uleb128 0x1
 12861 123b 51       		.byte	0x51
 12862 123c 9F       		.byte	0x9f
 12863 123d 00000000 		.4byte	0
 12864 1241 00000000 		.4byte	0
 12865              	.LLST121:
 12866 1245 1E000000 		.4byte	.LVL379
 12867 1249 C0000000 		.4byte	.LVL388
 12868 124d 0100     		.2byte	0x1
 12869 124f 54       		.byte	0x54
 12870 1250 C0000000 		.4byte	.LVL388
 12871 1254 CC000000 		.4byte	.LFE771
 12872 1258 0400     		.2byte	0x4
 12873 125a F3       		.byte	0xf3
 12874 125b 01       		.uleb128 0x1
 12875 125c 50       		.byte	0x50
 12876 125d 9F       		.byte	0x9f
 12877 125e 00000000 		.4byte	0
 12878 1262 00000000 		.4byte	0
 12879              	.LLST122:
 12880 1266 38000000 		.4byte	.LVL380
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 329


 12881 126a 4A000000 		.4byte	.LVL381
 12882 126e 0100     		.2byte	0x1
 12883 1270 53       		.byte	0x53
 12884 1271 00000000 		.4byte	0
 12885 1275 00000000 		.4byte	0
 12886              	.LLST123:
 12887 1279 BA000000 		.4byte	.LVL386
 12888 127d BE000000 		.4byte	.LVL387
 12889 1281 0100     		.2byte	0x1
 12890 1283 56       		.byte	0x56
 12891 1284 00000000 		.4byte	0
 12892 1288 00000000 		.4byte	0
 12893              	.LLST124:
 12894 128c 00000000 		.4byte	.LVL389
 12895 1290 0C000000 		.4byte	.LVL390
 12896 1294 0100     		.2byte	0x1
 12897 1296 50       		.byte	0x50
 12898 1297 00000000 		.4byte	0
 12899 129b 00000000 		.4byte	0
 12900              	.LLST125:
 12901 129f 0C000000 		.4byte	.LVL390
 12902 12a3 22000000 		.4byte	.LVL393
 12903 12a7 0100     		.2byte	0x1
 12904 12a9 54       		.byte	0x54
 12905 12aa 24000000 		.4byte	.LVL394
 12906 12ae 26000000 		.4byte	.LVL395
 12907 12b2 0100     		.2byte	0x1
 12908 12b4 54       		.byte	0x54
 12909 12b5 00000000 		.4byte	0
 12910 12b9 00000000 		.4byte	0
 12911              	.LLST126:
 12912 12bd 20000000 		.4byte	.LVL392
 12913 12c1 24000000 		.4byte	.LVL394
 12914 12c5 0200     		.2byte	0x2
 12915 12c7 31       		.byte	0x31
 12916 12c8 9F       		.byte	0x9f
 12917 12c9 26000000 		.4byte	.LVL395
 12918 12cd 2E000000 		.4byte	.LVL397
 12919 12d1 0100     		.2byte	0x1
 12920 12d3 54       		.byte	0x54
 12921 12d4 2E000000 		.4byte	.LVL397
 12922 12d8 34000000 		.4byte	.LFE772
 12923 12dc 0100     		.2byte	0x1
 12924 12de 50       		.byte	0x50
 12925 12df 00000000 		.4byte	0
 12926 12e3 00000000 		.4byte	0
 12927              		.section	.debug_aranges,"",%progbits
 12928 0000 9C010000 		.4byte	0x19c
 12929 0004 0200     		.2byte	0x2
 12930 0006 00000000 		.4byte	.Ldebug_info0
 12931 000a 04       		.byte	0x4
 12932 000b 00       		.byte	0
 12933 000c 0000     		.2byte	0
 12934 000e 0000     		.2byte	0
 12935 0010 00000000 		.4byte	.LFB735
 12936 0014 4C000000 		.4byte	.LFE735-.LFB735
 12937 0018 00000000 		.4byte	.LFB763
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 330


 12938 001c 2C000000 		.4byte	.LFE763-.LFB763
 12939 0020 00000000 		.4byte	.LFB762
 12940 0024 12000000 		.4byte	.LFE762-.LFB762
 12941 0028 00000000 		.4byte	.LFB726
 12942 002c 9E000000 		.4byte	.LFE726-.LFB726
 12943 0030 00000000 		.4byte	.LFB760
 12944 0034 58000000 		.4byte	.LFE760-.LFB760
 12945 0038 00000000 		.4byte	.LFB727
 12946 003c AC000000 		.4byte	.LFE727-.LFB727
 12947 0040 00000000 		.4byte	.LFB761
 12948 0044 44000000 		.4byte	.LFE761-.LFB761
 12949 0048 00000000 		.4byte	.LFB757
 12950 004c 28000000 		.4byte	.LFE757-.LFB757
 12951 0050 00000000 		.4byte	.LFB773
 12952 0054 68000000 		.4byte	.LFE773-.LFB773
 12953 0058 00000000 		.4byte	.LFB725
 12954 005c 62000000 		.4byte	.LFE725-.LFB725
 12955 0060 00000000 		.4byte	.LFB728
 12956 0064 B0000000 		.4byte	.LFE728-.LFB728
 12957 0068 00000000 		.4byte	.LFB731
 12958 006c 20000000 		.4byte	.LFE731-.LFB731
 12959 0070 00000000 		.4byte	.LFB732
 12960 0074 30000000 		.4byte	.LFE732-.LFB732
 12961 0078 00000000 		.4byte	.LFB733
 12962 007c DC000000 		.4byte	.LFE733-.LFB733
 12963 0080 00000000 		.4byte	.LFB736
 12964 0084 88000000 		.4byte	.LFE736-.LFB736
 12965 0088 00000000 		.4byte	.LFB737
 12966 008c A4000000 		.4byte	.LFE737-.LFB737
 12967 0090 00000000 		.4byte	.LFB738
 12968 0094 7C000000 		.4byte	.LFE738-.LFB738
 12969 0098 00000000 		.4byte	.LFB739
 12970 009c 24000000 		.4byte	.LFE739-.LFB739
 12971 00a0 00000000 		.4byte	.LFB740
 12972 00a4 14000000 		.4byte	.LFE740-.LFB740
 12973 00a8 00000000 		.4byte	.LFB742
 12974 00ac 0C000000 		.4byte	.LFE742-.LFB742
 12975 00b0 00000000 		.4byte	.LFB743
 12976 00b4 14000000 		.4byte	.LFE743-.LFB743
 12977 00b8 00000000 		.4byte	.LFB744
 12978 00bc 0C000000 		.4byte	.LFE744-.LFB744
 12979 00c0 00000000 		.4byte	.LFB745
 12980 00c4 28000000 		.4byte	.LFE745-.LFB745
 12981 00c8 00000000 		.4byte	.LFB746
 12982 00cc FC000000 		.4byte	.LFE746-.LFB746
 12983 00d0 00000000 		.4byte	.LFB741
 12984 00d4 F0000000 		.4byte	.LFE741-.LFB741
 12985 00d8 00000000 		.4byte	.LFB729
 12986 00dc AC000000 		.4byte	.LFE729-.LFB729
 12987 00e0 00000000 		.4byte	.LFB730
 12988 00e4 50000000 		.4byte	.LFE730-.LFB730
 12989 00e8 00000000 		.4byte	.LFB747
 12990 00ec C8000000 		.4byte	.LFE747-.LFB747
 12991 00f0 00000000 		.4byte	.LFB734
 12992 00f4 B8000000 		.4byte	.LFE734-.LFB734
 12993 00f8 00000000 		.4byte	.LFB748
 12994 00fc 34000000 		.4byte	.LFE748-.LFB748
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 331


 12995 0100 00000000 		.4byte	.LFB749
 12996 0104 5C000000 		.4byte	.LFE749-.LFB749
 12997 0108 00000000 		.4byte	.LFB750
 12998 010c 3C000000 		.4byte	.LFE750-.LFB750
 12999 0110 00000000 		.4byte	.LFB751
 13000 0114 88000000 		.4byte	.LFE751-.LFB751
 13001 0118 00000000 		.4byte	.LFB752
 13002 011c 84000000 		.4byte	.LFE752-.LFB752
 13003 0120 00000000 		.4byte	.LFB753
 13004 0124 34000000 		.4byte	.LFE753-.LFB753
 13005 0128 00000000 		.4byte	.LFB754
 13006 012c 14000000 		.4byte	.LFE754-.LFB754
 13007 0130 00000000 		.4byte	.LFB755
 13008 0134 80000000 		.4byte	.LFE755-.LFB755
 13009 0138 00000000 		.4byte	.LFB756
 13010 013c 10000000 		.4byte	.LFE756-.LFB756
 13011 0140 00000000 		.4byte	.LFB758
 13012 0144 1C000000 		.4byte	.LFE758-.LFB758
 13013 0148 00000000 		.4byte	.LFB759
 13014 014c 20000000 		.4byte	.LFE759-.LFB759
 13015 0150 00000000 		.4byte	.LFB764
 13016 0154 0C000000 		.4byte	.LFE764-.LFB764
 13017 0158 00000000 		.4byte	.LFB765
 13018 015c 20000000 		.4byte	.LFE765-.LFB765
 13019 0160 00000000 		.4byte	.LFB766
 13020 0164 20000000 		.4byte	.LFE766-.LFB766
 13021 0168 00000000 		.4byte	.LFB767
 13022 016c 80000000 		.4byte	.LFE767-.LFB767
 13023 0170 00000000 		.4byte	.LFB768
 13024 0174 A4000000 		.4byte	.LFE768-.LFB768
 13025 0178 00000000 		.4byte	.LFB769
 13026 017c E4000000 		.4byte	.LFE769-.LFB769
 13027 0180 00000000 		.4byte	.LFB770
 13028 0184 20010000 		.4byte	.LFE770-.LFB770
 13029 0188 00000000 		.4byte	.LFB771
 13030 018c CC000000 		.4byte	.LFE771-.LFB771
 13031 0190 00000000 		.4byte	.LFB772
 13032 0194 34000000 		.4byte	.LFE772-.LFB772
 13033 0198 00000000 		.4byte	0
 13034 019c 00000000 		.4byte	0
 13035              		.section	.debug_ranges,"",%progbits
 13036              	.Ldebug_ranges0:
 13037 0000 0E000000 		.4byte	.LBB122
 13038 0004 58000000 		.4byte	.LBE122
 13039 0008 5C000000 		.4byte	.LBB126
 13040 000c DA000000 		.4byte	.LBE126
 13041 0010 00000000 		.4byte	0
 13042 0014 00000000 		.4byte	0
 13043 0018 4C000000 		.4byte	.LBB136
 13044 001c 62000000 		.4byte	.LBE136
 13045 0020 66000000 		.4byte	.LBB137
 13046 0024 6E000000 		.4byte	.LBE137
 13047 0028 76000000 		.4byte	.LBB138
 13048 002c 8C000000 		.4byte	.LBE138
 13049 0030 00000000 		.4byte	0
 13050 0034 00000000 		.4byte	0
 13051 0038 00000000 		.4byte	.LFB735
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 332


 13052 003c 4C000000 		.4byte	.LFE735
 13053 0040 00000000 		.4byte	.LFB763
 13054 0044 2C000000 		.4byte	.LFE763
 13055 0048 00000000 		.4byte	.LFB762
 13056 004c 12000000 		.4byte	.LFE762
 13057 0050 00000000 		.4byte	.LFB726
 13058 0054 9E000000 		.4byte	.LFE726
 13059 0058 00000000 		.4byte	.LFB760
 13060 005c 58000000 		.4byte	.LFE760
 13061 0060 00000000 		.4byte	.LFB727
 13062 0064 AC000000 		.4byte	.LFE727
 13063 0068 00000000 		.4byte	.LFB761
 13064 006c 44000000 		.4byte	.LFE761
 13065 0070 00000000 		.4byte	.LFB757
 13066 0074 28000000 		.4byte	.LFE757
 13067 0078 00000000 		.4byte	.LFB773
 13068 007c 68000000 		.4byte	.LFE773
 13069 0080 00000000 		.4byte	.LFB725
 13070 0084 62000000 		.4byte	.LFE725
 13071 0088 00000000 		.4byte	.LFB728
 13072 008c B0000000 		.4byte	.LFE728
 13073 0090 00000000 		.4byte	.LFB731
 13074 0094 20000000 		.4byte	.LFE731
 13075 0098 00000000 		.4byte	.LFB732
 13076 009c 30000000 		.4byte	.LFE732
 13077 00a0 00000000 		.4byte	.LFB733
 13078 00a4 DC000000 		.4byte	.LFE733
 13079 00a8 00000000 		.4byte	.LFB736
 13080 00ac 88000000 		.4byte	.LFE736
 13081 00b0 00000000 		.4byte	.LFB737
 13082 00b4 A4000000 		.4byte	.LFE737
 13083 00b8 00000000 		.4byte	.LFB738
 13084 00bc 7C000000 		.4byte	.LFE738
 13085 00c0 00000000 		.4byte	.LFB739
 13086 00c4 24000000 		.4byte	.LFE739
 13087 00c8 00000000 		.4byte	.LFB740
 13088 00cc 14000000 		.4byte	.LFE740
 13089 00d0 00000000 		.4byte	.LFB742
 13090 00d4 0C000000 		.4byte	.LFE742
 13091 00d8 00000000 		.4byte	.LFB743
 13092 00dc 14000000 		.4byte	.LFE743
 13093 00e0 00000000 		.4byte	.LFB744
 13094 00e4 0C000000 		.4byte	.LFE744
 13095 00e8 00000000 		.4byte	.LFB745
 13096 00ec 28000000 		.4byte	.LFE745
 13097 00f0 00000000 		.4byte	.LFB746
 13098 00f4 FC000000 		.4byte	.LFE746
 13099 00f8 00000000 		.4byte	.LFB741
 13100 00fc F0000000 		.4byte	.LFE741
 13101 0100 00000000 		.4byte	.LFB729
 13102 0104 AC000000 		.4byte	.LFE729
 13103 0108 00000000 		.4byte	.LFB730
 13104 010c 50000000 		.4byte	.LFE730
 13105 0110 00000000 		.4byte	.LFB747
 13106 0114 C8000000 		.4byte	.LFE747
 13107 0118 00000000 		.4byte	.LFB734
 13108 011c B8000000 		.4byte	.LFE734
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 333


 13109 0120 00000000 		.4byte	.LFB748
 13110 0124 34000000 		.4byte	.LFE748
 13111 0128 00000000 		.4byte	.LFB749
 13112 012c 5C000000 		.4byte	.LFE749
 13113 0130 00000000 		.4byte	.LFB750
 13114 0134 3C000000 		.4byte	.LFE750
 13115 0138 00000000 		.4byte	.LFB751
 13116 013c 88000000 		.4byte	.LFE751
 13117 0140 00000000 		.4byte	.LFB752
 13118 0144 84000000 		.4byte	.LFE752
 13119 0148 00000000 		.4byte	.LFB753
 13120 014c 34000000 		.4byte	.LFE753
 13121 0150 00000000 		.4byte	.LFB754
 13122 0154 14000000 		.4byte	.LFE754
 13123 0158 00000000 		.4byte	.LFB755
 13124 015c 80000000 		.4byte	.LFE755
 13125 0160 00000000 		.4byte	.LFB756
 13126 0164 10000000 		.4byte	.LFE756
 13127 0168 00000000 		.4byte	.LFB758
 13128 016c 1C000000 		.4byte	.LFE758
 13129 0170 00000000 		.4byte	.LFB759
 13130 0174 20000000 		.4byte	.LFE759
 13131 0178 00000000 		.4byte	.LFB764
 13132 017c 0C000000 		.4byte	.LFE764
 13133 0180 00000000 		.4byte	.LFB765
 13134 0184 20000000 		.4byte	.LFE765
 13135 0188 00000000 		.4byte	.LFB766
 13136 018c 20000000 		.4byte	.LFE766
 13137 0190 00000000 		.4byte	.LFB767
 13138 0194 80000000 		.4byte	.LFE767
 13139 0198 00000000 		.4byte	.LFB768
 13140 019c A4000000 		.4byte	.LFE768
 13141 01a0 00000000 		.4byte	.LFB769
 13142 01a4 E4000000 		.4byte	.LFE769
 13143 01a8 00000000 		.4byte	.LFB770
 13144 01ac 20010000 		.4byte	.LFE770
 13145 01b0 00000000 		.4byte	.LFB771
 13146 01b4 CC000000 		.4byte	.LFE771
 13147 01b8 00000000 		.4byte	.LFB772
 13148 01bc 34000000 		.4byte	.LFE772
 13149 01c0 00000000 		.4byte	0
 13150 01c4 00000000 		.4byte	0
 13151              		.section	.debug_line,"",%progbits
 13152              	.Ldebug_line0:
 13153 0000 780E0000 		.section	.debug_str,"MS",%progbits,1
 13153      0200FE04 
 13153      00000201 
 13153      FB0E0D00 
 13153      01010101 
 13154              	.LASF421:
 13155 0000 75785065 		.ascii	"uxPendedCounts\000"
 13155      6E646564 
 13155      436F756E 
 13155      747300
 13156              	.LASF189:
 13157 000f 43595F42 		.ascii	"CY_BLE_EVT_PENDING_FLASH_WRITE\000"
 13157      4C455F45 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 334


 13157      56545F50 
 13157      454E4449 
 13157      4E475F46 
 13158              	.LASF529:
 13159 002e 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\10.0."
 13159      72617465 
 13159      645F536F 
 13159      75726365 
 13159      5C50536F 
 13160 005c 315C536F 		.ascii	"1\\Source\\tasks.c\000"
 13160      75726365 
 13160      5C746173 
 13160      6B732E63 
 13160      00
 13161              	.LASF270:
 13162 006d 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_BY_TYPE_RSP\000"
 13162      4C455F45 
 13162      56545F47 
 13162      41545443 
 13162      5F524541 
 13163              	.LASF492:
 13164 008f 78596965 		.ascii	"xYieldPending\000"
 13164      6C645065 
 13164      6E64696E 
 13164      6700
 13165              	.LASF32:
 13166 009d 63727970 		.ascii	"cryptoBase\000"
 13166      746F4261 
 13166      736500
 13167              	.LASF4:
 13168 00a8 73697A65 		.ascii	"size_t\000"
 13168      5F7400
 13169              	.LASF16:
 13170 00af 73697A65 		.ascii	"sizetype\000"
 13170      74797065 
 13170      00
 13171              	.LASF217:
 13172 00b8 43595F42 		.ascii	"CY_BLE_EVT_SET_DEVICE_ADDR_COMPLETE\000"
 13172      4C455F45 
 13172      56545F53 
 13172      45545F44 
 13172      45564943 
 13173              	.LASF446:
 13174 00dc 76546173 		.ascii	"vTaskInternalSetTimeOutState\000"
 13174      6B496E74 
 13174      65726E61 
 13174      6C536574 
 13174      54696D65 
 13175              	.LASF392:
 13176 00f9 75735374 		.ascii	"usStackDepth\000"
 13176      61636B44 
 13176      65707468 
 13176      00
 13177              	.LASF142:
 13178 0106 63795F73 		.ascii	"cy_stc_scb_uart_context\000"
 13178      74635F73 
 13178      63625F75 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 335


 13178      6172745F 
 13178      636F6E74 
 13179              	.LASF389:
 13180 011e 7843616E 		.ascii	"xCanBlockIndefinitely\000"
 13180      426C6F63 
 13180      6B496E64 
 13180      6566696E 
 13180      6974656C 
 13181              	.LASF413:
 13182 0134 78546173 		.ascii	"xTaskGetTickCountFromISR\000"
 13182      6B476574 
 13182      5469636B 
 13182      436F756E 
 13182      7446726F 
 13183              	.LASF352:
 13184 014d 4D656D6F 		.ascii	"MemoryRegion_t\000"
 13184      72795265 
 13184      67696F6E 
 13184      5F7400
 13185              	.LASF149:
 13186 015c 72784275 		.ascii	"rxBuf\000"
 13186      6600
 13187              	.LASF216:
 13188 0162 43595F42 		.ascii	"CY_BLE_EVT_SOFT_RESET_COMPLETE\000"
 13188      4C455F45 
 13188      56545F53 
 13188      4F46545F 
 13188      52455345 
 13189              	.LASF356:
 13190 0181 78457665 		.ascii	"xEventListItem\000"
 13190      6E744C69 
 13190      73744974 
 13190      656D00
 13191              	.LASF59:
 13192 0190 63727970 		.ascii	"cryptoMemSize\000"
 13192      746F4D65 
 13192      6D53697A 
 13192      6500
 13193              	.LASF223:
 13194 019e 43595F42 		.ascii	"CY_BLE_EVT_SET_CLK_CONFIG_COMPLETE\000"
 13194      4C455F45 
 13194      56545F53 
 13194      45545F43 
 13194      4C4B5F43 
 13195              	.LASF437:
 13196 01c1 76546173 		.ascii	"vTaskPlaceOnUnorderedEventList\000"
 13196      6B506C61 
 13196      63654F6E 
 13196      556E6F72 
 13196      64657265 
 13197              	.LASF82:
 13198 01e0 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 13198      44697643 
 13198      6D645061 
 13198      44697653 
 13198      656C506F 
 13199              	.LASF28:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 336


 13200 01f6 6873696F 		.ascii	"hsiomBase\000"
 13200      6D426173 
 13200      6500
 13201              	.LASF222:
 13202 0200 43595F42 		.ascii	"CY_BLE_EVT_GET_CLK_CONFIG_COMPLETE\000"
 13202      4C455F45 
 13202      56545F47 
 13202      45545F43 
 13202      4C4B5F43 
 13203              	.LASF315:
 13204 0223 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_DESCR_DISCOVERING\000"
 13204      4C455F43 
 13204      4F4E4E5F 
 13204      53544154 
 13204      455F434C 
 13205              	.LASF306:
 13206 024e 43595F42 		.ascii	"CY_BLE_ADV_STATE_ADVERTISING\000"
 13206      4C455F41 
 13206      44565F53 
 13206      54415445 
 13206      5F414456 
 13207              	.LASF195:
 13208 026b 43595F42 		.ascii	"CY_BLE_EVT_LE_SET_EVENT_MASK_COMPLETE\000"
 13208      4C455F45 
 13208      56545F4C 
 13208      455F5345 
 13208      545F4556 
 13209              	.LASF344:
 13210 0291 7854494D 		.ascii	"xTIME_OUT\000"
 13210      455F4F55 
 13210      5400
 13211              	.LASF488:
 13212 029b 78546963 		.ascii	"xTickCount\000"
 13212      6B436F75 
 13212      6E7400
 13213              	.LASF494:
 13214 02a6 75785461 		.ascii	"uxTaskNumber\000"
 13214      736B4E75 
 13214      6D626572 
 13214      00
 13215              	.LASF398:
 13216 02b3 75785361 		.ascii	"uxSavedInterruptState\000"
 13216      76656449 
 13216      6E746572 
 13216      72757074 
 13216      53746174 
 13217              	.LASF191:
 13218 02c9 43595F42 		.ascii	"CY_BLE_EVT_HARDWARE_ERROR\000"
 13218      4C455F45 
 13218      56545F48 
 13218      41524457 
 13218      4152455F 
 13219              	.LASF468:
 13220 02e3 78546173 		.ascii	"xTaskGenericNotify\000"
 13220      6B47656E 
 13220      65726963 
 13220      4E6F7469 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 337


 13220      667900
 13221              	.LASF320:
 13222 02f6 42617365 		.ascii	"BaseType_t\000"
 13222      54797065 
 13222      5F7400
 13223              	.LASF192:
 13224 0301 43595F42 		.ascii	"CY_BLE_EVT_WRITE_AUTH_PAYLOAD_TO_COMPLETE\000"
 13224      4C455F45 
 13224      56545F57 
 13224      52495445 
 13224      5F415554 
 13225              	.LASF358:
 13226 032b 70785374 		.ascii	"pxStack\000"
 13226      61636B00 
 13227              	.LASF143:
 13228 0333 74785374 		.ascii	"txStatus\000"
 13228      61747573 
 13228      00
 13229              	.LASF300:
 13230 033c 43595F42 		.ascii	"CY_BLE_EVT_MAX\000"
 13230      4C455F45 
 13230      56545F4D 
 13230      415800
 13231              	.LASF405:
 13232 034b 76546173 		.ascii	"vTaskResume\000"
 13232      6B526573 
 13232      756D6500 
 13233              	.LASF120:
 13234 0357 73746174 		.ascii	"state\000"
 13234      6500
 13235              	.LASF533:
 13236 035d 75785461 		.ascii	"uxTaskGetNumberOfTasks\000"
 13236      736B4765 
 13236      744E756D 
 13236      6265724F 
 13236      66546173 
 13237              	.LASF89:
 13238 0374 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 13238      50727443 
 13238      66674F66 
 13238      66736574 
 13238      00
 13239              	.LASF24:
 13240 0385 666C6173 		.ascii	"flashcBase\000"
 13240      68634261 
 13240      736500
 13241              	.LASF166:
 13242 0390 636F6D70 		.ascii	"compare0\000"
 13242      61726530 
 13242      00
 13243              	.LASF167:
 13244 0399 636F6D70 		.ascii	"compare1\000"
 13244      61726531 
 13244      00
 13245              	.LASF51:
 13246 03a2 73727373 		.ascii	"srssNumHfroot\000"
 13246      4E756D48 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 338


 13246      66726F6F 
 13246      7400
 13247              	.LASF275:
 13248 03b0 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_MULTI_RSP\000"
 13248      4C455F45 
 13248      56545F47 
 13248      41545443 
 13248      5F524541 
 13249              	.LASF160:
 13250 03d0 70776D41 		.ascii	"pwmAlignment\000"
 13250      6C69676E 
 13250      6D656E74 
 13250      00
 13251              	.LASF521:
 13252 03dd 764C6973 		.ascii	"vListInsert\000"
 13252      74496E73 
 13252      65727400 
 13253              	.LASF215:
 13254 03e9 43595F42 		.ascii	"CY_BLE_EVT_LL_CNTRL_PROC_PENDING_COMPLETE\000"
 13254      4C455F45 
 13254      56545F4C 
 13254      4C5F434E 
 13254      54524C5F 
 13255              	.LASF434:
 13256 0413 78546173 		.ascii	"xTaskToSuspend\000"
 13256      6B546F53 
 13256      75737065 
 13256      6E6400
 13257              	.LASF181:
 13258 0422 636F756E 		.ascii	"countInputMode\000"
 13258      74496E70 
 13258      75744D6F 
 13258      646500
 13259              	.LASF74:
 13260 0431 64775374 		.ascii	"dwStatusChIdxPos\000"
 13260      61747573 
 13260      43684964 
 13260      78506F73 
 13260      00
 13261              	.LASF373:
 13262 0442 78546173 		.ascii	"xTask\000"
 13262      6B00
 13263              	.LASF281:
 13264 0448 43595F42 		.ascii	"CY_BLE_EVT_GATTC_EXEC_WRITE_RSP\000"
 13264      4C455F45 
 13264      56545F47 
 13264      41545443 
 13264      5F455845 
 13265              	.LASF183:
 13266 0468 63795F73 		.ascii	"cy_stc_tcpwm_pwm_config_t\000"
 13266      74635F74 
 13266      6370776D 
 13266      5F70776D 
 13266      5F636F6E 
 13267              	.LASF396:
 13268 0482 75785265 		.ascii	"uxReturn\000"
 13268      7475726E 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 339


 13268      00
 13269              	.LASF325:
 13270 048b 70784E65 		.ascii	"pxNext\000"
 13270      787400
 13271              	.LASF259:
 13272 0492 43595F42 		.ascii	"CY_BLE_EVT_GAP_GEN_SET_LOCAL_P256_KEYS_COMPLETE\000"
 13272      4C455F45 
 13272      56545F47 
 13272      41505F47 
 13272      454E5F53 
 13273              	.LASF380:
 13274 04c2 70784E65 		.ascii	"pxNewTCB\000"
 13274      77544342 
 13274      00
 13275              	.LASF288:
 13276 04cb 43595F42 		.ascii	"CY_BLE_EVT_GATTC_LONG_PROCEDURE_END\000"
 13276      4C455F45 
 13276      56545F47 
 13276      41545443 
 13276      5F4C4F4E 
 13277              	.LASF293:
 13278 04ef 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_CONN_CNF\000"
 13278      4C455F45 
 13278      56545F4C 
 13278      32434150 
 13278      5F434246 
 13279              	.LASF301:
 13280 050e 62644861 		.ascii	"bdHandle\000"
 13280      6E646C65 
 13280      00
 13281              	.LASF456:
 13282 0517 70765461 		.ascii	"pvTaskGetThreadLocalStoragePointer\000"
 13282      736B4765 
 13282      74546872 
 13282      6561644C 
 13282      6F63616C 
 13283              	.LASF401:
 13284 053a 75784E65 		.ascii	"uxNewPriority\000"
 13284      77507269 
 13284      6F726974 
 13284      7900
 13285              	.LASF5:
 13286 0548 5F5F7569 		.ascii	"__uint8_t\000"
 13286      6E74385F 
 13286      7400
 13287              	.LASF242:
 13288 0552 43595F42 		.ascii	"CY_BLE_EVT_GAP_AUTH_FAILED\000"
 13288      4C455F45 
 13288      56545F47 
 13288      41505F41 
 13288      5554485F 
 13289              	.LASF363:
 13290 056d 74736B54 		.ascii	"tskTCB\000"
 13290      434200
 13291              	.LASF208:
 13292 0574 43595F42 		.ascii	"CY_BLE_EVT_ADD_DEVICE_TO_WHITE_LIST_COMPLETE\000"
 13292      4C455F45 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 340


 13292      56545F41 
 13292      44445F44 
 13292      45564943 
 13293              	.LASF118:
 13294 05a1 75736552 		.ascii	"useRxFifo\000"
 13294      78466966 
 13294      6F00
 13295              	.LASF283:
 13296 05ab 43595F42 		.ascii	"CY_BLE_EVT_GATTC_HANDLE_VALUE_IND\000"
 13296      4C455F45 
 13296      56545F47 
 13296      41545443 
 13296      5F48414E 
 13297              	.LASF174:
 13298 05cd 73776170 		.ascii	"swapInput\000"
 13298      496E7075 
 13298      7400
 13299              	.LASF153:
 13300 05d7 74784275 		.ascii	"txBufSize\000"
 13300      6653697A 
 13300      6500
 13301              	.LASF436:
 13302 05e1 70784576 		.ascii	"pxEventList\000"
 13302      656E744C 
 13302      69737400 
 13303              	.LASF187:
 13304 05ed 43595F42 		.ascii	"CY_BLE_EVT_STACK_BUSY_STATUS\000"
 13304      4C455F45 
 13304      56545F53 
 13304      5441434B 
 13304      5F425553 
 13305              	.LASF402:
 13306 060a 75784375 		.ascii	"uxCurrentBasePriority\000"
 13306      7272656E 
 13306      74426173 
 13306      65507269 
 13306      6F726974 
 13307              	.LASF318:
 13308 0620 5461736B 		.ascii	"TaskFunction_t\000"
 13308      46756E63 
 13308      74696F6E 
 13308      5F7400
 13309              	.LASF267:
 13310 062f 43595F42 		.ascii	"CY_BLE_EVT_GATTS_XCNHG_MTU_REQ\000"
 13310      4C455F45 
 13310      56545F47 
 13310      41545453 
 13310      5F58434E 
 13311              	.LASF511:
 13312 064e 70784375 		.ascii	"pxCurrentTCB\000"
 13312      7272656E 
 13312      74544342 
 13312      00
 13313              	.LASF233:
 13314 065b 43595F42 		.ascii	"CY_BLE_EVT_SET_EVENT_MASK_COMPLETE\000"
 13314      4C455F45 
 13314      56545F53 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 341


 13314      45545F45 
 13314      56454E54 
 13315              	.LASF316:
 13316 067e 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_DISCOVERED\000"
 13316      4C455F43 
 13316      4F4E4E5F 
 13316      53544154 
 13316      455F434C 
 13317              	.LASF438:
 13318 06a2 76546173 		.ascii	"vTaskPlaceOnEventListRestricted\000"
 13318      6B506C61 
 13318      63654F6E 
 13318      4576656E 
 13318      744C6973 
 13319              	.LASF276:
 13320 06c2 43595F42 		.ascii	"CY_BLE_EVT_GATTS_WRITE_REQ\000"
 13320      4C455F45 
 13320      56545F47 
 13320      41545453 
 13320      5F575249 
 13321              	.LASF332:
 13322 06dd 784C4953 		.ascii	"xLIST\000"
 13322      5400
 13323              	.LASF485:
 13324 06e3 75784465 		.ascii	"uxDeletedTasksWaitingCleanUp\000"
 13324      6C657465 
 13324      64546173 
 13324      6B735761 
 13324      6974696E 
 13325              	.LASF77:
 13326 0700 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 13326      5472436D 
 13326      64477253 
 13326      656C4D73 
 13326      6B00
 13327              	.LASF175:
 13328 0712 72656C6F 		.ascii	"reloadInputMode\000"
 13328      6164496E 
 13328      7075744D 
 13328      6F646500 
 13329              	.LASF84:
 13330 0722 70657269 		.ascii	"periDiv8CtlOffset\000"
 13330      44697638 
 13330      43746C4F 
 13330      66667365 
 13330      7400
 13331              	.LASF79:
 13332 0734 70657269 		.ascii	"periTrGrSize\000"
 13332      54724772 
 13332      53697A65 
 13332      00
 13333              	.LASF214:
 13334 0741 43595F42 		.ascii	"CY_BLE_EVT_SET_PRIVACY_MODE_COMPLETE\000"
 13334      4C455F45 
 13334      56545F53 
 13334      45545F50 
 13334      52495641 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 342


 13335              	.LASF383:
 13336 0766 70727641 		.ascii	"prvAddNewTaskToReadyList\000"
 13336      64644E65 
 13336      77546173 
 13336      6B546F52 
 13336      65616479 
 13337              	.LASF246:
 13338 077f 43595F42 		.ascii	"CY_BLE_EVT_GAP_ENCRYPT_CHANGE\000"
 13338      4C455F45 
 13338      56545F47 
 13338      41505F45 
 13338      4E435259 
 13339              	.LASF205:
 13340 079d 43595F42 		.ascii	"CY_BLE_EVT_SET_HOST_CHANNEL_COMPLETE\000"
 13340      4C455F45 
 13340      56545F53 
 13340      45545F48 
 13340      4F53545F 
 13341              	.LASF503:
 13342 07c2 63795F62 		.ascii	"cy_ble_pendingFlashWrite\000"
 13342      6C655F70 
 13342      656E6469 
 13342      6E67466C 
 13342      61736857 
 13343              	.LASF448:
 13344 07db 70785469 		.ascii	"pxTicksToWait\000"
 13344      636B7354 
 13344      6F576169 
 13344      7400
 13345              	.LASF305:
 13346 07e9 43595F42 		.ascii	"CY_BLE_ADV_STATE_ADV_INITIATED\000"
 13346      4C455F41 
 13346      44565F53 
 13346      54415445 
 13346      5F414456 
 13347              	.LASF186:
 13348 0808 43595F42 		.ascii	"CY_BLE_EVT_TIMEOUT\000"
 13348      4C455F45 
 13348      56545F54 
 13348      494D454F 
 13348      555400
 13349              	.LASF376:
 13350 081b 70634E61 		.ascii	"pcName\000"
 13350      6D6500
 13351              	.LASF516:
 13352 0822 764C6973 		.ascii	"vListInitialise\000"
 13352      74496E69 
 13352      7469616C 
 13352      69736500 
 13353              	.LASF127:
 13354 0832 6D617374 		.ascii	"masterNumBytes\000"
 13354      65724E75 
 13354      6D427974 
 13354      657300
 13355              	.LASF207:
 13356 0841 43595F42 		.ascii	"CY_BLE_EVT_REMOVE_DEVICE_FROM_RPA_LIST_COMPLETE\000"
 13356      4C455F45 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 343


 13356      56545F52 
 13356      454D4F56 
 13356      455F4445 
 13357              	.LASF522:
 13358 0871 7076506F 		.ascii	"pvPortMalloc\000"
 13358      72744D61 
 13358      6C6C6F63 
 13358      00
 13359              	.LASF486:
 13360 087e 78537573 		.ascii	"xSuspendedTaskList\000"
 13360      70656E64 
 13360      65645461 
 13360      736B4C69 
 13360      737400
 13361              	.LASF462:
 13362 0891 78436C65 		.ascii	"xClearCountOnExit\000"
 13362      6172436F 
 13362      756E744F 
 13362      6E457869 
 13362      7400
 13363              	.LASF3:
 13364 08a3 7369676E 		.ascii	"signed char\000"
 13364      65642063 
 13364      68617200 
 13365              	.LASF254:
 13366 08af 43595F42 		.ascii	"CY_BLE_EVT_GAPC_DIRECT_ADV_REPORT\000"
 13366      4C455F45 
 13366      56545F47 
 13366      4150435F 
 13366      44495245 
 13367              	.LASF18:
 13368 08d1 75696E74 		.ascii	"uint8_t\000"
 13368      385F7400 
 13369              	.LASF163:
 13370 08d9 70657269 		.ascii	"period0\000"
 13370      6F643000 
 13371              	.LASF164:
 13372 08e1 70657269 		.ascii	"period1\000"
 13372      6F643100 
 13373              	.LASF473:
 13374 08e9 75634F72 		.ascii	"ucOriginalNotifyState\000"
 13374      6967696E 
 13374      616C4E6F 
 13374      74696679 
 13374      53746174 
 13375              	.LASF103:
 13376 08ff 63707573 		.ascii	"cpussRomCtl\000"
 13376      73526F6D 
 13376      43746C00 
 13377              	.LASF132:
 13378 090b 736C6176 		.ascii	"slaveTxBufferIdx\000"
 13378      65547842 
 13378      75666665 
 13378      72496478 
 13378      00
 13379              	.LASF297:
 13380 091c 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_RX_CREDIT_IND\000"
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 344


 13380      4C455F45 
 13380      56545F4C 
 13380      32434150 
 13380      5F434246 
 13381              	.LASF284:
 13382 0940 43595F42 		.ascii	"CY_BLE_EVT_GATTS_HANDLE_VALUE_CNF\000"
 13382      4C455F45 
 13382      56545F47 
 13382      41545453 
 13382      5F48414E 
 13383              	.LASF147:
 13384 0962 72785269 		.ascii	"rxRingBufHead\000"
 13384      6E674275 
 13384      66486561 
 13384      6400
 13385              	.LASF134:
 13386 0970 736C6176 		.ascii	"slaveRxBuffer\000"
 13386      65527842 
 13386      75666665 
 13386      7200
 13387              	.LASF467:
 13388 097e 70756C4E 		.ascii	"pulNotificationValue\000"
 13388      6F746966 
 13388      69636174 
 13388      696F6E56 
 13388      616C7565 
 13389              	.LASF6:
 13390 0993 756E7369 		.ascii	"unsigned char\000"
 13390      676E6564 
 13390      20636861 
 13390      7200
 13391              	.LASF493:
 13392 09a1 784E756D 		.ascii	"xNumOfOverflows\000"
 13392      4F664F76 
 13392      6572666C 
 13392      6F777300 
 13393              	.LASF139:
 13394 09b1 63795F73 		.ascii	"cy_stc_scb_i2c_context_t\000"
 13394      74635F73 
 13394      63625F69 
 13394      32635F63 
 13394      6F6E7465 
 13395              	.LASF369:
 13396 09ca 78526574 		.ascii	"xReturn\000"
 13396      75726E00 
 13397              	.LASF256:
 13398 09d2 43595F42 		.ascii	"CY_BLE_EVT_GAP_DEVICE_ADDR_GEN_COMPLETE\000"
 13398      4C455F45 
 13398      56545F47 
 13398      41505F44 
 13398      45564943 
 13399              	.LASF331:
 13400 09fa 4D696E69 		.ascii	"MiniListItem_t\000"
 13400      4C697374 
 13400      4974656D 
 13400      5F7400
 13401              	.LASF368:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 345


 13402 0a09 76506F72 		.ascii	"vPortSetBASEPRI\000"
 13402      74536574 
 13402      42415345 
 13402      50524900 
 13403              	.LASF314:
 13404 0a19 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_CHAR_DISCOVERING\000"
 13404      4C455F43 
 13404      4F4E4E5F 
 13404      53544154 
 13404      455F434C 
 13405              	.LASF271:
 13406 0a43 43595F42 		.ascii	"CY_BLE_EVT_GATTC_FIND_INFO_RSP\000"
 13406      4C455F45 
 13406      56545F47 
 13406      41545443 
 13406      5F46494E 
 13407              	.LASF239:
 13408 0a62 43595F42 		.ascii	"CY_BLE_EVT_GAP_PASSKEY_ENTRY_REQUEST\000"
 13408      4C455F45 
 13408      56545F47 
 13408      41505F50 
 13408      4153534B 
 13409              	.LASF371:
 13410 0a87 70727652 		.ascii	"prvResetNextTaskUnblockTime\000"
 13410      65736574 
 13410      4E657874 
 13410      5461736B 
 13410      556E626C 
 13411              	.LASF464:
 13412 0aa3 78546173 		.ascii	"xTaskNotifyWait\000"
 13412      6B4E6F74 
 13412      69667957 
 13412      61697400 
 13413              	.LASF374:
 13414 0ab3 70727649 		.ascii	"prvInitialiseNewTask\000"
 13414      6E697469 
 13414      616C6973 
 13414      654E6577 
 13414      5461736B 
 13415              	.LASF98:
 13416 0ac8 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 13416      73547269 
 13416      6D52616D 
 13416      43746C4F 
 13416      66667365 
 13417              	.LASF501:
 13418 0ade 63795F62 		.ascii	"cy_ble_connHandle\000"
 13418      6C655F63 
 13418      6F6E6E48 
 13418      616E646C 
 13418      6500
 13419              	.LASF346:
 13420 0af0 7854696D 		.ascii	"xTimeOnEntering\000"
 13420      654F6E45 
 13420      6E746572 
 13420      696E6700 
 13421              	.LASF491:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 346


 13422 0b00 75785065 		.ascii	"uxPendedTicks\000"
 13422      6E646564 
 13422      5469636B 
 13422      7300
 13423              	.LASF112:
 13424 0b0e 5F426F6F 		.ascii	"_Bool\000"
 13424      6C00
 13425              	.LASF30:
 13426 0b14 70617373 		.ascii	"passBase\000"
 13426      42617365 
 13426      00
 13427              	.LASF472:
 13428 0b1d 70756C50 		.ascii	"pulPreviousNotificationValue\000"
 13428      72657669 
 13428      6F75734E 
 13428      6F746966 
 13428      69636174 
 13429              	.LASF99:
 13430 0b3a 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 13430      73547269 
 13430      6D526F6D 
 13430      43746C4F 
 13430      66667365 
 13431              	.LASF354:
 13432 0b50 7078546F 		.ascii	"pxTopOfStack\000"
 13432      704F6653 
 13432      7461636B 
 13432      00
 13433              	.LASF490:
 13434 0b5d 78536368 		.ascii	"xSchedulerRunning\000"
 13434      6564756C 
 13434      65725275 
 13434      6E6E696E 
 13434      6700
 13435              	.LASF439:
 13436 0b6f 78576169 		.ascii	"xWaitIndefinitely\000"
 13436      74496E64 
 13436      6566696E 
 13436      6974656C 
 13436      7900
 13437              	.LASF385:
 13438 0b81 70727654 		.ascii	"prvTaskIsTaskSuspended\000"
 13438      61736B49 
 13438      73546173 
 13438      6B537573 
 13438      70656E64 
 13439              	.LASF17:
 13440 0b98 63686172 		.ascii	"char\000"
 13440      00
 13441              	.LASF286:
 13442 0b9d 43595F42 		.ascii	"CY_BLE_EVT_GATTC_STOP_CMD_COMPLETE\000"
 13442      4C455F45 
 13442      56545F47 
 13442      41545443 
 13442      5F53544F 
 13443              	.LASF527:
 13444 0bc0 76417070 		.ascii	"vApplicationStackOverflowHook\000"
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 347


 13444      6C696361 
 13444      74696F6E 
 13444      53746163 
 13444      6B4F7665 
 13445              	.LASF375:
 13446 0bde 70785461 		.ascii	"pxTaskCode\000"
 13446      736B436F 
 13446      646500
 13447              	.LASF330:
 13448 0be9 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 13448      495F4C49 
 13448      53545F49 
 13448      54454D00 
 13449              	.LASF210:
 13450 0bf9 43595F42 		.ascii	"CY_BLE_EVT_GET_PHY_COMPLETE\000"
 13450      4C455F45 
 13450      56545F47 
 13450      45545F50 
 13450      48595F43 
 13451              	.LASF212:
 13452 0c15 43595F42 		.ascii	"CY_BLE_EVT_SET_PHY_COMPLETE\000"
 13452      4C455F45 
 13452      56545F53 
 13452      45545F50 
 13452      48595F43 
 13453              	.LASF227:
 13454 0c31 43595F42 		.ascii	"CY_BLE_EVT_AES_CCM_DECRYPT_COMPLETE\000"
 13454      4C455F45 
 13454      56545F41 
 13454      45535F43 
 13454      434D5F44 
 13455              	.LASF162:
 13456 0c55 72756E4D 		.ascii	"runMode\000"
 13456      6F646500 
 13457              	.LASF150:
 13458 0c5d 72784275 		.ascii	"rxBufSize\000"
 13458      6653697A 
 13458      6500
 13459              	.LASF9:
 13460 0c67 5F5F7569 		.ascii	"__uint16_t\000"
 13460      6E743136 
 13460      5F7400
 13461              	.LASF159:
 13462 0c72 636C6F63 		.ascii	"clockPrescaler\000"
 13462      6B507265 
 13462      7363616C 
 13462      657200
 13463              	.LASF342:
 13464 0c81 65536574 		.ascii	"eSetValueWithoutOverwrite\000"
 13464      56616C75 
 13464      65576974 
 13464      686F7574 
 13464      4F766572 
 13465              	.LASF515:
 13466 0c9b 7078506F 		.ascii	"pxPortInitialiseStack\000"
 13466      7274496E 
 13466      69746961 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 348


 13466      6C697365 
 13466      53746163 
 13467              	.LASF253:
 13468 0cb1 43595F42 		.ascii	"CY_BLE_EVT_GAP_ENHANCE_CONN_COMPLETE\000"
 13468      4C455F45 
 13468      56545F47 
 13468      41505F45 
 13468      4E48414E 
 13469              	.LASF289:
 13470 0cd6 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CONN_PARAM_UPDATE_REQ\000"
 13470      4C455F45 
 13470      56545F4C 
 13470      32434150 
 13470      5F434F4E 
 13471              	.LASF399:
 13472 0cfd 76546173 		.ascii	"vTaskDelete\000"
 13472      6B44656C 
 13472      65746500 
 13473              	.LASF495:
 13474 0d09 784E6578 		.ascii	"xNextTaskUnblockTime\000"
 13474      74546173 
 13474      6B556E62 
 13474      6C6F636B 
 13474      54696D65 
 13475              	.LASF46:
 13476 0d1e 63707573 		.ascii	"cpussIpc0Irq\000"
 13476      73497063 
 13476      30497271 
 13476      00
 13477              	.LASF328:
 13478 0d2b 7076436F 		.ascii	"pvContainer\000"
 13478      6E746169 
 13478      6E657200 
 13479              	.LASF111:
 13480 0d37 646F7562 		.ascii	"double\000"
 13480      6C6500
 13481              	.LASF460:
 13482 0d3e 75785461 		.ascii	"uxTaskResetEventItemValue\000"
 13482      736B5265 
 13482      73657445 
 13482      76656E74 
 13482      4974656D 
 13483              	.LASF407:
 13484 0d58 78546173 		.ascii	"xTaskResumeFromISR\000"
 13484      6B526573 
 13484      756D6546 
 13484      726F6D49 
 13484      535200
 13485              	.LASF497:
 13486 0d6b 75785363 		.ascii	"uxSchedulerSuspended\000"
 13486      68656475 
 13486      6C657253 
 13486      75737065 
 13486      6E646564 
 13487              	.LASF429:
 13488 0d80 70756C53 		.ascii	"pulStack\000"
 13488      7461636B 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 349


 13488      00
 13489              	.LASF26:
 13490 0d89 75646242 		.ascii	"udbBase\000"
 13490      61736500 
 13491              	.LASF277:
 13492 0d91 43595F42 		.ascii	"CY_BLE_EVT_GATTC_WRITE_RSP\000"
 13492      4C455F45 
 13492      56545F47 
 13492      41545443 
 13492      5F575249 
 13493              	.LASF93:
 13494 0dac 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 13494      73436D30 
 13494      436C6F63 
 13494      6B43746C 
 13494      4F666673 
 13495              	.LASF483:
 13496 0dc3 7850656E 		.ascii	"xPendingReadyList\000"
 13496      64696E67 
 13496      52656164 
 13496      794C6973 
 13496      7400
 13497              	.LASF78:
 13498 0dd5 70657269 		.ascii	"periTrGrOffset\000"
 13498      54724772 
 13498      4F666673 
 13498      657400
 13499              	.LASF133:
 13500 0de4 736C6176 		.ascii	"slaveTxBufferCnt\000"
 13500      65547842 
 13500      75666665 
 13500      72436E74 
 13500      00
 13501              	.LASF108:
 13502 0df5 6970634C 		.ascii	"ipcLockStatusOffset\000"
 13502      6F636B53 
 13502      74617475 
 13502      734F6666 
 13502      73657400 
 13503              	.LASF282:
 13504 0e09 43595F42 		.ascii	"CY_BLE_EVT_GATTC_HANDLE_VALUE_NTF\000"
 13504      4C455F45 
 13504      56545F47 
 13504      41545443 
 13504      5F48414E 
 13505              	.LASF252:
 13506 0e2b 43595F42 		.ascii	"CY_BLE_EVT_GAP_OOB_GENERATED_NOTIFICATION\000"
 13506      4C455F45 
 13506      56545F47 
 13506      41505F4F 
 13506      4F425F47 
 13507              	.LASF235:
 13508 0e55 43595F42 		.ascii	"CY_BLE_EVT_SET_CONN_PRIORITY_COMPLETE\000"
 13508      4C455F45 
 13508      56545F53 
 13508      45545F43 
 13508      4F4E4E5F 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 350


 13509              	.LASF157:
 13510 0e7b 63795F73 		.ascii	"cy_stc_tcpwm_pwm_config\000"
 13510      74635F74 
 13510      6370776D 
 13510      5F70776D 
 13510      5F636F6E 
 13511              	.LASF361:
 13512 0e93 756C4E6F 		.ascii	"ulNotifiedValue\000"
 13512      74696669 
 13512      65645661 
 13512      6C756500 
 13513              	.LASF211:
 13514 0ea3 43595F42 		.ascii	"CY_BLE_EVT_SET_DEFAULT_PHY_COMPLETE\000"
 13514      4C455F45 
 13514      56545F53 
 13514      45545F44 
 13514      45464155 
 13515              	.LASF102:
 13516 0ec7 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 13516      73436D34 
 13516      4E6D6943 
 13516      746C4F66 
 13516      66736574 
 13517              	.LASF430:
 13518 0edc 756C4368 		.ascii	"ulCheckValue\000"
 13518      65636B56 
 13518      616C7565 
 13518      00
 13519              	.LASF428:
 13520 0ee9 76546173 		.ascii	"vTaskSwitchContext\000"
 13520      6B537769 
 13520      74636843 
 13520      6F6E7465 
 13520      787400
 13521              	.LASF97:
 13522 0efc 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 13522      73436D34 
 13522      50777243 
 13522      746C4F66 
 13522      66736574 
 13523              	.LASF409:
 13524 0f11 76546173 		.ascii	"vTaskStartScheduler\000"
 13524      6B537461 
 13524      72745363 
 13524      68656475 
 13524      6C657200 
 13525              	.LASF113:
 13526 0f25 43595F53 		.ascii	"CY_SCB_I2C_ACK\000"
 13526      43425F49 
 13526      32435F41 
 13526      434B00
 13527              	.LASF531:
 13528 0f34 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 13528      72745261 
 13528      69736542 
 13528      41534550 
 13528      524900
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 351


 13529              	.LASF432:
 13530 0f47 7078436F 		.ascii	"pxConstList\000"
 13530      6E73744C 
 13530      69737400 
 13531              	.LASF69:
 13532 0f53 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 13532      6843746C 
 13532      4D61696E 
 13532      57733446 
 13532      72657100 
 13533              	.LASF379:
 13534 0f67 70784372 		.ascii	"pxCreatedTask\000"
 13534      65617465 
 13534      64546173 
 13534      6B00
 13535              	.LASF406:
 13536 0f75 78546173 		.ascii	"xTaskToResume\000"
 13536      6B546F52 
 13536      6573756D 
 13536      6500
 13537              	.LASF264:
 13538 0f83 43595F42 		.ascii	"CY_BLE_EVT_GATTC_ERROR_RSP\000"
 13538      4C455F45 
 13538      56545F47 
 13538      41545443 
 13538      5F455252 
 13539              	.LASF279:
 13540 0f9e 43595F42 		.ascii	"CY_BLE_EVT_GATTS_PREP_WRITE_REQ\000"
 13540      4C455F45 
 13540      56545F47 
 13540      41545453 
 13540      5F505245 
 13541              	.LASF298:
 13542 0fbe 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_TX_CREDIT_IND\000"
 13542      4C455F45 
 13542      56545F4C 
 13542      32434150 
 13542      5F434246 
 13543              	.LASF48:
 13544 0fe2 63707573 		.ascii	"cpussNotConnectedIrq\000"
 13544      734E6F74 
 13544      436F6E6E 
 13544      65637465 
 13544      64497271 
 13545              	.LASF509:
 13546 0ff7 50574D5F 		.ascii	"PWM_CYC_config\000"
 13546      4359435F 
 13546      636F6E66 
 13546      696700
 13547              	.LASF172:
 13548 1006 6B696C6C 		.ascii	"killMode\000"
 13548      4D6F6465 
 13548      00
 13549              	.LASF90:
 13550 100f 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 13550      50727443 
 13550      6667496E 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 352


 13550      4F666673 
 13550      657400
 13551              	.LASF25:
 13552 1022 70657269 		.ascii	"periBase\000"
 13552      42617365 
 13552      00
 13553              	.LASF292:
 13554 102b 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_CONN_IND\000"
 13554      4C455F45 
 13554      56545F4C 
 13554      32434150 
 13554      5F434246 
 13555              	.LASF412:
 13556 104a 78546963 		.ascii	"xTicks\000"
 13556      6B7300
 13557              	.LASF349:
 13558 1051 70764261 		.ascii	"pvBaseAddress\000"
 13558      73654164 
 13558      64726573 
 13558      7300
 13559              	.LASF487:
 13560 105f 75784375 		.ascii	"uxCurrentNumberOfTasks\000"
 13560      7272656E 
 13560      744E756D 
 13560      6265724F 
 13560      66546173 
 13561              	.LASF400:
 13562 1076 76546173 		.ascii	"vTaskPrioritySet\000"
 13562      6B507269 
 13562      6F726974 
 13562      79536574 
 13562      00
 13563              	.LASF81:
 13564 1087 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 13564      44697643 
 13564      6D645479 
 13564      70655365 
 13564      6C506F73 
 13565              	.LASF219:
 13566 109c 43595F42 		.ascii	"CY_BLE_EVT_GET_RSSI_COMPLETE\000"
 13566      4C455F45 
 13566      56545F47 
 13566      45545F52 
 13566      5353495F 
 13567              	.LASF345:
 13568 10b9 784F7665 		.ascii	"xOverflowCount\000"
 13568      72666C6F 
 13568      77436F75 
 13568      6E7400
 13569              	.LASF170:
 13570 10c8 696E7665 		.ascii	"invertPWMOut\000"
 13570      72745057 
 13570      4D4F7574 
 13570      00
 13571              	.LASF445:
 13572 10d5 70785469 		.ascii	"pxTimeOut\000"
 13572      6D654F75 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 353


 13572      7400
 13573              	.LASF45:
 13574 10df 63707573 		.ascii	"cpussFlashPaSize\000"
 13574      73466C61 
 13574      73685061 
 13574      53697A65 
 13574      00
 13575              	.LASF137:
 13576 10f0 63624576 		.ascii	"cbEvents\000"
 13576      656E7473 
 13576      00
 13577              	.LASF269:
 13578 10f9 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_BY_GROUP_TYPE_RSP\000"
 13578      4C455F45 
 13578      56545F47 
 13578      41545443 
 13578      5F524541 
 13579              	.LASF14:
 13580 1121 6C6F6E67 		.ascii	"long unsigned int\000"
 13580      20756E73 
 13580      69676E65 
 13580      6420696E 
 13580      7400
 13581              	.LASF451:
 13582 1133 76546173 		.ascii	"vTaskMissedYield\000"
 13582      6B4D6973 
 13582      73656459 
 13582      69656C64 
 13582      00
 13583              	.LASF525:
 13584 1144 78506F72 		.ascii	"xPortStartScheduler\000"
 13584      74537461 
 13584      72745363 
 13584      68656475 
 13584      6C657200 
 13585              	.LASF248:
 13586 1158 43595F42 		.ascii	"CY_BLE_EVT_GAPC_SCAN_START_STOP\000"
 13586      4C455F45 
 13586      56545F47 
 13586      4150435F 
 13586      5343414E 
 13587              	.LASF496:
 13588 1178 7849646C 		.ascii	"xIdleTaskHandle\000"
 13588      65546173 
 13588      6B48616E 
 13588      646C6500 
 13589              	.LASF444:
 13590 1188 76546173 		.ascii	"vTaskSetTimeOutState\000"
 13590      6B536574 
 13590      54696D65 
 13590      4F757453 
 13590      74617465 
 13591              	.LASF55:
 13592 119d 65704D6F 		.ascii	"epMonitorNr\000"
 13592      6E69746F 
 13592      724E7200 
 13593              	.LASF115:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 354


 13594 11a9 63795F65 		.ascii	"cy_en_scb_i2c_command_t\000"
 13594      6E5F7363 
 13594      625F6932 
 13594      635F636F 
 13594      6D6D616E 
 13595              	.LASF203:
 13596 11c1 43595F42 		.ascii	"CY_BLE_EVT_SET_RPA_TO_COMPLETE\000"
 13596      4C455F45 
 13596      56545F53 
 13596      45545F52 
 13596      50415F54 
 13597              	.LASF106:
 13598 11e0 63707573 		.ascii	"cpussRam2Ctl0\000"
 13598      7352616D 
 13598      3243746C 
 13598      3000
 13599              	.LASF154:
 13600 11ee 74784C65 		.ascii	"txLeftToTransmit\000"
 13600      6674546F 
 13600      5472616E 
 13600      736D6974 
 13600      00
 13601              	.LASF33:
 13602 11ff 63707573 		.ascii	"cpussVersion\000"
 13602      73566572 
 13602      73696F6E 
 13602      00
 13603              	.LASF414:
 13604 120c 70635461 		.ascii	"pcTaskGetName\000"
 13604      736B4765 
 13604      744E616D 
 13604      6500
 13605              	.LASF185:
 13606 121a 43595F42 		.ascii	"CY_BLE_EVT_STACK_ON\000"
 13606      4C455F45 
 13606      56545F53 
 13606      5441434B 
 13606      5F4F4E00 
 13607              	.LASF479:
 13608 122e 7844656C 		.ascii	"xDelayedTaskList1\000"
 13608      61796564 
 13608      5461736B 
 13608      4C697374 
 13608      3100
 13609              	.LASF291:
 13610 1240 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_COMMAND_REJ\000"
 13610      4C455F45 
 13610      56545F4C 
 13610      32434150 
 13610      5F434F4D 
 13611              	.LASF348:
 13612 125d 784D454D 		.ascii	"xMEMORY_REGION\000"
 13612      4F52595F 
 13612      52454749 
 13612      4F4E00
 13613              	.LASF47:
 13614 126c 63707573 		.ascii	"cpussFmIrq\000"
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 355


 13614      73466D49 
 13614      727100
 13615              	.LASF128:
 13616 1277 736C6176 		.ascii	"slaveStatus\000"
 13616      65537461 
 13616      74757300 
 13617              	.LASF266:
 13618 1283 43595F42 		.ascii	"CY_BLE_EVT_GATT_DISCONNECT_IND\000"
 13618      4C455F45 
 13618      56545F47 
 13618      4154545F 
 13618      44495343 
 13619              	.LASF165:
 13620 12a2 656E6162 		.ascii	"enablePeriodSwap\000"
 13620      6C655065 
 13620      72696F64 
 13620      53776170 
 13620      00
 13621              	.LASF71:
 13622 12b3 64774368 		.ascii	"dwChSize\000"
 13622      53697A65 
 13622      00
 13623              	.LASF447:
 13624 12bc 78546173 		.ascii	"xTaskCheckForTimeOut\000"
 13624      6B436865 
 13624      636B466F 
 13624      7254696D 
 13624      654F7574 
 13625              	.LASF272:
 13626 12d1 43595F42 		.ascii	"CY_BLE_EVT_GATTC_FIND_BY_TYPE_VALUE_RSP\000"
 13626      4C455F45 
 13626      56545F47 
 13626      41545443 
 13626      5F46494E 
 13627              	.LASF427:
 13628 12f9 78546963 		.ascii	"xTicksToDelay\000"
 13628      6B73546F 
 13628      44656C61 
 13628      7900
 13629              	.LASF273:
 13630 1307 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_RSP\000"
 13630      4C455F45 
 13630      56545F47 
 13630      41545443 
 13630      5F524541 
 13631              	.LASF53:
 13632 1321 736D6966 		.ascii	"smifDeviceNr\000"
 13632      44657669 
 13632      63654E72 
 13632      00
 13633              	.LASF228:
 13634 132e 43595F42 		.ascii	"CY_BLE_EVT_SET_SLAVE_LATENCY_MODE_COMPLETE\000"
 13634      4C455F45 
 13634      56545F53 
 13634      45545F53 
 13634      4C415645 
 13635              	.LASF312:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 356


 13636 1359 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_SRVC_DISCOVERING\000"
 13636      4C455F43 
 13636      4F4E4E5F 
 13636      53544154 
 13636      455F434C 
 13637              	.LASF224:
 13638 1383 43595F42 		.ascii	"CY_BLE_EVT_RANDOM_NUM_GEN_COMPLETE\000"
 13638      4C455F45 
 13638      56545F52 
 13638      414E444F 
 13638      4D5F4E55 
 13639              	.LASF85:
 13640 13a6 70657269 		.ascii	"periDiv16CtlOffset\000"
 13640      44697631 
 13640      3643746C 
 13640      4F666673 
 13640      657400
 13641              	.LASF61:
 13642 13b9 666C6173 		.ascii	"flashPipeRequired\000"
 13642      68506970 
 13642      65526571 
 13642      75697265 
 13642      6400
 13643              	.LASF100:
 13644 13cb 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 13644      73537973 
 13644      5469636B 
 13644      43746C4F 
 13644      66667365 
 13645              	.LASF169:
 13646 13e1 696E7465 		.ascii	"interruptSources\000"
 13646      72727570 
 13646      74536F75 
 13646      72636573 
 13646      00
 13647              	.LASF435:
 13648 13f2 76546173 		.ascii	"vTaskPlaceOnEventList\000"
 13648      6B506C61 
 13648      63654F6E 
 13648      4576656E 
 13648      744C6973 
 13649              	.LASF131:
 13650 1408 736C6176 		.ascii	"slaveTxBufferSize\000"
 13650      65547842 
 13650      75666665 
 13650      7253697A 
 13650      6500
 13651              	.LASF334:
 13652 141a 7078496E 		.ascii	"pxIndex\000"
 13652      64657800 
 13653              	.LASF386:
 13654 1422 70727649 		.ascii	"prvIdleTask\000"
 13654      646C6554 
 13654      61736B00 
 13655              	.LASF23:
 13656 142e 63707573 		.ascii	"cpussBase\000"
 13656      73426173 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 357


 13656      6500
 13657              	.LASF27:
 13658 1438 70726F74 		.ascii	"protBase\000"
 13658      42617365 
 13658      00
 13659              	.LASF173:
 13660 1441 73776170 		.ascii	"swapInputMode\000"
 13660      496E7075 
 13660      744D6F64 
 13660      6500
 13661              	.LASF39:
 13662 144f 69706356 		.ascii	"ipcVersion\000"
 13662      65727369 
 13662      6F6E00
 13663              	.LASF188:
 13664 145a 43595F42 		.ascii	"CY_BLE_EVT_MEMORY_REQUEST\000"
 13664      4C455F45 
 13664      56545F4D 
 13664      454D4F52 
 13664      595F5245 
 13665              	.LASF13:
 13666 1474 5F5F7569 		.ascii	"__uint32_t\000"
 13666      6E743332 
 13666      5F7400
 13667              	.LASF408:
 13668 147f 75785361 		.ascii	"uxSavedInterruptStatus\000"
 13668      76656449 
 13668      6E746572 
 13668      72757074 
 13668      53746174 
 13669              	.LASF54:
 13670 1496 70617373 		.ascii	"passSarChannels\000"
 13670      53617243 
 13670      68616E6E 
 13670      656C7300 
 13671              	.LASF1:
 13672 14a6 6C6F6E67 		.ascii	"long long int\000"
 13672      206C6F6E 
 13672      6720696E 
 13672      7400
 13673              	.LASF130:
 13674 14b4 736C6176 		.ascii	"slaveTxBuffer\000"
 13674      65547842 
 13674      75666665 
 13674      7200
 13675              	.LASF156:
 13676 14c2 63795F73 		.ascii	"cy_stc_scb_uart_context_t\000"
 13676      74635F73 
 13676      63625F75 
 13676      6172745F 
 13676      636F6E74 
 13677              	.LASF295:
 13678 14dc 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DISCONN_CNF\000"
 13678      4C455F45 
 13678      56545F4C 
 13678      32434150 
 13678      5F434246 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 358


 13679              	.LASF404:
 13680 14fe 78596965 		.ascii	"xYieldRequired\000"
 13680      6C645265 
 13680      71756972 
 13680      656400
 13681              	.LASF457:
 13682 150d 70765265 		.ascii	"pvReturn\000"
 13682      7475726E 
 13682      00
 13683              	.LASF317:
 13684 1516 63795F65 		.ascii	"cy_en_ble_conn_state_t\000"
 13684      6E5F626C 
 13684      655F636F 
 13684      6E6E5F73 
 13684      74617465 
 13685              	.LASF109:
 13686 152d 63795F73 		.ascii	"cy_stc_device_t\000"
 13686      74635F64 
 13686      65766963 
 13686      655F7400 
 13687              	.LASF213:
 13688 153d 43595F42 		.ascii	"CY_BLE_EVT_PHY_UPDATE_COMPLETE\000"
 13688      4C455F45 
 13688      56545F50 
 13688      48595F55 
 13688      50444154 
 13689              	.LASF377:
 13690 155c 756C5374 		.ascii	"ulStackDepth\000"
 13690      61636B44 
 13690      65707468 
 13690      00
 13691              	.LASF91:
 13692 1569 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 13692      50727443 
 13692      66674F75 
 13692      744F6666 
 13692      73657400 
 13693              	.LASF34:
 13694 157d 63727970 		.ascii	"cryptoVersion\000"
 13694      746F5665 
 13694      7273696F 
 13694      6E00
 13695              	.LASF296:
 13696 158b 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DATA_READ\000"
 13696      4C455F45 
 13696      56545F4C 
 13696      32434150 
 13696      5F434246 
 13697              	.LASF443:
 13698 15ab 70784576 		.ascii	"pxEventListItem\000"
 13698      656E744C 
 13698      69737449 
 13698      74656D00 
 13699              	.LASF323:
 13700 15bb 784C4953 		.ascii	"xLIST_ITEM\000"
 13700      545F4954 
 13700      454D00
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 359


 13701              	.LASF62:
 13702 15c6 666C6173 		.ascii	"flashWriteDelay\000"
 13702      68577269 
 13702      74654465 
 13702      6C617900 
 13703              	.LASF60:
 13704 15d6 666C6173 		.ascii	"flashRwwRequired\000"
 13704      68527777 
 13704      52657175 
 13704      69726564 
 13704      00
 13705              	.LASF68:
 13706 15e7 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 13706      6843746C 
 13706      4D61696E 
 13706      57733346 
 13706      72657100 
 13707              	.LASF151:
 13708 15fb 72784275 		.ascii	"rxBufIdx\000"
 13708      66496478 
 13708      00
 13709              	.LASF86:
 13710 1604 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 13710      44697631 
 13710      365F3543 
 13710      746C4F66 
 13710      66736574 
 13711              	.LASF499:
 13712 1619 49544D5F 		.ascii	"ITM_RxBuffer\000"
 13712      52784275 
 13712      66666572 
 13712      00
 13713              	.LASF350:
 13714 1626 756C4C65 		.ascii	"ulLengthInBytes\000"
 13714      6E677468 
 13714      496E4279 
 13714      74657300 
 13715              	.LASF199:
 13716 1636 43595F42 		.ascii	"CY_BLE_EVT_GET_DATA_LENGTH_COMPLETE\000"
 13716      4C455F45 
 13716      56545F47 
 13716      45545F44 
 13716      4154415F 
 13717              	.LASF478:
 13718 165a 70785265 		.ascii	"pxReadyTasksLists\000"
 13718      61647954 
 13718      61736B73 
 13718      4C697374 
 13718      7300
 13719              	.LASF110:
 13720 166c 666C6F61 		.ascii	"float\000"
 13720      7400
 13721              	.LASF261:
 13722 1672 43595F42 		.ascii	"CY_BLE_EVT_GAP_CONN_ESTB\000"
 13722      4C455F45 
 13722      56545F47 
 13722      41505F43 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 360


 13722      4F4E4E5F 
 13723              	.LASF238:
 13724 168b 43595F42 		.ascii	"CY_BLE_EVT_GAP_AUTH_REQ\000"
 13724      4C455F45 
 13724      56545F47 
 13724      41505F41 
 13724      5554485F 
 13725              	.LASF42:
 13726 16a3 63707573 		.ascii	"cpussIpcNr\000"
 13726      73497063 
 13726      4E7200
 13727              	.LASF390:
 13728 16ae 7854696D 		.ascii	"xTimeToWake\000"
 13728      65546F57 
 13728      616B6500 
 13729              	.LASF125:
 13730 16ba 6D617374 		.ascii	"masterBufferSize\000"
 13730      65724275 
 13730      66666572 
 13730      53697A65 
 13730      00
 13731              	.LASF0:
 13732 16cb 756E7369 		.ascii	"unsigned int\000"
 13732      676E6564 
 13732      20696E74 
 13732      00
 13733              	.LASF310:
 13734 16d8 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_DISCONNECTED_DISCOVERED\000"
 13734      4C455F43 
 13734      4F4E4E5F 
 13734      53544154 
 13734      455F434C 
 13735              	.LASF528:
 13736 1709 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 13736      43313120 
 13736      352E342E 
 13736      31203230 
 13736      31363036 
 13737 173c 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 13737      20726576 
 13737      6973696F 
 13737      6E203233 
 13737      37373135 
 13738 176f 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 13738      70202D6D 
 13738      6670753D 
 13738      66707634 
 13738      2D73702D 
 13739 17a2 65637469 		.ascii	"ections -ffat-lto-objects\000"
 13739      6F6E7320 
 13739      2D666661 
 13739      742D6C74 
 13739      6F2D6F62 
 13740              	.LASF158:
 13741 17bc 70776D4D 		.ascii	"pwmMode\000"
 13741      6F646500 
 13742              	.LASF327:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 361


 13743 17c4 70764F77 		.ascii	"pvOwner\000"
 13743      6E657200 
 13744              	.LASF309:
 13745 17cc 43595F42 		.ascii	"CY_BLE_CONN_STATE_DISCONNECTED\000"
 13745      4C455F43 
 13745      4F4E4E5F 
 13745      53544154 
 13745      455F4449 
 13746              	.LASF372:
 13747 17eb 70727644 		.ascii	"prvDeleteTCB\000"
 13747      656C6574 
 13747      65544342 
 13747      00
 13748              	.LASF36:
 13749 17f8 666C6173 		.ascii	"flashcVersion\000"
 13749      68635665 
 13749      7273696F 
 13749      6E00
 13750              	.LASF519:
 13751 1806 76506F72 		.ascii	"vPortExitCritical\000"
 13751      74457869 
 13751      74437269 
 13751      74696361 
 13751      6C00
 13752              	.LASF168:
 13753 1818 656E6162 		.ascii	"enableCompareSwap\000"
 13753      6C65436F 
 13753      6D706172 
 13753      65537761 
 13753      7000
 13754              	.LASF333:
 13755 182a 75784E75 		.ascii	"uxNumberOfItems\000"
 13755      6D626572 
 13755      4F664974 
 13755      656D7300 
 13756              	.LASF180:
 13757 183a 6B696C6C 		.ascii	"killInput\000"
 13757      496E7075 
 13757      7400
 13758              	.LASF251:
 13759 1844 43595F42 		.ascii	"CY_BLE_EVT_GAP_KEYPRESS_NOTIFICATION\000"
 13759      4C455F45 
 13759      56545F47 
 13759      41505F4B 
 13759      45595052 
 13760              	.LASF450:
 13761 1869 76546173 		.ascii	"vTaskSuspendAll\000"
 13761      6B537573 
 13761      70656E64 
 13761      416C6C00 
 13762              	.LASF441:
 13763 1879 7078556E 		.ascii	"pxUnblockedTCB\000"
 13763      626C6F63 
 13763      6B656454 
 13763      434200
 13764              	.LASF88:
 13765 1888 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 362


 13765      50727449 
 13765      6E747243 
 13765      66674F66 
 13765      66736574 
 13766              	.LASF105:
 13767 189d 63707573 		.ascii	"cpussRam1Ctl0\000"
 13767      7352616D 
 13767      3143746C 
 13767      3000
 13768              	.LASF313:
 13769 18ab 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_INCL_DISCOVERING\000"
 13769      4C455F43 
 13769      4F4E4E5F 
 13769      53544154 
 13769      455F434C 
 13770              	.LASF182:
 13771 18d5 636F756E 		.ascii	"countInput\000"
 13771      74496E70 
 13771      757400
 13772              	.LASF337:
 13773 18e0 5461736B 		.ascii	"TaskHandle_t\000"
 13773      48616E64 
 13773      6C655F74 
 13773      00
 13774              	.LASF265:
 13775 18ed 43595F42 		.ascii	"CY_BLE_EVT_GATT_CONNECT_IND\000"
 13775      4C455F45 
 13775      56545F47 
 13775      4154545F 
 13775      434F4E4E 
 13776              	.LASF52:
 13777 1909 70657269 		.ascii	"periClockNr\000"
 13777      436C6F63 
 13777      6B4E7200 
 13778              	.LASF336:
 13779 1915 4C697374 		.ascii	"List_t\000"
 13779      5F7400
 13780              	.LASF304:
 13781 191c 43595F42 		.ascii	"CY_BLE_ADV_STATE_STOPPED\000"
 13781      4C455F41 
 13781      44565F53 
 13781      54415445 
 13781      5F53544F 
 13782              	.LASF388:
 13783 1935 78546963 		.ascii	"xTicksToWait\000"
 13783      6B73546F 
 13783      57616974 
 13783      00
 13784              	.LASF12:
 13785 1942 6C6F6E67 		.ascii	"long int\000"
 13785      20696E74 
 13785      00
 13786              	.LASF419:
 13787 194b 78546173 		.ascii	"xTaskResumeAll\000"
 13787      6B526573 
 13787      756D6541 
 13787      6C6C00
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 363


 13788              	.LASF308:
 13789 195a 63795F65 		.ascii	"cy_en_ble_adv_state_t\000"
 13789      6E5F626C 
 13789      655F6164 
 13789      765F7374 
 13789      6174655F 
 13790              	.LASF96:
 13791 1970 63707573 		.ascii	"cpussCm0StatusOffset\000"
 13791      73436D30 
 13791      53746174 
 13791      75734F66 
 13791      66736574 
 13792              	.LASF394:
 13793 1985 78546173 		.ascii	"xTaskCreate\000"
 13793      6B437265 
 13793      61746500 
 13794              	.LASF236:
 13795 1991 43595F42 		.ascii	"CY_BLE_EVT_HCI_PKT_RCVD\000"
 13795      4C455F45 
 13795      56545F48 
 13795      43495F50 
 13795      4B545F52 
 13796              	.LASF225:
 13797 19a9 43595F42 		.ascii	"CY_BLE_EVT_AES_ENCRYPT_COMPLETE\000"
 13797      4C455F45 
 13797      56545F41 
 13797      45535F45 
 13797      4E435259 
 13798              	.LASF440:
 13799 19c9 78546173 		.ascii	"xTaskRemoveFromEventList\000"
 13799      6B52656D 
 13799      6F766546 
 13799      726F6D45 
 13799      76656E74 
 13800              	.LASF135:
 13801 19e2 736C6176 		.ascii	"slaveRxBufferSize\000"
 13801      65527842 
 13801      75666665 
 13801      7253697A 
 13801      6500
 13802              	.LASF184:
 13803 19f4 43595F42 		.ascii	"CY_BLE_EVT_INVALID\000"
 13803      4C455F45 
 13803      56545F49 
 13803      4E56414C 
 13803      494400
 13804              	.LASF466:
 13805 1a07 756C4269 		.ascii	"ulBitsToClearOnExit\000"
 13805      7473546F 
 13805      436C6561 
 13805      724F6E45 
 13805      78697400 
 13806              	.LASF335:
 13807 1a1b 784C6973 		.ascii	"xListEnd\000"
 13807      74456E64 
 13807      00
 13808              	.LASF116:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 364


 13809 1a24 63795F63 		.ascii	"cy_cb_scb_i2c_handle_events_t\000"
 13809      625F7363 
 13809      625F6932 
 13809      635F6861 
 13809      6E646C65 
 13810              	.LASF278:
 13811 1a42 43595F42 		.ascii	"CY_BLE_EVT_GATTS_WRITE_CMD_REQ\000"
 13811      4C455F45 
 13811      56545F47 
 13811      41545453 
 13811      5F575249 
 13812              	.LASF391:
 13813 1a61 78436F6E 		.ascii	"xConstTickCount\000"
 13813      73745469 
 13813      636B436F 
 13813      756E7400 
 13814              	.LASF75:
 13815 1a71 64775374 		.ascii	"dwStatusChIdxMsk\000"
 13815      61747573 
 13815      43684964 
 13815      784D736B 
 13815      00
 13816              	.LASF234:
 13817 1a82 43595F42 		.ascii	"CY_BLE_EVT_SET_CE_LENGTH_COMPLETE\000"
 13817      4C455F45 
 13817      56545F53 
 13817      45545F43 
 13817      455F4C45 
 13818              	.LASF146:
 13819 1aa4 72785269 		.ascii	"rxRingBufSize\000"
 13819      6E674275 
 13819      6653697A 
 13819      6500
 13820              	.LASF454:
 13821 1ab2 78496E64 		.ascii	"xIndex\000"
 13821      657800
 13822              	.LASF64:
 13823 1ab9 666C6173 		.ascii	"flashEraseDelay\000"
 13823      68457261 
 13823      73654465 
 13823      6C617900 
 13824              	.LASF514:
 13825 1ac9 764C6973 		.ascii	"vListInitialiseItem\000"
 13825      74496E69 
 13825      7469616C 
 13825      69736549 
 13825      74656D00 
 13826              	.LASF395:
 13827 1add 75785461 		.ascii	"uxTaskPriorityGet\000"
 13827      736B5072 
 13827      696F7269 
 13827      74794765 
 13827      7400
 13828              	.LASF237:
 13829 1aef 43595F42 		.ascii	"CY_BLE_EVT_GAPC_SCAN_PROGRESS_RESULT\000"
 13829      4C455F45 
 13829      56545F47 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 365


 13829      4150435F 
 13829      5343414E 
 13830              	.LASF365:
 13831 1b14 756C4E65 		.ascii	"ulNewBASEPRI\000"
 13831      77424153 
 13831      45505249 
 13831      00
 13832              	.LASF530:
 13833 1b21 433A5C55 		.ascii	"C:\\Users\\yomat\\Documents\\PSoC Creator\\AFE_DevI"
 13833      73657273 
 13833      5C796F6D 
 13833      61745C44 
 13833      6F63756D 
 13834 1b4f 74656D31 		.ascii	"tem1\\AFE DevItem1.cydsn\000"
 13834      5C414645 
 13834      20446576 
 13834      4974656D 
 13834      312E6379 
 13835              	.LASF425:
 13836 1b67 7853686F 		.ascii	"xShouldDelay\000"
 13836      756C6444 
 13836      656C6179 
 13836      00
 13837              	.LASF241:
 13838 1b74 43595F42 		.ascii	"CY_BLE_EVT_GAP_AUTH_COMPLETE\000"
 13838      4C455F45 
 13838      56545F47 
 13838      41505F41 
 13838      5554485F 
 13839              	.LASF136:
 13840 1b91 736C6176 		.ascii	"slaveRxBufferIdx\000"
 13840      65527842 
 13840      75666665 
 13840      72496478 
 13840      00
 13841              	.LASF2:
 13842 1ba2 6C6F6E67 		.ascii	"long double\000"
 13842      20646F75 
 13842      626C6500 
 13843              	.LASF340:
 13844 1bae 65496E63 		.ascii	"eIncrement\000"
 13844      72656D65 
 13844      6E7400
 13845              	.LASF433:
 13846 1bb9 76546173 		.ascii	"vTaskSuspend\000"
 13846      6B537573 
 13846      70656E64 
 13846      00
 13847              	.LASF341:
 13848 1bc6 65536574 		.ascii	"eSetValueWithOverwrite\000"
 13848      56616C75 
 13848      65576974 
 13848      684F7665 
 13848      72777269 
 13849              	.LASF403:
 13850 1bdd 75785072 		.ascii	"uxPriorityUsedOnEntry\000"
 13850      696F7269 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 366


 13850      74795573 
 13850      65644F6E 
 13850      456E7472 
 13851              	.LASF140:
 13852 1bf3 63795F63 		.ascii	"cy_cb_scb_uart_handle_events_t\000"
 13852      625F7363 
 13852      625F7561 
 13852      72745F68 
 13852      616E646C 
 13853              	.LASF197:
 13854 1c12 43595F42 		.ascii	"CY_BLE_EVT_SET_DATA_LENGTH_COMPLETE\000"
 13854      4C455F45 
 13854      56545F53 
 13854      45545F44 
 13854      4154415F 
 13855              	.LASF359:
 13856 1c36 70635461 		.ascii	"pcTaskName\000"
 13856      736B4E61 
 13856      6D6500
 13857              	.LASF280:
 13858 1c41 43595F42 		.ascii	"CY_BLE_EVT_GATTS_EXEC_WRITE_REQ\000"
 13858      4C455F45 
 13858      56545F47 
 13858      41545453 
 13858      5F455845 
 13859              	.LASF50:
 13860 1c61 73727373 		.ascii	"srssNumPll\000"
 13860      4E756D50 
 13860      6C6C00
 13861              	.LASF505:
 13862 1c6c 4932435F 		.ascii	"I2C_1_context\000"
 13862      315F636F 
 13862      6E746578 
 13862      7400
 13863              	.LASF353:
 13864 1c7a 74736B54 		.ascii	"tskTaskControlBlock\000"
 13864      61736B43 
 13864      6F6E7472 
 13864      6F6C426C 
 13864      6F636B00 
 13865              	.LASF424:
 13866 1c8e 7854696D 		.ascii	"xTimeIncrement\000"
 13866      65496E63 
 13866      72656D65 
 13866      6E7400
 13867              	.LASF471:
 13868 1c9d 65416374 		.ascii	"eAction\000"
 13868      696F6E00 
 13869              	.LASF426:
 13870 1ca5 76546173 		.ascii	"vTaskDelay\000"
 13870      6B44656C 
 13870      617900
 13871              	.LASF355:
 13872 1cb0 78537461 		.ascii	"xStateListItem\000"
 13872      74654C69 
 13872      73744974 
 13872      656D00
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 367


 13873              	.LASF101:
 13874 1cbf 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 13874      73436D30 
 13874      4E6D6943 
 13874      746C4F66 
 13874      66736574 
 13875              	.LASF249:
 13876 1cd4 43595F42 		.ascii	"CY_BLE_EVT_GAP_KEYINFO_EXCHNGE_CMPLT\000"
 13876      4C455F45 
 13876      56545F47 
 13876      41505F4B 
 13876      4559494E 
 13877              	.LASF204:
 13878 1cf9 43595F42 		.ascii	"CY_BLE_EVT_SET_RPA_ENABLE_COMPLETE\000"
 13878      4C455F45 
 13878      56545F53 
 13878      45545F52 
 13878      50415F45 
 13879              	.LASF431:
 13880 1d1c 7578546F 		.ascii	"uxTopPriority\000"
 13880      70507269 
 13880      6F726974 
 13880      7900
 13881              	.LASF67:
 13882 1d2a 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 13882      6843746C 
 13882      4D61696E 
 13882      57733246 
 13882      72657100 
 13883              	.LASF247:
 13884 1d3e 43595F42 		.ascii	"CY_BLE_EVT_GAP_CONNECTION_UPDATE_COMPLETE\000"
 13884      4C455F45 
 13884      56545F47 
 13884      41505F43 
 13884      4F4E4E45 
 13885              	.LASF119:
 13886 1d68 75736554 		.ascii	"useTxFifo\000"
 13886      78466966 
 13886      6F00
 13887              	.LASF240:
 13888 1d72 43595F42 		.ascii	"CY_BLE_EVT_GAP_PASSKEY_DISPLAY_REQUEST\000"
 13888      4C455F45 
 13888      56545F47 
 13888      41505F50 
 13888      4153534B 
 13889              	.LASF15:
 13890 1d99 6C6F6E67 		.ascii	"long long unsigned int\000"
 13890      206C6F6E 
 13890      6720756E 
 13890      7369676E 
 13890      65642069 
 13891              	.LASF517:
 13892 1db0 76506F72 		.ascii	"vPortEnterCritical\000"
 13892      74456E74 
 13892      65724372 
 13892      69746963 
 13892      616C00
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 368


 13893              	.LASF470:
 13894 1dc3 756C5661 		.ascii	"ulValue\000"
 13894      6C756500 
 13895              	.LASF196:
 13896 1dcb 43595F42 		.ascii	"CY_BLE_EVT_LE_PING_AUTH_TIMEOUT\000"
 13896      4C455F45 
 13896      56545F4C 
 13896      455F5049 
 13896      4E475F41 
 13897              	.LASF20:
 13898 1deb 75696E74 		.ascii	"uint16_t\000"
 13898      31365F74 
 13898      00
 13899              	.LASF226:
 13900 1df4 43595F42 		.ascii	"CY_BLE_EVT_AES_CCM_ENCRYPT_COMPLETE\000"
 13900      4C455F45 
 13900      56545F41 
 13900      45535F43 
 13900      434D5F45 
 13901              	.LASF452:
 13902 1e18 76546173 		.ascii	"vTaskSetThreadLocalStoragePointer\000"
 13902      6B536574 
 13902      54687265 
 13902      61644C6F 
 13902      63616C53 
 13903              	.LASF258:
 13904 1e3a 43595F42 		.ascii	"CY_BLE_EVT_GAP_RESOLVE_DEVICE_COMPLETE\000"
 13904      4C455F45 
 13904      56545F47 
 13904      41505F52 
 13904      45534F4C 
 13905              	.LASF416:
 13906 1e61 78546173 		.ascii	"xTaskIncrementTick\000"
 13906      6B496E63 
 13906      72656D65 
 13906      6E745469 
 13906      636B00
 13907              	.LASF268:
 13908 1e74 43595F42 		.ascii	"CY_BLE_EVT_GATTC_XCHNG_MTU_RSP\000"
 13908      4C455F45 
 13908      56545F47 
 13908      41545443 
 13908      5F584348 
 13909              	.LASF455:
 13910 1e93 70765661 		.ascii	"pvValue\000"
 13910      6C756500 
 13911              	.LASF49:
 13912 1e9b 73727373 		.ascii	"srssNumClkpath\000"
 13912      4E756D43 
 13912      6C6B7061 
 13912      746800
 13913              	.LASF294:
 13914 1eaa 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DISCONN_IND\000"
 13914      4C455F45 
 13914      56545F4C 
 13914      32434150 
 13914      5F434246 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 369


 13915              	.LASF459:
 13916 1ecc 78546173 		.ascii	"xTaskGetSchedulerState\000"
 13916      6B476574 
 13916      53636865 
 13916      64756C65 
 13916      72537461 
 13917              	.LASF201:
 13918 1ee3 43595F42 		.ascii	"CY_BLE_EVT_GET_PEER_RPA_COMPLETE\000"
 13918      4C455F45 
 13918      56545F47 
 13918      45545F50 
 13918      4545525F 
 13919              	.LASF387:
 13920 1f04 70727641 		.ascii	"prvAddCurrentTaskToDelayedList\000"
 13920      64644375 
 13920      7272656E 
 13920      74546173 
 13920      6B546F44 
 13921              	.LASF321:
 13922 1f23 55426173 		.ascii	"UBaseType_t\000"
 13922      65547970 
 13922      655F7400 
 13923              	.LASF326:
 13924 1f2f 70785072 		.ascii	"pxPrevious\000"
 13924      6576696F 
 13924      757300
 13925              	.LASF360:
 13926 1f3a 70765468 		.ascii	"pvThreadLocalStoragePointers\000"
 13926      72656164 
 13926      4C6F6361 
 13926      6C53746F 
 13926      72616765 
 13927              	.LASF422:
 13928 1f57 76546173 		.ascii	"vTaskDelayUntil\000"
 13928      6B44656C 
 13928      6179556E 
 13928      74696C00 
 13929              	.LASF152:
 13930 1f67 74784275 		.ascii	"txBuf\000"
 13930      6600
 13931              	.LASF263:
 13932 1f6d 43595F42 		.ascii	"CY_BLE_EVT_GAP_ADV_TX\000"
 13932      4C455F45 
 13932      56545F47 
 13932      41505F41 
 13932      44565F54 
 13933              	.LASF410:
 13934 1f83 76546173 		.ascii	"vTaskEndScheduler\000"
 13934      6B456E64 
 13934      53636865 
 13934      64756C65 
 13934      7200
 13935              	.LASF307:
 13936 1f95 43595F42 		.ascii	"CY_BLE_ADV_STATE_STOP_INITIATED\000"
 13936      4C455F41 
 13936      44565F53 
 13936      54415445 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 370


 13936      5F53544F 
 13937              	.LASF322:
 13938 1fb5 5469636B 		.ascii	"TickType_t\000"
 13938      54797065 
 13938      5F7400
 13939              	.LASF299:
 13940 1fc0 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DATA_WRITE_IND\000"
 13940      4C455F45 
 13940      56545F4C 
 13940      32434150 
 13940      5F434246 
 13941              	.LASF94:
 13942 1fe5 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 13942      73436D34 
 13942      436C6F63 
 13942      6B43746C 
 13942      4F666673 
 13943              	.LASF384:
 13944 1ffc 70727643 		.ascii	"prvCheckTasksWaitingTermination\000"
 13944      6865636B 
 13944      5461736B 
 13944      73576169 
 13944      74696E67 
 13945              	.LASF21:
 13946 201c 696E7433 		.ascii	"int32_t\000"
 13946      325F7400 
 13947              	.LASF44:
 13948 2024 63707573 		.ascii	"cpussDwChNr\000"
 13948      73447743 
 13948      684E7200 
 13949              	.LASF362:
 13950 2030 75634E6F 		.ascii	"ucNotifyState\000"
 13950      74696679 
 13950      53746174 
 13950      6500
 13951              	.LASF87:
 13952 203e 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 13952      44697632 
 13952      345F3543 
 13952      746C4F66 
 13952      66736574 
 13953              	.LASF104:
 13954 2053 63707573 		.ascii	"cpussRam0Ctl0\000"
 13954      7352616D 
 13954      3043746C 
 13954      3000
 13955              	.LASF513:
 13956 2061 6D656D73 		.ascii	"memset\000"
 13956      657400
 13957              	.LASF423:
 13958 2068 70785072 		.ascii	"pxPreviousWakeTime\000"
 13958      6576696F 
 13958      75735761 
 13958      6B655469 
 13958      6D6500
 13959              	.LASF417:
 13960 207b 78537769 		.ascii	"xSwitchRequired\000"
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 371


 13960      74636852 
 13960      65717569 
 13960      72656400 
 13961              	.LASF7:
 13962 208b 5F5F696E 		.ascii	"__int16_t\000"
 13962      7431365F 
 13962      7400
 13963              	.LASF477:
 13964 2095 78546173 		.ascii	"xTaskNotifyStateClear\000"
 13964      6B4E6F74 
 13964      69667953 
 13964      74617465 
 13964      436C6561 
 13965              	.LASF255:
 13966 20ab 43595F42 		.ascii	"CY_BLE_EVT_GAP_SMP_NEGOTIATED_AUTH_INFO\000"
 13966      4C455F45 
 13966      56545F47 
 13966      41505F53 
 13966      4D505F4E 
 13967              	.LASF489:
 13968 20d3 7578546F 		.ascii	"uxTopReadyPriority\000"
 13968      70526561 
 13968      64795072 
 13968      696F7269 
 13968      747900
 13969              	.LASF80:
 13970 20e6 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 13970      44697643 
 13970      6D644469 
 13970      7653656C 
 13970      4D736B00 
 13971              	.LASF290:
 13972 20fa 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CONN_PARAM_UPDATE_RSP\000"
 13972      4C455F45 
 13972      56545F4C 
 13972      32434150 
 13972      5F434F4E 
 13973              	.LASF411:
 13974 2121 78546173 		.ascii	"xTaskGetTickCount\000"
 13974      6B476574 
 13974      5469636B 
 13974      436F756E 
 13974      7400
 13975              	.LASF35:
 13976 2133 64775665 		.ascii	"dwVersion\000"
 13976      7273696F 
 13976      6E00
 13977              	.LASF366:
 13978 213d 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 13978      6967696E 
 13978      616C4241 
 13978      53455052 
 13978      4900
 13979              	.LASF420:
 13980 214f 78416C72 		.ascii	"xAlreadyYielded\000"
 13980      65616479 
 13980      5969656C 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 372


 13980      64656400 
 13981              	.LASF274:
 13982 215f 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_BLOB_RSP\000"
 13982      4C455F45 
 13982      56545F47 
 13982      41545443 
 13982      5F524541 
 13983              	.LASF29:
 13984 217e 6770696F 		.ascii	"gpioBase\000"
 13984      42617365 
 13984      00
 13985              	.LASF58:
 13986 2187 70726F74 		.ascii	"protBusMasterMask\000"
 13986      4275734D 
 13986      61737465 
 13986      724D6173 
 13986      6B00
 13987              	.LASF57:
 13988 2199 73797350 		.ascii	"sysPmSimoPresent\000"
 13988      6D53696D 
 13988      6F507265 
 13988      73656E74 
 13988      00
 13989              	.LASF287:
 13990 21aa 43595F42 		.ascii	"CY_BLE_EVT_GATTS_READ_CHAR_VAL_ACCESS_REQ\000"
 13990      4C455F45 
 13990      56545F47 
 13990      41545453 
 13990      5F524541 
 13991              	.LASF418:
 13992 21d4 70785465 		.ascii	"pxTemp\000"
 13992      6D7000
 13993              	.LASF43:
 13994 21db 63707573 		.ascii	"cpussIpcIrqNr\000"
 13994      73497063 
 13994      4972714E 
 13994      7200
 13995              	.LASF498:
 13996 21e9 63795F64 		.ascii	"cy_device\000"
 13996      65766963 
 13996      6500
 13997              	.LASF347:
 13998 21f3 54696D65 		.ascii	"TimeOut_t\000"
 13998      4F75745F 
 13998      7400
 13999              	.LASF303:
 14000 21fd 63795F73 		.ascii	"cy_stc_ble_conn_handle_t\000"
 14000      74635F62 
 14000      6C655F63 
 14000      6F6E6E5F 
 14000      68616E64 
 14001              	.LASF474:
 14002 2216 78546173 		.ascii	"xTaskGenericNotifyFromISR\000"
 14002      6B47656E 
 14002      65726963 
 14002      4E6F7469 
 14002      66794672 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 373


 14003              	.LASF339:
 14004 2230 65536574 		.ascii	"eSetBits\000"
 14004      42697473 
 14004      00
 14005              	.LASF243:
 14006 2239 43595F42 		.ascii	"CY_BLE_EVT_GAPP_ADVERTISEMENT_START_STOP\000"
 14006      4C455F45 
 14006      56545F47 
 14006      4150505F 
 14006      41445645 
 14007              	.LASF177:
 14008 2262 73746172 		.ascii	"startInputMode\000"
 14008      74496E70 
 14008      75744D6F 
 14008      646500
 14009              	.LASF144:
 14010 2271 72785374 		.ascii	"rxStatus\000"
 14010      61747573 
 14010      00
 14011              	.LASF124:
 14012 227a 6D617374 		.ascii	"masterBuffer\000"
 14012      65724275 
 14012      66666572 
 14012      00
 14013              	.LASF138:
 14014 2287 63624164 		.ascii	"cbAddr\000"
 14014      647200
 14015              	.LASF311:
 14016 228e 43595F42 		.ascii	"CY_BLE_CONN_STATE_CONNECTED\000"
 14016      4C455F43 
 14016      4F4E4E5F 
 14016      53544154 
 14016      455F434F 
 14017              	.LASF458:
 14018 22aa 78546173 		.ascii	"xTaskGetCurrentTaskHandle\000"
 14018      6B476574 
 14018      43757272 
 14018      656E7454 
 14018      61736B48 
 14019              	.LASF520:
 14020 22c4 75784C69 		.ascii	"uxListRemove\000"
 14020      73745265 
 14020      6D6F7665 
 14020      00
 14021              	.LASF481:
 14022 22d1 70784465 		.ascii	"pxDelayedTaskList\000"
 14022      6C617965 
 14022      64546173 
 14022      6B4C6973 
 14022      7400
 14023              	.LASF475:
 14024 22e3 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 14024      67686572 
 14024      5072696F 
 14024      72697479 
 14024      5461736B 
 14025              	.LASF193:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 374


 14026 22fd 43595F42 		.ascii	"CY_BLE_EVT_READ_AUTH_PAYLOAD_TO_COMPLETE\000"
 14026      4C455F45 
 14026      56545F52 
 14026      4541445F 
 14026      41555448 
 14027              	.LASF524:
 14028 2326 7854696D 		.ascii	"xTimerCreateTimerTask\000"
 14028      65724372 
 14028      65617465 
 14028      54696D65 
 14028      72546173 
 14029              	.LASF41:
 14030 233c 70726F74 		.ascii	"protVersion\000"
 14030      56657273 
 14030      696F6E00 
 14031              	.LASF194:
 14032 2348 43595F42 		.ascii	"CY_BLE_EVT_GET_CHANNEL_MAP_COMPLETE\000"
 14032      4C455F45 
 14032      56545F47 
 14032      45545F43 
 14032      48414E4E 
 14033              	.LASF482:
 14034 236c 70784F76 		.ascii	"pxOverflowDelayedTaskList\000"
 14034      6572666C 
 14034      6F774465 
 14034      6C617965 
 14034      64546173 
 14035              	.LASF155:
 14036 2386 696E6974 		.ascii	"initKey\000"
 14036      4B657900 
 14037              	.LASF40:
 14038 238e 70657269 		.ascii	"periVersion\000"
 14038      56657273 
 14038      696F6E00 
 14039              	.LASF8:
 14040 239a 73686F72 		.ascii	"short int\000"
 14040      7420696E 
 14040      7400
 14041              	.LASF508:
 14042 23a4 50574D5F 		.ascii	"PWM_config\000"
 14042      636F6E66 
 14042      696700
 14043              	.LASF229:
 14044 23af 43595F42 		.ascii	"CY_BLE_EVT_STACK_SHUTDOWN_COMPLETE\000"
 14044      4C455F45 
 14044      56545F53 
 14044      5441434B 
 14044      5F534855 
 14045              	.LASF507:
 14046 23d2 50574D5F 		.ascii	"PWM_AFE_config\000"
 14046      4146455F 
 14046      636F6E66 
 14046      696700
 14047              	.LASF220:
 14048 23e1 43595F42 		.ascii	"CY_BLE_EVT_GET_TX_PWR_COMPLETE\000"
 14048      4C455F45 
 14048      56545F47 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 375


 14048      45545F54 
 14048      585F5057 
 14049              	.LASF510:
 14050 2400 50574D5F 		.ascii	"PWM_TIM_config\000"
 14050      54494D5F 
 14050      636F6E66 
 14050      696700
 14051              	.LASF449:
 14052 240f 78456C61 		.ascii	"xElapsedTime\000"
 14052      70736564 
 14052      54696D65 
 14052      00
 14053              	.LASF19:
 14054 241c 696E7431 		.ascii	"int16_t\000"
 14054      365F7400 
 14055              	.LASF66:
 14056 2424 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 14056      6843746C 
 14056      4D61696E 
 14056      57733146 
 14056      72657100 
 14057              	.LASF415:
 14058 2438 78546173 		.ascii	"xTaskToQuery\000"
 14058      6B546F51 
 14058      75657279 
 14058      00
 14059              	.LASF367:
 14060 2445 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 14060      74526169 
 14060      73654241 
 14060      53455052 
 14060      4900
 14061              	.LASF285:
 14062 2457 43595F42 		.ascii	"CY_BLE_EVT_GATTS_DATA_SIGNED_CMD_REQ\000"
 14062      4C455F45 
 14062      56545F47 
 14062      41545453 
 14062      5F444154 
 14063              	.LASF244:
 14064 247c 43595F42 		.ascii	"CY_BLE_EVT_GAP_DEVICE_CONNECTED\000"
 14064      4C455F45 
 14064      56545F47 
 14064      41505F44 
 14064      45564943 
 14065              	.LASF231:
 14066 249c 43595F42 		.ascii	"CY_BLE_EVT_RADIO_VOLTAGE_LEVEL\000"
 14066      4C455F45 
 14066      56545F52 
 14066      4144494F 
 14066      5F564F4C 
 14067              	.LASF126:
 14068 24bb 6D617374 		.ascii	"masterBufferIdx\000"
 14068      65724275 
 14068      66666572 
 14068      49647800 
 14069              	.LASF484:
 14070 24cb 78546173 		.ascii	"xTasksWaitingTermination\000"
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 376


 14070      6B735761 
 14070      6974696E 
 14070      67546572 
 14070      6D696E61 
 14071              	.LASF502:
 14072 24e4 63795F62 		.ascii	"cy_ble_connState\000"
 14072      6C655F63 
 14072      6F6E6E53 
 14072      74617465 
 14072      00
 14073              	.LASF121:
 14074 24f5 6D617374 		.ascii	"masterStatus\000"
 14074      65725374 
 14074      61747573 
 14074      00
 14075              	.LASF63:
 14076 2502 666C6173 		.ascii	"flashProgramDelay\000"
 14076      6850726F 
 14076      6772616D 
 14076      44656C61 
 14076      7900
 14077              	.LASF329:
 14078 2514 4C697374 		.ascii	"ListItem_t\000"
 14078      4974656D 
 14078      5F7400
 14079              	.LASF161:
 14080 251f 64656164 		.ascii	"deadTimeClocks\000"
 14080      54696D65 
 14080      436C6F63 
 14080      6B7300
 14081              	.LASF202:
 14082 252e 43595F42 		.ascii	"CY_BLE_EVT_GET_LOCAL_RPA_COMPLETE\000"
 14082      4C455F45 
 14082      56545F47 
 14082      45545F4C 
 14082      4F43414C 
 14083              	.LASF463:
 14084 2550 756C5265 		.ascii	"ulReturn\000"
 14084      7475726E 
 14084      00
 14085              	.LASF532:
 14086 2559 756C4E65 		.ascii	"ulNewMaskValue\000"
 14086      774D6173 
 14086      6B56616C 
 14086      756500
 14087              	.LASF37:
 14088 2568 6770696F 		.ascii	"gpioVersion\000"
 14088      56657273 
 14088      696F6E00 
 14089              	.LASF92:
 14090 2574 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 14090      50727443 
 14090      66675369 
 14090      6F4F6666 
 14090      73657400 
 14091              	.LASF364:
 14092 2588 5443425F 		.ascii	"TCB_t\000"
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 377


 14092      7400
 14093              	.LASF500:
 14094 258e 63795F62 		.ascii	"cy_ble_advState\000"
 14094      6C655F61 
 14094      64765374 
 14094      61746500 
 14095              	.LASF129:
 14096 259e 736C6176 		.ascii	"slaveRdBufEmpty\000"
 14096      65526442 
 14096      7566456D 
 14096      70747900 
 14097              	.LASF179:
 14098 25ae 6B696C6C 		.ascii	"killInputMode\000"
 14098      496E7075 
 14098      744D6F64 
 14098      6500
 14099              	.LASF232:
 14100 25bc 43595F42 		.ascii	"CY_BLE_EVT_AES_CMAC_GEN_COMPLETE\000"
 14100      4C455F45 
 14100      56545F41 
 14100      45535F43 
 14100      4D41435F 
 14101              	.LASF56:
 14102 25dd 75646250 		.ascii	"udbPresent\000"
 14102      72657365 
 14102      6E7400
 14103              	.LASF378:
 14104 25e8 70765061 		.ascii	"pvParameters\000"
 14104      72616D65 
 14104      74657273 
 14104      00
 14105              	.LASF200:
 14106 25f5 43595F42 		.ascii	"CY_BLE_EVT_DATA_LENGTH_CHANGE\000"
 14106      4C455F45 
 14106      56545F44 
 14106      4154415F 
 14106      4C454E47 
 14107              	.LASF506:
 14108 2613 4932435F 		.ascii	"I2C_2_context\000"
 14108      325F636F 
 14108      6E746578 
 14108      7400
 14109              	.LASF218:
 14110 2621 43595F42 		.ascii	"CY_BLE_EVT_GET_DEVICE_ADDR_COMPLETE\000"
 14110      4C455F45 
 14110      56545F47 
 14110      45545F44 
 14110      45564943 
 14111              	.LASF397:
 14112 2645 75785461 		.ascii	"uxTaskPriorityGetFromISR\000"
 14112      736B5072 
 14112      696F7269 
 14112      74794765 
 14112      7446726F 
 14113              	.LASF22:
 14114 265e 75696E74 		.ascii	"uint32_t\000"
 14114      33325F74 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 378


 14114      00
 14115              	.LASF518:
 14116 2667 764C6973 		.ascii	"vListInsertEnd\000"
 14116      74496E73 
 14116      65727445 
 14116      6E6400
 14117              	.LASF469:
 14118 2676 78546173 		.ascii	"xTaskToNotify\000"
 14118      6B546F4E 
 14118      6F746966 
 14118      7900
 14119              	.LASF504:
 14120 2684 55415254 		.ascii	"UART_context\000"
 14120      5F636F6E 
 14120      74657874 
 14120      00
 14121              	.LASF381:
 14122 2691 78526567 		.ascii	"xRegions\000"
 14122      696F6E73 
 14122      00
 14123              	.LASF122:
 14124 269a 6D617374 		.ascii	"masterPause\000"
 14124      65725061 
 14124      75736500 
 14125              	.LASF343:
 14126 26a6 654E6F74 		.ascii	"eNotifyAction\000"
 14126      69667941 
 14126      6374696F 
 14126      6E00
 14127              	.LASF465:
 14128 26b4 756C4269 		.ascii	"ulBitsToClearOnEntry\000"
 14128      7473546F 
 14128      436C6561 
 14128      724F6E45 
 14128      6E747279 
 14129              	.LASF123:
 14130 26c9 6D617374 		.ascii	"masterRdDir\000"
 14130      65725264 
 14130      44697200 
 14131              	.LASF319:
 14132 26d5 53746163 		.ascii	"StackType_t\000"
 14132      6B547970 
 14132      655F7400 
 14133              	.LASF523:
 14134 26e1 76506F72 		.ascii	"vPortValidateInterruptPriority\000"
 14134      7456616C 
 14134      69646174 
 14134      65496E74 
 14134      65727275 
 14135              	.LASF114:
 14136 2700 43595F53 		.ascii	"CY_SCB_I2C_NAK\000"
 14136      43425F49 
 14136      32435F4E 
 14136      414B00
 14137              	.LASF72:
 14138 270f 64774368 		.ascii	"dwChCtlPrioPos\000"
 14138      43746C50 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 379


 14138      72696F50 
 14138      6F7300
 14139              	.LASF31:
 14140 271e 69706342 		.ascii	"ipcBase\000"
 14140      61736500 
 14141              	.LASF95:
 14142 2726 63707573 		.ascii	"cpussCm4StatusOffset\000"
 14142      73436D34 
 14142      53746174 
 14142      75734F66 
 14142      66736574 
 14143              	.LASF393:
 14144 273b 78546173 		.ascii	"xTaskToDelete\000"
 14144      6B546F44 
 14144      656C6574 
 14144      6500
 14145              	.LASF73:
 14146 2749 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 14146      43746C50 
 14146      7265656D 
 14146      70746162 
 14146      6C65506F 
 14147              	.LASF10:
 14148 275f 73686F72 		.ascii	"short unsigned int\000"
 14148      7420756E 
 14148      7369676E 
 14148      65642069 
 14148      6E7400
 14149              	.LASF250:
 14150 2772 43595F42 		.ascii	"CY_BLE_EVT_GAP_NUMERIC_COMPARISON_REQUEST\000"
 14150      4C455F45 
 14150      56545F47 
 14150      41505F4E 
 14150      554D4552 
 14151              	.LASF260:
 14152 279c 43595F42 		.ascii	"CY_BLE_EVT_GAP_CREATE_CONN_CANCEL_COMPLETE\000"
 14152      4C455F45 
 14152      56545F47 
 14152      41505F43 
 14152      52454154 
 14153              	.LASF245:
 14154 27c7 43595F42 		.ascii	"CY_BLE_EVT_GAP_DEVICE_DISCONNECTED\000"
 14154      4C455F45 
 14154      56545F47 
 14154      41505F44 
 14154      45564943 
 14155              	.LASF526:
 14156 27ea 76506F72 		.ascii	"vPortEndScheduler\000"
 14156      74456E64 
 14156      53636865 
 14156      64756C65 
 14156      7200
 14157              	.LASF382:
 14158 27fc 70727649 		.ascii	"prvInitialiseTaskLists\000"
 14158      6E697469 
 14158      616C6973 
 14158      65546173 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 380


 14158      6B4C6973 
 14159              	.LASF230:
 14160 2813 43595F42 		.ascii	"CY_BLE_EVT_RADIO_TEMPERATURE\000"
 14160      4C455F45 
 14160      56545F52 
 14160      4144494F 
 14160      5F54454D 
 14161              	.LASF83:
 14162 2830 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 14162      44697643 
 14162      6D645061 
 14162      54797065 
 14162      53656C50 
 14163              	.LASF262:
 14164 2847 43595F42 		.ascii	"CY_BLE_EVT_GAPP_UPDATE_ADV_SCAN_DATA_COMPLETE\000"
 14164      4C455F45 
 14164      56545F47 
 14164      4150505F 
 14164      55504441 
 14165              	.LASF107:
 14166 2875 69706353 		.ascii	"ipcStructSize\000"
 14166      74727563 
 14166      7453697A 
 14166      6500
 14167              	.LASF480:
 14168 2883 7844656C 		.ascii	"xDelayedTaskList2\000"
 14168      61796564 
 14168      5461736B 
 14168      4C697374 
 14168      3200
 14169              	.LASF512:
 14170 2895 76506F72 		.ascii	"vPortFree\000"
 14170      74467265 
 14170      6500
 14171              	.LASF190:
 14172 289f 43595F42 		.ascii	"CY_BLE_EVT_FLASH_CORRUPT\000"
 14172      4C455F45 
 14172      56545F46 
 14172      4C415348 
 14172      5F434F52 
 14173              	.LASF76:
 14174 28b8 70657269 		.ascii	"periTrCmdOffset\000"
 14174      5472436D 
 14174      644F6666 
 14174      73657400 
 14175              	.LASF11:
 14176 28c8 5F5F696E 		.ascii	"__int32_t\000"
 14176      7433325F 
 14176      7400
 14177              	.LASF171:
 14178 28d2 696E7665 		.ascii	"invertPWMOutN\000"
 14178      72745057 
 14178      4D4F7574 
 14178      4E00
 14179              	.LASF338:
 14180 28e0 654E6F41 		.ascii	"eNoAction\000"
 14180      6374696F 
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 381


 14180      6E00
 14181              	.LASF302:
 14182 28ea 61747449 		.ascii	"attId\000"
 14182      6400
 14183              	.LASF476:
 14184 28f0 76546173 		.ascii	"vTaskNotifyGiveFromISR\000"
 14184      6B4E6F74 
 14184      69667947 
 14184      69766546 
 14184      726F6D49 
 14185              	.LASF351:
 14186 2907 756C5061 		.ascii	"ulParameters\000"
 14186      72616D65 
 14186      74657273 
 14186      00
 14187              	.LASF176:
 14188 2914 72656C6F 		.ascii	"reloadInput\000"
 14188      6164496E 
 14188      70757400 
 14189              	.LASF148:
 14190 2920 72785269 		.ascii	"rxRingBufTail\000"
 14190      6E674275 
 14190      66546169 
 14190      6C00
 14191              	.LASF461:
 14192 292e 756C5461 		.ascii	"ulTaskNotifyTake\000"
 14192      736B4E6F 
 14192      74696679 
 14192      54616B65 
 14192      00
 14193              	.LASF221:
 14194 293f 43595F42 		.ascii	"CY_BLE_EVT_SET_TX_PWR_COMPLETE\000"
 14194      4C455F45 
 14194      56545F53 
 14194      45545F54 
 14194      585F5057 
 14195              	.LASF145:
 14196 295e 72785269 		.ascii	"rxRingBuf\000"
 14196      6E674275 
 14196      6600
 14197              	.LASF453:
 14198 2968 78546173 		.ascii	"xTaskToSet\000"
 14198      6B546F53 
 14198      657400
 14199              	.LASF141:
 14200 2973 63795F73 		.ascii	"cy_stc_scb_i2c_context\000"
 14200      74635F73 
 14200      63625F69 
 14200      32635F63 
 14200      6F6E7465 
 14201              	.LASF209:
 14202 298a 43595F42 		.ascii	"CY_BLE_EVT_REMOVE_DEVICE_FROM_WHITE_LIST_COMPLETE\000"
 14202      4C455F45 
 14202      56545F52 
 14202      454D4F56 
 14202      455F4445 
 14203              	.LASF206:
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 382


 14204 29bc 43595F42 		.ascii	"CY_BLE_EVT_ADD_DEVICE_TO_RPA_LIST_COMPLETE\000"
 14204      4C455F45 
 14204      56545F41 
 14204      44445F44 
 14204      45564943 
 14205              	.LASF198:
 14206 29e7 43595F42 		.ascii	"CY_BLE_EVT_SET_SUGGESTED_DATA_LENGTH_COMPLETE\000"
 14206      4C455F45 
 14206      56545F53 
 14206      45545F53 
 14206      55474745 
 14207              	.LASF324:
 14208 2a15 78497465 		.ascii	"xItemValue\000"
 14208      6D56616C 
 14208      756500
 14209              	.LASF178:
 14210 2a20 73746172 		.ascii	"startInput\000"
 14210      74496E70 
 14210      757400
 14211              	.LASF370:
 14212 2a2b 70785443 		.ascii	"pxTCB\000"
 14212      4200
 14213              	.LASF65:
 14214 2a31 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 14214      6843746C 
 14214      4D61696E 
 14214      57733046 
 14214      72657100 
 14215              	.LASF357:
 14216 2a45 75785072 		.ascii	"uxPriority\000"
 14216      696F7269 
 14216      747900
 14217              	.LASF38:
 14218 2a50 6873696F 		.ascii	"hsiomVersion\000"
 14218      6D566572 
 14218      73696F6E 
 14218      00
 14219              	.LASF257:
 14220 2a5d 43595F42 		.ascii	"CY_BLE_EVT_GAP_KEYS_GEN_COMPLETE\000"
 14220      4C455F45 
 14220      56545F47 
 14220      41505F4B 
 14220      4559535F 
 14221              	.LASF442:
 14222 2a7e 76546173 		.ascii	"vTaskRemoveFromUnorderedEventList\000"
 14222      6B52656D 
 14222      6F766546 
 14222      726F6D55 
 14222      6E6F7264 
 14223              	.LASF117:
 14224 2aa0 63795F63 		.ascii	"cy_cb_scb_i2c_handle_addr_t\000"
 14224      625F7363 
 14224      625F6932 
 14224      635F6861 
 14224      6E646C65 
 14225              	.LASF70:
 14226 2abc 64774368 		.ascii	"dwChOffset\000"
ARM GAS  C:\Users\yomat\AppData\Local\Temp\ccTQMsvc.s 			page 383


 14226      4F666673 
 14226      657400
 14227              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
